<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_875316_scriptapp.TestGlideMenuAllClientSide</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>TestGlideMenuAllClientSide</name>
        <script><![CDATA[/*! RESOURCE: /scripts/lib/prototype.min.js */
var Prototype={Version:"1.7.3",Browser:function(){var ua=navigator.userAgent;var isOpera=Object.prototype.toString.call(window.opera)=="[object Opera]";return{IE:!!window.attachEvent&&!isOpera,Opera:isOpera,WebKit:ua.indexOf("AppleWebKit/")>-1,Gecko:ua.indexOf("Gecko")>-1&&ua.indexOf("KHTML")===-1,MobileSafari:/Apple.*Mobile/.test(ua)}}(),BrowserFeatures:{XPath:!!document.evaluate,SelectorsAPI:!!document.querySelector,ElementExtensions:function(){var constructor=window.Element||window.HTMLElement;return!!(constructor&&constructor.prototype)}(),SpecificElementExtensions:function(){if(typeof window.HTMLDivElement!=="undefined")return true;var div=document.createElement("div"),form=document.createElement("form"),isSupported=false;if(div["__proto__"]&&div["__proto__"]!==form["__proto__"]){isSupported=true}div=form=null;return isSupported}()},ScriptFragment:"<script[^>]*>([\\S\\s]*?)</script\\s*>",JSONFilter:/^\/\*-secure-([\s\S]*)\*\/\s*$/,emptyFunction:function(){},K:function(x){return x}};if(Prototype.Browser.MobileSafari)Prototype.BrowserFeatures.SpecificElementExtensions=false;var Class=function(){var IS_DONTENUM_BUGGY=function(){for(var p in{toString:1}){if(p==="toString")return false}return true}();function subclass(){}function create(){var parent=null,properties=$A(arguments);if(Object.isFunction(properties[0]))parent=properties.shift();function klass(){this.initialize.apply(this,arguments)}Object.extend(klass,Class.Methods);klass.superclass=parent;klass.subclasses=[];if(parent){subclass.prototype=parent.prototype;klass.prototype=new subclass;parent.subclasses.push(klass)}for(var i=0,length=properties.length;i<length;i++)klass.addMethods(properties[i]);if(!klass.prototype.initialize)klass.prototype.initialize=Prototype.emptyFunction;klass.prototype.constructor=klass;return klass}function addMethods(source){var ancestor=this.superclass&&this.superclass.prototype,properties=Object.keys(source);if(IS_DONTENUM_BUGGY){if(source.toString!=Object.prototype.toString)properties.push("toString");if(source.valueOf!=Object.prototype.valueOf)properties.push("valueOf")}for(var i=0,length=properties.length;i<length;i++){var property=properties[i],value=source[property];if(ancestor&&Object.isFunction(value)&&value.argumentNames()[0]=="$super"){var method=value;value=function(m){return function(){return ancestor[m].apply(this,arguments)}}(property).wrap(method);value.valueOf=function(method){return function(){return method.valueOf.call(method)}}(method);value.toString=function(method){return function(){return method.toString.call(method)}}(method)}this.prototype[property]=value}return this}return{create:create,Methods:{addMethods:addMethods}}}();(function(){var _toString=Object.prototype.toString,_hasOwnProperty=Object.prototype.hasOwnProperty,NULL_TYPE="Null",UNDEFINED_TYPE="Undefined",BOOLEAN_TYPE="Boolean",NUMBER_TYPE="Number",STRING_TYPE="String",OBJECT_TYPE="Object",FUNCTION_CLASS="[object Function]",BOOLEAN_CLASS="[object Boolean]",NUMBER_CLASS="[object Number]",STRING_CLASS="[object String]",ARRAY_CLASS="[object Array]",DATE_CLASS="[object Date]",NATIVE_JSON_STRINGIFY_SUPPORT=window.JSON&&typeof JSON.stringify==="function"&&JSON.stringify(0)==="0"&&typeof JSON.stringify(Prototype.K)==="undefined";var DONT_ENUMS=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"];var IS_DONTENUM_BUGGY=function(){for(var p in{toString:1}){if(p==="toString")return false}return true}();function Type(o){switch(o){case null:return NULL_TYPE;case void 0:return UNDEFINED_TYPE}var type=typeof o;switch(type){case"boolean":return BOOLEAN_TYPE;case"number":return NUMBER_TYPE;case"string":return STRING_TYPE}return OBJECT_TYPE}function extend(destination,source){for(var property in source)destination[property]=source[property];return destination}function inspect(object){try{if(isUndefined(object))return"undefined";if(object===null)return"null";return object.inspect?object.inspect():String(object)}catch(e){if(e instanceof RangeError)return"...";throw e}}function toJSON(value){return Str("",{"":value},[])}function Str(key,holder,stack){var value=holder[key];if(Type(value)===OBJECT_TYPE&&typeof value.toJSON==="function"){value=value.toJSON(key)}var _class=_toString.call(value);switch(_class){case NUMBER_CLASS:case BOOLEAN_CLASS:case STRING_CLASS:value=value.valueOf()}switch(value){case null:return"null";case true:return"true";case false:return"false"}var type=typeof value;switch(type){case"string":return value.inspect(true);case"number":return isFinite(value)?String(value):"null";case"object":for(var i=0,length=stack.length;i<length;i++){if(stack[i]===value){throw new TypeError("Cyclic reference to '"+value+"' in object")}}stack.push(value);var partial=[];if(_class===ARRAY_CLASS){for(var i=0,length=value.length;i<length;i++){var str=Str(i,value,stack);partial.push(typeof str==="undefined"?"null":str)}partial="["+partial.join(",")+"]"}else{var keys=Object.keys(value);for(var i=0,length=keys.length;i<length;i++){var key=keys[i],str=Str(key,value,stack);if(typeof str!=="undefined"){partial.push(key.inspect(true)+":"+str)}}partial="{"+partial.join(",")+"}"}stack.pop();return partial}}function stringify(object){return JSON.stringify(object)}function toQueryString(object){return $H(object).toQueryString()}function toHTML(object){return object&&object.toHTML?object.toHTML():String.interpret(object)}function keys(object){if(Type(object)!==OBJECT_TYPE){throw new TypeError}var results=[];for(var property in object){if(_hasOwnProperty.call(object,property))results.push(property)}if(IS_DONTENUM_BUGGY){for(var i=0;property=DONT_ENUMS[i];i++){if(_hasOwnProperty.call(object,property))results.push(property)}}return results}function values(object){var results=[];for(var property in object)results.push(object[property]);return results}function clone(object){return extend({},object)}function isElement(object){return!!(object&&object.nodeType==1)}function isArray(object){return _toString.call(object)===ARRAY_CLASS}var hasNativeIsArray=typeof Array.isArray=="function"&&Array.isArray([])&&!Array.isArray({});if(hasNativeIsArray){isArray=Array.isArray}function isHash(object){return object instanceof Hash}function isFunction(object){return _toString.call(object)===FUNCTION_CLASS}function isString(object){return _toString.call(object)===STRING_CLASS}function isNumber(object){return _toString.call(object)===NUMBER_CLASS}function isDate(object){return _toString.call(object)===DATE_CLASS}function isUndefined(object){return typeof object==="undefined"}extend(Object,{extend:extend,inspect:inspect,toJSON:NATIVE_JSON_STRINGIFY_SUPPORT?stringify:toJSON,toQueryString:toQueryString,toHTML:toHTML,keys:Object.keys||keys,values:values,clone:clone,isElement:isElement,isArray:isArray,isHash:isHash,isFunction:isFunction,isString:isString,isNumber:isNumber,isDate:isDate,isUndefined:isUndefined})})();Object.extend(Function.prototype,function(){var slice=Array.prototype.slice;function update(array,args){var arrayLength=array.length,length=args.length;while(length--)array[arrayLength+length]=args[length];return array}function merge(array,args){array=slice.call(array,0);return update(array,args)}function argumentNames(){var names=this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1].replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g,"").replace(/\s+/g,"").split(",");return names.length==1&&!names[0]?[]:names}function bind(context){if(arguments.length<2&&Object.isUndefined(arguments[0]))return this;if(!Object.isFunction(this))throw new TypeError("The object is not callable.");var nop=function(){};var __method=this,args=slice.call(arguments,1);var bound=function(){var a=merge(args,arguments);var c=this instanceof bound?this:context;return __method.apply(c,a)};nop.prototype=this.prototype;bound.prototype=new nop;return bound}function bindAsEventListener(context){var __method=this,args=slice.call(arguments,1);return function(event){var a=update([event||window.event],args);return __method.apply(context,a)}}function curry(){if(!arguments.length)return this;var __method=this,args=slice.call(arguments,0);return function(){var a=merge(args,arguments);return __method.apply(this,a)}}function delay(timeout){var __method=this,args=slice.call(arguments,1);timeout=timeout*1e3;return window.setTimeout(function(){return __method.apply(__method,args)},timeout)}function defer(){var args=update([.01],arguments);return this.delay.apply(this,args)}function wrap(wrapper){var __method=this;return function(){var a=update([__method.bind(this)],arguments);return wrapper.apply(this,a)}}function methodize(){if(this._methodized)return this._methodized;var __method=this;return this._methodized=function(){var a=update([this],arguments);return __method.apply(null,a)}}var extensions={argumentNames:argumentNames,bindAsEventListener:bindAsEventListener,curry:curry,delay:delay,defer:defer,wrap:wrap,methodize:methodize};if(!Function.prototype.bind)extensions.bind=bind;return extensions}());(function(proto){function toISOString(){return this.getUTCFullYear()+"-"+(this.getUTCMonth()+1).toPaddedString(2)+"-"+this.getUTCDate().toPaddedString(2)+"T"+this.getUTCHours().toPaddedString(2)+":"+this.getUTCMinutes().toPaddedString(2)+":"+this.getUTCSeconds().toPaddedString(2)+"Z"}function toJSON(){return this.toISOString()}if(!proto.toISOString)proto.toISOString=toISOString;if(!proto.toJSON)proto.toJSON=toJSON})(Date.prototype);RegExp.prototype.match=RegExp.prototype.test;RegExp.escape=function(str){return String(str).replace(/([.*+?^=!:()|[\]\/\\])/g,"\\$1")};var PeriodicalExecuter=Class.create({initialize:function(callback,frequency){this.callback=callback;this.frequency=frequency;this.currentlyExecuting=false;this.registerCallback()},registerCallback:function(){this.timer=setInterval(this.onTimerEvent.bind(this),this.frequency*1e3)},execute:function(){this.callback(this)},stop:function(){if(!this.timer)return;clearInterval(this.timer);this.timer=null},onTimerEvent:function(){if(!this.currentlyExecuting){try{this.currentlyExecuting=true;this.execute();this.currentlyExecuting=false}catch(e){this.currentlyExecuting=false;throw e}}}});Object.extend(String,{interpret:function(value){return value==null?"":String(value)},specialChar:{"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","\\":"\\\\"}});Object.extend(String.prototype,function(){var NATIVE_JSON_PARSE_SUPPORT=window.JSON&&typeof JSON.parse==="function"&&JSON.parse('{"test": true}').test;function prepareReplacement(replacement){if(Object.isFunction(replacement))return replacement;var template=new Template(replacement);return function(match){return template.evaluate(match)}}function isNonEmptyRegExp(regexp){return regexp.source&&regexp.source!=="(?:)"}function gsub(pattern,replacement){var result="",source=this,match;replacement=prepareReplacement(replacement);if(Object.isString(pattern))pattern=RegExp.escape(pattern);if(!(pattern.length||isNonEmptyRegExp(pattern))){replacement=replacement("");return replacement+source.split("").join(replacement)+replacement}while(source.length>0){match=source.match(pattern);if(match&&match[0].length>0){result+=source.slice(0,match.index);result+=String.interpret(replacement(match));source=source.slice(match.index+match[0].length)}else{result+=source,source=""}}return result}function sub(pattern,replacement,count){replacement=prepareReplacement(replacement);count=Object.isUndefined(count)?1:count;return this.gsub(pattern,function(match){if(--count<0)return match[0];return replacement(match)})}function scan(pattern,iterator){this.gsub(pattern,iterator);return String(this)}function truncate(length,truncation){length=length||30;truncation=Object.isUndefined(truncation)?"...":truncation;return this.length>length?this.slice(0,length-truncation.length)+truncation:String(this)}function strip(){return this.replace(/^\s+/,"").replace(/\s+$/,"")}function stripTags(){return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>'"])+)?\s*("[^">]*|'[^'>])?(\/)?>|<\/\w+>/gi,"")}function stripScripts(){return this.replace(new RegExp(Prototype.ScriptFragment,"img"),"")}function extractScripts(){var matchAll=new RegExp(Prototype.ScriptFragment,"img"),matchOne=new RegExp(Prototype.ScriptFragment,"im");return(this.match(matchAll)||[]).map(function(scriptTag){return(scriptTag.match(matchOne)||["",""])[1]})}function evalScripts(){return this.extractScripts().map(function(script){return eval(script)})}function escapeHTML(){return this.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function unescapeHTML(){return this.stripTags().replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">")}function toQueryParams(separator){var match=this.strip().match(/([^?#]*)(#.*)?$/);if(!match)return{};return match[1].split(separator||"&").inject({},function(hash,pair){if((pair=pair.split("="))[0]){var key=decodeURIComponent(pair.shift()),value=pair.length>1?pair.join("="):pair[0];if(value!=undefined){value=value.gsub("+"," ");value=decodeURIComponent(value)}if(key in hash){if(!Object.isArray(hash[key]))hash[key]=[hash[key]];hash[key].push(value)}else hash[key]=value}return hash})}function toArray(){return this.split("")}function succ(){return this.slice(0,this.length-1)+String.fromCharCode(this.charCodeAt(this.length-1)+1)}function times(count){return count<1?"":new Array(count+1).join(this)}function camelize(){return this.replace(/-+(.)?/g,function(match,chr){return chr?chr.toUpperCase():""})}function capitalize(){return this.charAt(0).toUpperCase()+this.substring(1).toLowerCase()}function underscore(){return this.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/-/g,"_").toLowerCase()}function dasherize(){return this.replace(/_/g,"-")}function inspect(useDoubleQuotes){var escapedString=this.replace(/[\x00-\x1f\\]/g,function(character){if(character in String.specialChar){return String.specialChar[character]}return"\\u00"+character.charCodeAt().toPaddedString(2,16)});if(useDoubleQuotes)return'"'+escapedString.replace(/"/g,'\\"')+'"';return"'"+escapedString.replace(/'/g,"\\'")+"'"}function unfilterJSON(filter){return this.replace(filter||Prototype.JSONFilter,"$1")}function isJSON(){var str=this;if(str.blank())return false;str=str.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@");str=str.replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]");str=str.replace(/(?:^|:|,)(?:\s*\[)+/g,"");return/^[\],:{}\s]*$/.test(str)}function evalJSON(sanitize){var json=this.unfilterJSON(),cx=/[\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff\u0000]/g;if(cx.test(json)){json=json.replace(cx,function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})}try{if(!sanitize||json.isJSON())return eval("("+json+")")}catch(e){}throw new SyntaxError("Badly formed JSON string: "+this.inspect())}function parseJSON(){var json=this.unfilterJSON();return JSON.parse(json)}function include(pattern){return this.indexOf(pattern)>-1}function startsWith(pattern,position){position=Object.isNumber(position)?position:0;return this.lastIndexOf(pattern,position)===position}function endsWith(pattern,position){pattern=String(pattern);position=Object.isNumber(position)?position:this.length;if(position<0)position=0;if(position>this.length)position=this.length;var d=position-pattern.length;return d>=0&&this.indexOf(pattern,d)===d}function empty(){return this==""}function blank(){return/^\s*$/.test(this)}function interpolate(object,pattern){return new Template(this,pattern).evaluate(object)}return{gsub:gsub,sub:sub,scan:scan,truncate:truncate,strip:String.prototype.trim||strip,stripTags:stripTags,stripScripts:stripScripts,extractScripts:extractScripts,evalScripts:evalScripts,escapeHTML:escapeHTML,unescapeHTML:unescapeHTML,toQueryParams:toQueryParams,parseQuery:toQueryParams,toArray:toArray,succ:succ,times:times,camelize:camelize,capitalize:capitalize,underscore:underscore,dasherize:dasherize,inspect:inspect,unfilterJSON:unfilterJSON,isJSON:isJSON,evalJSON:NATIVE_JSON_PARSE_SUPPORT?parseJSON:evalJSON,include:include,startsWith:String.prototype.startsWith||startsWith,endsWith:String.prototype.endsWith||endsWith,empty:empty,blank:blank,interpolate:interpolate}}());var Template=Class.create({initialize:function(template,pattern){this.template=template.toString();this.pattern=pattern||Template.Pattern},evaluate:function(object){if(object&&Object.isFunction(object.toTemplateReplacements))object=object.toTemplateReplacements();return this.template.gsub(this.pattern,function(match){if(object==null)return match[1]+"";var before=match[1]||"";if(before=="\\")return match[2];var ctx=object,expr=match[3],pattern=/^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;match=pattern.exec(expr);if(match==null)return before;while(match!=null){var comp=match[1].startsWith("[")?match[2].replace(/\\\\]/g,"]"):match[1];ctx=ctx[comp];if(null==ctx||""==match[3])break;expr=expr.substring("["==match[3]?match[1].length:match[0].length);match=pattern.exec(expr)}return before+String.interpret(ctx)})}});Template.Pattern=/(^|.|\r|\n)(#\{(.*?)\})/;var $break={};var Enumerable=function(){function each(iterator,context){try{this._each(iterator,context)}catch(e){if(e!=$break)throw e}return this}function eachSlice(number,iterator,context){var index=-number,slices=[],array=this.toArray();if(number<1)return array;while((index+=number)<array.length)slices.push(array.slice(index,index+number));return slices.collect(iterator,context)}function all(iterator,context){iterator=iterator||Prototype.K;var result=true;this.each(function(value,index){result=result&&!!iterator.call(context,value,index,this);if(!result)throw $break},this);return result}function any(iterator,context){iterator=iterator||Prototype.K;var result=false;this.each(function(value,index){if(result=!!iterator.call(context,value,index,this))throw $break},this);return result}function collect(iterator,context){iterator=iterator||Prototype.K;var results=[];this.each(function(value,index){results.push(iterator.call(context,value,index,this))},this);return results}function detect(iterator,context){var result;this.each(function(value,index){if(iterator.call(context,value,index,this)){result=value;throw $break}},this);return result}function findAll(iterator,context){var results=[];this.each(function(value,index){if(iterator.call(context,value,index,this))results.push(value)},this);return results}function grep(filter,iterator,context){iterator=iterator||Prototype.K;var results=[];if(Object.isString(filter))filter=new RegExp(RegExp.escape(filter));this.each(function(value,index){if(filter.match(value))results.push(iterator.call(context,value,index,this))},this);return results}function include(object){if(Object.isFunction(this.indexOf)&&this.indexOf(object)!=-1)return true;var found=false;this.each(function(value){if(value==object){found=true;throw $break}});return found}function inGroupsOf(number,fillWith){fillWith=Object.isUndefined(fillWith)?null:fillWith;return this.eachSlice(number,function(slice){while(slice.length<number)slice.push(fillWith);return slice})}function inject(memo,iterator,context){this.each(function(value,index){memo=iterator.call(context,memo,value,index,this)},this);return memo}function invoke(method){var args=$A(arguments).slice(1);return this.map(function(value){return value[method].apply(value,args)})}function max(iterator,context){iterator=iterator||Prototype.K;var result;this.each(function(value,index){value=iterator.call(context,value,index,this);if(result==null||value>=result)result=value},this);return result}function min(iterator,context){iterator=iterator||Prototype.K;var result;this.each(function(value,index){value=iterator.call(context,value,index,this);if(result==null||value<result)result=value},this);return result}function partition(iterator,context){iterator=iterator||Prototype.K;var trues=[],falses=[];this.each(function(value,index){(iterator.call(context,value,index,this)?trues:falses).push(value)},this);return[trues,falses]}function pluck(property){var results=[];this.each(function(value){results.push(value[property])});return results}function reject(iterator,context){var results=[];this.each(function(value,index){if(!iterator.call(context,value,index,this))results.push(value)},this);return results}function sortBy(iterator,context){return this.map(function(value,index){return{value:value,criteria:iterator.call(context,value,index,this)}},this).sort(function(left,right){var a=left.criteria,b=right.criteria;return a<b?-1:a>b?1:0}).pluck("value")}function toArray(){return this.map()}function zip(){var iterator=Prototype.K,args=$A(arguments);if(Object.isFunction(args.last()))iterator=args.pop();var collections=[this].concat(args).map($A);return this.map(function(value,index){return iterator(collections.pluck(index))})}function size(){return this.toArray().length}function inspect(){return"#<Enumerable:"+this.toArray().inspect()+">"}return{each:each,eachSlice:eachSlice,all:all,every:all,any:any,some:any,collect:collect,map:collect,detect:detect,findAll:findAll,select:findAll,filter:findAll,grep:grep,include:include,member:include,inGroupsOf:inGroupsOf,inject:inject,invoke:invoke,max:max,min:min,partition:partition,pluck:pluck,reject:reject,sortBy:sortBy,toArray:toArray,entries:toArray,zip:zip,size:size,inspect:inspect,find:detect}}();function $A(iterable){if(!iterable)return[];if("toArray"in Object(iterable))return iterable.toArray();var length=iterable.length||0,results=new Array(length);while(length--)results[length]=iterable[length];return results}function $w(string){if(!Object.isString(string))return[];string=string.strip();return string?string.split(/\s+/):[]}Array.from=$A;(function(){var arrayProto=Array.prototype,slice=arrayProto.slice,_each=arrayProto.forEach;function each(iterator,context){for(var i=0,length=this.length>>>0;i<length;i++){if(i in this)iterator.call(context,this[i],i,this)}}if(!_each)_each=each;function clear(){this.length=0;return this}function first(){return this[0]}function last(){return this[this.length-1]}function compact(){return this.select(function(value){return value!=null})}function flatten(){return this.inject([],function(array,value){if(Object.isArray(value))return array.concat(value.flatten());array.push(value);return array})}function without(){var values=slice.call(arguments,0);return this.select(function(value){return!values.include(value)})}function reverse(inline){return(inline===false?this.toArray():this)._reverse()}function uniq(sorted){return this.inject([],function(array,value,index){if(0==index||(sorted?array.last()!=value:!array.include(value)))array.push(value);return array})}function intersect(array){return this.uniq().findAll(function(item){return array.indexOf(item)!==-1})}function clone(){return slice.call(this,0)}function size(){return this.length}function inspect(){return"["+this.map(Object.inspect).join(", ")+"]"}function indexOf(item,i){if(this==null)throw new TypeError;var array=Object(this),length=array.length>>>0;if(length===0)return-1;i=Number(i);if(isNaN(i)){i=0}else if(i!==0&&isFinite(i)){i=(i>0?1:-1)*Math.floor(Math.abs(i))}if(i>length)return-1;var k=i>=0?i:Math.max(length-Math.abs(i),0);for(;k<length;k++)if(k in array&&array[k]===item)return k;return-1}function lastIndexOf(item,i){if(this==null)throw new TypeError;var array=Object(this),length=array.length>>>0;if(length===0)return-1;if(!Object.isUndefined(i)){i=Number(i);if(isNaN(i)){i=0}else if(i!==0&&isFinite(i)){i=(i>0?1:-1)*Math.floor(Math.abs(i))}}else{i=length}var k=i>=0?Math.min(i,length-1):length-Math.abs(i);for(;k>=0;k--)if(k in array&&array[k]===item)return k;return-1}function concat(_){var array=[],items=slice.call(arguments,0),item,n=0;items.unshift(this);for(var i=0,length=items.length;i<length;i++){item=items[i];if(Object.isArray(item)&&!("callee"in item)){for(var j=0,arrayLength=item.length;j<arrayLength;j++){if(j in item)array[n]=item[j];n++}}else{array[n++]=item}}array.length=n;return array}function wrapNative(method){return function(){if(arguments.length===0){return method.call(this,Prototype.K)}else if(arguments[0]===undefined){var args=slice.call(arguments,1);args.unshift(Prototype.K);return method.apply(this,args)}else{return method.apply(this,arguments)}}}function map(iterator){if(this==null)throw new TypeError;iterator=iterator||Prototype.K;var object=Object(this);var results=[],context=arguments[1],n=0;for(var i=0,length=object.length>>>0;i<length;i++){if(i in object){results[n]=iterator.call(context,object[i],i,object)}n++}results.length=n;return results}if(arrayProto.map){map=wrapNative(Array.prototype.map)}function filter(iterator){if(this==null||!Object.isFunction(iterator))throw new TypeError;var object=Object(this);var results=[],context=arguments[1],value;for(var i=0,length=object.length>>>0;i<length;i++){if(i in object){value=object[i];if(iterator.call(context,value,i,object)){results.push(value)}}}return results}if(arrayProto.filter){filter=Array.prototype.filter}function some(iterator){if(this==null)throw new TypeError;iterator=iterator||Prototype.K;var context=arguments[1];var object=Object(this);for(var i=0,length=object.length>>>0;i<length;i++){if(i in object&&iterator.call(context,object[i],i,object)){return true}}return false}if(arrayProto.some){some=wrapNative(Array.prototype.some)}function every(iterator){if(this==null)throw new TypeError;iterator=iterator||Prototype.K;var context=arguments[1];var object=Object(this);for(var i=0,length=object.length>>>0;i<length;i++){if(i in object&&!iterator.call(context,object[i],i,object)){return false}}return true}if(arrayProto.every){every=wrapNative(Array.prototype.every)}Object.extend(arrayProto,Enumerable);if(arrayProto.entries===Enumerable.entries){delete arrayProto.entries}if(!arrayProto._reverse)arrayProto._reverse=arrayProto.reverse;Object.extend(arrayProto,{_each:_each,map:map,collect:map,select:filter,filter:filter,findAll:filter,some:some,any:some,every:every,all:every,clear:clear,first:first,last:last,compact:compact,flatten:flatten,without:without,reverse:reverse,uniq:uniq,intersect:intersect,clone:clone,toArray:clone,size:size,inspect:inspect});var CONCAT_ARGUMENTS_BUGGY=function(){return[].concat(arguments)[0][0]!==1}(1,2);if(CONCAT_ARGUMENTS_BUGGY)arrayProto.concat=concat;if(!arrayProto.indexOf)arrayProto.indexOf=indexOf;if(!arrayProto.lastIndexOf)arrayProto.lastIndexOf=lastIndexOf})();function $H(object){return new Hash(object)}var Hash=Class.create(Enumerable,function(){function initialize(object){this._object=Object.isHash(object)?object.toObject():Object.clone(object)}function _each(iterator,context){var i=0;for(var key in this._object){var value=this._object[key],pair=[key,value];pair.key=key;pair.value=value;iterator.call(context,pair,i);i++}}function set(key,value){return this._object[key]=value}function get(key){if(this._object[key]!==Object.prototype[key])return this._object[key]}function unset(key){var value=this._object[key];delete this._object[key];return value}function toObject(){return Object.clone(this._object)}function keys(){return this.pluck("key")}function values(){return this.pluck("value")}function index(value){var match=this.detect(function(pair){return pair.value===value});return match&&match.key}function merge(object){return this.clone().update(object)}function update(object){return new Hash(object).inject(this,function(result,pair){result.set(pair.key,pair.value);return result})}function toQueryPair(key,value){if(Object.isUndefined(value))return key;value=String.interpret(value);value=value.gsub(/(\r)?\n/,"\r\n");value=encodeURIComponent(value);value=value.gsub(/%20/,"+");return key+"="+value}function toQueryString(){return this.inject([],function(results,pair){var key=encodeURIComponent(pair.key),values=pair.value;if(values&&typeof values=="object"){if(Object.isArray(values)){var queryValues=[];for(var i=0,len=values.length,value;i<len;i++){value=values[i];queryValues.push(toQueryPair(key,value))}return results.concat(queryValues)}}else results.push(toQueryPair(key,values));return results}).join("&")}function inspect(){return"#<Hash:{"+this.map(function(pair){return pair.map(Object.inspect).join(": ")}).join(", ")+"}>"}function clone(){return new Hash(this)}return{initialize:initialize,_each:_each,set:set,get:get,unset:unset,toObject:toObject,toTemplateReplacements:toObject,keys:keys,values:values,index:index,merge:merge,update:update,toQueryString:toQueryString,inspect:inspect,toJSON:toObject,clone:clone}}());Hash.from=$H;Object.extend(Number.prototype,function(){function toColorPart(){return this.toPaddedString(2,16)}function succ(){return this+1}function times(iterator,context){$R(0,this,true).each(iterator,context);return this}function toPaddedString(length,radix){var string=this.toString(radix||10);return"0".times(length-string.length)+string}function abs(){return Math.abs(this)}function round(){return Math.round(this)}function ceil(){return Math.ceil(this)}function floor(){return Math.floor(this)}return{toColorPart:toColorPart,succ:succ,times:times,toPaddedString:toPaddedString,abs:abs,round:round,ceil:ceil,floor:floor}}());function $R(start,end,exclusive){return new ObjectRange(start,end,exclusive)}var ObjectRange=Class.create(Enumerable,function(){function initialize(start,end,exclusive){this.start=start;this.end=end;this.exclusive=exclusive}function _each(iterator,context){var value=this.start,i;for(i=0;this.include(value);i++){iterator.call(context,value,i);value=value.succ()}}function include(value){if(value<this.start)return false;if(this.exclusive)return value<this.end;return value<=this.end}return{initialize:initialize,_each:_each,include:include}}());var Abstract={};var Try={these:function(){var returnValue;for(var i=0,length=arguments.length;i<length;i++){var lambda=arguments[i];try{returnValue=lambda();break}catch(e){}}return returnValue}};var Ajax={getTransport:function(){return Try.these(function(){return new XMLHttpRequest},function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")})||false},activeRequestCount:0};Ajax.Responders={responders:[],_each:function(iterator,context){this.responders._each(iterator,context)},register:function(responder){if(!this.include(responder))this.responders.push(responder)},unregister:function(responder){this.responders=this.responders.without(responder)},dispatch:function(callback,request,transport,json){this.each(function(responder){if(Object.isFunction(responder[callback])){try{responder[callback].apply(responder,[request,transport,json])}catch(e){}}})}};Object.extend(Ajax.Responders,Enumerable);Ajax.Responders.register({onCreate:function(){Ajax.activeRequestCount++},onComplete:function(){Ajax.activeRequestCount--}});Ajax.Base=Class.create({initialize:function(options){this.options={method:"post",asynchronous:true,contentType:"application/x-www-form-urlencoded",encoding:"UTF-8",parameters:"",evalJSON:true,evalJS:true};Object.extend(this.options,options||{});this.options.method=this.options.method.toLowerCase();if(Object.isHash(this.options.parameters))this.options.parameters=this.options.parameters.toObject()}});Ajax.Request=Class.create(Ajax.Base,{_complete:false,initialize:function($super,url,options){$super(options);this.transport=Ajax.getTransport();this.request(url)},request:function(url){this.url=url;this.method=this.options.method;var params=Object.isString(this.options.parameters)?this.options.parameters:Object.toQueryString(this.options.parameters);if(!["get","post"].include(this.method)){params+=(params?"&":"")+"_method="+this.method;this.method="post"}if(params&&this.method==="get"){this.url+=(this.url.include("?")?"&":"?")+params}this.parameters=params.toQueryParams();try{var response=new Ajax.Response(this);if(this.options.onCreate)this.options.onCreate(response);Ajax.Responders.dispatch("onCreate",this,response);this.transport.open(this.method.toUpperCase(),this.url,this.options.asynchronous);if(this.options.asynchronous)this.respondToReadyState.bind(this).defer(1);this.transport.onreadystatechange=this.onStateChange.bind(this);this.setRequestHeaders();this.body=this.method=="post"?this.options.postBody||params:null;this.transport.send(this.body);if(!this.options.asynchronous&&this.transport.overrideMimeType)this.onStateChange()}catch(e){this.dispatchException(e)}},onStateChange:function(){var readyState=this.transport.readyState;if(readyState>1&&!(readyState==4&&this._complete))this.respondToReadyState(this.transport.readyState)},setRequestHeaders:function(){var headers={"X-Requested-With":"XMLHttpRequest","X-Prototype-Version":Prototype.Version,Accept:"text/javascript, text/html, application/xml, text/xml, */*"};if(this.method=="post"){headers["Content-type"]=this.options.contentType+(this.options.encoding?"; charset="+this.options.encoding:"");if(this.transport.overrideMimeType&&(navigator.userAgent.match(/Gecko\/(\d{4})/)||[0,2005])[1]<2005)headers["Connection"]="close"}if(typeof this.options.requestHeaders=="object"){var extras=this.options.requestHeaders;if(Object.isFunction(extras.push))for(var i=0,length=extras.length;i<length;i+=2)headers[extras[i]]=extras[i+1];else $H(extras).each(function(pair){headers[pair.key]=pair.value})}for(var name in headers)if(headers[name]!=null)this.transport.setRequestHeader(name,headers[name])},success:function(){var status=this.getStatus();return!status||status>=200&&status<300||status==304},getStatus:function(){try{if(this.transport.status===1223)return 204;return this.transport.status||0}catch(e){return 0}},respondToReadyState:function(readyState){var state=Ajax.Request.Events[readyState],response=new Ajax.Response(this);if(state=="Complete"){try{this._complete=true;(this.options["on"+response.status]||this.options["on"+(this.success()?"Success":"Failure")]||Prototype.emptyFunction)(response,response.headerJSON)}catch(e){this.dispatchException(e)}var contentType=response.getHeader("Content-type");if(this.options.evalJS=="force"||this.options.evalJS&&this.isSameOrigin()&&contentType&&contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s*$/i))this.evalResponse()}try{(this.options["on"+state]||Prototype.emptyFunction)(response,response.headerJSON);Ajax.Responders.dispatch("on"+state,this,response,response.headerJSON)}catch(e){this.dispatchException(e)}if(state=="Complete"){this.transport.onreadystatechange=Prototype.emptyFunction}},isSameOrigin:function(){var m=this.url.match(/^\s*https?:\/\/[^\/]*/);return!m||m[0]=="#{protocol}//#{domain}#{port}".interpolate({protocol:location.protocol,domain:document.domain,port:location.port?":"+location.port:""})},getHeader:function(name){try{return this.transport.getResponseHeader(name)||null}catch(e){return null}},evalResponse:function(){try{return eval((this.transport.responseText||"").unfilterJSON())}catch(e){this.dispatchException(e)}},dispatchException:function(exception){(this.options.onException||Prototype.emptyFunction)(this,exception);Ajax.Responders.dispatch("onException",this,exception)}});Ajax.Request.Events=["Uninitialized","Loading","Loaded","Interactive","Complete"];Ajax.Response=Class.create({initialize:function(request){this.request=request;var transport=this.transport=request.transport,readyState=this.readyState=transport.readyState;if(readyState>2&&!Prototype.Browser.IE||readyState==4){this.status=this.getStatus();this.statusText=this.getStatusText();this.responseText=String.interpret(transport.responseText);this.headerJSON=this._getHeaderJSON()}if(readyState==4){var xml=transport.responseXML;this.responseXML=Object.isUndefined(xml)?null:xml;this.responseJSON=this._getResponseJSON()}},status:0,statusText:"",getStatus:Ajax.Request.prototype.getStatus,getStatusText:function(){try{return this.transport.statusText||""}catch(e){return""}},getHeader:Ajax.Request.prototype.getHeader,getAllHeaders:function(){try{return this.getAllResponseHeaders()}catch(e){return null}},getResponseHeader:function(name){return this.transport.getResponseHeader(name)},getAllResponseHeaders:function(){return this.transport.getAllResponseHeaders()},_getHeaderJSON:function(){var json=this.getHeader("X-JSON");if(!json)return null;try{json=decodeURIComponent(escape(json))}catch(e){}try{return json.evalJSON(this.request.options.sanitizeJSON||!this.request.isSameOrigin())}catch(e){this.request.dispatchException(e)}},_getResponseJSON:function(){var options=this.request.options;if(!options.evalJSON||options.evalJSON!="force"&&!(this.getHeader("Content-type")||"").include("application/json")||this.responseText.blank())return null;try{return this.responseText.evalJSON(options.sanitizeJSON||!this.request.isSameOrigin())}catch(e){this.request.dispatchException(e)}}});Ajax.Updater=Class.create(Ajax.Request,{initialize:function($super,container,url,options){this.container={success:container.success||container,failure:container.failure||(container.success?null:container)};options=Object.clone(options);var onComplete=options.onComplete;options.onComplete=function(response,json){this.updateContent(response.responseText);if(Object.isFunction(onComplete))onComplete(response,json)}.bind(this);$super(url,options)},updateContent:function(responseText){var receiver=this.container[this.success()?"success":"failure"],options=this.options;if(!options.evalScripts)responseText=responseText.stripScripts();if(receiver=$(receiver)){if(options.insertion){if(Object.isString(options.insertion)){var insertion={};insertion[options.insertion]=responseText;receiver.insert(insertion)}else options.insertion(receiver,responseText)}else receiver.update(responseText)}}});Ajax.PeriodicalUpdater=Class.create(Ajax.Base,{initialize:function($super,container,url,options){$super(options);this.onComplete=this.options.onComplete;this.frequency=this.options.frequency||2;this.decay=this.options.decay||1;this.updater={};this.container=container;this.url=url;this.start()},start:function(){this.options.onComplete=this.updateComplete.bind(this);this.onTimerEvent()},stop:function(){this.updater.options.onComplete=undefined;clearTimeout(this.timer);(this.onComplete||Prototype.emptyFunction).apply(this,arguments)},updateComplete:function(response){if(this.options.decay){this.decay=response.responseText==this.lastText?this.decay*this.options.decay:1;this.lastText=response.responseText}this.timer=this.onTimerEvent.bind(this).delay(this.decay*this.frequency)},onTimerEvent:function(){this.updater=new Ajax.Updater(this.container,this.url,this.options)}});(function(GLOBAL){var UNDEFINED;var SLICE=Array.prototype.slice;var DIV=document.createElement("div");function $(element){if(arguments.length>1){for(var i=0,elements=[],length=arguments.length;i<length;i++)elements.push($(arguments[i]));return elements}if(Object.isString(element))element=document.getElementById(element);return Element.extend(element)}GLOBAL.$=$;if(!GLOBAL.Node)GLOBAL.Node={};if(!GLOBAL.Node.ELEMENT_NODE){Object.extend(GLOBAL.Node,{ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12})}var ELEMENT_CACHE={};function shouldUseCreationCache(tagName,attributes){if(tagName==="select")return false;if("type"in attributes)return false;return true}var HAS_EXTENDED_CREATE_ELEMENT_SYNTAX=function(){try{var el=document.createElement('<input name="x">');return el.tagName.toLowerCase()==="input"&&el.name==="x"}catch(err){return false}}();var oldElement=GLOBAL.Element;function Element(tagName,attributes){attributes=attributes||{};tagName=tagName.toLowerCase();if(HAS_EXTENDED_CREATE_ELEMENT_SYNTAX&&attributes.name){tagName="<"+tagName+' name="'+attributes.name+'">';delete attributes.name;return Element.writeAttribute(document.createElement(tagName),attributes)}if(!ELEMENT_CACHE[tagName])ELEMENT_CACHE[tagName]=Element.extend(document.createElement(tagName));var node=shouldUseCreationCache(tagName,attributes)?ELEMENT_CACHE[tagName].cloneNode(false):document.createElement(tagName);return Element.writeAttribute(node,attributes)}GLOBAL.Element=Element;Object.extend(GLOBAL.Element,oldElement||{});if(oldElement)GLOBAL.Element.prototype=oldElement.prototype;Element.Methods={ByTag:{},Simulated:{}};var methods={};var INSPECT_ATTRIBUTES={id:"id",className:"class"};function inspect(element){element=$(element);var result="<"+element.tagName.toLowerCase();var attribute,value;for(var property in INSPECT_ATTRIBUTES){attribute=INSPECT_ATTRIBUTES[property];value=(element[property]||"").toString();if(value)result+=" "+attribute+"="+value.inspect(true)}return result+">"}methods.inspect=inspect;function visible(element){return $(element).getStyle("display")!=="none"}function toggle(element,bool){element=$(element);if(typeof bool!=="boolean")bool=!Element.visible(element);Element[bool?"show":"hide"](element);return element}function hide(element){element=$(element);element.style.display="none";return element}function show(element){element=$(element);element.style.display="";return element}Object.extend(methods,{visible:visible,toggle:toggle,hide:hide,show:show});function remove(element){element=$(element);element.parentNode.removeChild(element);return element}var SELECT_ELEMENT_INNERHTML_BUGGY=function(){var el=document.createElement("select"),isBuggy=true;el.innerHTML='<option value="test">test</option>';if(el.options&&el.options[0]){isBuggy=el.options[0].nodeName.toUpperCase()!=="OPTION"}el=null;return isBuggy}();var TABLE_ELEMENT_INNERHTML_BUGGY=function(){try{var el=document.createElement("table");if(el&&el.tBodies){el.innerHTML="<tbody><tr><td>test</td></tr></tbody>";var isBuggy=typeof el.tBodies[0]=="undefined";el=null;return isBuggy}}catch(e){return true}}();var LINK_ELEMENT_INNERHTML_BUGGY=function(){try{var el=document.createElement("div");el.innerHTML="<link />";var isBuggy=el.childNodes.length===0;el=null;return isBuggy}catch(e){return true}}();var ANY_INNERHTML_BUGGY=SELECT_ELEMENT_INNERHTML_BUGGY||TABLE_ELEMENT_INNERHTML_BUGGY||LINK_ELEMENT_INNERHTML_BUGGY;var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING=function(){var s=document.createElement("script"),isBuggy=false;try{s.appendChild(document.createTextNode(""));isBuggy=!s.firstChild||s.firstChild&&s.firstChild.nodeType!==3}catch(e){isBuggy=true}s=null;return isBuggy}();function update(element,content){element=$(element);var descendants=element.getElementsByTagName("*"),i=descendants.length;while(i--)purgeElement(descendants[i]);if(content&&content.toElement)content=content.toElement();if(Object.isElement(content))return element.update().insert(content);content=Object.toHTML(content);var tagName=element.tagName.toUpperCase();if(tagName==="SCRIPT"&&SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING){element.text=content;return element}if(ANY_INNERHTML_BUGGY){if(tagName in INSERTION_TRANSLATIONS.tags){while(element.firstChild)element.removeChild(element.firstChild);var nodes=getContentFromAnonymousElement(tagName,content.stripScripts());for(var i=0,node;node=nodes[i];i++)element.appendChild(node)}else if(LINK_ELEMENT_INNERHTML_BUGGY&&Object.isString(content)&&content.indexOf("<link")>-1){while(element.firstChild)element.removeChild(element.firstChild);var nodes=getContentFromAnonymousElement(tagName,content.stripScripts(),true);for(var i=0,node;node=nodes[i];i++)element.appendChild(node)}else{element.innerHTML=content.stripScripts()}}else{element.innerHTML=content.stripScripts()}content.evalScripts.bind(content).defer();return element}function replace(element,content){element=$(element);if(content&&content.toElement){content=content.toElement()}else if(!Object.isElement(content)){content=Object.toHTML(content);var range=element.ownerDocument.createRange();range.selectNode(element);content.evalScripts.bind(content).defer();content=range.createContextualFragment(content.stripScripts())}element.parentNode.replaceChild(content,element);return element}var INSERTION_TRANSLATIONS={before:function(element,node){element.parentNode.insertBefore(node,element)},top:function(element,node){element.insertBefore(node,element.firstChild)},bottom:function(element,node){element.appendChild(node)},after:function(element,node){element.parentNode.insertBefore(node,element.nextSibling)},tags:{TABLE:["<table>","</table>",1],TBODY:["<table><tbody>","</tbody></table>",2],TR:["<table><tbody><tr>","</tr></tbody></table>",3],TD:["<table><tbody><tr><td>","</td></tr></tbody></table>",4],SELECT:["<select>","</select>",1]}};var tags=INSERTION_TRANSLATIONS.tags;Object.extend(tags,{THEAD:tags.TBODY,TFOOT:tags.TBODY,TH:tags.TD});function replace_IE(element,content){element=$(element);if(content&&content.toElement)content=content.toElement();if(Object.isElement(content)){element.parentNode.replaceChild(content,element);return element}content=Object.toHTML(content);var parent=element.parentNode,tagName=parent.tagName.toUpperCase();if(tagName in INSERTION_TRANSLATIONS.tags){var nextSibling=Element.next(element);var fragments=getContentFromAnonymousElement(tagName,content.stripScripts());parent.removeChild(element);var iterator;if(nextSibling)iterator=function(node){parent.insertBefore(node,nextSibling)};else iterator=function(node){parent.appendChild(node)};fragments.each(iterator)}else{element.outerHTML=content.stripScripts()}content.evalScripts.bind(content).defer();return element}if("outerHTML"in document.documentElement)replace=replace_IE;function isContent(content){if(Object.isUndefined(content)||content===null)return false;if(Object.isString(content)||Object.isNumber(content))return true;if(Object.isElement(content))return true;if(content.toElement||content.toHTML)return true;return false}function insertContentAt(element,content,position){position=position.toLowerCase();var method=INSERTION_TRANSLATIONS[position];if(content&&content.toElement)content=content.toElement();if(Object.isElement(content)){method(element,content);return element}content=Object.toHTML(content);var tagName=(position==="before"||position==="after"?element.parentNode:element).tagName.toUpperCase();var childNodes=getContentFromAnonymousElement(tagName,content.stripScripts());if(position==="top"||position==="after")childNodes.reverse();for(var i=0,node;node=childNodes[i];i++)method(element,node);content.evalScripts.bind(content).defer()}function insert(element,insertions){element=$(element);if(isContent(insertions))insertions={bottom:insertions};for(var position in insertions)insertContentAt(element,insertions[position],position);return element}function wrap(element,wrapper,attributes){element=$(element);if(Object.isElement(wrapper)){$(wrapper).writeAttribute(attributes||{})}else if(Object.isString(wrapper)){wrapper=new Element(wrapper,attributes)}else{wrapper=new Element("div",wrapper)}if(element.parentNode)element.parentNode.replaceChild(wrapper,element);wrapper.appendChild(element);return wrapper}function cleanWhitespace(element){element=$(element);var node=element.firstChild;while(node){var nextNode=node.nextSibling;if(node.nodeType===Node.TEXT_NODE&&!/\S/.test(node.nodeValue))element.removeChild(node);node=nextNode}return element}function empty(element){return $(element).innerHTML.blank()}function getContentFromAnonymousElement(tagName,html,force){var t=INSERTION_TRANSLATIONS.tags[tagName],div=DIV;var workaround=!!t;if(!workaround&&force){workaround=true;t=["","",0]}if(workaround){div.innerHTML="&#160;"+t[0]+html+t[1];div.removeChild(div.firstChild);for(var i=t[2];i--;)div=div.firstChild}else{div.innerHTML=html}return $A(div.childNodes)}function clone(element,deep){if(!(element=$(element)))return;var clone=element.cloneNode(deep);if(!HAS_UNIQUE_ID_PROPERTY){clone._prototypeUID=UNDEFINED;if(deep){var descendants=Element.select(clone,"*"),i=descendants.length;while(i--)descendants[i]._prototypeUID=UNDEFINED}}return Element.extend(clone)}function purgeElement(element){var uid=getUniqueElementID(element);if(uid){Element.stopObserving(element);if(!HAS_UNIQUE_ID_PROPERTY)element._prototypeUID=UNDEFINED;delete Element.Storage[uid]}}function purgeCollection(elements){var i=elements.length;while(i--)purgeElement(elements[i])}function purgeCollection_IE(elements){var i=elements.length,element,uid;while(i--){element=elements[i];uid=getUniqueElementID(element);delete Element.Storage[uid];delete Event.cache[uid]}}if(HAS_UNIQUE_ID_PROPERTY){purgeCollection=purgeCollection_IE}function purge(element){if(!(element=$(element)))return;purgeElement(element);var descendants=element.getElementsByTagName("*"),i=descendants.length;while(i--)purgeElement(descendants[i]);return null}Object.extend(methods,{remove:remove,update:update,replace:replace,insert:insert,wrap:wrap,cleanWhitespace:cleanWhitespace,empty:empty,clone:clone,purge:purge});function recursivelyCollect(element,property,maximumLength){element=$(element);maximumLength=maximumLength||-1;var elements=[];while(element=element[property]){if(element.nodeType===Node.ELEMENT_NODE)elements.push(Element.extend(element));if(elements.length===maximumLength)break}return elements}function ancestors(element){return recursivelyCollect(element,"parentNode")}function descendants(element){return Element.select(element,"*")}function firstDescendant(element){element=$(element).firstChild;while(element&&element.nodeType!==Node.ELEMENT_NODE)element=element.nextSibling;return $(element)}function immediateDescendants(element){var results=[],child=$(element).firstChild;while(child){if(child.nodeType===Node.ELEMENT_NODE)results.push(Element.extend(child));child=child.nextSibling}return results}function previousSiblings(element){return recursivelyCollect(element,"previousSibling")}function nextSiblings(element){return recursivelyCollect(element,"nextSibling")}function siblings(element){element=$(element);var previous=previousSiblings(element),next=nextSiblings(element);return previous.reverse().concat(next)}function match(element,selector){element=$(element);if(Object.isString(selector))return Prototype.Selector.match(element,selector);return selector.match(element)}function _recursivelyFind(element,property,expression,index){element=$(element),expression=expression||0,index=index||0;if(Object.isNumber(expression)){index=expression,expression=null}while(element=element[property]){if(element.nodeType!==1)continue;if(expression&&!Prototype.Selector.match(element,expression))continue;if(--index>=0)continue;return Element.extend(element)}}function up(element,expression,index){element=$(element);if(arguments.length===1)return $(element.parentNode);return _recursivelyFind(element,"parentNode",expression,index)}function down(element,expression,index){if(arguments.length===1)return firstDescendant(element);element=$(element),expression=expression||0,index=index||0;if(Object.isNumber(expression))index=expression,expression="*";var node=Prototype.Selector.select(expression,element)[index];return Element.extend(node)}function previous(element,expression,index){return _recursivelyFind(element,"previousSibling",expression,index)}function next(element,expression,index){return _recursivelyFind(element,"nextSibling",expression,index)}function select(element){element=$(element);var expressions=SLICE.call(arguments,1).join(", ");return Prototype.Selector.select(expressions,element)}function adjacent(element){element=$(element);var expressions=SLICE.call(arguments,1).join(", ");var siblings=Element.siblings(element),results=[];for(var i=0,sibling;sibling=siblings[i];i++){if(Prototype.Selector.match(sibling,expressions))results.push(sibling)}return results}function descendantOf_DOM(element,ancestor){element=$(element),ancestor=$(ancestor);if(!element||!ancestor)return false;while(element=element.parentNode)if(element===ancestor)return true;return false}function descendantOf_contains(element,ancestor){element=$(element),ancestor=$(ancestor);if(!element||!ancestor)return false;if(!ancestor.contains)return descendantOf_DOM(element,ancestor);return ancestor.contains(element)&&ancestor!==element}function descendantOf_compareDocumentPosition(element,ancestor){element=$(element),ancestor=$(ancestor);if(!element||!ancestor)return false;return(element.compareDocumentPosition(ancestor)&8)===8}var descendantOf;if(DIV.compareDocumentPosition){descendantOf=descendantOf_compareDocumentPosition}else if(DIV.contains){descendantOf=descendantOf_contains}else{descendantOf=descendantOf_DOM}Object.extend(methods,{recursivelyCollect:recursivelyCollect,ancestors:ancestors,descendants:descendants,firstDescendant:firstDescendant,immediateDescendants:immediateDescendants,previousSiblings:previousSiblings,nextSiblings:nextSiblings,siblings:siblings,match:match,up:up,down:down,previous:previous,next:next,select:select,adjacent:adjacent,descendantOf:descendantOf,getElementsBySelector:select,childElements:immediateDescendants});var idCounter=1;function identify(element){element=$(element);var id=Element.readAttribute(element,"id");if(id)return id;do{id="anonymous_element_"+idCounter++}while($(id));Element.writeAttribute(element,"id",id);return id}function readAttribute(element,name){return $(element).getAttribute(name)}function readAttribute_IE(element,name){element=$(element);var table=ATTRIBUTE_TRANSLATIONS.read;if(table.values[name])return table.values[name](element,name);if(table.names[name])name=table.names[name];if(name.include(":")){if(!element.attributes||!element.attributes[name])return null;return element.attributes[name].value}return element.getAttribute(name)}function readAttribute_Opera(element,name){if(name==="title")return element.title;return element.getAttribute(name)}var PROBLEMATIC_ATTRIBUTE_READING=function(){DIV.setAttribute("onclick",[]);var value=DIV.getAttribute("onclick");var isFunction=Object.isArray(value);DIV.removeAttribute("onclick");return isFunction}();if(PROBLEMATIC_ATTRIBUTE_READING){readAttribute=readAttribute_IE}else if(Prototype.Browser.Opera){readAttribute=readAttribute_Opera}function writeAttribute(element,name,value){element=$(element);var attributes={},table=ATTRIBUTE_TRANSLATIONS.write;if(typeof name==="object"){attributes=name}else{attributes[name]=Object.isUndefined(value)?true:value}for(var attr in attributes){name=table.names[attr]||attr;value=attributes[attr];if(table.values[attr]){value=table.values[attr](element,value);if(Object.isUndefined(value))continue}if(value===false||value===null)element.removeAttribute(name);else if(value===true)element.setAttribute(name,name);else element.setAttribute(name,value)}return element}var PROBLEMATIC_HAS_ATTRIBUTE_WITH_CHECKBOXES=function(){if(!HAS_EXTENDED_CREATE_ELEMENT_SYNTAX){return false}var checkbox=document.createElement('<input type="checkbox">');checkbox.checked=true;var node=checkbox.getAttributeNode("checked");return!node||!node.specified}();function hasAttribute(element,attribute){attribute=ATTRIBUTE_TRANSLATIONS.has[attribute]||attribute;var node=$(element).getAttributeNode(attribute);return!!(node&&node.specified)}function hasAttribute_IE(element,attribute){if(attribute==="checked"){return element.checked}return hasAttribute(element,attribute)}GLOBAL.Element.Methods.Simulated.hasAttribute=PROBLEMATIC_HAS_ATTRIBUTE_WITH_CHECKBOXES?hasAttribute_IE:hasAttribute;function classNames(element){return new Element.ClassNames(element)}var regExpCache={};function getRegExpForClassName(className){if(regExpCache[className])return regExpCache[className];var re=new RegExp("(^|\\s+)"+className+"(\\s+|$)");regExpCache[className]=re;return re}function hasClassName(element,className){if(!(element=$(element)))return;var elementClassName=element.className;if(elementClassName.length===0)return false;if(elementClassName===className)return true;return getRegExpForClassName(className).test(elementClassName)}function addClassName(element,className){if(!(element=$(element)))return;if(!hasClassName(element,className))element.className+=(element.className?" ":"")+className;return element}function removeClassName(element,className){if(!(element=$(element)))return;element.className=element.className.replace(getRegExpForClassName(className)," ").strip();return element}function toggleClassName(element,className,bool){if(!(element=$(element)))return;if(Object.isUndefined(bool))bool=!hasClassName(element,className);var method=Element[bool?"addClassName":"removeClassName"];return method(element,className)}var ATTRIBUTE_TRANSLATIONS={};var classProp="className",forProp="for";DIV.setAttribute(classProp,"x");if(DIV.className!=="x"){DIV.setAttribute("class","x");if(DIV.className==="x")classProp="class"}var LABEL=document.createElement("label");LABEL.setAttribute(forProp,"x");if(LABEL.htmlFor!=="x"){LABEL.setAttribute("htmlFor","x");if(LABEL.htmlFor==="x")forProp="htmlFor"}LABEL=null;function _getAttr(element,attribute){return element.getAttribute(attribute)}function _getAttr2(element,attribute){return element.getAttribute(attribute,2)}function _getAttrNode(element,attribute){var node=element.getAttributeNode(attribute);return node?node.value:""}function _getFlag(element,attribute){return $(element).hasAttribute(attribute)?attribute:null}DIV.onclick=Prototype.emptyFunction;var onclickValue=DIV.getAttribute("onclick");var _getEv;if(String(onclickValue).indexOf("{")>-1){_getEv=function(element,attribute){var value=element.getAttribute(attribute);if(!value)return null;value=value.toString();value=value.split("{")[1];value=value.split("}")[0];return value.strip()}}else if(onclickValue===""){_getEv=function(element,attribute){var value=element.getAttribute(attribute);if(!value)return null;return value.strip()}}ATTRIBUTE_TRANSLATIONS.read={names:{class:classProp,className:classProp,for:forProp,htmlFor:forProp},values:{style:function(element){return element.style.cssText.toLowerCase()},title:function(element){return element.title}}};ATTRIBUTE_TRANSLATIONS.write={names:{className:"class",htmlFor:"for",cellpadding:"cellPadding",cellspacing:"cellSpacing"},values:{checked:function(element,value){value=!!value;element.checked=value;return value?"checked":null},style:function(element,value){element.style.cssText=value?value:""}}};ATTRIBUTE_TRANSLATIONS.has={names:{}};Object.extend(ATTRIBUTE_TRANSLATIONS.write.names,ATTRIBUTE_TRANSLATIONS.read.names);var CAMEL_CASED_ATTRIBUTE_NAMES=$w("colSpan rowSpan vAlign dateTime "+"accessKey tabIndex encType maxLength readOnly longDesc frameBorder");for(var i=0,attr;attr=CAMEL_CASED_ATTRIBUTE_NAMES[i];i++){ATTRIBUTE_TRANSLATIONS.write.names[attr.toLowerCase()]=attr;ATTRIBUTE_TRANSLATIONS.has.names[attr.toLowerCase()]=attr}Object.extend(ATTRIBUTE_TRANSLATIONS.read.values,{href:_getAttr2,src:_getAttr2,type:_getAttr,action:_getAttrNode,disabled:_getFlag,checked:_getFlag,readonly:_getFlag,multiple:_getFlag,onload:_getEv,onunload:_getEv,onclick:_getEv,ondblclick:_getEv,onmousedown:_getEv,onmouseup:_getEv,onmouseover:_getEv,onmousemove:_getEv,onmouseout:_getEv,onfocus:_getEv,onblur:_getEv,onkeypress:_getEv,onkeydown:_getEv,onkeyup:_getEv,onsubmit:_getEv,onreset:_getEv,onselect:_getEv,onchange:_getEv});Object.extend(methods,{identify:identify,readAttribute:readAttribute,writeAttribute:writeAttribute,classNames:classNames,hasClassName:hasClassName,addClassName:addClassName,removeClassName:removeClassName,toggleClassName:toggleClassName});function normalizeStyleName(style){if(style==="float"||style==="styleFloat")return"cssFloat";return style.camelize()}function normalizeStyleName_IE(style){if(style==="float"||style==="cssFloat")return"styleFloat";return style.camelize()}function setStyle(element,styles){element=$(element);var elementStyle=element.style,match;if(Object.isString(styles)){elementStyle.cssText+=";"+styles;if(styles.include("opacity")){var opacity=styles.match(/opacity:\s*(\d?\.?\d*)/)[1];Element.setOpacity(element,opacity)}return element}for(var property in styles){if(property==="opacity"){Element.setOpacity(element,styles[property])}else{var value=styles[property];if(property==="float"||property==="cssFloat"){property=Object.isUndefined(elementStyle.styleFloat)?"cssFloat":"styleFloat"}elementStyle[property]=value}}return element}function getStyle(element,style){element=$(element);style=normalizeStyleName(style);var value=element.style[style];if(!value||value==="auto"){var css=document.defaultView.getComputedStyle(element,null);value=css?css[style]:null}if(style==="opacity")return value?parseFloat(value):1;return value==="auto"?null:value}function getStyle_Opera(element,style){switch(style){case"height":case"width":if(!Element.visible(element))return null;var dim=parseInt(getStyle(element,style),10);if(dim!==element["offset"+style.capitalize()])return dim+"px";return Element.measure(element,style);default:return getStyle(element,style)}}function getStyle_IE(element,style){element=$(element);style=normalizeStyleName_IE(style);var value=element.style[style];if(!value&&element.currentStyle){value=element.currentStyle[style]}if(style==="opacity"){if(!STANDARD_CSS_OPACITY_SUPPORTED)return getOpacity_IE(element);else return value?parseFloat(value):1}if(value==="auto"){if((style==="width"||style==="height")&&Element.visible(element))return Element.measure(element,style)+"px";return null}return value}function stripAlphaFromFilter_IE(filter){return(filter||"").replace(/alpha\([^\)]*\)/gi,"")}function hasLayout_IE(element){if(!element.currentStyle||!element.currentStyle.hasLayout)element.style.zoom=1;return element}var STANDARD_CSS_OPACITY_SUPPORTED=function(){DIV.style.cssText="opacity:.55";return/^0.55/.test(DIV.style.opacity)}();function setOpacity(element,value){element=$(element);if(value==1||value==="")value="";else if(value<1e-5)value=0;element.style.opacity=value;return element}function setOpacity_IE(element,value){if(STANDARD_CSS_OPACITY_SUPPORTED)return setOpacity(element,value);element=hasLayout_IE($(element));var filter=Element.getStyle(element,"filter"),style=element.style;if(value==1||value===""){filter=stripAlphaFromFilter_IE(filter);if(filter)style.filter=filter;else style.removeAttribute("filter");return element}if(value<1e-5)value=0;style.filter=stripAlphaFromFilter_IE(filter)+" alpha(opacity="+value*100+")";return element}function getOpacity(element){return Element.getStyle(element,"opacity")}function getOpacity_IE(element){if(STANDARD_CSS_OPACITY_SUPPORTED)return getOpacity(element);var filter=Element.getStyle(element,"filter");if(filter.length===0)return 1;var match=(filter||"").match(/alpha\(opacity=(.*)\)/i);if(match&&match[1])return parseFloat(match[1])/100;return 1}Object.extend(methods,{setStyle:setStyle,getStyle:getStyle,setOpacity:setOpacity,getOpacity:getOpacity});if("styleFloat"in DIV.style){methods.getStyle=getStyle_IE;methods.setOpacity=setOpacity_IE;methods.getOpacity=getOpacity_IE}var UID=0;GLOBAL.Element.Storage={UID:1};function getUniqueElementID(element){if(element===window)return 0;if(typeof element._prototypeUID==="undefined")element._prototypeUID=Element.Storage.UID++;return element._prototypeUID}function getUniqueElementID_IE(element){if(element===window)return 0;if(element==document)return 1;return element.uniqueID}var HAS_UNIQUE_ID_PROPERTY="uniqueID"in DIV;if(HAS_UNIQUE_ID_PROPERTY)getUniqueElementID=getUniqueElementID_IE;function getStorage(element){if(!(element=$(element)))return;var uid=getUniqueElementID(element);if(!Element.Storage[uid])Element.Storage[uid]=$H();return Element.Storage[uid]}function store(element,key,value){if(!(element=$(element)))return;var storage=getStorage(element);if(arguments.length===2){storage.update(key)}else{storage.set(key,value)}return element}function retrieve(element,key,defaultValue){if(!(element=$(element)))return;var storage=getStorage(element),value=storage.get(key);if(Object.isUndefined(value)){storage.set(key,defaultValue);value=defaultValue}return value}Object.extend(methods,{getStorage:getStorage,store:store,retrieve:retrieve});var Methods={},ByTag=Element.Methods.ByTag,F=Prototype.BrowserFeatures;if(!F.ElementExtensions&&"__proto__"in DIV){GLOBAL.HTMLElement={};GLOBAL.HTMLElement.prototype=DIV["__proto__"];F.ElementExtensions=true}function checkElementPrototypeDeficiency(tagName){if(typeof window.Element==="undefined")return false;if(!HAS_EXTENDED_CREATE_ELEMENT_SYNTAX)return false;var proto=window.Element.prototype;if(proto){var id="_"+(Math.random()+"").slice(2),el=document.createElement(tagName);proto[id]="x";var isBuggy=el[id]!=="x";delete proto[id];el=null;return isBuggy}return false}var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY=checkElementPrototypeDeficiency("object");function extendElementWith(element,methods){for(var property in methods){var value=methods[property];if(Object.isFunction(value)&&!(property in element))element[property]=value.methodize()}}var EXTENDED={};function elementIsExtended(element){var uid=getUniqueElementID(element);return uid in EXTENDED}function extend(element){if(!element||elementIsExtended(element))return element;if(element.nodeType!==Node.ELEMENT_NODE||element==window)return element;var methods=Object.clone(Methods),tagName=element.tagName.toUpperCase();if(ByTag[tagName])Object.extend(methods,ByTag[tagName]);extendElementWith(element,methods);EXTENDED[getUniqueElementID(element)]=true;return element}function extend_IE8(element){if(!element||elementIsExtended(element))return element;var t=element.tagName;if(t&&/^(?:object|applet|embed)$/i.test(t)){extendElementWith(element,Element.Methods);extendElementWith(element,Element.Methods.Simulated);extendElementWith(element,Element.Methods.ByTag[t.toUpperCase()])}return element}if(F.SpecificElementExtensions){extend=HTMLOBJECTELEMENT_PROTOTYPE_BUGGY?extend_IE8:Prototype.K}function addMethodsToTagName(tagName,methods){tagName=tagName.toUpperCase();if(!ByTag[tagName])ByTag[tagName]={};Object.extend(ByTag[tagName],methods)}function mergeMethods(destination,methods,onlyIfAbsent){if(Object.isUndefined(onlyIfAbsent))onlyIfAbsent=false;for(var property in methods){var value=methods[property];if(!Object.isFunction(value))continue;if(!onlyIfAbsent||!(property in destination))destination[property]=value.methodize()}}function findDOMClass(tagName){var klass;var trans={OPTGROUP:"OptGroup",TEXTAREA:"TextArea",P:"Paragraph",FIELDSET:"FieldSet",UL:"UList",OL:"OList",DL:"DList",DIR:"Directory",H1:"Heading",H2:"Heading",H3:"Heading",H4:"Heading",H5:"Heading",H6:"Heading",Q:"Quote",INS:"Mod",DEL:"Mod",A:"Anchor",IMG:"Image",CAPTION:"TableCaption",COL:"TableCol",COLGROUP:"TableCol",THEAD:"TableSection",TFOOT:"TableSection",TBODY:"TableSection",TR:"TableRow",TH:"TableCell",TD:"TableCell",FRAMESET:"FrameSet",IFRAME:"IFrame"};if(trans[tagName])klass="HTML"+trans[tagName]+"Element";if(window[klass])return window[klass];klass="HTML"+tagName+"Element";if(window[klass])return window[klass];klass="HTML"+tagName.capitalize()+"Element";if(window[klass])return window[klass];var element=document.createElement(tagName),proto=element["__proto__"]||element.constructor.prototype;element=null;return proto}function addMethods(methods){if(arguments.length===0)addFormMethods();if(arguments.length===2){var tagName=methods;methods=arguments[1]}if(!tagName){Object.extend(Element.Methods,methods||{})}else{if(Object.isArray(tagName)){for(var i=0,tag;tag=tagName[i];i++)addMethodsToTagName(tag,methods)}else{addMethodsToTagName(tagName,methods)}}var ELEMENT_PROTOTYPE=window.HTMLElement?HTMLElement.prototype:Element.prototype;if(F.ElementExtensions){mergeMethods(ELEMENT_PROTOTYPE,Element.Methods);mergeMethods(ELEMENT_PROTOTYPE,Element.Methods.Simulated,true)}if(F.SpecificElementExtensions){for(var tag in Element.Methods.ByTag){var klass=findDOMClass(tag);if(Object.isUndefined(klass))continue;mergeMethods(klass.prototype,ByTag[tag])}}Object.extend(Element,Element.Methods);Object.extend(Element,Element.Methods.Simulated);delete Element.ByTag;delete Element.Simulated;Element.extend.refresh();ELEMENT_CACHE={}}Object.extend(GLOBAL.Element,{extend:extend,addMethods:addMethods});if(extend===Prototype.K){GLOBAL.Element.extend.refresh=Prototype.emptyFunction}else{GLOBAL.Element.extend.refresh=function(){if(Prototype.BrowserFeatures.ElementExtensions)return;Object.extend(Methods,Element.Methods);Object.extend(Methods,Element.Methods.Simulated);EXTENDED={}}}function addFormMethods(){Object.extend(Form,Form.Methods);Object.extend(Form.Element,Form.Element.Methods);Object.extend(Element.Methods.ByTag,{FORM:Object.clone(Form.Methods),INPUT:Object.clone(Form.Element.Methods),SELECT:Object.clone(Form.Element.Methods),TEXTAREA:Object.clone(Form.Element.Methods),BUTTON:Object.clone(Form.Element.Methods)})}Element.addMethods(methods);function destroyCache_IE(){DIV=null;ELEMENT_CACHE=null}if(window.attachEvent)window.attachEvent("onunload",destroyCache_IE)})(this);(function(){function toDecimal(pctString){var match=pctString.match(/^(\d+)%?$/i);if(!match)return null;return Number(match[1])/100}function getRawStyle(element,style){element=$(element);var value=element.style[style];if(!value||value==="auto"){var css=document.defaultView.getComputedStyle(element,null);value=css?css[style]:null}if(style==="opacity")return value?parseFloat(value):1;return value==="auto"?null:value}function getRawStyle_IE(element,style){var value=element.style[style];if(!value&&element.currentStyle){value=element.currentStyle[style]}return value}function getContentWidth(element,context){var boxWidth=element.offsetWidth;var bl=getPixelValue(element,"borderLeftWidth",context)||0;var br=getPixelValue(element,"borderRightWidth",context)||0;var pl=getPixelValue(element,"paddingLeft",context)||0;var pr=getPixelValue(element,"paddingRight",context)||0;return boxWidth-bl-br-pl-pr}if(!Object.isUndefined(document.documentElement.currentStyle)&&!Prototype.Browser.Opera){getRawStyle=getRawStyle_IE}function getPixelValue(value,property,context){var element=null;if(Object.isElement(value)){element=value;value=getRawStyle(element,property)}if(value===null||Object.isUndefined(value)){return null}if(/^(?:-)?\d+(\.\d+)?(px)?$/i.test(value)){return window.parseFloat(value)}var isPercentage=value.include("%"),isViewport=context===document.viewport;if(/\d/.test(value)&&element&&element.runtimeStyle&&!(isPercentage&&isViewport)){var style=element.style.left,rStyle=element.runtimeStyle.left;element.runtimeStyle.left=element.currentStyle.left;element.style.left=value||0;value=element.style.pixelLeft;element.style.left=style;element.runtimeStyle.left=rStyle;return value}if(element&&isPercentage){context=context||element.parentNode;var decimal=toDecimal(value),whole=null;var isHorizontal=property.include("left")||property.include("right")||property.include("width");var isVertical=property.include("top")||property.include("bottom")||property.include("height");if(context===document.viewport){if(isHorizontal){whole=document.viewport.getWidth()}else if(isVertical){whole=document.viewport.getHeight()}}else{if(isHorizontal){whole=$(context).measure("width")}else if(isVertical){whole=$(context).measure("height")}}return whole===null?0:whole*decimal}return 0}function toCSSPixels(number){if(Object.isString(number)&&number.endsWith("px"))return number;return number+"px"}function isDisplayed(element){while(element&&element.parentNode){var display=element.getStyle("display");if(display==="none"){return false}element=$(element.parentNode)}return true}var hasLayout=Prototype.K;if("currentStyle"in document.documentElement){hasLayout=function(element){if(!element.currentStyle.hasLayout){element.style.zoom=1}return element}}function cssNameFor(key){if(key.include("border"))key=key+"-width";return key.camelize()}Element.Layout=Class.create(Hash,{initialize:function($super,element,preCompute){$super();this.element=$(element);Element.Layout.PROPERTIES.each(function(property){this._set(property,null)},this);if(preCompute){this._preComputing=true;this._begin();Element.Layout.PROPERTIES.each(this._compute,this);this._end();this._preComputing=false}},_set:function(property,value){return Hash.prototype.set.call(this,property,value)},set:function(property,value){throw"Properties of Element.Layout are read-only."},get:function($super,property){var value=$super(property);return value===null?this._compute(property):value},_begin:function(){if(this._isPrepared())return;var element=this.element;if(isDisplayed(element)){this._setPrepared(true);return}var originalStyles={position:element.style.position||"",width:element.style.width||"",visibility:element.style.visibility||"",display:element.style.display||""};element.store("prototype_original_styles",originalStyles);var position=getRawStyle(element,"position"),width=element.offsetWidth;if(width===0||width===null){element.style.display="block";width=element.offsetWidth}var context=position==="fixed"?document.viewport:element.parentNode;var tempStyles={visibility:"hidden",display:"block"};if(position!=="fixed")tempStyles.position="absolute";element.setStyle(tempStyles);var positionedWidth=element.offsetWidth,newWidth;if(width&&positionedWidth===width){newWidth=getContentWidth(element,context)}else if(position==="absolute"||position==="fixed"){newWidth=getContentWidth(element,context)}else{var parent=element.parentNode,pLayout=$(parent).getLayout();newWidth=pLayout.get("width")-this.get("margin-left")-this.get("border-left")-this.get("padding-left")-this.get("padding-right")-this.get("border-right")-this.get("margin-right")}element.setStyle({width:newWidth+"px"});this._setPrepared(true)},_end:function(){var element=this.element;var originalStyles=element.retrieve("prototype_original_styles");element.store("prototype_original_styles",null);element.setStyle(originalStyles);this._setPrepared(false)},_compute:function(property){var COMPUTATIONS=Element.Layout.COMPUTATIONS;if(!(property in COMPUTATIONS)){throw"Property not found."}return this._set(property,COMPUTATIONS[property].call(this,this.element))},_isPrepared:function(){return this.element.retrieve("prototype_element_layout_prepared",false)},_setPrepared:function(bool){return this.element.store("prototype_element_layout_prepared",bool)},toObject:function(){var args=$A(arguments);var keys=args.length===0?Element.Layout.PROPERTIES:args.join(" ").split(" ");var obj={};keys.each(function(key){if(!Element.Layout.PROPERTIES.include(key))return;var value=this.get(key);if(value!=null)obj[key]=value},this);return obj},toHash:function(){var obj=this.toObject.apply(this,arguments);return new Hash(obj)},toCSS:function(){var args=$A(arguments);var keys=args.length===0?Element.Layout.PROPERTIES:args.join(" ").split(" ");var css={};keys.each(function(key){if(!Element.Layout.PROPERTIES.include(key))return;if(Element.Layout.COMPOSITE_PROPERTIES.include(key))return;var value=this.get(key);if(value!=null)css[cssNameFor(key)]=value+"px"},this);return css},inspect:function(){return"#<Element.Layout>"}});Object.extend(Element.Layout,{PROPERTIES:$w("height width top left right bottom border-left border-right border-top border-bottom padding-left padding-right padding-top padding-bottom margin-top margin-bottom margin-left margin-right padding-box-width padding-box-height border-box-width border-box-height margin-box-width margin-box-height"),COMPOSITE_PROPERTIES:$w("padding-box-width padding-box-height margin-box-width margin-box-height border-box-width border-box-height"),COMPUTATIONS:{height:function(element){if(!this._preComputing)this._begin();var bHeight=this.get("border-box-height");if(bHeight<=0){if(!this._preComputing)this._end();return 0}var bTop=this.get("border-top"),bBottom=this.get("border-bottom");var pTop=this.get("padding-top"),pBottom=this.get("padding-bottom");if(!this._preComputing)this._end();return bHeight-bTop-bBottom-pTop-pBottom},width:function(element){if(!this._preComputing)this._begin();var bWidth=this.get("border-box-width");if(bWidth<=0){if(!this._preComputing)this._end();return 0}var bLeft=this.get("border-left"),bRight=this.get("border-right");var pLeft=this.get("padding-left"),pRight=this.get("padding-right");if(!this._preComputing)this._end();return bWidth-bLeft-bRight-pLeft-pRight},"padding-box-height":function(element){var height=this.get("height"),pTop=this.get("padding-top"),pBottom=this.get("padding-bottom");return height+pTop+pBottom},"padding-box-width":function(element){var width=this.get("width"),pLeft=this.get("padding-left"),pRight=this.get("padding-right");return width+pLeft+pRight},"border-box-height":function(element){if(!this._preComputing)this._begin();var height=element.offsetHeight;if(!this._preComputing)this._end();return height},"border-box-width":function(element){if(!this._preComputing)this._begin();var width=element.offsetWidth;if(!this._preComputing)this._end();return width},"margin-box-height":function(element){var bHeight=this.get("border-box-height"),mTop=this.get("margin-top"),mBottom=this.get("margin-bottom");if(bHeight<=0)return 0;return bHeight+mTop+mBottom},"margin-box-width":function(element){var bWidth=this.get("border-box-width"),mLeft=this.get("margin-left"),mRight=this.get("margin-right");if(bWidth<=0)return 0;return bWidth+mLeft+mRight},top:function(element){var offset=element.positionedOffset();return offset.top},bottom:function(element){var offset=element.positionedOffset(),parent=element.getOffsetParent(),pHeight=parent.measure("height");var mHeight=this.get("border-box-height");return pHeight-mHeight-offset.top},left:function(element){var offset=element.positionedOffset();return offset.left},right:function(element){var offset=element.positionedOffset(),parent=element.getOffsetParent(),pWidth=parent.measure("width");var mWidth=this.get("border-box-width");return pWidth-mWidth-offset.left},"padding-top":function(element){return getPixelValue(element,"paddingTop")},"padding-bottom":function(element){return getPixelValue(element,"paddingBottom")},"padding-left":function(element){return getPixelValue(element,"paddingLeft")},"padding-right":function(element){return getPixelValue(element,"paddingRight")},"border-top":function(element){return getPixelValue(element,"borderTopWidth")},"border-bottom":function(element){return getPixelValue(element,"borderBottomWidth")},"border-left":function(element){return getPixelValue(element,"borderLeftWidth")},"border-right":function(element){return getPixelValue(element,"borderRightWidth")},"margin-top":function(element){return getPixelValue(element,"marginTop")},"margin-bottom":function(element){return getPixelValue(element,"marginBottom")},"margin-left":function(element){return getPixelValue(element,"marginLeft")},"margin-right":function(element){return getPixelValue(element,"marginRight")}}});if("getBoundingClientRect"in document.documentElement){Object.extend(Element.Layout.COMPUTATIONS,{right:function(element){var parent=hasLayout(element.getOffsetParent());var rect=element.getBoundingClientRect(),pRect=parent.getBoundingClientRect();return(pRect.right-rect.right).round()},bottom:function(element){var parent=hasLayout(element.getOffsetParent());var rect=element.getBoundingClientRect(),pRect=parent.getBoundingClientRect();return(pRect.bottom-rect.bottom).round()}})}Element.Offset=Class.create({initialize:function(left,top){this.left=left.round();this.top=top.round();this[0]=this.left;this[1]=this.top},relativeTo:function(offset){return new Element.Offset(this.left-offset.left,this.top-offset.top)},inspect:function(){return"#<Element.Offset left: #{left} top: #{top}>".interpolate(this)},toString:function(){return"[#{left}, #{top}]".interpolate(this)},toArray:function(){return[this.left,this.top]}});function getLayout(element,preCompute){return new Element.Layout(element,preCompute)}function measure(element,property){return $(element).getLayout().get(property)}function getHeight(element){return Element.getDimensions(element).height}function getWidth(element){return Element.getDimensions(element).width}function getDimensions(element){element=$(element);var display=Element.getStyle(element,"display");if(display&&display!=="none"){return{width:element.offsetWidth,height:element.offsetHeight}}var style=element.style;var originalStyles={visibility:style.visibility,position:style.position,display:style.display};var newStyles={visibility:"hidden",display:"block"};if(originalStyles.position!=="fixed")newStyles.position="absolute";Element.setStyle(element,newStyles);var dimensions={width:element.offsetWidth,height:element.offsetHeight};Element.setStyle(element,originalStyles);return dimensions}function getOffsetParent(element){element=$(element);function selfOrBody(element){return isHtml(element)?$(document.body):$(element)}if(isDocument(element)||isDetached(element)||isBody(element)||isHtml(element))return $(document.body);var isInline=Element.getStyle(element,"display")==="inline";if(!isInline&&element.offsetParent)return selfOrBody(element.offsetParent);while((element=element.parentNode)&&element!==document.body){if(Element.getStyle(element,"position")!=="static"){return selfOrBody(element)}}return $(document.body)}function cumulativeOffset(element){element=$(element);var valueT=0,valueL=0;if(element.parentNode){do{valueT+=element.offsetTop||0;valueL+=element.offsetLeft||0;element=element.offsetParent}while(element)}return new Element.Offset(valueL,valueT)}function positionedOffset(element){element=$(element);var layout=element.getLayout();var valueT=0,valueL=0;do{valueT+=element.offsetTop||0;valueL+=element.offsetLeft||0;element=element.offsetParent;if(element){if(isBody(element))break;var p=Element.getStyle(element,"position");if(p!=="static")break}}while(element);valueL-=layout.get("margin-left");valueT-=layout.get("margin-top");return new Element.Offset(valueL,valueT)}function cumulativeScrollOffset(element){var valueT=0,valueL=0;do{if(element===document.body){var bodyScrollNode=document.documentElement||document.body.parentNode||document.body;valueT+=!Object.isUndefined(window.pageYOffset)?window.pageYOffset:bodyScrollNode.scrollTop||0;valueL+=!Object.isUndefined(window.pageXOffset)?window.pageXOffset:bodyScrollNode.scrollLeft||0;break}else{valueT+=element.scrollTop||0;valueL+=element.scrollLeft||0;element=element.parentNode}}while(element);return new Element.Offset(valueL,valueT)}function viewportOffset(forElement){var valueT=0,valueL=0,docBody=document.body;forElement=$(forElement);var element=forElement;do{valueT+=element.offsetTop||0;valueL+=element.offsetLeft||0;if(element.offsetParent==docBody&&Element.getStyle(element,"position")=="absolute")break}while(element=element.offsetParent);element=forElement;do{if(element!=docBody){valueT-=element.scrollTop||0;valueL-=element.scrollLeft||0}}while(element=element.parentNode);return new Element.Offset(valueL,valueT)}function absolutize(element){element=$(element);if(Element.getStyle(element,"position")==="absolute"){return element}var offsetParent=getOffsetParent(element);var eOffset=element.viewportOffset(),pOffset=offsetParent.viewportOffset();var offset=eOffset.relativeTo(pOffset);var layout=element.getLayout();element.store("prototype_absolutize_original_styles",{position:element.getStyle("position"),left:element.getStyle("left"),top:element.getStyle("top"),width:element.getStyle("width"),height:element.getStyle("height")});element.setStyle({position:"absolute",top:offset.top+"px",left:offset.left+"px",width:layout.get("width")+"px",height:layout.get("height")+"px"});return element}function relativize(element){element=$(element);if(Element.getStyle(element,"position")==="relative"){return element}var originalStyles=element.retrieve("prototype_absolutize_original_styles");if(originalStyles)element.setStyle(originalStyles);return element}function scrollTo(element){element=$(element);var pos=Element.cumulativeOffset(element);window.scrollTo(pos.left,pos.top);return element}function makePositioned(element){element=$(element);var position=Element.getStyle(element,"position"),styles={};if(position==="static"||!position){styles.position="relative";if(Prototype.Browser.Opera){styles.top=0;styles.left=0}Element.setStyle(element,styles);Element.store(element,"prototype_made_positioned",true)}return element}function undoPositioned(element){element=$(element);var storage=Element.getStorage(element),madePositioned=storage.get("prototype_made_positioned");if(madePositioned){storage.unset("prototype_made_positioned");Element.setStyle(element,{position:"",top:"",bottom:"",left:"",right:""})}return element}function makeClipping(element){element=$(element);var storage=Element.getStorage(element),madeClipping=storage.get("prototype_made_clipping");if(Object.isUndefined(madeClipping)){var overflow=Element.getStyle(element,"overflow");storage.set("prototype_made_clipping",overflow);if(overflow!=="hidden")element.style.overflow="hidden"}return element}function undoClipping(element){element=$(element);var storage=Element.getStorage(element),overflow=storage.get("prototype_made_clipping");if(!Object.isUndefined(overflow)){storage.unset("prototype_made_clipping");element.style.overflow=overflow||""}return element}function clonePosition(element,source,options){options=Object.extend({setLeft:true,setTop:true,setWidth:true,setHeight:true,offsetTop:0,offsetLeft:0},options||{});var docEl=document.documentElement;source=$(source);element=$(element);var p,delta,layout,styles={};if(options.setLeft||options.setTop){p=Element.viewportOffset(source);delta=[0,0];if(Element.getStyle(element,"position")==="absolute"){var parent=Element.getOffsetParent(element);if(parent!==document.body)delta=Element.viewportOffset(parent)}}function pageScrollXY(){var x=0,y=0;if(Object.isNumber(window.pageXOffset)){x=window.pageXOffset;y=window.pageYOffset}else if(document.body&&(document.body.scrollLeft||document.body.scrollTop)){x=document.body.scrollLeft;y=document.body.scrollTop}else if(docEl&&(docEl.scrollLeft||docEl.scrollTop)){x=docEl.scrollLeft;y=docEl.scrollTop}return{x:x,y:y}}var pageXY=pageScrollXY();if(options.setWidth||options.setHeight){layout=Element.getLayout(source)}if(options.setLeft)styles.left=p[0]+pageXY.x-delta[0]+options.offsetLeft+"px";if(options.setTop)styles.top=p[1]+pageXY.y-delta[1]+options.offsetTop+"px";var currentLayout=element.getLayout();if(options.setWidth){styles.width=layout.get("width")+"px"}if(options.setHeight){styles.height=layout.get("height")+"px"}return Element.setStyle(element,styles)}if(Prototype.Browser.IE){getOffsetParent=getOffsetParent.wrap(function(proceed,element){element=$(element);if(isDocument(element)||isDetached(element)||isBody(element)||isHtml(element))return $(document.body);var position=element.getStyle("position");if(position!=="static")return proceed(element);element.setStyle({position:"relative"});var value=proceed(element);element.setStyle({position:position});return value});positionedOffset=positionedOffset.wrap(function(proceed,element){element=$(element);if(!element.parentNode)return new Element.Offset(0,0);var position=element.getStyle("position");if(position!=="static")return proceed(element);var offsetParent=element.getOffsetParent();if(offsetParent&&offsetParent.getStyle("position")==="fixed")hasLayout(offsetParent);element.setStyle({position:"relative"});var value=proceed(element);element.setStyle({position:position});return value})}else if(Prototype.Browser.Webkit){cumulativeOffset=function(element){element=$(element);var valueT=0,valueL=0;do{valueT+=element.offsetTop||0;valueL+=element.offsetLeft||0;if(element.offsetParent==document.body){if(Element.getStyle(element,"position")=="absolute")break}element=element.offsetParent}while(element);return new Element.Offset(valueL,valueT)}}Element.addMethods({getLayout:getLayout,measure:measure,getWidth:getWidth,getHeight:getHeight,getDimensions:getDimensions,getOffsetParent:getOffsetParent,cumulativeOffset:cumulativeOffset,positionedOffset:positionedOffset,cumulativeScrollOffset:cumulativeScrollOffset,viewportOffset:viewportOffset,absolutize:absolutize,relativize:relativize,scrollTo:scrollTo,makePositioned:makePositioned,undoPositioned:undoPositioned,makeClipping:makeClipping,undoClipping:undoClipping,clonePosition:clonePosition});function isBody(element){return element.nodeName.toUpperCase()==="BODY"}function isHtml(element){return element.nodeName.toUpperCase()==="HTML"}function isDocument(element){return element.nodeType===Node.DOCUMENT_NODE}function isDetached(element){return element!==document.body&&!Element.descendantOf(element,document.body)}if("getBoundingClientRect"in document.documentElement){Element.addMethods({viewportOffset:function(element){element=$(element);if(isDetached(element))return new Element.Offset(0,0);var rect=element.getBoundingClientRect(),docEl=document.documentElement;return new Element.Offset(rect.left-docEl.clientLeft,rect.top-docEl.clientTop)}})}})();(function(){var IS_OLD_OPERA=Prototype.Browser.Opera&&window.parseFloat(window.opera.version())<9.5;var ROOT=null;function getRootElement(){if(ROOT)return ROOT;ROOT=IS_OLD_OPERA?document.body:document.documentElement;return ROOT}function getDimensions(){return{width:this.getWidth(),height:this.getHeight()}}function getWidth(){return getRootElement().clientWidth}function getHeight(){return getRootElement().clientHeight}function getScrollOffsets(){var x=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft;var y=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop;return new Element.Offset(x,y)}document.viewport={getDimensions:getDimensions,getWidth:getWidth,getHeight:getHeight,getScrollOffsets:getScrollOffsets}})();window.$$=function(){var expression=$A(arguments).join(", ");return Prototype.Selector.select(expression,document)};Prototype.Selector=function(){function select(){throw new Error('Method "Prototype.Selector.select" must be defined.')}function match(){throw new Error('Method "Prototype.Selector.match" must be defined.')}function find(elements,expression,index){index=index||0;var match=Prototype.Selector.match,length=elements.length,matchIndex=0,i;for(i=0;i<length;i++){if(match(elements[i],expression)&&index==matchIndex++){return Element.extend(elements[i])}}}function extendElements(elements){for(var i=0,length=elements.length;i<length;i++){Element.extend(elements[i])}return elements}var K=Prototype.K;return{select:select,match:match,find:find,extendElements:Element.extend===K?K:extendElements,extendElement:Element.extend}}();Prototype._original_property=window.Sizzle;(function(){function fakeDefine(fn){Prototype._actual_sizzle=fn()}fakeDefine.amd=true;if(typeof define!=="undefined"&&define.amd){Prototype._original_define=define;Prototype._actual_sizzle=null;window.define=fakeDefine}})();(function(window){var i,support,Expr,getText,isXML,compile,select,outermostContext,sortInput,hasDuplicate,setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,expando="sizzle"+-new Date,preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),sortOrder=function(a,b){if(a===b){hasDuplicate=true}return 0},strundefined=typeof undefined,MAX_NEGATIVE=1<<31,hasOwn={}.hasOwnProperty,arr=[],pop=arr.pop,push_native=arr.push,push=arr.push,slice=arr.slice,indexOf=arr.indexOf||function(elem){var i=0,len=this.length;for(;i<len;i++){if(this[i]===elem){return i}}return-1},booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",whitespace="[\\x20\\t\\r\\n\\f]",characterEncoding="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",identifier=characterEncoding.replace("w","w#"),attributes="\\["+whitespace+"*("+characterEncoding+")"+whitespace+"*(?:([*^$|!~]?=)"+whitespace+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+identifier+")|)|)"+whitespace+"*\\]",pseudos=":("+characterEncoding+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+attributes.replace(3,8)+")*)|.*)\\)|)",rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g"),rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),rattributeQuotes=new RegExp("="+whitespace+"*([^\\]'\"]*?)"+whitespace+"*\\]","g"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp("^"+identifier+"$"),matchExpr={ID:new RegExp("^#("+characterEncoding+")"),CLASS:new RegExp("^\\.("+characterEncoding+")"),TAG:new RegExp("^("+characterEncoding.replace("w","w*")+")"),ATTR:new RegExp("^"+attributes),PSEUDO:new RegExp("^"+pseudos),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+whitespace+"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+whitespace+"*(\\d+)|))"+whitespace+"*\\)|)","i"),bool:new RegExp("^(?:"+booleans+")$","i"),needsContext:new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")},rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native \w/,rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,rescape=/'|\\/g,runescape=new RegExp("\\\\([\\da-f]{1,6}"+whitespace+"?|("+whitespace+")|.)","ig"),funescape=function(_,escaped,escapedWhitespace){var high="0x"+escaped-65536;return high!==high||escapedWhitespace?escaped:high<0?String.fromCharCode(high+65536):String.fromCharCode(high>>10|55296,high&1023|56320)};try{push.apply(arr=slice.call(preferredDoc.childNodes),preferredDoc.childNodes);arr[preferredDoc.childNodes.length].nodeType}catch(e){push={apply:arr.length?function(target,els){push_native.apply(target,slice.call(els))}:function(target,els){var j=target.length,i=0;while(target[j++]=els[i++]){}target.length=j-1}}}function Sizzle(selector,context,results,seed){var match,elem,m,nodeType,i,groups,old,nid,newContext,newSelector;if((context?context.ownerDocument||context:preferredDoc)!==document){setDocument(context)}context=context||document;results=results||[];if(!selector||typeof selector!=="string"){return results}if((nodeType=context.nodeType)!==1&&nodeType!==9){return[]}if(documentIsHTML&&!seed){if(match=rquickExpr.exec(selector)){if(m=match[1]){if(nodeType===9){elem=context.getElementById(m);if(elem&&elem.parentNode){if(elem.id===m){results.push(elem);return results}}else{return results}}else{if(context.ownerDocument&&(elem=context.ownerDocument.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results}}}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results}}if(support.qsa&&(!rbuggyQSA||!rbuggyQSA.test(selector))){nid=old=expando;newContext=context;newSelector=nodeType===9&&selector;if(nodeType===1&&context.nodeName.toLowerCase()!=="object"){groups=tokenize(selector);if(old=context.getAttribute("id")){nid=old.replace(rescape,"\\$&")}else{context.setAttribute("id",nid)}nid="[id='"+nid+"'] ";i=groups.length;while(i--){groups[i]=nid+toSelector(groups[i])}newContext=rsibling.test(selector)&&testContext(context.parentNode)||context;newSelector=groups.join(",")}if(newSelector){try{push.apply(results,newContext.querySelectorAll(newSelector));return results}catch(qsaError){}finally{if(!old){context.removeAttribute("id")}}}}}return select(selector.replace(rtrim,"$1"),context,results,seed)}function createCache(){var keys=[];function cache(key,value){if(keys.push(key+" ")>Expr.cacheLength){delete cache[keys.shift()]}return cache[key+" "]=value}return cache}function markFunction(fn){fn[expando]=true;return fn}function assert(fn){var div=document.createElement("div");try{return!!fn(div)}catch(e){return false}finally{if(div.parentNode){div.parentNode.removeChild(div)}div=null}}function addHandle(attrs,handler){var arr=attrs.split("|"),i=attrs.length;while(i--){Expr.attrHandle[arr[i]]=handler}}function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&(~b.sourceIndex||MAX_NEGATIVE)-(~a.sourceIndex||MAX_NEGATIVE);if(diff){return diff}if(cur){while(cur=cur.nextSibling){if(cur===b){return-1}}}return a?1:-1}function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type===type}}function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name==="input"||name==="button")&&elem.type===type}}function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;while(i--){if(seed[j=matchIndexes[i]]){seed[j]=!(matches[j]=seed[j])}}})})}function testContext(context){return context&&typeof context.getElementsByTagName!==strundefined&&context}support=Sizzle.support={};isXML=Sizzle.isXML=function(elem){var documentElement=elem&&(elem.ownerDocument||elem).documentElement;return documentElement?documentElement.nodeName!=="HTML":false};setDocument=Sizzle.setDocument=function(node){var hasCompare,doc=node?node.ownerDocument||node:preferredDoc,parent=doc.defaultView;if(doc===document||doc.nodeType!==9||!doc.documentElement){return document}document=doc;docElem=doc.documentElement;documentIsHTML=!isXML(doc);if(parent&&parent!==parent.top){if(parent.addEventListener){parent.addEventListener("unload",function(){setDocument()},false)}else if(parent.attachEvent){parent.attachEvent("onunload",function(){setDocument()})}}support.attributes=assert(function(div){div.className="i";return!div.getAttribute("className")});support.getElementsByTagName=assert(function(div){div.appendChild(doc.createComment(""));return!div.getElementsByTagName("*").length});support.getElementsByClassName=rnative.test(doc.getElementsByClassName)&&assert(function(div){div.innerHTML="<div class='a'></div><div class='a i'></div>";div.firstChild.className="i";return div.getElementsByClassName("i").length===2});support.getById=assert(function(div){docElem.appendChild(div).id=expando;return!doc.getElementsByName||!doc.getElementsByName(expando).length});if(support.getById){Expr.find["ID"]=function(id,context){if(typeof context.getElementById!==strundefined&&documentIsHTML){var m=context.getElementById(id);return m&&m.parentNode?[m]:[]}};Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute("id")===attrId}}}else{delete Expr.find["ID"];Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!==strundefined&&elem.getAttributeNode("id");return node&&node.value===attrId}}}Expr.find["TAG"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!==strundefined){return context.getElementsByTagName(tag)}}:function(tag,context){var elem,tmp=[],i=0,results=context.getElementsByTagName(tag);if(tag==="*"){while(elem=results[i++]){if(elem.nodeType===1){tmp.push(elem)}}return tmp}return results};Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!==strundefined&&documentIsHTML){return context.getElementsByClassName(className)}};rbuggyMatches=[];rbuggyQSA=[];if(support.qsa=rnative.test(doc.querySelectorAll)){assert(function(div){div.innerHTML="<select t=''><option selected=''></option></select>";if(div.querySelectorAll("[t^='']").length){rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")")}if(!div.querySelectorAll("[selected]").length){rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")")}if(!div.querySelectorAll(":checked").length){rbuggyQSA.push(":checked")}});assert(function(div){var input=doc.createElement("input");input.setAttribute("type","hidden");div.appendChild(input).setAttribute("name","D");if(div.querySelectorAll("[name=d]").length){rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?=")}if(!div.querySelectorAll(":enabled").length){rbuggyQSA.push(":enabled",":disabled")}div.querySelectorAll("*,:x");rbuggyQSA.push(",.*:")})}if(support.matchesSelector=rnative.test(matches=docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)){assert(function(div){support.disconnectedMatch=matches.call(div,"div");matches.call(div,"[s!='']:x");rbuggyMatches.push("!=",pseudos)})}rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));hasCompare=rnative.test(docElem.compareDocumentPosition);contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9?a.documentElement:a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16))}:function(a,b){if(b){while(b=b.parentNode){if(b===a){return true}}}return false};sortOrder=hasCompare?function(a,b){if(a===b){hasDuplicate=true;return 0}var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare}compare=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1;if(compare&1||!support.sortDetached&&b.compareDocumentPosition(a)===compare){if(a===doc||a.ownerDocument===preferredDoc&&contains(preferredDoc,a)){return-1}if(b===doc||b.ownerDocument===preferredDoc&&contains(preferredDoc,b)){return 1}return sortInput?indexOf.call(sortInput,a)-indexOf.call(sortInput,b):0}return compare&4?-1:1}:function(a,b){if(a===b){hasDuplicate=true;return 0}var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];if(!aup||!bup){return a===doc?-1:b===doc?1:aup?-1:bup?1:sortInput?indexOf.call(sortInput,a)-indexOf.call(sortInput,b):0}else if(aup===bup){return siblingCheck(a,b)}cur=a;while(cur=cur.parentNode){ap.unshift(cur)}cur=b;while(cur=cur.parentNode){bp.unshift(cur)}while(ap[i]===bp[i]){i++}return i?siblingCheck(ap[i],bp[i]):ap[i]===preferredDoc?-1:bp[i]===preferredDoc?1:0};return doc};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements)};Sizzle.matchesSelector=function(elem,expr){if((elem.ownerDocument||elem)!==document){setDocument(elem)}expr=expr.replace(rattributeQuotes,"='$1']");if(support.matchesSelector&&documentIsHTML&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);if(ret||support.disconnectedMatch||elem.document&&elem.document.nodeType!==11){return ret}}catch(e){}}return Sizzle(expr,document,null,[elem]).length>0};Sizzle.contains=function(context,elem){if((context.ownerDocument||context)!==document){setDocument(context)}return contains(context,elem)};Sizzle.attr=function(elem,name){if((elem.ownerDocument||elem)!==document){setDocument(elem)}var fn=Expr.attrHandle[name.toLowerCase()],val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null};Sizzle.error=function(msg){throw new Error("Syntax error, unrecognized expression: "+msg)};Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;hasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while(elem=results[i++]){if(elem===results[i]){j=duplicates.push(i)}}while(j--){results.splice(duplicates[j],1)}}sortInput=null;return results};getText=Sizzle.getText=function(elem){var node,ret="",i=0,nodeType=elem.nodeType;if(!nodeType){while(node=elem[i++]){ret+=getText(node)}}else if(nodeType===1||nodeType===9||nodeType===11){if(typeof elem.textContent==="string"){return elem.textContent}else{for(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem)}}}else if(nodeType===3||nodeType===4){return elem.nodeValue}return ret};Expr=Sizzle.selectors={cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(match){match[1]=match[1].replace(runescape,funescape);match[3]=(match[4]||match[5]||"").replace(runescape,funescape);if(match[2]==="~="){match[3]=" "+match[3]+" "}return match.slice(0,4)},CHILD:function(match){match[1]=match[1].toLowerCase();if(match[1].slice(0,3)==="nth"){if(!match[3]){Sizzle.error(match[0])}match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));match[5]=+(match[7]+match[8]||match[3]==="odd")}else if(match[3]){Sizzle.error(match[0])}return match},PSEUDO:function(match){var excess,unquoted=!match[5]&&match[2];if(matchExpr["CHILD"].test(match[0])){return null}if(match[3]&&match[4]!==undefined){match[2]=match[4]}else if(unquoted&&rpseudo.test(unquoted)&&(excess=tokenize(unquoted,true))&&(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){match[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess)}return match.slice(0,3)}},filter:{TAG:function(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector==="*"?function(){return true}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName}},CLASS:function(className){var pattern=classCache[className+" "];return pattern||(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&classCache(className,function(elem){return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!==strundefined&&elem.getAttribute("class")||"")})},ATTR:function(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator==="!="}if(!operator){return true}result+="";return operator==="="?result===check:operator==="!="?result!==check:operator==="^="?check&&result.indexOf(check)===0:operator==="*="?check&&result.indexOf(check)>-1:operator==="$="?check&&result.slice(-check.length)===check:operator==="~="?(" "+result+" ").indexOf(check)>-1:operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":false}},CHILD:function(type,what,argument,first,last){var simple=type.slice(0,3)!=="nth",forward=type.slice(-4)!=="last",ofType=what==="of-type";return first===1&&last===0?function(elem){return!!elem.parentNode}:function(elem,context,xml){var cache,outerCache,node,diff,nodeIndex,start,dir=simple!==forward?"nextSibling":"previousSibling",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType;if(parent){if(simple){while(dir){node=elem;while(node=node[dir]){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false}}start=dir=type==="only"&&!start&&"nextSibling"}return true}start=[forward?parent.firstChild:parent.lastChild];if(forward&&useCache){outerCache=parent[expando]||(parent[expando]={});cache=outerCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=cache[0]===dirruns&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if(node.nodeType===1&&++diff&&node===elem){outerCache[type]=[dirruns,nodeIndex,diff];break}}}else if(useCache&&(cache=(elem[expando]||(elem[expando]={}))[type])&&cache[0]===dirruns){diff=cache[1]}else{while(node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop()){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){if(useCache){(node[expando]||(node[expando]={}))[type]=[dirruns,diff]}if(node===elem){break}}}}diff-=last;return diff===first||diff%first===0&&diff/first>=0}}},PSEUDO:function(pseudo,argument){var args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error("unsupported pseudo: "+pseudo);if(fn[expando]){return fn(argument)}if(fn.length>1){args=[pseudo,pseudo,"",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf.call(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i])}}):function(elem){return fn(elem,0,args)}}return fn}},pseudos:{not:markFunction(function(selector){var input=[],results=[],matcher=compile(selector.replace(rtrim,"$1"));return matcher[expando]?markFunction(function(seed,matches,context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;while(i--){if(elem=unmatched[i]){seed[i]=!(matches[i]=elem)}}}):function(elem,context,xml){input[0]=elem;matcher(input,null,xml,results);return!results.pop()}}),has:markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0}}),contains:markFunction(function(text){return function(elem){return(elem.textContent||elem.innerText||getText(elem)).indexOf(text)>-1}}),lang:markFunction(function(lang){if(!ridentifier.test(lang||"")){Sizzle.error("unsupported lang: "+lang)}lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if(elemLang=documentIsHTML?elem.lang:elem.getAttribute("xml:lang")||elem.getAttribute("lang")){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+"-")===0}}while((elem=elem.parentNode)&&elem.nodeType===1);return false}}),target:function(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id},root:function(elem){return elem===docElem},focus:function(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex)},enabled:function(elem){return elem.disabled===false},disabled:function(elem){return elem.disabled===true},checked:function(elem){var nodeName=elem.nodeName.toLowerCase();return nodeName==="input"&&!!elem.checked||nodeName==="option"&&!!elem.selected},selected:function(elem){if(elem.parentNode){elem.parentNode.selectedIndex}return elem.selected===true},empty:function(elem){for(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false}}return true},parent:function(elem){return!Expr.pseudos["empty"](elem)},header:function(elem){return rheader.test(elem.nodeName)},input:function(elem){return rinputs.test(elem.nodeName)},button:function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type==="button"||name==="button"},text:function(elem){var attr;return elem.nodeName.toLowerCase()==="input"&&elem.type==="text"&&((attr=elem.getAttribute("type"))==null||attr.toLowerCase()==="text")},first:createPositionalPseudo(function(){return[0]}),last:createPositionalPseudo(function(matchIndexes,length){return[length-1]}),eq:createPositionalPseudo(function(matchIndexes,length,argument){return[argument<0?argument+length:argument]}),even:createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i)}return matchIndexes}),odd:createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i)}return matchIndexes}),lt:createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;--i>=0;){matchIndexes.push(i)}return matchIndexes}),gt:createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i)}return matchIndexes})}};Expr.pseudos["nth"]=Expr.pseudos["eq"];for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i)}for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i)}function setFilters(){}setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters;function tokenize(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+" "];if(cached){return parseOnly?0:cached.slice(0)}soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){if(!matched||(match=rcomma.exec(soFar))){if(match){soFar=soFar.slice(match[0].length)||soFar}groups.push(tokens=[])}matched=false;if(match=rcombinators.exec(soFar)){matched=match.shift();tokens.push({value:matched,type:match[0].replace(rtrim," ")});soFar=soFar.slice(matched.length)}for(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length)}}if(!matched){break}}return parseOnly?soFar.length:soFar?Sizzle.error(selector):tokenCache(selector,groups).slice(0)}function toSelector(tokens){var i=0,len=tokens.length,selector="";for(;i<len;i++){selector+=tokens[i].value}return selector}function addCombinator(matcher,combinator,base){var dir=combinator.dir,checkNonElements=base&&dir==="parentNode",doneName=done++;return combinator.first?function(elem,context,xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml)}}}:function(elem,context,xml){var oldCache,outerCache,newCache=[dirruns,doneName];if(xml){while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true}}}}else{while(elem=elem[dir]){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});if((oldCache=outerCache[dir])&&oldCache[0]===dirruns&&oldCache[1]===doneName){return newCache[2]=oldCache[2]}else{outerCache[dir]=newCache;if(newCache[2]=matcher(elem,context,xml)){return true}}}}}}}function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false}}return true}:matchers[0]}function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results)}return results}function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if(elem=unmatched[i]){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i)}}}}return newUnmatched}function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter)}if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector)}return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),matcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?postFinder||(seed?preFilter:preexisting||postFilter)?[]:results:matcherIn;if(matcher){matcher(matcherIn,matcherOut,context,xml)}if(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);i=temp.length;while(i--){if(elem=temp[i]){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem)}}}if(seed){if(postFinder||preFilter){if(postFinder){temp=[];i=matcherOut.length;while(i--){if(elem=matcherOut[i]){temp.push(matcherIn[i]=elem)}}postFinder(null,matcherOut=[],temp,xml)}i=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf.call(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem)}}}}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml)}else{push.apply(results,matcherOut)}}})}function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[" "],i=leadingRelative?1:0,matchContext=addCombinator(function(elem){return elem===checkContext},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf.call(checkContext,elem)>-1},implicitRelative,true),matchers=[function(elem,context,xml){return!leadingRelative&&(xml||context!==outermostContext)||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml))}];for(;i<len;i++){if(matcher=Expr.relative[tokens[i].type]){matchers=[addCombinator(elementMatcher(matchers),matcher)]}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);if(matcher[expando]){j=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break}}return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})).replace(rtrim,"$1"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens(tokens=tokens.slice(j)),j<len&&toSelector(tokens))}matchers.push(matcher)}}return elementMatcher(matchers)}function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i="0",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,elems=seed||byElement&&Expr.find["TAG"]("*",outermost),dirrunsUnique=dirruns+=contextBackup==null?1:Math.random()||.1,len=elems.length;if(outermost){outermostContext=context!==document&&context}for(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;while(matcher=elementMatchers[j++]){if(matcher(elem,context,xml)){results.push(elem);break}}if(outermost){dirruns=dirrunsUnique}}if(bySet){if(elem=!matcher&&elem){matchedCount--}if(seed){unmatched.push(elem)}}}matchedCount+=i;if(bySet&&i!==matchedCount){j=0;while(matcher=setMatchers[j++]){matcher(unmatched,setMatched,context,xml)}if(seed){if(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results)}}}setMatched=condense(setMatched)}push.apply(results,setMatched);if(outermost&&!seed&&setMatched.length>0&&matchedCount+setMatchers.length>1){Sizzle.uniqueSort(results)}}if(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup}return unmatched};return bySet?markFunction(superMatcher):superMatcher}compile=Sizzle.compile=function(selector,match){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+" "];if(!cached){if(!match){match=tokenize(selector)}i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached)}else{elementMatchers.push(cached)}}cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));cached.selector=selector}return cached};select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector==="function"&&selector,match=!seed&&tokenize(selector=compiled.selector||selector);results=results||[];if(match.length===1){tokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type==="ID"&&support.getById&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results}else if(compiled){context=context.parentNode}selector=selector.slice(tokens.shift().value.length)}i=matchExpr["needsContext"].test(selector)?0:tokens.length;while(i--){token=tokens[i];if(Expr.relative[type=token.type]){break}if(find=Expr.find[type]){if(seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context)){tokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results}break}}}}(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,rsibling.test(selector)&&testContext(context.parentNode)||context);return results};support.sortStable=expando.split("").sort(sortOrder).join("")===expando;support.detectDuplicates=!!hasDuplicate;setDocument();support.sortDetached=assert(function(div1){return div1.compareDocumentPosition(document.createElement("div"))&1});if(!assert(function(div){div.innerHTML="<a href='#'></a>";return div.firstChild.getAttribute("href")==="#"})){addHandle("type|href|height|width",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()==="type"?1:2)}})}if(!support.attributes||!assert(function(div){div.innerHTML="<input/>";div.firstChild.setAttribute("value","");return div.firstChild.getAttribute("value")===""})){addHandle("value",function(elem,name,isXML){if(!isXML&&elem.nodeName.toLowerCase()==="input"){return elem.defaultValue}})}if(!assert(function(div){return div.getAttribute("disabled")==null})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null}})}if(typeof define==="function"&&define.amd){define(function(){return Sizzle})}else if(typeof module!=="undefined"&&module.exports){module.exports=Sizzle}else{window.Sizzle=Sizzle}})(window);(function(){if(typeof Sizzle!=="undefined"){return}if(typeof define!=="undefined"&&define.amd){window.Sizzle=Prototype._actual_sizzle;window.define=Prototype._original_define;delete Prototype._actual_sizzle;delete Prototype._original_define}else if(typeof module!=="undefined"&&module.exports){window.Sizzle=module.exports;module.exports={}}})();(function(engine){var extendElements=Prototype.Selector.extendElements;function select(selector,scope){return extendElements(engine(selector,scope||document))}function match(element,selector){return engine.matches(selector,[element]).length==1}Prototype.Selector.engine=engine;Prototype.Selector.select=select;Prototype.Selector.match=match})(Sizzle);window.Sizzle=Prototype._original_property;delete Prototype._original_property;var Form={reset:function(form){form=$(form);form.reset();return form},serializeElements:function(elements,options){if(typeof options!="object")options={hash:!!options};else if(Object.isUndefined(options.hash))options.hash=true;var key,value,submitted=false,submit=options.submit,accumulator,initial;if(options.hash){initial={};accumulator=function(result,key,value){if(key in result){if(!Object.isArray(result[key]))result[key]=[result[key]];result[key]=result[key].concat(value)}else result[key]=value;return result}}else{initial="";accumulator=function(result,key,values){if(!Object.isArray(values)){values=[values]}if(!values.length){return result}var encodedKey=encodeURIComponent(key).gsub(/%20/,"+");return result+(result?"&":"")+values.map(function(value){value=value.gsub(/(\r)?\n/,"\r\n");value=encodeURIComponent(value);value=value.gsub(/%20/,"+");return encodedKey+"="+value}).join("&")}}return elements.inject(initial,function(result,element){if(!element.disabled&&element.name){key=element.name;value=$(element).getValue();if(value!=null&&element.type!="file"&&(element.type!="submit"||!submitted&&submit!==false&&(!submit||key==submit)&&(submitted=true))){result=accumulator(result,key,value)}}return result})}};Form.Methods={serialize:function(form,options){return Form.serializeElements(Form.getElements(form),options)},getElements:function(form){var elements=$(form).getElementsByTagName("*");var element,results=[],serializers=Form.Element.Serializers;for(var i=0;element=elements[i];i++){if(serializers[element.tagName.toLowerCase()])results.push(Element.extend(element))}return results},getInputs:function(form,typeName,name){form=$(form);var inputs=form.getElementsByTagName("input");if(!typeName&&!name)return $A(inputs).map(Element.extend);for(var i=0,matchingInputs=[],length=inputs.length;i<length;i++){var input=inputs[i];if(typeName&&input.type!=typeName||name&&input.name!=name)continue;matchingInputs.push(Element.extend(input))}return matchingInputs},disable:function(form){form=$(form);Form.getElements(form).invoke("disable");return form},enable:function(form){form=$(form);Form.getElements(form).invoke("enable");return form},findFirstElement:function(form){var elements=$(form).getElements().findAll(function(element){return"hidden"!=element.type&&!element.disabled});var firstByIndex=elements.findAll(function(element){return element.hasAttribute("tabIndex")&&element.tabIndex>=0}).sortBy(function(element){return element.tabIndex}).first();return firstByIndex?firstByIndex:elements.find(function(element){return/^(?:input|select|textarea)$/i.test(element.tagName)})},focusFirstElement:function(form){form=$(form);var element=form.findFirstElement();if(element)element.activate();return form},request:function(form,options){form=$(form),options=Object.clone(options||{});var params=options.parameters,action=form.readAttribute("action")||"";if(action.blank())action=window.location.href;options.parameters=form.serialize(true);if(params){if(Object.isString(params))params=params.toQueryParams();Object.extend(options.parameters,params)}if(form.hasAttribute("method")&&!options.method)options.method=form.method;return new Ajax.Request(action,options)}};Form.Element={focus:function(element){$(element).focus();return element},select:function(element){$(element).select();return element}};Form.Element.Methods={serialize:function(element){element=$(element);if(!element.disabled&&element.name){var value=element.getValue();if(value!=undefined){var pair={};pair[element.name]=value;return Object.toQueryString(pair)}}return""},getValue:function(element){element=$(element);var method=element.tagName.toLowerCase();return Form.Element.Serializers[method](element)},setValue:function(element,value){element=$(element);var method=element.tagName.toLowerCase();Form.Element.Serializers[method](element,value);return element},clear:function(element){$(element).value="";return element},present:function(element){return $(element).value!=""},activate:function(element){element=$(element);try{element.focus();if(element.select&&(element.tagName.toLowerCase()!="input"||!/^(?:button|reset|submit)$/i.test(element.type)))element.select()}catch(e){}return element},disable:function(element){element=$(element);element.disabled=true;return element},enable:function(element){element=$(element);element.disabled=false;return element}};var Field=Form.Element;var $F=Form.Element.Methods.getValue;Form.Element.Serializers=function(){function input(element,value){switch(element.type.toLowerCase()){case"checkbox":case"radio":return inputSelector(element,value);default:return valueSelector(element,value)}}function inputSelector(element,value){if(Object.isUndefined(value))return element.checked?element.value:null;else element.checked=!!value}function valueSelector(element,value){if(Object.isUndefined(value))return element.value;else element.value=value}function select(element,value){if(Object.isUndefined(value))return(element.type==="select-one"?selectOne:selectMany)(element);var opt,currentValue,single=!Object.isArray(value);for(var i=0,length=element.length;i<length;i++){opt=element.options[i];currentValue=this.optionValue(opt);if(single){if(currentValue==value){opt.selected=true;return}}else opt.selected=value.include(currentValue)}}function selectOne(element){var index=element.selectedIndex;return index>=0?optionValue(element.options[index]):null}function selectMany(element){var values,length=element.length;if(!length)return null;for(var i=0,values=[];i<length;i++){var opt=element.options[i];if(opt.selected)values.push(optionValue(opt))}return values}function optionValue(opt){return Element.hasAttribute(opt,"value")?opt.value:opt.text}return{input:input,inputSelector:inputSelector,textarea:valueSelector,select:select,selectOne:selectOne,selectMany:selectMany,optionValue:optionValue,button:valueSelector}}();Abstract.TimedObserver=Class.create(PeriodicalExecuter,{initialize:function($super,element,frequency,callback){$super(callback,frequency);this.element=$(element);this.lastValue=this.getValue()},execute:function(){var value=this.getValue();if(Object.isString(this.lastValue)&&Object.isString(value)?this.lastValue!=value:String(this.lastValue)!=String(value)){this.callback(this.element,value);this.lastValue=value}}});Form.Element.Observer=Class.create(Abstract.TimedObserver,{getValue:function(){return Form.Element.getValue(this.element)}});Form.Observer=Class.create(Abstract.TimedObserver,{getValue:function(){return Form.serialize(this.element)}});Abstract.EventObserver=Class.create({initialize:function(element,callback){this.element=$(element);this.callback=callback;this.lastValue=this.getValue();if(this.element.tagName.toLowerCase()=="form")this.registerFormCallbacks();else this.registerCallback(this.element)},onElementEvent:function(){var value=this.getValue();if(this.lastValue!=value){this.callback(this.element,value);this.lastValue=value}},registerFormCallbacks:function(){Form.getElements(this.element).each(this.registerCallback,this)},registerCallback:function(element){if(element.type){switch(element.type.toLowerCase()){case"checkbox":case"radio":Event.observe(element,"click",this.onElementEvent.bind(this));break;default:Event.observe(element,"change",this.onElementEvent.bind(this));break}}}});Form.Element.EventObserver=Class.create(Abstract.EventObserver,{getValue:function(){return Form.Element.getValue(this.element)}});Form.EventObserver=Class.create(Abstract.EventObserver,{getValue:function(){return Form.serialize(this.element)}});(function(GLOBAL){var DIV=document.createElement("div");var docEl=document.documentElement;var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED="onmouseenter"in docEl&&"onmouseleave"in docEl;var Event={KEY_BACKSPACE:8,KEY_TAB:9,KEY_RETURN:13,KEY_ESC:27,KEY_LEFT:37,KEY_UP:38,KEY_RIGHT:39,KEY_DOWN:40,KEY_DELETE:46,KEY_HOME:36,KEY_END:35,KEY_PAGEUP:33,KEY_PAGEDOWN:34,KEY_INSERT:45};var isIELegacyEvent=function(event){return false};if(window.attachEvent){if(window.addEventListener){isIELegacyEvent=function(event){return!(event instanceof window.Event)}}else{isIELegacyEvent=function(event){return true}}}var _isButton;function _isButtonForDOMEvents(event,code){return event.which?event.which===code+1:event.button===code}var legacyButtonMap={0:1,1:4,2:2};function _isButtonForLegacyEvents(event,code){return event.button===legacyButtonMap[code]}function _isButtonForWebKit(event,code){switch(code){case 0:return event.which==1&&!event.metaKey;case 1:return event.which==2||event.which==1&&event.metaKey;case 2:return event.which==3;default:return false}}if(window.attachEvent){if(!window.addEventListener){_isButton=_isButtonForLegacyEvents}else{_isButton=function(event,code){return isIELegacyEvent(event)?_isButtonForLegacyEvents(event,code):_isButtonForDOMEvents(event,code)}}}else if(Prototype.Browser.WebKit){_isButton=_isButtonForWebKit}else{_isButton=_isButtonForDOMEvents}function isLeftClick(event){return _isButton(event,0)}function isMiddleClick(event){return _isButton(event,1)}function isRightClick(event){return _isButton(event,2)}function element(event){return Element.extend(_element(event))}function _element(event){event=Event.extend(event);var node=event.target,type=event.type,currentTarget=event.currentTarget;if(currentTarget&&currentTarget.tagName){if(type==="load"||type==="error"||type==="click"&&currentTarget.tagName.toLowerCase()==="input"&&currentTarget.type==="radio")node=currentTarget}return node.nodeType==Node.TEXT_NODE?node.parentNode:node}function findElement(event,expression){var element=_element(event),selector=Prototype.Selector;if(!expression)return Element.extend(element);while(element){if(Object.isElement(element)&&selector.match(element,expression))return Element.extend(element);element=element.parentNode}}function pointer(event){return{x:pointerX(event),y:pointerY(event)}}function pointerX(event){var docElement=document.documentElement,body=document.body||{scrollLeft:0};return event.pageX||event.clientX+(docElement.scrollLeft||body.scrollLeft)-(docElement.clientLeft||0)}function pointerY(event){var docElement=document.documentElement,body=document.body||{scrollTop:0};return event.pageY||event.clientY+(docElement.scrollTop||body.scrollTop)-(docElement.clientTop||0)}function stop(event){Event.extend(event);event.preventDefault();event.stopPropagation();event.stopped=true}Event.Methods={isLeftClick:isLeftClick,isMiddleClick:isMiddleClick,isRightClick:isRightClick,element:element,findElement:findElement,pointer:pointer,pointerX:pointerX,pointerY:pointerY,stop:stop};var methods=Object.keys(Event.Methods).inject({},function(m,name){m[name]=Event.Methods[name].methodize();return m});if(window.attachEvent){function _relatedTarget(event){var element;switch(event.type){case"mouseover":case"mouseenter":element=event.fromElement;break;case"mouseout":case"mouseleave":element=event.toElement;break;default:return null}return Element.extend(element)}var additionalMethods={stopPropagation:function(){this.cancelBubble=true},preventDefault:function(){this.returnValue=false},inspect:function(){return"[object Event]"}};Event.extend=function(event,element){if(!event)return false;if(!isIELegacyEvent(event))return event;if(event._extendedByPrototype)return event;event._extendedByPrototype=Prototype.emptyFunction;var pointer=Event.pointer(event);Object.extend(event,{target:event.srcElement||element,relatedTarget:_relatedTarget(event),pageX:pointer.x,pageY:pointer.y});Object.extend(event,methods);Object.extend(event,additionalMethods);return event}}else{Event.extend=Prototype.K}if(window.addEventListener){Event.prototype=window.Event.prototype||document.createEvent("HTMLEvents").__proto__;Object.extend(Event.prototype,methods)}var EVENT_TRANSLATIONS={mouseenter:"mouseover",mouseleave:"mouseout"};function getDOMEventName(eventName){return EVENT_TRANSLATIONS[eventName]||eventName}if(MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED)getDOMEventName=Prototype.K;function getUniqueElementID(element){if(element===window)return 0;if(typeof element._prototypeUID==="undefined")element._prototypeUID=Element.Storage.UID++;return element._prototypeUID}function getUniqueElementID_IE(element){if(element===window)return 0;if(element==document)return 1;return element.uniqueID}if("uniqueID"in DIV)getUniqueElementID=getUniqueElementID_IE;function isCustomEvent(eventName){return eventName.include(":")}Event._isCustomEvent=isCustomEvent;function getOrCreateRegistryFor(element,uid){var CACHE=GLOBAL.Event.cache;if(Object.isUndefined(uid))uid=getUniqueElementID(element);if(!CACHE[uid])CACHE[uid]={element:element};return CACHE[uid]}function destroyRegistryForElement(element,uid){if(Object.isUndefined(uid))uid=getUniqueElementID(element);delete GLOBAL.Event.cache[uid]}function register(element,eventName,handler){var registry=getOrCreateRegistryFor(element);if(!registry[eventName])registry[eventName]=[];var entries=registry[eventName];var i=entries.length;while(i--)if(entries[i].handler===handler)return null;var uid=getUniqueElementID(element);var responder=GLOBAL.Event._createResponder(uid,eventName,handler);var entry={responder:responder,handler:handler};entries.push(entry);return entry}function unregister(element,eventName,handler){var registry=getOrCreateRegistryFor(element);var entries=registry[eventName]||[];var i=entries.length,entry;while(i--){if(entries[i].handler===handler){entry=entries[i];break}}if(entry){var index=entries.indexOf(entry);entries.splice(index,1)}if(entries.length===0){delete registry[eventName];if(Object.keys(registry).length===1&&"element"in registry)destroyRegistryForElement(element)}return entry}function observe(element,eventName,handler){element=$(element);var entry=register(element,eventName,handler);if(entry===null)return element;var responder=entry.responder;if(isCustomEvent(eventName))observeCustomEvent(element,eventName,responder);else observeStandardEvent(element,eventName,responder);return element}function observeStandardEvent(element,eventName,responder){var actualEventName=getDOMEventName(eventName);if(element.addEventListener){element.addEventListener(actualEventName,responder,false)}else{element.attachEvent("on"+actualEventName,responder)}}function observeCustomEvent(element,eventName,responder){if(element.addEventListener){element.addEventListener("dataavailable",responder,false)}else{element.attachEvent("ondataavailable",responder);element.attachEvent("onlosecapture",responder)}}function stopObserving(element,eventName,handler){element=$(element);var handlerGiven=!Object.isUndefined(handler),eventNameGiven=!Object.isUndefined(eventName);if(!eventNameGiven&&!handlerGiven){stopObservingElement(element);return element}if(!handlerGiven){stopObservingEventName(element,eventName);return element}var entry=unregister(element,eventName,handler);if(!entry)return element;removeEvent(element,eventName,entry.responder);return element}function stopObservingStandardEvent(element,eventName,responder){var actualEventName=getDOMEventName(eventName);if(element.removeEventListener){element.removeEventListener(actualEventName,responder,false)}else{element.detachEvent("on"+actualEventName,responder)}}function stopObservingCustomEvent(element,eventName,responder){if(element.removeEventListener){element.removeEventListener("dataavailable",responder,false)}else{element.detachEvent("ondataavailable",responder);element.detachEvent("onlosecapture",responder)}}function stopObservingElement(element){var uid=getUniqueElementID(element),registry=GLOBAL.Event.cache[uid];if(!registry)return;destroyRegistryForElement(element,uid);var entries,i;for(var eventName in registry){if(eventName==="element")continue;entries=registry[eventName];i=entries.length;while(i--)removeEvent(element,eventName,entries[i].responder)}}function stopObservingEventName(element,eventName){var registry=getOrCreateRegistryFor(element);var entries=registry[eventName];if(entries){delete registry[eventName]}entries=entries||[];var i=entries.length;while(i--)removeEvent(element,eventName,entries[i].responder);for(var name in registry){if(name==="element")continue;return}destroyRegistryForElement(element)}function removeEvent(element,eventName,handler){if(isCustomEvent(eventName))stopObservingCustomEvent(element,eventName,handler);else stopObservingStandardEvent(element,eventName,handler)}function getFireTarget(element){if(element!==document)return element;if(document.createEvent&&!element.dispatchEvent)return document.documentElement;return element}function fire(element,eventName,memo,bubble){element=getFireTarget($(element));if(Object.isUndefined(bubble))bubble=true;memo=memo||{};var event=fireEvent(element,eventName,memo,bubble);return Event.extend(event)}function fireEvent_DOM(element,eventName,memo,bubble){var event=document.createEvent("HTMLEvents");event.initEvent("dataavailable",bubble,true);event.eventName=eventName;event.memo=memo;element.dispatchEvent(event);return event}function fireEvent_IE(element,eventName,memo,bubble){var event=document.createEventObject();event.eventType=bubble?"ondataavailable":"onlosecapture";event.eventName=eventName;event.memo=memo;element.fireEvent(event.eventType,event);return event}var fireEvent=document.createEvent?fireEvent_DOM:fireEvent_IE;Event.Handler=Class.create({initialize:function(element,eventName,selector,callback){this.element=$(element);this.eventName=eventName;this.selector=selector;this.callback=callback;this.handler=this.handleEvent.bind(this)},start:function(){Event.observe(this.element,this.eventName,this.handler);return this},stop:function(){Event.stopObserving(this.element,this.eventName,this.handler);return this},handleEvent:function(event){var element=Event.findElement(event,this.selector);if(element)this.callback.call(this.element,event,element)}});function on(element,eventName,selector,callback){element=$(element);if(Object.isFunction(selector)&&Object.isUndefined(callback)){callback=selector,selector=null}return new Event.Handler(element,eventName,selector,callback).start()}Object.extend(Event,Event.Methods);Object.extend(Event,{fire:fire,observe:observe,stopObserving:stopObserving,on:on});Element.addMethods({fire:fire,observe:observe,stopObserving:stopObserving,on:on});Object.extend(document,{fire:fire.methodize(),observe:observe.methodize(),stopObserving:stopObserving.methodize(),on:on.methodize(),loaded:false});if(GLOBAL.Event)Object.extend(window.Event,Event);else GLOBAL.Event=Event;GLOBAL.Event.cache={};function destroyCache_IE(){GLOBAL.Event.cache=null}if(window.attachEvent)window.attachEvent("onunload",destroyCache_IE);DIV=null;docEl=null})(this);(function(GLOBAL){var docEl=document.documentElement;var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED="onmouseenter"in docEl&&"onmouseleave"in docEl;function isSimulatedMouseEnterLeaveEvent(eventName){return!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED&&(eventName==="mouseenter"||eventName==="mouseleave")}function createResponder(uid,eventName,handler){if(Event._isCustomEvent(eventName))return createResponderForCustomEvent(uid,eventName,handler);if(isSimulatedMouseEnterLeaveEvent(eventName))return createMouseEnterLeaveResponder(uid,eventName,handler);return function(event){if(!Event.cache)return;var element=Event.cache[uid].element;Event.extend(event,element);handler.call(element,event)}}function createResponderForCustomEvent(uid,eventName,handler){return function(event){var cache=Event.cache[uid];var element=cache&&cache.element;if(Object.isUndefined(event.eventName))return false;if(event.eventName!==eventName)return false;Event.extend(event,element);handler.call(element,event)}}function createMouseEnterLeaveResponder(uid,eventName,handler){return function(event){var element=Event.cache[uid].element;Event.extend(event,element);var parent=event.relatedTarget;while(parent&&parent!==element){try{parent=parent.parentNode}catch(e){parent=element}}if(parent===element)return;handler.call(element,event)}}GLOBAL.Event._createResponder=createResponder;docEl=null})(this);(function(GLOBAL){var TIMER;function fireContentLoadedEvent(){if(document.loaded)return;if(TIMER)window.clearTimeout(TIMER);document.loaded=true;document.fire("dom:loaded")}function checkReadyState(){if(document.readyState==="complete"){document.detachEvent("onreadystatechange",checkReadyState);fireContentLoadedEvent()}}function pollDoScroll(){try{document.documentElement.doScroll("left")}catch(e){TIMER=pollDoScroll.defer();return}fireContentLoadedEvent()}if(document.readyState==="complete"){fireContentLoadedEvent();return}if(document.addEventListener){document.addEventListener("DOMContentLoaded",fireContentLoadedEvent,false)}else{document.attachEvent("onreadystatechange",checkReadyState);if(window==top)TIMER=pollDoScroll.defer()}Event.observe(window,"load",fireContentLoadedEvent)})(this);Element.addMethods();Hash.toQueryString=Object.toQueryString;var Toggle={display:Element.toggle};Element.addMethods({childOf:Element.Methods.descendantOf});var Insertion={Before:function(element,content){return Element.insert(element,{before:content})},Top:function(element,content){return Element.insert(element,{top:content})},Bottom:function(element,content){return Element.insert(element,{bottom:content})},After:function(element,content){return Element.insert(element,{after:content})}};var $continue=new Error('"throw $continue" is deprecated, use "return" instead');var Position={includeScrollOffsets:false,prepare:function(){this.deltaX=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;this.deltaY=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0},within:function(element,x,y){if(this.includeScrollOffsets)return this.withinIncludingScrolloffsets(element,x,y);this.xcomp=x;this.ycomp=y;this.offset=Element.cumulativeOffset(element);return y>=this.offset[1]&&y<this.offset[1]+element.offsetHeight&&x>=this.offset[0]&&x<this.offset[0]+element.offsetWidth},withinIncludingScrolloffsets:function(element,x,y){var offsetcache=Element.cumulativeScrollOffset(element);this.xcomp=x+offsetcache[0]-this.deltaX;this.ycomp=y+offsetcache[1]-this.deltaY;this.offset=Element.cumulativeOffset(element);return this.ycomp>=this.offset[1]&&this.ycomp<this.offset[1]+element.offsetHeight&&this.xcomp>=this.offset[0]&&this.xcomp<this.offset[0]+element.offsetWidth},overlap:function(mode,element){if(!mode)return 0;if(mode=="vertical")return(this.offset[1]+element.offsetHeight-this.ycomp)/element.offsetHeight;if(mode=="horizontal")return(this.offset[0]+element.offsetWidth-this.xcomp)/element.offsetWidth},cumulativeOffset:Element.Methods.cumulativeOffset,positionedOffset:Element.Methods.positionedOffset,absolutize:function(element){Position.prepare();return Element.absolutize(element)},relativize:function(element){Position.prepare();return Element.relativize(element)},realOffset:Element.Methods.cumulativeScrollOffset,offsetParent:Element.Methods.getOffsetParent,page:Element.Methods.viewportOffset,clone:function(source,target,options){options=options||{};return Element.clonePosition(target,source,options)}};if(!document.getElementsByClassName)document.getElementsByClassName=function(instanceMethods){function iter(name){return name.blank()?null:"[contains(concat(' ', @class, ' '), ' "+name+" ')]"}instanceMethods.getElementsByClassName=Prototype.BrowserFeatures.XPath?function(element,className){className=className.toString().strip();var cond=/\s/.test(className)?$w(className).map(iter).join(""):iter(className);return cond?document._getElementsByXPath(".//*"+cond,element):[]}:function(element,className){className=className.toString().strip();var elements=[],classNames=/\s/.test(className)?$w(className):null;if(!classNames&&!className)return elements;var nodes=$(element).getElementsByTagName("*");className=" "+className+" ";for(var i=0,child,cn;child=nodes[i];i++){if(child.className&&(cn=" "+child.className+" ")&&(cn.include(className)||classNames&&classNames.all(function(name){return!name.toString().blank()&&cn.include(" "+name+" ")})))elements.push(Element.extend(child))}return elements};return function(className,parentElement){return $(parentElement||document.body).getElementsByClassName(className)}}(Element.Methods);Element.ClassNames=Class.create();Element.ClassNames.prototype={initialize:function(element){this.element=$(element)},_each:function(iterator,context){this.element.className.split(/\s+/).select(function(name){return name.length>0})._each(iterator,context)},set:function(className){this.element.className=className},add:function(classNameToAdd){if(this.include(classNameToAdd))return;this.set($A(this).concat(classNameToAdd).join(" "))},remove:function(classNameToRemove){if(!this.include(classNameToRemove))return;this.set($A(this).without(classNameToRemove).join(" "))},toString:function(){return $A(this).join(" ")}};Object.extend(Element.ClassNames.prototype,Enumerable);(function(){window.Selector=Class.create({initialize:function(expression){this.expression=expression.strip()},findElements:function(rootElement){return Prototype.Selector.select(this.expression,rootElement)},match:function(element){return Prototype.Selector.match(element,this.expression)},toString:function(){return this.expression},inspect:function(){return"#<Selector: "+this.expression+">"}});Object.extend(Selector,{matchElements:function(elements,expression){var match=Prototype.Selector.match,results=[];for(var i=0,length=elements.length;i<length;i++){var element=elements[i];if(match(element,expression)){results.push(Element.extend(element))}}return results},findElement:function(elements,expression,index){index=index||0;var matchIndex=0,element;for(var i=0,length=elements.length;i<length;i++){element=elements[i];if(Prototype.Selector.match(element,expression)&&index===matchIndex++){return Element.extend(element)}}},findChildElements:function(element,expressions){var selector=expressions.toArray().join(", ");return Prototype.Selector.select(selector,element||document)}})})();
/*! RESOURCE: /scripts/lib/glide_updates/prototype.js */
Object.extendsObject = function() {
	return Class.create.apply(null, arguments).prototype;
}
Prototype.ScriptFragmentDetailed = '<script(?:[^>]*type=\"([^>]*?)\")?(?:[^>]*src=\"([^>]*?)\")?[^>]*>([\\S\\s]*?)<\/script>';
var g_evalScriptCache = {};
Object.extend(String.prototype, (function() {
	function extractScriptsDetailed() {
		var matchAll = new RegExp(Prototype.ScriptFragmentDetailed, 'img');
		var matchOne = new RegExp(Prototype.ScriptFragmentDetailed, 'im');
		return (this.match(matchAll) || []).map(function(scriptTag) {
			var m = scriptTag.match(matchOne) || [ '', '', '', '' ];
if (m[1] == 'application/xml')
				return;
			
if (m[1] == 'text/html')
				return;
if(m[1] == 'text/ng-template')
				return;
			return {
				script: m[3],
				src: m[2]
			};
		});
	}
	function evalScripts(evalGlobal, onCompleteCallback) {
		(function _executer(scripts) {
			if (!scripts || scripts.length == 0) {
				if (typeof onCompleteCallback == "function")
					onCompleteCallback();
				return;
			}
			var script = scripts.shift();
			if (!script)
				return _executer(scripts);
			if (script.src) {
				if (!g_evalScriptCache[script.src]) {
					g_evalScriptCache[script.src] = {
						state : 'loading',
						scripts : scripts
					};
					ajaxRequest(script.src,	null, true,	function(r) {
						g_evalScriptCache[script.src].state = 'loaded';
						var toEvalScripts = g_evalScriptCache[script.src].scripts;
						if (r && r.responseText)
							evalScript(r.responseText, evalGlobal);
						return _executer(toEvalScripts);
					});
				}
				else if (g_evalScriptCache[script.src].state == 'loading') {
					g_evalScriptCache[script.src].scripts = g_evalScriptCache[script.src].scripts.concat(scripts);
					return;
				} else if (g_evalScriptCache[script.src].state == 'loaded')
					return _executer(scripts);
			} else {
				if (script.script)
					evalScript(script.script, evalGlobal);
				return _executer(scripts);
			}
		})(this.extractScriptsDetailed());
	}
	return {
		evalScripts: evalScripts,
		extractScriptsDetailed: extractScriptsDetailed
	};
})());
function evalScript(s, evalGlobal) {
	if (s.length == 0)
		return;
	if (!evalGlobal)
		return eval(s);
	if (window.execScript)
		return window.execScript(s);
	return window.eval ? window.eval(s) : eval(s);
}
if (document.getElementsByClassName && typeof Element.Methods.getElementsByClassName === "function")
	document.getElementsByClassName = function(instanceMethods) {
		function iter(name) {
			return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' " + name + " ')]";
		}
		instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ? function(element, className) {
			className = className.toString().strip();
var cond = /\s/.test(className) ? $w(className).map(iter).join('') : iter(className);
return cond ? document._getElementsByXPath('.//*' + cond, element) : [];
		} : function(element, className) {
			className = className.toString().strip();
var elements = [], classNames = (/\s/.test(className) ? $w(className) : null);
			if (!classNames && !className)
				return elements;
			if (Object.isString(element))
				element = document.getElementById(element);
			Element.extend(element);
			
			var nodes = element.getElementsByTagName('*');
			className = ' ' + className + ' ';
			for (var i = 0, child, cn; child = nodes[i]; i++) {
				if (child.className && (cn = ' ' + child.className + ' ')
						&& (cn.include(className) || (classNames && classNames.all(function(name) {
							return !name.toString().blank() && cn.include(' ' + name + ' ');
						}))))
					elements.push(Element.extend(child));
			}
			return elements;
		};
		return function(className, parentElement) {
			return $(parentElement || document.body).getElementsByClassName(className);
		};
	}(Element.Methods);
Object.equals = function(o1, o2) {
	var i1 = 0, i2 = 0;
    for (var p in o1) {
        if (!o1 || !o2 || typeof o1[p] !== typeof o2[p] || ((o1[p] === null) !== (o2[p] === null)))
        	return false;
        
        switch (typeof o1[p]) {
            case 'undefined':
                if (typeof o2[p] != 'undefined')
                	return false;
                break;
            case 'object':
                if (o1[p] !== null && o2[p] !== null && (o1[p].constructor.toString() !== o2[p].constructor.toString() || !Object.equals(o1[p], o2[p])))
                	return false;
                break;
            case 'function':
                if (p != 'equals' && o1[p].toString() != o2[p].toString())
                	return false;
                break;
            default:
                if (o1[p] !== o2[p])
                	return false;
        }
        i1++;
    }
    
    for (var p in o2) i2++;
    if (i1 != i2)
    	return false;
    
    return true;
}
document.viewport['getDimensions'] = function() {
	var el = window.document.compatMode === 'CSS1Compat' && (!Prototype.Browser.Opera ||
		window.parseFloat(window.opera.version()) < 9.5) ? window.document.documentElement : window.document.body;
	return { width: el.clientWidth, height: el.clientHeight };
};
;
/*! RESOURCE: /scripts/lib/glide_updates/prototype.template.js */
var Template = Class.create({
	initialize: function (template) {
		this.template = template.toString();
this.pattern = /(^|.|\r|\n)(#\{((JS|HTML):)?(.*?)\})/;
	},
	evaluate: function (object) {
		if (object && Object.isFunction(object.toTemplateReplacements))
			object = object.toTemplateReplacements();
		return this.template.gsub(this.pattern, function (match) {
			if (object === null)
				return (match[1] + '');
			var before = match[1] || '';
			if (before ==='\\')
				return match[2];
			var ctx = object, expr = match[5], escape = match[4],
pattern = /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;
			match = pattern.exec(expr);
			if (match === null)
				return before;
			while (match != null) {
var comp = match[1].startsWith('[') ? match[2].replace(/\\\\]/g, ']') : match[1];
				ctx = ctx[comp];
				if (null === ctx || '' === match[3])
					break;
				expr = expr.substring('[' === match[3] ? match[1].length : match[0].length);
				match = pattern.exec(expr);
			}
			ctx = ctx || '';
			switch (escape || '') {
				case 'HTML':
ctx = ctx.replace(/'/g, '&#39;').replace(/"/g, '&#34;').replace(/&(?![#|l|g])/g, '&amp;').replace(/\</g, '&lt;').replace(/\>/g, '&gt;');
					break;
				case 'JS':
ctx = ctx.replace(/'/g, '&#39;').replace(/"/g, '&#34;');
					break;
			}
			return before + String.interpret(ctx);
		});
	}
});
var XMLTemplate = Class.create(Template, {
	initialize: function ($super, id) {
		var s = $(id);
$super(s && s.innerHTML ? s.innerHTML.replace(/%7B/g, '{').replace(/%7D/g, '}') : '');
	},
	toString: function () {
		'XMLTemplate';
	}
});
;
/*! RESOURCE: /scripts/lib/glide_updates/prototype.plugin.js */
var Plugin = (function() {
function create(name) {
		var args = $A(arguments);
		args.shift();
		
	    var klass = function(argumentArray) {
this.initialize.apply(this, argumentArray);
	    };
	    
    	Object.extend(klass, Class.Methods);
    	Object.extend(klass.prototype, args[0] || {});
    
        if (!klass.prototype.initialize)
            klass.prototype.initialize = Prototype.emptyFunction;
	    	
    	klass.prototype.constructor = klass;
		var methods = {};
		methods[name] = function(elem) {
			new klass(arguments); 
return elem;
		}.bind(this);
		Element.addMethods(methods);
	};
	
	return {
		create: create
	};
})();
;
/*! RESOURCE: /scripts/lib/labjs/LAB.min.js */
/*! LAB.js (LABjs :: Loading And Blocking JavaScript)
    v2.0.3 (c) Kyle Simpson
    MIT License
*/
(function(o){var K=o.$LAB,y="UseLocalXHR",z="AlwaysPreserveOrder",u="AllowDuplicates",A="CacheBust",B="BasePath",C=/^[^?#]*\//.exec(location.href)[0],D=/^\w+\:\/\/\/?[^\/]+/.exec(C)[0],i=document.head||document.getElementsByTagName("head"),L=(o.opera&&Object.prototype.toString.call(o.opera)=="[object Opera]")||("MozAppearance"in document.documentElement.style),q=document.createElement("script"),E=typeof q.preload=="boolean",r=E||(q.readyState&&q.readyState=="uninitialized"),F=!r&&q.async===true,M=!r&&!F&&!L;function G(a){return Object.prototype.toString.call(a)=="[object Function]"}function H(a){return Object.prototype.toString.call(a)=="[object Array]"}function N(a,c){var b=/^\w+\:\/\//;if(/^\/\/\/?/.test(a)){a=location.protocol+a}else if(!b.test(a)&&a.charAt(0)!="/"){a=(c||"")+a}return b.test(a)?a:((a.charAt(0)=="/"?D:C)+a)}function s(a,c){for(var b in a){if(a.hasOwnProperty(b)){c[b]=a[b]}}return c}function O(a){var c=false;for(var b=0;b<a.scripts.length;b++){if(a.scripts[b].ready&&a.scripts[b].exec_trigger){c=true;a.scripts[b].exec_trigger();a.scripts[b].exec_trigger=null}}return c}function t(a,c,b,d){a.onload=a.onreadystatechange=function(){if((a.readyState&&a.readyState!="complete"&&a.readyState!="loaded")||c[b])return;a.onload=a.onreadystatechange=null;d()}}function I(a){a.ready=a.finished=true;for(var c=0;c<a.finished_listeners.length;c++){a.finished_listeners[c]()}a.ready_listeners=[];a.finished_listeners=[]}function P(d,f,e,g,h){setTimeout(function(){var a,c=f.real_src,b;if("item"in i){if(!i[0]){setTimeout(arguments.callee,25);return}i=i[0]}a=document.createElement("script");if(f.type)a.type=f.type;if(f.charset)a.charset=f.charset;if(h){if(r){e.elem=a;if(E){a.preload=true;a.onpreload=g}else{a.onreadystatechange=function(){if(a.readyState=="loaded")g()}}a.src=c}else if(h&&c.indexOf(D)==0&&d[y]){b=new XMLHttpRequest();b.onreadystatechange=function(){if(b.readyState==4){b.onreadystatechange=function(){};e.text=b.responseText+"\n//@ sourceURL="+c;g()}};b.open("GET",c);b.send()}else{a.type="text/cache-script";t(a,e,"ready",function(){i.removeChild(a);g()});a.src=c;i.insertBefore(a,i.firstChild)}}else if(F){a.async=false;t(a,e,"finished",g);a.src=c;i.insertBefore(a,i.firstChild)}else{t(a,e,"finished",g);a.src=c;i.insertBefore(a,i.firstChild)}},0)}function J(){var l={},Q=r||M,n=[],p={},m;l[y]=true;l[z]=false;l[u]=false;l[A]=false;l[B]="";function R(a,c,b){var d;function f(){if(d!=null){d=null;I(b)}}if(p[c.src].finished)return;if(!a[u])p[c.src].finished=true;d=b.elem||document.createElement("script");if(c.type)d.type=c.type;if(c.charset)d.charset=c.charset;t(d,b,"finished",f);if(b.elem){b.elem=null}else if(b.text){d.onload=d.onreadystatechange=null;d.text=b.text}else{d.src=c.real_src}i.insertBefore(d,i.firstChild);if(b.text){f()}}function S(c,b,d,f){var e,g,h=function(){b.ready_cb(b,function(){R(c,b,e)})},j=function(){b.finished_cb(b,d)};b.src=N(b.src,c[B]);b.real_src=b.src+(c[A]?((/\?.*$/.test(b.src)?"&_":"?_")+~~(Math.random()*1E9)+"="):"");if(!p[b.src])p[b.src]={items:[],finished:false};g=p[b.src].items;if(c[u]||g.length==0){e=g[g.length]={ready:false,finished:false,ready_listeners:[h],finished_listeners:[j]};P(c,b,e,((f)?function(){e.ready=true;for(var a=0;a<e.ready_listeners.length;a++){e.ready_listeners[a]()}e.ready_listeners=[]}:function(){I(e)}),f)}else{e=g[0];if(e.finished){j()}else{e.finished_listeners.push(j)}}}function v(){var e,g=s(l,{}),h=[],j=0,w=false,k;function T(a,c){a.ready=true;a.exec_trigger=c;x()}function U(a,c){a.ready=a.finished=true;a.exec_trigger=null;for(var b=0;b<c.scripts.length;b++){if(!c.scripts[b].finished)return}c.finished=true;x()}function x(){while(j<h.length){if(G(h[j])){try{h[j++]()}catch(err){}continue}else if(!h[j].finished){if(O(h[j]))continue;break}j++}if(j==h.length){w=false;k=false}}function V(){if(!k||!k.scripts){h.push(k={scripts:[],finished:true})}}e={script:function(){for(var f=0;f<arguments.length;f++){(function(a,c){var b;if(!H(a)){c=[a]}for(var d=0;d<c.length;d++){V();a=c[d];if(G(a))a=a();if(!a)continue;if(H(a)){b=[].slice.call(a);b.unshift(d,1);[].splice.apply(c,b);d--;continue}if(typeof a=="string")a={src:a};a=s(a,{ready:false,ready_cb:T,finished:false,finished_cb:U});k.finished=false;k.scripts.push(a);S(g,a,k,(Q&&w));w=true;if(g[z])e.wait()}})(arguments[f],arguments[f])}return e},wait:function(){if(arguments.length>0){for(var a=0;a<arguments.length;a++){h.push(arguments[a])}k=h[h.length-1]}else k=false;x();return e}};return{script:e.script,wait:e.wait,setOptions:function(a){s(a,g);return e}}}m={setGlobalDefaults:function(a){s(a,l);return m},setOptions:function(){return v().setOptions.apply(null,arguments)},script:function(){return v().script.apply(null,arguments)},wait:function(){return v().wait.apply(null,arguments)},queueScript:function(){n[n.length]={type:"script",args:[].slice.call(arguments)};return m},queueWait:function(){n[n.length]={type:"wait",args:[].slice.call(arguments)};return m},runQueue:function(){var a=m,c=n.length,b=c,d;for(;--b>=0;){d=n.shift();a=a[d.type].apply(null,d.args)}return a},noConflict:function(){o.$LAB=K;return m},sandbox:function(){return J()}};return m}o.$LAB=J();(function(a,c,b){if(document.readyState==null&&document[a]){document.readyState="loading";document[a](c,b=function(){document.removeEventListener(c,b,false);document.readyState="complete"},false)}})("addEventListener","DOMContentLoaded")})(this);
/*! RESOURCE: /scripts/ScriptLoader.js */
var ScriptLoader = {
	getScripts: function(scripts, callback) {
		if (!(scripts instanceof Array))
			scripts = [ scripts ];
		for (var i = 0; i < scripts.length; i++)
			$LAB.queueScript(scripts[i]);
		$LAB.queueWait(callback);
		$LAB.runQueue();
	}
};
;
/*! RESOURCE: /scripts/consts/GlideEvent.js */
var GlideEvent = {
WINDOW_CLICKED:					'glide:window_clicked',
WINDOW_BLURRED:					'glide:window_blurred',
WINDOW_FOCUSED:					'glide:window_focused',
		
IMAGE_PICKED:					'glide:image_picked',
		
	NAV_MANAGER_LOADED:				'glide:nav_manager_loaded',
NAV_FORM_DIRTY_CANCEL_STAY:		'glide:nav_form_dirty_cancel_stay',
NAV_SYNC_LIST_WITH_FORM:		'glide:nav_sync_list_with_form',
NAV_LOAD_FORM_FROM_LIST:		'glide:nav_load_form_from_list',
	NAV_SAVE_PREFERENCES:			'glide:nav_save_preferences',
	NAV_UPDATE_EDGE_BUTTON_STATES:	'glide:nav_update_edge_button_states',
		
NAV_OPEN_URL:					'glide:nav_open_url',
	
NAV_ADD_BOOKMARK:				'glide:nav_add_bookmark',
NAV_REMOVE_BOOKMARK:			'glide:nav_remove_bookmark',
NAV_UPDATE_BOOKMARK:			'glide:nav_update_bookmark',
	NAV_DRAGGING_BOOKMARK_START:	'glide:nav_dragging_bookmark_start',
	NAV_DRAGGING_BOOKMARK_STOP:		'glide:nav_dragging_bookmark_stop',
	NAV_HIDE_ALL_TOOLTIPS:			'glide:nav_hide_all_tooltips',
NAV_QUEUE_BOOKMARK_OPEN_FLYOUT:	'glide:nav_queue_bookmark_open_flyout',
NAV_OPEN_BOOKMARK:              'glide:nav_open_bookmark',
NAV_BOOKMARK_ADDED:				'glide:nav_bookmark_added',
NAV_BOOKMARK_REMOVED:			'glide:nav_bookmark_removed',
	
	NAV_EAST_PANE_RESIZED:			'glide:nav_east_pane_resized',
	
NAV_ADD_FLYOUT:					'glide:nav_add_flyout',
NAV_REMOVE_FLYOUT:				'glide:nav_remove_flyout',
NAV_TOGGLE_FLYOUT:				'glide:nav_toggle_flyout',
NAV_HIDE_FLYOUTS:				'glide:nav_hide_flyouts',
		
NAV_PANE_CLICKED:				'glide:nav_window_clicked'
};
;
/*! RESOURCE: /scripts/functions/textutil.js */
function htmlEscape(s) {
return s.replace(/&/g,"&amp;").replace(/'/g,"&#39;").replace(/"/g,"&quot;").replace(/</g,"&#60;").replace(/>/g,"&#62;");
}
function convertDoubleQuoteToUTF8(s) {
return s.replace(/"/g,"%22");
}
function htmlEscapeQuote(s) {
return s.replace(/'/g,"&#39;");
}
function htmlEscapeDoubleQuote(s) {
return s.replace(/"/g,"&quot;");
}
function loadXML(r) {
  var xml = r.responseXML;
  if (typeof xml != 'undefined')
    return xml;
  var dom = null;
  if (window.DOMParser) {
    try { 
dom = (new DOMParser()).parseFromString(r, 'text/xml');
    } 
    catch (e) { dom = null; }
  } else if (window.ActiveXObject) {
    try {
      dom = new ActiveXObject('Microsoft.XMLDOM');
      dom.async = false;
      if (!dom.loadXML(r))
        jslog('ERROR: ' + dom.parseError.reason + dom.parseError.srcText);
    } catch (e) { dom = null; }
  } else 
    jslog('ERROR: Cannot parse xml string - "' + r + '".');
      
   return dom;
}
window.sanitizeHtml = function sanitizeHtml(text) {
	if (!text)
		return text;
	if (typeof DOMPurify !== 'undefined')
		return DOMPurify.sanitize(text);
	else
		console.warn("Missing includes of Dompurify plugin");
		
	var uriAttrs = 'background,cite,href,longdesc,src,xlink:href';
	var htmlAttrs = 'abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +
			'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +
			'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +
			'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +
			'valign,value,vspace,width';
	var svgAttrs = 'accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +
			'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +
			'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +
			'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +
			'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +
			'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +
			'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +
			'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +
			'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +
			'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +
			'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +
			'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +
			'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +
			'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +
			'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan';
	var validAttrs = ['', uriAttrs, svgAttrs.toLowerCase(), htmlAttrs, ''].join(',');
	function sanitizeNodes(nodes) {
		for (var i=0; i<nodes.length; i++) {
			sanitizeElement(nodes[i]);
		}
	}
	function sanitizeElement(elem) {
		if (!elem || elem.nodeType !== Node.ELEMENT_NODE)
			return;
		var invalidAttrs = [];
		for (var i=0; i<elem.attributes.length; i++) {
			var attr = elem.attributes[i].nodeName;
			if (validAttrs.indexOf(',' + attr.toLowerCase() + ',') < 0)
				invalidAttrs.push(attr);
		}
		for (i = 0; i < invalidAttrs.length; i++) {
			elem.removeAttribute(invalidAttrs[i]);
		}
		for (i = 0; i < elem.childNodes.length; i++) {
			sanitizeElement(elem.childNodes[i]);
		}
	}
text = text.replace(/(<script\b[^>]*>[\s\S]*?<\/script>)/gmi, "");
var xmlDoc = new DOMParser().parseFromString(text, "text/html");
	var nodes = xmlDoc.documentElement.childNodes;
	for (var i = 0; i < nodes.length; i++) {
		sanitizeElement(nodes[i]);
	}
	return xmlDoc.getElementsByTagName('body')[0].innerHTML;
}
;
/*! RESOURCE: /scripts/doctype/functions_bootstrap14.js */
var userAgentLowerCase = navigator.userAgent.toLowerCase();
var isMSIE = userAgentLowerCase.indexOf("msie") >= 0;
var ie5 = false;
var isMSIE6 = false
var isMSIE7 = false;
var isMSIE8 = false;
var isMSIE9 = userAgentLowerCase.indexOf("msie 9") >= 0;
var isMSIE10 = userAgentLowerCase.indexOf("msie 10") >= 0;
var isMSIE11 = userAgentLowerCase.indexOf("rv:11.0") > 0;
var isEdge = userAgentLowerCase.indexOf("edge") >= 0;
var isChrome = userAgentLowerCase.indexOf("chrome") >= 0;
var isFirefox = userAgentLowerCase.indexOf("firefox") >= 0;
var isSafari = !isChrome && (userAgentLowerCase.indexOf("safari") >= 0);
var isSafari5 = false;
if (isSafari) {
	try {
var reSafariVersion = new RegExp("version/([\\d\\.]{3,5}) safari/");
		var results = reSafariVersion.exec( userAgentLowerCase );
		if ( results.length > 0 ) {
		    var reMajor = new RegExp("([\\d]).");
		    var results = reMajor.exec(results[1]);
		    if ( results.length > 0 ) {
		        var mv = parseInt( results[1] );
		        isSafari5 = mv < 6;
		    }
		}
	} catch(e) { }
}
var isMacintosh = userAgentLowerCase.indexOf("macintosh") >= 0;
var isWebKit = navigator.userAgent.indexOf("WebKit") >= 0;
var isTouchDevice = navigator.userAgent.indexOf('iPhone') > -1 || navigator.userAgent.indexOf('iPad') > -1;
var GJSV = 1.0;
(function(){
	var defined = {};
	var waiting = {};
	function listen(id, then) {
		if(typeof id !== 'string')
			listenMany(id, then);
		if(defined[id]) {
			return then( defined[id] );
		}
		if(!waiting[id]) {
			waiting[id] = [];
		}
		waiting[id].push(then);
	}
	function emit(id, data) {
		defined[id] = data;
		var listeners = waiting[id];
		if(!listeners) {
			return;
		}
		for(var i = 0, l = listeners.length; i < l; i++) {
			listeners[i](data);
		}
		waiting[id] = [];
	}
	function listenMany(dependencies, then) {
		if(typeof dependencies.length === 'undefined') {
return;
		}
		var unDef = { isUndefined:true };
		var resolved = [];
		function resolve(dep, i) {
			resolved[i] = dep;
			for(var i = 0, l = resolved.length; i<l; i++) {
				if(resolved[i] === unDef)
					return;
			}
			then.apply(undefined, resolved);
		};
		dependencies.forEach(function(depId, idx) {
			resolved[idx] = unDef;
			listen(depId, function(dep) {
				resolve(dep, idx);
			});
		});
	}
	window.CachedEvent = {
		after: listen,
		emit: emit
	};
})();
var g_afterPageLoadedFunctions = [];
window.g_render_functions = window.g_render_functions || [];
window.g_load_functions = window.g_load_functions || [];
window.g_late_load_functions = window.g_late_load_functions || [];
function runBeforeRender() {
	_runInlineScripts();
	jslog("runBeforeRender");
	for (var i = 0; i != g_render_functions.length; i++) {
		var f = g_render_functions[i];
		f.call();
	}
}
function _runInlineScripts() {
var inlineScripts = $j('script[type="application/javascript-deferred"]');
	jslog("running inline scripts, count: " + inlineScripts.length);
	inlineScripts.each(function(index, item) {
		var script = $j(item).text();
		try {
			$j.globalEval(script);
		} catch (e) {
			jslog("error in script " + script);
		}
	});
}
window.g_hasRunAfterAllLoaded = false;
function runAfterAllLoaded() {
	if (g_hasRunAfterAllLoaded) {
		jslog("Redundant call to runAfterAllLoaded");
		return;
	}
	g_hasRunAfterAllLoaded = true;
	var sw = new StopWatch();
	jslog("runAfterAllLoaded, functions: " + g_load_functions.length);
	for (var i = 0; i != g_load_functions.length; i++) {
		var f = g_load_functions[i];
		var t = new Date().getTime();
		f.call();
		t = new Date().getTime() - t;
if (t > 5000)
			jslog("Time: " + t + " for: [" + i + "] " + f);
	}
	jslog("late load functions: " + g_late_load_functions.length);
	for (var i = 0; i != g_late_load_functions.length; i++) {
		var f = g_late_load_functions[i];
		f.call();
	}
	window.self.loaded = true;
	sw.jslog("runAfterAllLoaded finished");
}
function addLoadEvent(func) {
	if (window.self.loaded) {
		setTimeout(func, 0);
		return;
	}
	g_load_functions.push(func);
}
function addLateLoadEvent(func) {
	if (window.self.loaded) {
		setTimeout(func, 0);
		return;
	}
	g_late_load_functions.push(func);
}
function pageLoaded() {
	CustomEvent.observe("body_clicked", contextMenuHide);
	setMandatoryExplained.defer();
}
function addRenderEvent(func) {
	if (isRenderEventRegistered(func))
		return;
	addRenderEventToArray(func);
}
function addRenderEventToArray(func) {
	if (window.self.loaded) {
		setTimeout(func, 0);
		return;
	}
	g_render_functions.push(func);
}
function isRenderEventRegistered(func) {
	var s = func.toString();
	for(var i = 0; i < g_render_functions.length; i++)
		if (g_render_functions[i].toString() == s)
			return true;
	return false;
}
function addRenderEventLogged(func, name, funcname) {
	addRenderEventToArray(function() {
		CustomEvent.fire('glide_optics_inspect_put_cs_context', funcname, 'load');
		var sw = new StopWatch();
		var __rtmr = new Date();
		try {
			func();
		} catch(e) {
			jslog('***************************************************');
			jslog('A script has encountered an error in render events');
			jslog(e);
			jslog('Script ends. Continuing happily');
			jslog('***************************************************');
		}
		CustomEvent.fire('page_timing', { name: 'CSOL', child: { description: name.substr(7), sys_id: g_event_handler_ids[funcname], source_table: 'sys_script_client' }, startTime: __rtmr, win: window });
		sw.jslog(name);
		CustomEvent.fire('glide_optics_inspect_pop_cs_context', funcname, 'load');
	});
}
function addTopRenderEvent(func) {
	if (window.self.loaded) {
		setTimeout(func, 0);
		return;
	}
	g_render_functions.unshift(func);
}
function addAfterPageLoadedEvent(func) {
	if (window.self.loaded) {
		setTimeout(func, 0);
		return;
	}
	g_afterPageLoadedFunctions.push(func);
}
function runAfterPageLoadedEvents() {
	jslog("after page loaded starting");
	var sw = new StopWatch();
	for (var i = 0; i != g_afterPageLoadedFunctions.length; i++) {
		var f = g_afterPageLoadedFunctions[i];
		f.call();
	}
	sw.jslog("after page loaded complete, functions called: " + g_afterPageLoadedFunctions.length);
	g_afterPageLoadedFunctions = [];
}
addLateLoadEvent(function() {
	setTimeout(runAfterPageLoadedEvents, 30);
});
function addUnloadEvent(func) {
	Event.observe(window, 'unload', func, false);
}
function addTinymceLoadEvent(id, func) {
	CachedEvent.after('tinyeditor_init.'+id, func);
}
function fireTinymceLoadEvent(id, ed) {
	CachedEvent.emit('tinyeditor_init.'+id, ed);
}
function gel(id) {
	if (typeof id != 'string')
		return id;
	return document.getElementById(id);
}
function cel(name, parent) {
  var e = document.createElement(name);
  if (arguments.length > 1)
    parent.appendChild(e);
  return e;
}
function rel(id) {
	var e = gel(id);
	if (e)
		e.parentNode.removeChild(e);
}
function addChild(element) {
	getFormContentParent().appendChild(element);
}
function inner(id, data) {
	var el = gel(id);
	if (el != null)
		el.innerHTML = data;
}
function clearNodes(t) {
  if (!t)
  	return;
  while (t.hasChildNodes())
		t.removeChild(t.childNodes[0]);
}
function getTopWindow() {
	var topWindow = window.self;
	try {
		while (topWindow.GJSV && topWindow != topWindow.parent && topWindow.parent.GJSV) {
			topWindow = topWindow.parent;
		}
	} catch (e) {}
	return topWindow;
}
function inFrame() {
	return getTopWindow() != window.self;
}
function getMainWindow() {
	var topWindow = getTopWindow();
	return topWindow['gsft_main'];
}
function getMainFormWindow() {
	var topWindow = getTopWindow();
	return topWindow['gsft_main_form'];
}
function getNavWindow() {
	var topWindow = getTopWindow();
	return topWindow['gsft_nav'];
}
function isPolarisWrapper() {
	return top.NOW && top.NOW.isPolarisWrapper === "true"
}
function isPolaris() {
	return window.NOW && window.NOW.isPolarisEnabled === "true" && isPolarisWrapper();
}
function reloadWindow(win, preventStackClearance) {
	var href = win.location.href;
	var len = href.length;
	if (href.endsWith('#') && len > 2) {
		if (win.frames['iframe_live_feed']) {
			href = href.substring(0, len-2);
		} else {
			href = href.substring(0, len-1);
		}
	}
	href = addDomainParameters(href);
	if (preventStackClearance) {
		var url = new GlideURL(href);
		url.setEncode(false);
		url.deleteParam('sysparm_clear_stack');
		href = url.getURL();
	}
	
	if (typeof g_form !== 'undefined' && window.isPolaris()) {
		CustomEvent.fireTop("gsft.formSubmit", {params: {target: win.location.pathname + new URL(href).search}, route: 'classic', iframeElId: (window.frameElement && window.frameElement.id) || null, subFrame: (window.location !== window.parent.location) ? win : null});
		return;
	}
	win.location.href = href;
}
function addDomainParameters(href) {
	var url = new GlideURL(href);
	if (url.getParam('sysparm_domain') == 'picker') {
		url.deleteParam('sysparm_domain');
	} else {
		var domainElement = gel('sysparm_domain');
		if (domainElement) {
			if (domainElement.value != 'picker') {
				url.addParam('sysparm_domain', domainElement.value);
				var domainScope = gel('sysparm_domain_scope');
				if (domainScope) {
					url.addParam('sysparm_domain_scope', domainScope.value);
				}
			}
		}
	}
	url.addParam('sysparm_nostack', 'true');
	url.setEncode(false);
	return url.getURL();
}
function addOnSubmitEvent(form, func, funcname) {
  if (!form)
	  return;
  var oldonsubmit = form.onsubmit;
  if (typeof form.onsubmit != 'function')
      form.onsubmit = func;
  else {
	form.onsubmit = function() {
		var formFuncCalled = false;
		try {
			if (oldonsubmit() == false)
				return false;
			CustomEvent.fire('glide_optics_inspect_put_cs_context', funcname, 'submit');
			formFuncCalled = true;
			var returnvalue = func();
			formFuncCalled = false;
			CustomEvent.fire('glide_optics_inspect_pop_cs_context', funcname, 'submit');
			if (returnvalue == false)
				return false;
			return true;
		}
		catch (ex) {
			if (formFuncCalled)
				CustomEvent.fire('glide_optics_inspect_pop_cs_context', funcname, 'load');
			formFuncError("onSubmit", func, ex);
			return false;
		}
	}
  }
  form = null;
}
function formFuncError(type, func, ex) {
	var funcStr = func.toString();
funcStr = funcStr.replace(/onSubmit[a-fA-F0-9]{32}\(/, "onSubmit(");
	var msg;
	if (g_user.hasRole("client_script_admin"))
msg = type + " script error: " + ex.toString() + ":<br/>" + funcStr.replace(/\n/g, "<br/>").replace(/\s/g, "&nbsp;");
	else
		msg = "Submit canceled due to a script error - please contact your System Administrator";
	g_form.addErrorMessage(msg);
	CustomEvent.fire('glideform:script_error', type + " script error: " + ex.toString() + "\n" + funcStr);
}
function hide(element) {
	var e = typeof element === "string" ? gel(element) : element;
	if (!e)
		return;
	e.style.display = 'none';
	_frameChanged();
}
function show(element) {
	var e = typeof element === "string" ? gel(element) : element;
	if (!e)
		return;
	if (e.tagName == "TR")
		e.style.display = 'table-row';
	else
		e.style.display = 'block';
	_frameChanged();
}
function hideObject(o, visibilityOnly) {
	if (!o)
		return;
	o.style.visibility = "hidden";
	if (!visibilityOnly)
		o.style.display = "none";
	_frameChanged();
}
function showObject(o, visibilityOnly) {
	if (!o)
		return;
	o.style.visibility = "visible";
	if (!visibilityOnly)
		o.style.display = "block";
	_frameChanged();
}
function showObjectInline(o) {
	if (!o)
		return;
	o.style.visibility="visible";
	o.style.display = "inline";
	_frameChanged();
}
function showObjectInlineBlock(o) {
	if (!o)
		return;
	o.style.visibility="visible";
	o.style.display = "inline-block";
	_frameChanged();
}
function showObjectFlex(o) {
	if (!o)
		return;
	o.style.visibility = "visible";
	o.style.display = "flex";
	_frameChanged();
}
function focusFirstElement(form) {
	try {
		var e = findFirstEditableElement(form);
		if (e) {
  			Field.activate(e);
  			triggerEvent(e, 'focus', true);
		}
	} catch (ex) {}
}
function findFirstEditableElement(form) {
	var tags = ['input', 'select', 'textarea'];
	var elements = form.getElementsByTagName('*');
	for (var i = 0, n = elements.length; i < n; i++) {
		var element = elements[i];
		if (element.type == 'hidden')
			continue;
		var tagName = element.tagName.toLowerCase();
		if (!tags.include(tagName))
			continue;
		element = $(element);
		var formGroup = element.up('.form-group');
		if (!element.disabled &&
				(window.g_accessibility ? true : !element.readOnly) &&
				element.style.visibility != 'hidden' &&
				element.style.display != 'none' &&
element.offsetParent != null &&
				formGroup &&
				formGroup.style.display != 'none')
			return element;
	}
	return null;
}
function triggerEvent(element, eventType, canBubble, memo) {
	canBubble = (typeof(canBubble) == undefined) ? true : canBubble;
	if (element && element.disabled && eventType == "change" && element.onchange) {
		element.onchange.call(element);
		return;
	}
	if (element.fireEvent) {
		element.fireEvent('on' + eventType);
	}  else {
		var evt = document.createEvent('HTMLEvents');
		evt.initEvent(eventType, canBubble, true);
		evt.memo = memo;
		element.dispatchEvent(evt, true);
	}
}
var g_form_dirty_message;
function onWindowClose() {
	if (typeof g_form === 'undefined')
		return;
	if (!g_form.submitted && g_form.modified) {
		g_submitted = false;
		setTimeout(function() {
			CustomEvent.fireTop('glide:nav_form_dirty_cancel_stay', window);
		}, 750);
		return g_form_dirty_message;
	}
	g_form.submitted = false;
}
function jslog(msg, src, dateTime) {
	try {
		if (!src) {
			var path = window.self.location.pathname;
src = path.substring(path.lastIndexOf('/') + 1);
		}
		if (window.self.opener && window != window.self.opener) {
			if (window.self.opener.jslog) {
			   window.self.opener.jslog(msg, src, dateTime);
			}
		} else if (parent && parent.jslog && jslog != parent.jslog) {
			parent.jslog(msg, src, dateTime);
		} else if (parent.parent && parent.parent.jslog && jslog != parent.parent.jslog) {
			parent.parent.jslog(msg, src, dateTime);
		} else {
			if (window.console && window.console.log)
				console.log(msg);
		}
	} catch (e) {}
}
function getXMLIsland(name) {
	var xml = gel(name);
	if (xml == null)
	   return null;
xml = "<xml>" + xml.innerHTML + "</xml>";
	xml = loadXML(xml);
	return xml;
}
function lock(me, ref, edit_id, nonedit_id, current_value_id, update_id, keep_focus) {
	if (me)
		me.style.display = "none";
	var unlock = gel(ref + '_unlock');
	unlock.style.display = "";
	var edit_span = gel(edit_id);
	edit_span.style.display = "none";
	var nonedit_span = gel(nonedit_id);
	nonedit_span.style.display = "inline-block";
	var current_value = gel(current_value_id);
	var the_value = "";
	if (current_value.options) {
		for(var i=0; i<current_value.options.length ;i++) {
			if (i > 0)
				the_value += g_glide_list_separator;
			the_value += current_value.options[i].text;
			}
		}
	else
		the_value = current_value.value;
	var update_element = gel(update_id);
update_element.innerHTML = htmlEscape(the_value);
	if (keep_focus)
		unlock.focus();
}
function unlock(me, ref, edit_id, nonedit_id) {
	if (me)
		me.style.display = "none";
	var unlock = gel(ref + '_lock');
	if (unlock)
		unlock.style.display = "";
	var edit_span = gel(edit_id);
	edit_span.style.display = "";
	var nonedit_span = gel(nonedit_id);
	nonedit_span.style.display = "none";
	var list_foc = window.g_accessibility ? gel("select_0" + ref) : gel("sys_display." + ref);
	if (list_foc) {
		try {
			list_foc.focus();
		} catch (e) {
		}
	}
}
function setMandatoryExplained(enforce) {
	var showexp = gel('mandatory_explained');
	if (!showexp)
	  return;
	if (enforce || foundAMandatoryField())
		showexp.style.display = "inline";
	else
		showexp.style.display = "none";
}
function foundAMandatoryField() {
	var spanTags = document.getElementsByTagName('span');
	if (!spanTags)
	  return false;
	for (var c = 0, n = spanTags.length;c != n; ++c) {
		var spanTag = spanTags[c];
		var id = spanTag.id;
		if (!id)
		  continue;
		if (id.indexOf('status.') == 0) {
			var mandatory = spanTag.getAttribute("mandatory") + "";
			if (mandatory == 'true')
				return true;
		}
	}
	return false;
}
var _frameChangedTimer = null;
function _frameChanged() {
	if (_frameChangedTimer)
		clearTimeout(_frameChangedTimer);
	_frameChangedTimer = setTimeout(function(){
		_frameChangedTimer = null;
		CustomEvent.fire('frame.resized');
		CustomEvent.fire('refresh.event');
	}, 300);
}
var _returnedValue = null;
var _returnedValueTimeout = null;
function getFormContentParent() {
	if (_returnedValue) {
		clearTimeout(_returnedValueTimeout);
		_returnedValueTimeout = setTimeout(function() {
			_returnedValue = null;
		}, 2000);
		return _returnedValue;
	}
	var glideOverlay = $(document.body).select("div.glide_overlay");
	var exposeMask = $('glide_expose_mask');
var bsModal = document.querySelector('.modal.in');
	var validFormElementCount = document.querySelectorAll('.modal.in input:not([type="hidden"])').length;
	if (glideOverlay.length > 0 && exposeMask && exposeMask.visible())
		_returnedValue = glideOverlay[0];
	
	if (bsModal && validFormElementCount > 0)
		return bsModal;
	if (typeof g_section_contents == 'undefined' || !g_section_contents)
		g_section_contents = $(document.body).select(".section_header_content_no_scroll");
	if (g_section_contents.length > 0)
		_returnedValue = g_section_contents[0];
	else
		_returnedValue = document.body;
	return _returnedValue;
}
function addClassName(element, name) {
	if (!element)
		return;
	$(element).addClassName(name);
}
function removeClassName(element, name) {
	if (!element)
		return;
	$(element).removeClassName(name);
}
function hasClassName(element, name) {
	if (!element)
		return;
	if (!element.hasClassName)
		return;
	return $(element).hasClassName(name);
}
function getIFrameDocument(iframe) {
	  return iframe.contentWindow ? iframe.contentWindow.document : (iframe.contentDocument || null);
}
function writeTitle(element, title) {
	element.title = title;
	if (element.alt)
		element.alt = title;
	if (element.getAttribute('disabled') == 'disabled')
		element.style.pointerEvents = 'auto';
}
function writeDynamicTitle(element, title) {
	element.setAttribute("data-dynamic-title", title);
}
function contextMenuHide(e) {
	if (typeof contextHide === 'undefined')
		return;
	if (!isMSIE && e) {
		if (isTouchDevice && !isTouchRightClick(e)) {
			if (e.type == 'touchend' && $(e.target).up('.context_menu'))
				return;
			contextHide();
		} else if (isLeftClick(e)) {
			contextHide();
		}
	} else
		contextHide();
}
function trim(s) {
return s.replace(/^\s+|\s+$/g,'');
}
function htmlEscape(s) {
return s.replace(/&/g, "&amp;").replace(/'/g, "&#39;").replace(/"/g,
"&quot;").replace(/</g, "&#60;").replace(/>/g, "&#62;");
}
function htmlEscapeQuote(s) {
return s.replace(/'/g, "&#39;");
}
function htmlEscapeDoubleQuote(s) {
return s.replace(/"/g, "&quot;");
}
function loadXML(r) {
	var xml = r.responseXML;
	if (typeof xml != 'undefined')
		return xml;
	var dom = null;
	try {
dom = new DOMParser().parseFromString(r, 'text/xml');
	} catch (e) {}
	return dom;
}
if (!window.GwtDateTimePicker) {
	window.GwtDateTimePicker = function(name, format, showTime) {
ScriptLoader.getScripts('scripts/classes/GwtDateTimePicker.js',function() {
			new GwtDateTimePicker(name, format, showTime);
		});
	}
}
;
/*! RESOURCE: /scripts/functions/xmlhttp.js */
var isMicrosoftXMLHTTP = false;
var XML_HTTP = "xmlhttp.do";
function AJAXEvaluateSynchronously(expression) {
	var ajax = new GlideAjax("AJAXEvaluator");
	ajax.addParam("sysparm_expression", expression);
	ajax.getXMLWait();
	return ajax.getAnswer();
}
function AJAXEvaluate(expression, callbackAndArgs) {
	var ajax = new GlideAjax("AJAXEvaluator");
	ajax.addParam("sysparm_expression", expression);
	ajax.getXML(AJAXEvaluateResponse, "", callbackAndArgs);
}
function AJAXEvaluateResponse(response, callbackAndArgs) {
  var xml = response.responseXML;
  var answer = xml.documentElement.getAttribute("answer");
  
  if (callbackAndArgs != null) { 
	  var callback = callbackAndArgs;
	  var args = new Array();
	
	  if (typeof callbackAndArgs != "function" && callbackAndArgs.length > 1) {
		callback = callbackAndArgs.splice(0, 1)[0];
		args = callbackAndArgs;
	  }
     callback.call(answer, answer, response, args);
  }
}
function AJAXFunction(func, args, callback, callbackArgs) {
	for(var i = 0; i < args.length; i++) {
		if (typeof args[i] == "function")
			continue;
args[i] = args[i].replace(/"/g, "\\\"");
	}
	var expression = func + '("' + args.join('","') + '");';
	var newArgs = new Array();
	newArgs.push(callback);
	newArgs = newArgs.concat(callbackArgs);
	AJAXEvaluate(expression, newArgs);
}
function serverRequest(url, loadedFunction, args) {
	ajaxRequest(url, null, true, loadedFunction, args);
}
function serverRequestWait(url, postString) {
	var req = ajaxRequest(url, postString, false);
    if (req.status == 200)
    	return req;
}
function serverRequestPost(url, postString, loadedFunction, args) {
	ajaxRequest(url, postString, true, loadedFunction, args);
}
function serverRequestPostJSON(url, postString, loadedFunction, args) {
	ajaxRequest(url, postString, true, loadedFunction, args, true);
}
function ajaxRequest(url, postString, async, responseFunction, responseFunctionArgs, isJSONType) {
	var req = getRequest();
	showLoading();  	
	
	if (req) {
		if (async && (responseFunction != null))
			req.onreadystatechange = function() { processReqChange(req, responseFunction, responseFunctionArgs); };
			
		req.open((postString ? "POST" : "GET"), url, async);
		
		if (typeof g_ck != 'undefined' && g_ck != "")
        	req.setRequestHeader('X-UserToken', g_ck);
		if (window.transaction_source)
			req.setRequestHeader("X-Transaction-Source", window.transaction_source);
    	
		if (postString) {
req.setRequestHeader('Content-Type', isJSONType ? 'application/json' : 'application/x-www-form-urlencoded; charset=UTF-8');
			if (isJSONType) {
			    req.responseType = "json";
			}
			req.send(postString);
		} else {
			if (isMicrosoftXMLHTTP)
				req.send();
			else
				req.send(null);
		}
	}
	
	if (!async)
		hideLoading();
	return req;
}
function getRequest() {
    var req = null;
    
    if (window.XMLHttpRequest) {
        req = new XMLHttpRequest();
    } else if (window.ActiveXObject) {
        isMicrosoftXMLHTTP = true;
        req = new ActiveXObject("Microsoft.XMLHTTP");
    }
    
	return req;
}
function processReqChange(r, docLoadedFunction, docLoadedFunctionArgs) {
    if (r.readyState == 4) {
        hideLoading();
        if (r.status == 200) {
        	lastActivity = new Date();
			docLoadedFunction(r, docLoadedFunctionArgs);
         } else {
try {
	         	window.status = "There was a problem retrieving the XML data: " + r.statusText;
			} catch (e) { }
         }
    }
}
function showLoading() {
	try {
		CustomEvent.fireAll("ajax.loading.start");
	} catch(e) {}
}
function hideLoading() {
	try {
		CustomEvent.fireAll("ajax.loading.end");
	} catch(e) {}
}
;
/*! RESOURCE: /scripts/classes/event/GwtObservable.js */
var GwtObservable = Class.create({
	initialize: function() {
		this.events = {};
	},
	on: function(name, func) {
		if (!func || typeof func != 'function')
			return;
		
this.events = this.events || {};
		if (!this.events[name])
			this.events[name] = [];
			
		this.events[name].push(func);
	},
	
	forward: function(name, element, func) {
		GwtObservable.prototype.on.call(this, name, func); 
		Event.observe(element, name, function(e) {
			this.fireEvent(e.type, this, e);
		}.bind(this));
	},
	
	un: function(name, func) {
		if (!this.events[name])
			return;
		var i = this.events[name].indexOf(func);
		if(i !== -1)
			this.events[name].splice(i, 1);
	},
	
	unAll: function(name) {
		if (this.events[name])
			delete this.events[name];
	},
	
	isFiring: function() {
		return this._isFiring;
	},
	fireEvent: function() {
		if (this.suppressEvents === true)
			return true;
		
this.events = this.events || {};
		var args = $A(arguments);
		var name = args.shift();
		var eventList = this.events[name];
		
		if (!eventList)
			return true;
		var event = eventList.slice();
		
		this._isFiring = true;
for (var i = 0, l = event.length; i < l; i++) {
			var ev = event[i];
			if (ev == null)
				continue;
				
			if (ev.apply(this, args) === false) {
				this._isFiring = false;
				return false;
			}
		}
		
		this._isFiring = false;
		return true;
	},
	toString: function() { return 'GwtObservable'; }
});
;
/*! RESOURCE: /scripts/doctype/CustomEventManager.js */
var NOW = NOW || {};
var CustomEventManager = (function (existingCustomEvent) {
	"use strict";
	var events = (existingCustomEvent && existingCustomEvent.events) || {};
	var isFiringFlag = false;
	var trace = false;
	var suppressEvents = false;
	var NOW_MSG = 'NOW.PostMessage';
	var g_concourse_onmessage_enforce_same_origin = 'true'.toLowerCase() === 'true';
	var g_concourse_onmessage_enforce_same_origin_whitelist = '';
	function observe(eventName, fn){
		if (trace)
			jslog("$CustomEventManager observing: " + eventName);
		on(eventName, fn);
	}
	function on(name, func) {
		if (!func || typeof func !== 'function')
			return;
		if (typeof name === 'undefined')
			return;
		if (!events[name])
			events[name] = [];
		events[name].push(func);
	}
	function un(name, func) {
		if (!events[name])
			return;
		var idx = -1;
		for (var i = 0; i < events[name].length; i++) {
			if (events[name][i] === func) {
				idx = i;
				break;
			}
		}
		if (idx >= 0)
			events[name].splice(idx, 1)
	}
	function unAll(name) {
		if (events[name])
			delete events[name];
	}
	function fire(eventName, args){
		if (trace)
			jslog("$CustomEventManager firing: " + eventName + " args: " + arguments.length);
		return fireEvent.apply(null, arguments);
	}
	function fireUp(eventName, args){
		var win = window;
		while (win){
			try {
				if (win.CustomEvent.fireEvent.apply(null, arguments) === false)
					return;
				win = win.parent === win ? null : win.parent;
			}catch(e){
				return;
			}
		}
	}
	function fireEvent() {
		if (suppressEvents)
			return true;
		var args = Array.prototype.slice.apply(arguments);
		var name = args.shift();
		var eventList = events[name];
		if (!eventList)
			return true;
		var event = eventList.slice();
		isFiringFlag = true;
for (var i = 0, l = event.length; i < l; i++) {
			var ev = event[i];
			if (!ev)
				continue;
			if (ev.apply(null, args) === false) {
				isFiringFlag = false;
				return false;
			}
		}
		isFiringFlag = false;
		return true;
	}
	function isFiring() {
		return isFiringFlag;
	}
	function forward(name, element, func) {
		on(name, func);
		element.addEventListener(name, function(e) {
			fireEvent(e.type, this, e);
		}.bind(api));
	}
	function isOriginInWhiteList(origin, whitelistStr) {
		if (!whitelistStr) {
			return false;
		}
var delimiterRegex = /[\n, ]/;
		var whitelist = whitelistStr.split(delimiterRegex)
			.filter(function(whiteListedOrigin) {
				return whiteListedOrigin;
			})
			.map(function(whiteListedOrigin) {
				return whiteListedOrigin.toLowerCase();
			});
		if (~whitelist.indexOf(origin.toLowerCase())) {
			return true;
		}
		return false;
	}
	function shouldProcessMessage(sourceOrigin) {
		if (!g_concourse_onmessage_enforce_same_origin || sourceOrigin === window.location.origin) {
			return true;
		}
		return isOriginInWhiteList(sourceOrigin, g_concourse_onmessage_enforce_same_origin_whitelist);
	}
    function registerPostMessageEvent() {
        if (NOW.registeredPostMessageEvent) {
            return;
        }
        if (!window.postMessage) {
            return;
        }
        window.addEventListener('message', function (event) {
            if (!shouldProcessMessage(event.origin)) {
                console.warn('Incoming message ignored due to origin mismatch.');
                return;
            }
            var nowMessageJSON = event.data;
            var nowMessage;
            try {
                nowMessage = JSON.parse(nowMessageJSON.toString());
            } catch (e) {
                return;
            }
            if (!nowMessage.type == NOW_MSG) {
                return;
            }
            fire(nowMessage.eventName, nowMessage.args);
        }, false);
        NOW.registeredPostMessageEvent = true;
    }
	function doPostMessage(win, event, msg, targetOrigin) {
		var nowMessage = {type: NOW_MSG, eventName: event, args: msg};
		var nowMessageJSON;
		if (!win || !win.postMessage) {
			return
		}
		nowMessageJSON = JSON.stringify(nowMessage);
		win.postMessage(nowMessageJSON, targetOrigin);
	}
	function fireTop(eventName, args){
		if (trace)
			jslog("$CustomEventManager firing: " + eventName + " args: " + arguments.length);
		fireEvent.apply(null, arguments);
		var t = getTopWindow();
		if (t !== null && window !== t)
			t.CustomEvent.fire(eventName, args);
	}
	function fireAll(eventName, args) {
		if (trace)
			jslog("$CustomEventManager firing: " + eventName + " args: " + arguments.length);
		var topWindow = getTopWindow();
		if (topWindow !== window.self)
			CustomEvent.fireEvent(eventName, args);
		notifyAllFrom(topWindow);
		function notifyAllFrom(rootFrame) {
			var childFrame;
			rootFrame.CustomEvent.fireEvent(eventName, args);
			for (var i = 0; i < rootFrame.frames.length; i++) {
				try {
					childFrame = rootFrame.frames[i];
					if (!childFrame)
						continue;
					if (childFrame.CustomEvent && typeof childFrame.CustomEvent.fireEvent === "function") {
						notifyAllFrom(childFrame);
					}
				} catch(e) {
				}
			}
		}
	}
	function fireToWindow(targetWindow, eventName, args, usePostMessage, targetOrigin) {
		if (trace)
			jslog("$CustomEventManager firing: " + eventName + " args: " + args.length);
		if (usePostMessage) {
			doPostMessage(targetWindow, eventName, args, targetOrigin);
		} else {
			targetWindow.CustomEvent.fireEvent(eventName, args);
		}
	}
	function getTopWindow() {
		var topWindow = window.self;
		try {
			while (topWindow.CustomEvent.fireEvent && topWindow !== topWindow.parent && topWindow.parent.CustomEvent.fireEvent) {
				topWindow = topWindow.parent;
			}
		} catch (e) {}
		return topWindow;
	}
	function isTopWindow() {
		return getTopWindow() == window.self;
	}
	function jslog(msg, src, dateTime) {
		try {
			if (!src) {
				var path = window.self.location.pathname;
src = path.substring(path.lastIndexOf('/') + 1);
			}
			if (window.self.opener && window != window.self.opener) {
				if (window.self.opener.jslog) {
					window.self.opener.jslog(msg, src, dateTime);
				}
			} else if (parent && parent.jslog && jslog != parent.jslog) {
				parent.jslog(msg, src, dateTime);
			} else {
				if (window.console && window.console.log)
					console.log(msg);
			}
		} catch (e) {
		}
	}
	var api =  {
		set trace(value) {
			trace = !!value;
		},
		get trace() {
			return trace;
		},
		set suppressEvents(value) {
			suppressEvents = !!value;
		},
		get suppressEvents() {
			return suppressEvents;
		},
		get events() {
			return events;
		},
		set events(value) {
			events = value;
		},
		on: on,
		un: un,
		unAll: unAll,
		forward: forward,
		isFiring: isFiring,
		fireEvent: fireEvent,
		observe: observe,
		fire: fire,
		fireTop: fireTop,
		fireAll: fireAll,
		fireToWindow: fireToWindow,
		isTopWindow: isTopWindow,
		fireUp: fireUp,
		toString: function() { return 'CustomEventManager'; }
	};
	registerPostMessageEvent();
	return api;
})(NOW.CustomEvent);
NOW.CustomEvent = CustomEventManager;
if (typeof CustomEvent !== "undefined") {
	CustomEvent.observe = NOW.CustomEvent.observe.bind(NOW.CustomEvent);
	CustomEvent.fire = NOW.CustomEvent.fire.bind(NOW.CustomEvent);
	CustomEvent.fireUp = NOW.CustomEvent.fireUp.bind(NOW.CustomEvent);
	CustomEvent.fireTop = NOW.CustomEvent.fireTop.bind(NOW.CustomEvent);
	CustomEvent.fireAll = NOW.CustomEvent.fireAll.bind(NOW.CustomEvent);
	CustomEvent.fireToWindow = NOW.CustomEvent.fireToWindow.bind(NOW.CustomEvent);
	CustomEvent.on = NOW.CustomEvent.on.bind(NOW.CustomEvent);
	CustomEvent.un = NOW.CustomEvent.un.bind(NOW.CustomEvent);
	CustomEvent.unAll = NOW.CustomEvent.unAll.bind(NOW.CustomEvent);
	CustomEvent.forward = NOW.CustomEvent.forward.bind(NOW.CustomEvent);
	CustomEvent.isFiring = NOW.CustomEvent.isFiring.bind(NOW.CustomEvent);
	CustomEvent.fireEvent = NOW.CustomEvent.fireEvent.bind(NOW.CustomEvent);
	CustomEvent.events = NOW.CustomEvent.events;
	CustomEvent.isTopWindow = NOW.CustomEvent.isTopWindow.bind(NOW.CustomEvent);
} else {
	window.CustomEvent = NOW.CustomEvent;
}
;
/*! RESOURCE: /scripts/lib/jquery/jquery_clean.js */
(function() {
	if (!window.jQuery)
		return;
	if (!window.$j_glide)
		window.$j = jQuery.noConflict();
	if (window.$j_glide && jQuery != window.$j_glide) {
		if (window.$j_glide)
		jQuery.noConflict(true);
		window.$j = window.$j_glide;
	}
})();
;
/*! RESOURCE: /scripts/lib/jquery/jquery-2.2.3.min.js */
/*! jQuery v2.2.3-snc2 | (c) jQuery Foundation | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m="2.2.3-snc2",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return e.call(this)},get:function(a){return null!=a?a<0?this[a+this.length]:this[a]:e.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a){return n.each(this,a)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(e.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:g,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],"__proto__"!==b&&g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=a&&a.toString();return!n.isArray(a)&&b-parseFloat(b)+1>=0},isPlainObject:function(a){var b;if("object"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;if(a.constructor&&!k.call(a,"constructor")&&!k.call(a.constructor.prototype||{},"isPrototypeOf"))return!1;for(b in a);return void 0===b||k.call(a,b)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?i[j.call(a)]||"object":typeof a},globalEval:function(a){var b,c=eval;(a=n.trim(a))&&(1===a.indexOf("use strict")?(b=d.createElement("script"),b.text=a,d.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(s(a)){for(c=a.length;d<c;d++)if(!1===b.call(a[d],d,a[d]))break}else for(d in a)if(!1===b.call(a[d],d,a[d]))break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):g.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:h.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)(d=!b(a[f],f))!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,g=0,h=[];if(s(a))for(d=a.length;g<d;g++)null!=(e=b(a[g],g,c))&&h.push(e);else for(g in a)null!=(e=b(a[g],g,c))&&h.push(e);return f.apply([],h)},guid:1,proxy:function(a,b){var c,d,f;if("string"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a))return d=e.call(arguments,2),f=function(){return a.apply(b||this,d.concat(e.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f},now:Date.now,support:l}),"function"==typeof Symbol&&(n.fn[Symbol.iterator]=c[Symbol.iterator]),n.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(a,b){i["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=!!a&&"length"in a&&a.length,c=n.type(a);return"function"!==c&&!n.isWindow(a)&&("array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a)}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=fa(),z=fa(),A=fa(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+M+"))|)"+L+"*\\]",O=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+N+")*)|.*)\\)|)",P=new RegExp(L+"+","g"),Q=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),R=new RegExp("^"+L+"*,"+L+"*"),S=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),T=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),U=new RegExp(O),V=new RegExp("^"+M+"$"),W={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M+"|[*])"),ATTR:new RegExp("^"+N),PSEUDO:new RegExp("^"+O),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},X=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,$=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,_=/[+~]/,aa=/'|\\/g,ba=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),ca=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},da=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(xa){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ea(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+" "]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(aa,"\\$&"):b.setAttribute("id",k=u),r=g(a),h=r.length,l=V.test(k)?"#"+k:"[id='"+k+"']";while(h--)r[h]=l+" "+pa(r[h]);s=r.join(","),w=_.test(a)&&na(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(Q,"$1"),b,d,e)}function fa(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ga(a){return a[u]=!0,a}function ha(a){var b=n.createElement("div");try{return!!a(b)}catch(xa){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ia(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function ja(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ka(a){return function(b){return"input"===b.nodeName.toLowerCase()&&b.type===a}}function la(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function ma(a){return ga(function(b){return b=+b,ga(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function na(a){return a&&void 0!==a.getElementsByTagName&&a}c=ea.support={},f=ea.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&"HTML"!==b.nodeName},m=ea.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",da,!1):e.attachEvent&&e.attachEvent("onunload",da)),c.attributes=ha(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ha(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Z.test(n.getElementsByClassName),c.getById=ha(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(void 0!==b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){var c=void 0!==a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return void 0!==b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if(void 0!==b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Z.test(n.querySelectorAll))&&(ha(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\r\\' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ha(function(a){var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Z.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ha(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",O)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Z.test(o.compareDocumentPosition),t=b||Z.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d||(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return ja(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?ja(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ea.matches=function(a,b){return ea(a,null,null,b)},ea.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(T,"='$1']"),c.matchesSelector&&p&&!A[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(xa){}return ea(b,n,null,[a]).length>0},ea.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ea.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ea.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ea.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ea.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ea.selectors={cacheLength:50,createPseudo:ga,match:W,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ba,ca),a[3]=(a[3]||a[4]||a[5]||"").replace(ba,ca),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ea.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ea.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return W.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&U.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ba,ca).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||void 0!==a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ea.attr(d,a);return null==e?"!="===b:!b||(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(P," ")+" ").indexOf(c)>-1:"|="===b&&(e===c||e.slice(0,c.length+1)===c+"-"))}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),!1===t)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return(t-=e)===d||t%d==0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ea.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ga(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ga(function(a){var b=[],c=[],d=h(a.replace(Q,"$1"));return d[u]?ga(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ga(function(a){return function(b){return ea(a,b).length>0}}),contains:ga(function(a){return a=a.replace(ba,ca),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ga(function(a){return V.test(a||"")||ea.error("unsupported lang: "+a),a=a.replace(ba,ca).toLowerCase(),function(b){var c;do{if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return(c=c.toLowerCase())===a||0===c.indexOf(a+"-")}while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return!1===a.disabled},disabled:function(a){return!0===a.disabled},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,!0===a.selected},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Y.test(a.nodeName)},input:function(a){return X.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:ma(function(){return[0]}),last:ma(function(a,b){return[b-1]}),eq:ma(function(a,b,c){return[c<0?c+b:c]}),even:ma(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:ma(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:ma(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:ma(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ka(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=la(b);function oa(){}oa.prototype=d.filters=d.pseudos,d.setFilters=new oa,g=ea.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=R.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=S.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(Q," ")}),h=h.slice(c.length));for(g in d.filter)!(e=W[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ea.error(a):z(a,i).slice(0)};function pa(a){for(var b=0,c=a.length,d="";b<c;b++)d+=a[b].value;return d}function qa(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}function ra(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function sa(a,b,c){for(var d=0,e=b.length;d<e;d++)ea(a,b[d],c);return c}function ta(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function ua(a,b,c,d,e,f){return d&&!d[u]&&(d=ua(d)),e&&!e[u]&&(e=ua(e,f)),ga(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||sa(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ta(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ta(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ta(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function va(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=qa(function(a){return a===b},h,!0),l=qa(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[qa(ra(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return ua(i>1&&ra(m),i>1&&pa(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(Q,"$1"),c,i<e&&va(a.slice(i,e)),e<f&&va(a=a.slice(e)),e<f&&pa(a))}m.push(c)}return ra(m)}function wa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s="0",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG("*",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ta(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ea.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ga(f):f}return h=ea.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=va(b[c]),f[u]?d.push(f):e.push(f);f=A(a,wa(e,d)),f.selector=a}return f},i=ea.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(!(b=(d.find.ID(k.matches[0].replace(ba,ca),b)||[])[0]))return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=W.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ba,ca),_.test(j[0].type)&&na(b.parentNode)||b))){if(j.splice(i,1),!(a=f.length&&pa(j)))return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||_.test(a)&&na(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ha(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ha(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ia("type|href|height|width",function(a,b,c){if(!c)return a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ha(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ia("value",function(a,b,c){if(!c&&"input"===a.nodeName.toLowerCase())return a.defaultValue}),ha(function(a){return null==a.getAttribute("disabled")})||ia(K,function(a,b,c){var d;if(!c)return!0===a[b]?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ea}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.uniqueSort=n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},w=n.expr.match.needsContext,x=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,y=/^.[^:#\[\.,]*$/;function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return h.call(b,a)>-1!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;b<c;b++)if(n.contains(e[b],this))return!0}));for(b=0;b<c;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+" "+a:a,d},filter:function(a){return this.pushStack(z(this,a||[],!1))},not:function(a){return this.pushStack(z(this,a||[],!0))},is:function(a){return!!z(this,"string"==typeof a&&w.test(a)?n(a):a||[],!1).length}});var A,B=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;(n.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||A,"string"==typeof a){if(!(e="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:B.exec(a))||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),x.test(e[1])&&n.isPlainObject(b))for(e in b)n.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&f.parentNode&&(this.length=1,this[0]=f),this.context=d,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?void 0!==c.ready?c.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))}).prototype=n.fn,A=n(d);var C=/^(?:parents|prev(?:Until|All))/,D={children:!0,contents:!0,next:!0,prev:!0};n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=w.test(a)||"string"!=typeof a?n(a,b||this.context):0;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?h.call(n(a),this[0]):h.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.uniqueSort(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function E(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return u(a,"parentNode")},parentsUntil:function(a,b,c){return u(a,"parentNode",c)},next:function(a){return E(a,"nextSibling")},prev:function(a){return E(a,"previousSibling")},nextAll:function(a){return u(a,"nextSibling")},prevAll:function(a){return u(a,"previousSibling")},nextUntil:function(a,b,c){return u(a,"nextSibling",c)},prevUntil:function(a,b,c){return u(a,"previousSibling",c)},siblings:function(a){return v((a.parentNode||{}).firstChild,a)},children:function(a){return v(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(D[a]||n.uniqueSort(e),C.test(a)&&e.reverse()),this.pushStack(e)}});var F=/\S+/g;function G(a){var b={};return n.each(a.match(F)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?G(a):n.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)!1===f[h].apply(c[0],c[1])&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:"")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function b(c){n.each(c,function(c,d){n.isFunction(d)?a.unique&&j.has(d)||f.push(d):d&&d.length&&"string"!==n.type(d)&&b(d)})}(arguments),c&&!b&&i()),this},remove:function(){return n.each(arguments,function(a,b){var c;while((c=n.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?n.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=g=[],c||(f=c=""),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().progress(c.notify).done(c.resolve).fail(c.reject):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=e.call(arguments),d=c.length,f=1!==d||a&&n.isFunction(a.promise)?d:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(d>1)for(i=new Array(d),j=new Array(d),k=new Array(d);b<d;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().progress(h(b,j,i)).done(h(b,k,c)).fail(g.reject):--f;return f||g.resolveWith(k,c),g.promise()}});var H;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(!0===a?--n.readyWait:n.isReady)||(n.isReady=!0,!0!==a&&--n.readyWait>0||(H.resolveWith(d,[n]),n.fn.triggerHandler&&(n(d).triggerHandler("ready"),n(d).off("ready"))))}});function I(){d.removeEventListener("DOMContentLoaded",I),a.removeEventListener("load",I),n.ready()}n.ready.promise=function(b){return H||(H=n.Deferred(),"complete"===d.readyState||"loading"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(n.ready):(d.addEventListener("DOMContentLoaded",I),a.addEventListener("load",I))),H.promise(b)},n.ready.promise();var J=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)J(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},K=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function L(){this.expando=n.expando+L.uid++}L.uid=1,L.prototype={register:function(a,b){var c=b||{};return a.nodeType?a[this.expando]=c:Object.defineProperty(a,this.expando,{value:c,writable:!0,configurable:!0}),a[this.expando]},cache:function(a){if(!K(a))return{};var b=a[this.expando];return b||(b={},K(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if("string"==typeof b)e[b]=c;else for(d in b)e[d]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][b]},access:function(a,b,c){var d;return void 0===b||b&&"string"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=a[this.expando];if(void 0!==f){if(void 0===b)this.register(a);else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in f?d=[b,e]:(d=e,d=d in f?[d]:d.match(F)||[])),c=d.length;while(c--)delete f[d[c]]}(void 0===b||n.isEmptyObject(f))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!n.isEmptyObject(b)}};var M=new L,N=new L,O=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,P=/[A-Z]/g;function Q(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(P,"-$&").toLowerCase(),"string"==typeof(c=a.getAttribute(d))){try{c="true"===c||"false"!==c&&("null"===c?null:+c+""===c?+c:O.test(c)?n.parseJSON(c):c)}catch(e){}
N.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return N.hasData(a)||M.hasData(a)},data:function(a,b,c){return N.access(a,b,c)},removeData:function(a,b){N.remove(a,b)},_data:function(a,b,c){return M.access(a,b,c)},_removeData:function(a,b){M.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=N.get(f),1===f.nodeType&&!M.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),Q(f,d,e[d])));M.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){N.set(this,a)}):J(this,function(b){var c,d;if(f&&void 0===b){if(void 0!==(c=N.get(f,a)||N.get(f,a.replace(P,"-$&").toLowerCase())))return c;if(d=n.camelCase(a),void 0!==(c=N.get(f,d)))return c;if(void 0!==(c=Q(f,d,void 0)))return c}else d=n.camelCase(a),this.each(function(){var c=N.get(this,d);N.set(this,d,b),a.indexOf("-")>-1&&void 0!==c&&N.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){N.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=M.get(a,b),c&&(!d||n.isArray(c)?d=M.access(a,b,n.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return M.get(a,c)||M.access(a,c,{empty:n.Callbacks("once memory").add(function(){M.remove(a,[b+"queue",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)(c=M.get(f[g],a+"queueHooks"))&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var R=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,S=new RegExp("^(?:([+-])=|)("+R+")([a-z%]*)$","i"),T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)};function V(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,"")},i=h(),j=c&&c[3]||(n.cssNumber[b]?"":"px"),k=(n.cssNumber[b]||"px"!==j&&+i)&&S.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do{f=f||".5",k/=f,n.style(a,b,k+j)}while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var W=/^(?:checkbox|radio)$/i,X=/<([\w:-]+)/,Y=/^$|\/(?:java|ecma)script/i,Z={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Z.optgroup=Z.option,Z.tbody=Z.tfoot=Z.colgroup=Z.caption=Z.thead,Z.th=Z.td;function $(a,b){var c=void 0!==a.getElementsByTagName?a.getElementsByTagName(b||"*"):void 0!==a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function _(a,b){for(var c=0,d=a.length;c<d;c++)M.set(a[c],"globalEval",!b||M.get(b[c],"globalEval"))}var aa=/<|&#?\w+;/;function ba(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],o=0,p=a.length;o<p;o++)if((f=a[o])||0===f)if("object"===n.type(f))n.merge(m,f.nodeType?[f]:f);else if(aa.test(f)){g=g||l.appendChild(b.createElement("div")),h=(X.exec(f)||["",""])[1].toLowerCase(),i=Z[h]||Z._default,g.innerHTML=i[1]+n.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;n.merge(m,g.childNodes),g=l.firstChild,g.textContent=""}else m.push(b.createTextNode(f));l.textContent="",o=0;while(f=m[o++])if(d&&n.inArray(f,d)>-1)e&&e.push(f);else if(j=n.contains(f.ownerDocument,f),g=$(l.appendChild(f),"script"),j&&_(g),c){k=0;while(f=g[k++])Y.test(f.type||"")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement("div")),c=d.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),l.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",l.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var ca=/^key/,da=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ea=/^([^.]*)(?:\.(.+)|)/;function fa(){return!0}function ga(){return!1}function ha(){try{return d.activeElement}catch(a){}}function ia(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)ia(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),!1===e)e=ga;else if(!e)return a;return 1===f&&(g=e,e=function(a){return n().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=n.guid++)),a.each(function(){n.event.add(this,b,e,d,c)})}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=M.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return void 0!==n&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(F)||[""],j=b.length;while(j--)h=ea.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&!1!==l.setup.call(a,d,p,g)||a.addEventListener&&a.addEventListener(o,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=M.hasData(a)&&M.get(a);if(r&&(i=r.events)){b=(b||"").match(F)||[""],j=b.length;while(j--)if(h=ea.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&!1!==l.teardown.call(a,p,r.handle)||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&M.remove(a,"handle events")}},dispatch:function(a){a=n.event.fix(a);var b,c,d,f,g,h=[],i=e.call(arguments),j=(M.get(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||!1!==k.preDispatch.call(this,a)){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())a.rnamespace&&!a.rnamespace.test(g.namespace)||(a.handleObj=g,a.data=g.data,void 0!==(d=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i))&&!1===(a.result=d)&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&("click"!==a.type||isNaN(a.button)||a.button<1))for(;i!==this;i=i.parentNode||this)if(1===i.nodeType&&(!0!==i.disabled||"click"!==a.type)){for(d=[],c=0;c<h;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>-1:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,e,f,g=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||d,e=c.documentElement,f=c.body,a.pageX=b.clientX+(e&&e.scrollLeft||f&&f.scrollLeft||0)-(e&&e.clientLeft||f&&f.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||f&&f.scrollTop||0)-(e&&e.clientTop||f&&f.clientTop||0)),a.which||void 0===g||(a.which=1&g?1:2&g?3:4&g?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,e,f=a.type,g=a,h=this.fixHooks[f];h||(this.fixHooks[f]=h=da.test(f)?this.mouseHooks:ca.test(f)?this.keyHooks:{}),e=h.props?this.props.concat(h.props):this.props,a=new n.Event(g),b=e.length;while(b--)c=e[b],a[c]=g[c];return a.target||(a.target=d),3===a.target.nodeType&&(a.target=a.target.parentNode),h.filter?h.filter(a,g):a},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ha()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===ha()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&n.nodeName(this,"input"))return this.click(),!1},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},n.Event=function(a,b){if(!(this instanceof n.Event))return new n.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&!1===a.returnValue?fa:ga):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),this[n.expando]=!0},n.Event.prototype={constructor:n.Event,isDefaultPrevented:ga,isPropagationStopped:ga,isImmediatePropagationStopped:ga,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=fa,a&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=fa,a&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=fa,a&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||n.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),n.fn.extend({on:function(a,b,c,d){return ia(this,a,b,c,d)},one:function(a,b,c,d){return ia(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return!1!==b&&"function"!=typeof b||(c=b,b=void 0),!1===c&&(c=ga),this.each(function(){n.event.remove(this,a,c,b)})}});var ja=/<script|<style|<link/i,ka=/checked\s*(?:[^=]|=\s*.checked.)/i,la=/^true\/(.*)/,ma=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function na(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function oa(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function pa(a){var b=la.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function qa(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(M.hasData(a)&&(f=M.access(a),g=M.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)n.event.add(b,e,j[e][c])}N.hasData(a)&&(h=N.access(a),i=n.extend({},h),N.set(b,i))}}function ra(a,b){var c=b.nodeName.toLowerCase();"input"===c&&W.test(a.type)?b.checked=a.checked:"input"!==c&&"textarea"!==c||(b.defaultValue=a.defaultValue)}function sa(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&"string"==typeof q&&!l.checkClone&&ka.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),sa(f,b,c,d)});if(o&&(e=ba(b,a[0].ownerDocument,!1,a,d),g=e.firstChild,1===e.childNodes.length&&(e=g),g||d)){for(h=n.map($(e,"script"),oa),i=h.length;m<o;m++)j=e,m!==p&&(j=n.clone(j,!0,!0),i&&n.merge(h,$(j,"script"))),c.call(a[m],j,m);if(i)for(k=h[h.length-1].ownerDocument,n.map(h,pa),m=0;m<i;m++)j=h[m],Y.test(j.type||"")&&!M.access(j,"globalEval")&&n.contains(k,j)&&(j.src?n._evalUrl&&n._evalUrl(j.src):n.globalEval(j.textContent.replace(ma,"")))}return a}function ta(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData($(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&_($(d,"script")),d.parentNode.removeChild(d));return a}n.extend({htmlPrefilter:function(a){return a},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=$(h),f=$(a),d=0,e=f.length;d<e;d++)ra(f[d],g[d]);if(b)if(c)for(f=f||$(a),g=g||$(h),d=0,e=f.length;d<e;d++)qa(f[d],g[d]);else qa(a,h);return g=$(h,"script"),g.length>0&&_(g,!i&&$(a,"script")),h},cleanData:function(a){for(var b,c,d,e=n.event.special,f=0;void 0!==(c=a[f]);f++)if(K(c)){if(b=c[M.expando]){if(b.events)for(d in b.events)e[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);c[M.expando]=void 0}c[N.expando]&&(c[N.expando]=void 0)}}}),n.fn.extend({domManip:sa,detach:function(a){return ta(this,a,!0)},remove:function(a){return ta(this,a)},text:function(a){return J(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return sa(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){na(this,a).appendChild(a)}})},prepend:function(){return sa(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=na(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return sa(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return sa(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData($(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return J(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!ja.test(a)&&!Z[(X.exec(a)||["",""])[1].toLowerCase()]){a=n.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData($(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return sa(this,arguments,function(b){var c=this.parentNode;n.inArray(this,a)<0&&(n.cleanData($(this)),c&&c.replaceChild(b,this))},a)}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),f=e.length-1,h=0;h<=f;h++)c=h===f?this:this.clone(!0),n(e[h])[b](c),g.apply(d,c.get());return this.pushStack(d)}});var ua,va={HTML:"block",BODY:"block"};function wa(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],"display");return c.detach(),d}function xa(a){var b=d,c=va[a];return c||(c=wa(a,b),"none"!==c&&c||(ua=(ua||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=ua[0].contentDocument,b.write(),b.close(),c=wa(a,b),ua.detach()),va[a]=c),c}var ya=/^margin/,za=new RegExp("^("+R+")(?!px)[a-z%]+$","i"),Aa=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)},Ba=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e},Ca=d.documentElement;!function(){var b,c,e,f,g=d.createElement("div"),h=d.createElement("div");function i(){h.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",h.innerHTML="",Ca.appendChild(g);var d=a.getComputedStyle(h);b="1%"!==d.top,f="2px"===d.marginLeft,c="4px"===d.width,h.style.marginRight="50%",e="4px"===d.marginRight,Ca.removeChild(g)}h.style&&(h.style.backgroundClip="content-box",h.cloneNode(!0).style.backgroundClip="",l.clearCloneStyle="content-box"===h.style.backgroundClip,g.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",g.appendChild(h),n.extend(l,{pixelPosition:function(){return i(),b},boxSizingReliable:function(){return null==c&&i(),c},pixelMarginRight:function(){return null==c&&i(),e},reliableMarginLeft:function(){return null==c&&i(),f},reliableMarginRight:function(){var b,c=h.appendChild(d.createElement("div"));return c.style.cssText=h.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",c.style.marginRight=c.style.width="0",h.style.width="1px",Ca.appendChild(g),b=!parseFloat(a.getComputedStyle(c).marginRight),Ca.removeChild(g),h.removeChild(c),b}}))}();function Da(a,b,c){var d,e,f,g,h=a.style;return c=c||Aa(a),g=c?c.getPropertyValue(b)||c[b]:void 0,""!==g&&void 0!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),c&&!l.pixelMarginRight()&&za.test(g)&&ya.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f),void 0!==g?g+"":g}function Ea(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Fa=/^(none|table(?!-c[ea]).+)/,Ga={position:"absolute",visibility:"hidden",display:"block"},Ha={letterSpacing:"0",fontWeight:"400"},Ia=["Webkit","O","Moz","ms"],Ja=d.createElement("div").style;function Ka(a){if(a in Ja)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ia.length;while(c--)if((a=Ia[c]+b)in Ja)return a}function La(a,b,c){var d=S.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||"px"):b}function Ma(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;f<4;f+=2)"margin"===c&&(g+=n.css(a,c+T[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+T[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+T[f]+"Width",!0,e))):(g+=n.css(a,"padding"+T[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+T[f]+"Width",!0,e)));return g}function Na(b,c,e){var f=!0,g="width"===c?b.offsetWidth:b.offsetHeight,h=Aa(b),i="border-box"===n.css(b,"boxSizing",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),g<=0||null==g){if(g=Da(b,c,h),(g<0||null==g)&&(g=b.style[c]),za.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+Ma(b,c,e||(i?"border":"content"),f,h)+"px"}function Oa(a,b){for(var c,d,e,f=[],g=0,h=a.length;g<h;g++)d=a[g],d.style&&(f[g]=M.get(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&U(d)&&(f[g]=M.access(d,"olddisplay",xa(d.nodeName)))):(e=U(d),"none"===c&&e||M.set(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;g<h;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Da(a,"opacity");return""===c?"1":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;if(b=n.cssProps[h]||(n.cssProps[h]=Ka(h)||h),g=n.cssHooks[b]||n.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];f=typeof c,"string"===f&&(e=S.exec(c))&&e[1]&&(c=V(a,b,e),f="number"),null!=c&&c===c&&("number"===f&&(c+=e&&e[3]||(n.cssNumber[h]?"":"px")),l.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c))}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Ka(h)||h),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Da(a,b,d)),"normal"===e&&b in Ha&&(e=Ha[b]),""===c||c?(f=parseFloat(e),!0===c||isFinite(f)?f||0:e):e}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){if(c)return Fa.test(n.css(a,"display"))&&0===a.offsetWidth?Ba(a,Ga,function(){return Na(a,b,d)}):Na(a,b,d)},set:function(a,c,d){var e,f=d&&Aa(a),g=d&&Ma(a,b,d,"border-box"===n.css(a,"boxSizing",!1,f),f);return g&&(e=S.exec(c))&&"px"!==(e[3]||"px")&&(a.style[b]=c,c=n.css(a,b)),La(a,c,g)}}}),n.cssHooks.marginLeft=Ea(l.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Da(a,"marginLeft"))||a.getBoundingClientRect().left-Ba(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+"px"}),n.cssHooks.marginRight=Ea(l.reliableMarginRight,function(a,b){if(b)return Ba(a,{display:"inline-block"},Da,[a,"marginRight"])}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];d<4;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},ya.test(a)||(n.cssHooks[a+b].set=La)}),n.fn.extend({css:function(a,b){return J(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=Aa(a),e=b.length;g<e;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Oa(this,!0)},hide:function(){return Oa(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?n(this).show():n(this).hide()})}});function Pa(a,b,c,d,e){return new Pa.prototype.init(a,b,c,d,e)}n.Tween=Pa,Pa.prototype={constructor:Pa,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||n.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=Pa.propHooks[this.prop];return a&&a.get?a.get(this):Pa.propHooks._default.get(this)},run:function(a){var b,c=Pa.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Pa.propHooks._default.set(this),this}},Pa.prototype.init.prototype=Pa.prototype,Pa.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0)},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[n.cssProps[a.prop]]&&!n.cssHooks[a.prop]?a.elem[a.prop]=a.now:n.style(a.elem,a.prop,a.now+a.unit)}}},Pa.propHooks.scrollTop=Pa.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:"swing"},n.fx=Pa.prototype.init,n.fx.step={};var Qa,Ra,Sa=/^(?:toggle|show|hide)$/,Ta=/queueHooks$/;function Ua(){return a.setTimeout(function(){Qa=void 0}),Qa=n.now()}function Va(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=T[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function Wa(a,b,c){for(var d,e=(Za.tweeners[b]||[]).concat(Za.tweeners["*"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function Xa(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&U(a),q=M.get(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,"display"),"inline"===(k="none"===j?M.get(a,"olddisplay")||xa(a.nodeName):j)&&"none"===n.css(a,"float")&&(o.display="inline-block")),c.overflow&&(o.overflow="hidden",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Sa.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))"inline"===("none"===j?xa(a.nodeName):j)&&(o.display=j);else{q?"hidden"in q&&(p=q.hidden):q=M.access(a,"fxshow",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;M.remove(a,"fxshow");for(b in m)n.style(a,b,m[b])});for(d in m)g=Wa(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function Ya(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),(g=n.cssHooks[d])&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function Za(a,b,c){var d,e,f=0,g=Za.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Qa||Ua(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:Qa||Ua(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(Ya(k,j.opts.specialEasing);f<g;f++)if(d=Za.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,Wa,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(Za,{tweeners:{"*":[function(a,b){var c=this.createTween(a,b);return V(c.elem,a,S.exec(b),c),c}]},tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.match(F);for(var c,d=0,e=a.length;d<e;d++)c=a[d],Za.tweeners[c]=Za.tweeners[c]||[],Za.tweeners[c].unshift(b)},prefilters:[Xa],prefilter:function(a,b){b?Za.prefilters.unshift(a):Za.prefilters.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,null!=d.queue&&!0!==d.queue||(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=Za(this,n.extend({},a),f);(e||M.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||!1===f.queue?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&!1!==a&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=M.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Ta.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||n.dequeue(this,a)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var b,c=M.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(Va(b,!0),a,d,e)}}),n.each({slideDown:Va("show"),slideUp:Va("hide"),slideToggle:Va("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Qa=n.now();b<c.length;b++)(a=c[b])()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Qa=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ra||(Ra=a.setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){a.clearInterval(Ra),Ra=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(b,c){return b=n.fx?n.fx.speeds[b]||b:b,c=c||"fx",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement("input"),b=d.createElement("select"),c=b.appendChild(d.createElement("option"));a.type="checkbox",l.checkOn=""!==a.value,l.optSelected=c.selected,b.disabled=!0,l.optDisabled=!c.disabled,a=d.createElement("input"),a.value="t",a.type="radio",l.radioValue="t"===a.value}();var $a,_a=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return J(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return void 0===a.getAttribute?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),e=n.attrHooks[b]||(n.expr.match.bool.test(b)?$a:void 0)),void 0!==c?null===c?void n.removeAttr(a,b):e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+""),c):e&&"get"in e&&null!==(d=e.get(a,b))?d:(d=n.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(F);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)}}),$a={set:function(a,b,c){return!1===b?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=_a[b]||n.find.attr;_a[b]=function(a,b,d){var e,f;return d||(f=_a[b],_a[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,_a[b]=f),e}});var ab=/^(?:input|select|textarea|button)$/i,bb=/^(?:a|area)$/i;n.fn.extend({prop:function(a,b){return J(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&n.isXMLDoc(a)||(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=n.find.attr(a,"tabindex")
;return b?parseInt(b,10):ab.test(a.nodeName)||bb.test(a.nodeName)&&a.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),l.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this});var cb=/[\t\r\n\f]/g;function db(a){return a.getAttribute&&a.getAttribute("class")||""}n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,db(this)))});if("string"==typeof a&&a){b=a.match(F)||[];while(c=this[i++])if(e=db(c),d=1===c.nodeType&&(" "+e+" ").replace(cb," ")){g=0;while(f=b[g++])d.indexOf(" "+f+" ")<0&&(d+=f+" ");h=n.trim(d),e!==h&&c.setAttribute("class",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,db(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof a&&a){b=a.match(F)||[];while(c=this[i++])if(e=db(c),d=1===c.nodeType&&(" "+e+" ").replace(cb," ")){g=0;while(f=b[g++])while(d.indexOf(" "+f+" ")>-1)d=d.replace(" "+f+" "," ");h=n.trim(d),e!==h&&c.setAttribute("class",h)}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):n.isFunction(a)?this.each(function(c){n(this).toggleClass(a.call(this,c,db(this),b),b)}):this.each(function(){var b,d,e,f;if("string"===c){d=0,e=n(this),f=a.match(F)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&"boolean"!==c||(b=db(this),b&&M.set(this,"__className__",b),this.setAttribute&&this.setAttribute("class",b||!1===a?"":M.get(this,"__className__")||""))})},hasClass:function(a){var b,c,d=0;b=" "+a+" ";while(c=this[d++])if(1===c.nodeType&&(" "+db(c)+" ").replace(cb," ").indexOf(b)>-1)return!0;return!1}});var eb=/\r/g,fb=/[\x20\t\r\n\f]+/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),(b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()])&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return(b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()])&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(eb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a)).replace(fb," ")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||e<0,g=f?null:[],h=f?e+1:d.length,i=e<0?h:f?e:0;i<h;i++)if(c=d[i],(c.selected||i===e)&&(l.optDisabled?!c.disabled:null===c.getAttribute("disabled"))&&(!c.parentNode.disabled||!n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(n.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){if(n.isArray(b))return a.checked=n.inArray(n(a).val(),b)>-1}},l.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var gb=/^(?:focusinfocus|focusoutblur)$/;n.extend(n.event,{trigger:function(b,c,e,f){var g,h,i,j,l,m,o,p=[e||d],q=k.call(b,"type")?b.type:b,r=k.call(b,"namespace")?b.namespace.split("."):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!gb.test(q+n.event.triggered)&&(q.indexOf(".")>-1&&(r=q.split("."),q=r.shift(),r.sort()),l=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=r.join("."),b.rnamespace=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},f||!o.trigger||!1!==o.trigger.apply(e,c))){if(!f&&!o.noBubble&&!n.isWindow(e)){for(j=o.delegateType||q,gb.test(j+q)||(h=h.parentNode);h;h=h.parentNode)p.push(h),i=h;i===(e.ownerDocument||d)&&p.push(i.defaultView||i.parentWindow||a)}g=0;while((h=p[g++])&&!b.isPropagationStopped())b.type=g>1?j:o.bindType||q,m=(M.get(h,"events")||{})[b.type]&&M.get(h,"handle"),m&&m.apply(h,c),(m=l&&h[l])&&m.apply&&K(h)&&(b.result=m.apply(h,c),!1===b.result&&b.preventDefault());return b.type=q,f||b.isDefaultPrevented()||o._default&&!1!==o._default.apply(p.pop(),c)||!K(e)||l&&n.isFunction(e[q])&&!n.isWindow(e)&&(i=e[l],i&&(e[l]=null),n.event.triggered=q,e[q](),n.event.triggered=void 0,i&&(e[l]=i)),b.result}},simulate:function(a,b,c){var d=n.extend(new n.Event,c,{type:a,isSimulated:!0});n.event.trigger(d,null,b),d.isDefaultPrevented()&&c.preventDefault()}}),n.fn.extend({trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return n.event.trigger(a,b,c,!0)}}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),l.focusin="onfocusin"in a,l.focusin||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a))};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=M.access(d,b);e||d.addEventListener(a,c,!0),M.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=M.access(d,b)-1;e?M.access(d,b,e):(d.removeEventListener(a,c,!0),M.remove(d,b))}}});var hb=a.location,ib=n.now(),jb=/\?/;n.parseJSON=function(a){return JSON.parse(a+"")},n.parseXML=function(b){var c;if(!b||"string"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,"text/xml")}catch(d){c=void 0}return c&&!c.getElementsByTagName("parsererror").length||n.error("Invalid XML: "+b),c};var kb=/#.*$/,lb=/([?&])_=[^&]*/,mb=/^(.*?):[ \t]*([^\r\n]*)$/gm,nb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ob=/^(?:GET|HEAD)$/,pb=/^\/\//,qb={},rb={},sb="*/".concat("*"),tb=d.createElement("a");tb.href=hb.href;function ub(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(F)||[];if(n.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function vb(a,b,c,d){var e={},f=a===rb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function wb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function xb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function yb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(a.crossDomain&&"script"===f)continue;if(!(g=j[i+" "+f]||j["* "+f]))for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){!0===g?g=j[e]:!0!==j[e]&&(f=h[0],k.unshift(h[1]));break}if(!0!==g)if(g&&a.throws)b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:hb.href,type:"GET",isLocal:nb.test(hb.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":sb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?wb(wb(a,n.ajaxSettings),b):wb(n.ajaxSettings,a)},ajaxPrefilter:ub(qb),ajaxTransport:ub(rb),ajax:function(b,c){"object"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m=n.ajaxSetup({},c),o=m.context||m,p=m.context&&(o.nodeType||o.jquery)?n(o):n.event,q=n.Deferred(),r=n.Callbacks("once memory"),s=m.statusCode||{},t={},u={},v=0,w="canceled",x={readyState:0,getResponseHeader:function(a){var b;if(2===v){if(!h){h={};while(b=mb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===v?g:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return v||(a=u[c]=u[c]||a,t[a]=b),this},overrideMimeType:function(a){return v||(m.mimeType=a),this},statusCode:function(a){var b;if(a)if(v<2)for(b in a)s[b]=[s[b],a[b]];else x.always(a[x.status]);return this},abort:function(a){var b=a||w;return e&&e.abort(b),y(0,b),this}};if(q.promise(x).complete=r.add,x.success=x.done,x.error=x.fail,m.url=((b||m.url||hb.href)+"").replace(kb,"").replace(pb,hb.protocol+"//"),m.type=c.method||c.type||m.method||m.type,m.dataTypes=n.trim(m.dataType||"*").toLowerCase().match(F)||[""],null==m.crossDomain){j=d.createElement("a");try{j.href=m.url,j.href=j.href,m.crossDomain=tb.protocol+"//"+tb.host!=j.protocol+"//"+j.host}catch(z){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=n.param(m.data,m.traditional)),vb(qb,m,c,x),2===v)return x;k=n.event&&m.global,k&&0==n.active++&&n.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!ob.test(m.type),f=m.url,m.hasContent||(m.data&&(f=m.url+=(jb.test(f)?"&":"?")+m.data,delete m.data),!1===m.cache&&(m.url=lb.test(f)?f.replace(lb,"$1_="+ib++):f+(jb.test(f)?"&":"?")+"_="+ib++)),m.ifModified&&(n.lastModified[f]&&x.setRequestHeader("If-Modified-Since",n.lastModified[f]),n.etag[f]&&x.setRequestHeader("If-None-Match",n.etag[f])),(m.data&&m.hasContent&&!1!==m.contentType||c.contentType)&&x.setRequestHeader("Content-Type",m.contentType),x.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+sb+"; q=0.01":""):m.accepts["*"]);for(l in m.headers)x.setRequestHeader(l,m.headers[l]);if(m.beforeSend&&(!1===m.beforeSend.call(o,x,m)||2===v))return x.abort();w="abort";for(l in{success:1,error:1,complete:1})x[l](m[l]);if(e=vb(rb,m,c,x)){if(x.readyState=1,k&&p.trigger("ajaxSend",[x,m]),2===v)return x;m.async&&m.timeout>0&&(i=a.setTimeout(function(){x.abort("timeout")},m.timeout));try{v=1,e.send(t,y)}catch(z){if(!(v<2))throw z;y(-1,z)}}else y(-1,"No Transport");function y(b,c,d,h){var j,l,t,u,w,y=c;2!==v&&(v=2,i&&a.clearTimeout(i),e=void 0,g=h||"",x.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(u=xb(m,x,d)),u=yb(m,u,x,j),j?(m.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(n.lastModified[f]=w),(w=x.getResponseHeader("etag"))&&(n.etag[f]=w)),204===b||"HEAD"===m.type?y="nocontent":304===b?y="notmodified":(y=u.state,l=u.data,t=u.error,j=!t)):(t=y,!b&&y||(y="error",b<0&&(b=0))),x.status=b,x.statusText=(c||y)+"",j?q.resolveWith(o,[l,y,x]):q.rejectWith(o,[x,y,t]),x.statusCode(s),s=void 0,k&&p.trigger(j?"ajaxSuccess":"ajaxError",[x,m,j?l:t]),r.fireWith(o,[x,y]),k&&(p.trigger("ajaxComplete",[x,m]),--n.active||n.event.trigger("ajaxStop")))}return x},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax(n.extend({url:a,type:b,dataType:e,data:c,success:d},n.isPlainObject(a)&&a))}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return n.isFunction(a)?this.each(function(b){n(this).wrapInner(a.call(this,b))}):this.each(function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return!n.expr.filters.visible(a)},n.expr.filters.visible=function(a){return a.offsetWidth>0||a.offsetHeight>0||a.getClientRects().length>0};var zb=/%20/g,Ab=/\[\]$/,Bb=/\r?\n/g,Cb=/^(?:submit|button|image|reset|file)$/i,Db=/^(?:input|select|textarea|keygen)/i;function Eb(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||Ab.test(a)?d(a,e):Eb(a+"["+("object"==typeof e&&null!=e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)Eb(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Eb(c,a[c],b,e);return d.join("&").replace(zb,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&Db.test(this.nodeName)&&!Cb.test(a)&&(this.checked||!W.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(Bb,"\r\n")}}):{name:b.name,value:c.replace(Bb,"\r\n")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Fb={0:200,1223:204},Gb=n.ajaxSettings.xhr();l.cors=!!Gb&&"withCredentials"in Gb,l.ajax=Gb=!!Gb,n.ajaxTransport(function(b){var c,d;if(l.cors||Gb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,"abort"===a?h.abort():"error"===a?"number"!=typeof h.status?f(0,"error"):f(h.status,h.statusText):f(Fb[h.status]||h.status,h.statusText,"text"!==(h.responseType||"text")||"string"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c("error"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c("abort");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),n.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=n("<script>").prop({charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&f("error"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Hb=[],Ib=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Hb.pop()||n.expando+"_"+ib++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=!1!==b.jsonp&&(Ib.test(b.url)?"url":"string"==typeof b.data&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ib.test(b.data)&&"data");if(h||"jsonp"===b.dataTypes[0])return e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Ib,"$1"+e):!1!==b.jsonp&&(b.url+=(jb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?n(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Hb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||d;var e=x.exec(a),f=!c&&[];return e?[b.createElement(e[1])]:(e=ba([a],b,f),f&&f.length&&n(f).remove(),n.merge([],e.childNodes))};var Jb=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&Jb)return Jb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>-1&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e||"GET",dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};function Kb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,n.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(e=d.getBoundingClientRect(),c=Kb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===n.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(d=a.offset()),d.top+=n.css(a[0],"borderTopWidth",!0),d.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-d.top-n.css(c,"marginTop",!0),left:b.left-d.left-n.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Ca})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c="pageYOffset"===b;n.fn[a]=function(d){return J(this,function(a,d,e){var f=Kb(a);if(void 0===e)return f?f[b]:a[d];f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e},a,d,arguments.length)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=Ea(l.pixelPosition,function(a,c){if(c)return c=Da(a,b),za.test(c)?n(a).position()[b]+"px":c})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(!0===d||!0===e?"margin":"border");return J(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)},size:function(){return this.length}}),n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var Lb=a.jQuery,Mb=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Mb),b&&a.jQuery===n&&(a.jQuery=Lb),n},b||(a.jQuery=a.$=n),n});
/*! RESOURCE: /scripts/lib/jquery/jquery_no_conflict.js */
(function() {
	if (window.$j_glide) {
		jQuery.noConflict(true);
		window.jQuery = $j_glide;
	}
	window.$j = window.$j_glide = jQuery.noConflict();
})();
;
;
/*! RESOURCE: /scripts/lib/jquery2_includes.js */
/*! RESOURCE: /scripts/lib/jquery/jquery_csrf.js */
(function($) {
	setToken();
	CustomEvent.observe('ck_updated', setToken);
	function setToken() {
		$.ajaxPrefilter(function(options) {
			if (!options.crossDomain) {
				if (!options.headers)
					options.headers = {};
				var token = window.g_ck || 'token_intentionally_left_blank';
				options.headers['X-UserToken'] = token;
			}
		});
	}
})(jQuery);
;
/*! RESOURCE: /scripts/jquery-ui-1.9.2.custom.js */
(function( $, undefined ) {
var uuid = 0,
runiqueId = /^ui-id-\d+$/;
$.ui = $.ui || {};
if ( $.ui.version ) {
	return;
}
$.extend( $.ui, {
	version: "1.9.2-snc",
	keyCode: {
		BACKSPACE: 8,
		COMMA: 188,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		LEFT: 37,
		NUMPAD_ADD: 107,
		NUMPAD_DECIMAL: 110,
		NUMPAD_DIVIDE: 111,
		NUMPAD_ENTER: 108,
		NUMPAD_MULTIPLY: 106,
		NUMPAD_SUBTRACT: 109,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SPACE: 32,
		TAB: 9,
		UP: 38
	}
});
$.fn.extend({
	_focus: $.fn.focus,
	focus: function( delay, fn ) {
		return typeof delay === "number" ?
			this.each(function() {
				var elem = this;
				setTimeout(function() {
					$( elem ).focus();
					if ( fn ) {
						fn.call( elem );
					}
				}, delay );
			}) :
			this._focus.apply( this, arguments );
	},
	scrollParent: function() {
		var scrollParent;
if (($.ui.ie && (/(static|relative)/).test(this.css('position'))) || (/absolute/).test(this.css('position'))) {
			scrollParent = this.parents().filter(function() {
return (/(relative|absolute|fixed)/).test($.css(this,'position')) && (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
			}).eq(0);
		} else {
			scrollParent = this.parents().filter(function() {
return (/(auto|scroll)/).test($.css(this,'overflow')+$.css(this,'overflow-y')+$.css(this,'overflow-x'));
			}).eq(0);
		}
return (/fixed/).test(this.css('position')) || !scrollParent.length ? $(document) : scrollParent;
	},
	zIndex: function( zIndex ) {
		if ( zIndex !== undefined ) {
			return this.css( "zIndex", zIndex );
		}
		if ( this.length ) {
			var elem = $( this[ 0 ] ), position, value;
			while ( elem.length && elem[ 0 ] !== document ) {
				position = elem.css( "position" );
				if ( position === "absolute" || position === "relative" || position === "fixed" ) {
					value = parseInt( elem.css( "zIndex" ), 10 );
					if ( !isNaN( value ) && value !== 0 ) {
						return value;
					}
				}
				elem = elem.parent();
			}
		}
		return 0;
	},
	uniqueId: function() {
		return this.each(function() {
			if ( !this.id ) {
				this.id = "ui-id-" + (++uuid);
			}
		});
	},
	removeUniqueId: function() {
		return this.each(function() {
			if ( runiqueId.test( this.id ) ) {
				$( this ).removeAttr( "id" );
			}
		});
	}
});
function focusable( element, isTabIndexNotNaN ) {
	var map, mapName, img,
		nodeName = element.nodeName.toLowerCase();
	if ( "area" === nodeName ) {
		map = element.parentNode;
		mapName = map.name;
		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
			return false;
		}
		img = $( "img[usemap=#" + mapName + "]" )[0];
		return !!img && visible( img );
	}
return ( /input|select|textarea|button|object/.test( nodeName ) ?
		!element.disabled :
		"a" === nodeName ?
			element.href || isTabIndexNotNaN :
			isTabIndexNotNaN) &&
		visible( element );
}
function visible( element ) {
	return $.expr.filters.visible( element ) &&
		!$( element ).parents().andSelf().filter(function() {
			return $.css( this, "visibility" ) === "hidden";
		}).length;
}
$.extend( $.expr[ ":" ], {
	data: $.expr.createPseudo ?
		$.expr.createPseudo(function( dataName ) {
			return function( elem ) {
				return !!$.data( elem, dataName );
			};
		}) :
		function( elem, i, match ) {
			return !!$.data( elem, match[ 3 ] );
		},
	focusable: function( element ) {
		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
	},
	tabbable: function( element ) {
		var tabIndex = $.attr( element, "tabindex" ),
			isTabIndexNaN = isNaN( tabIndex );
		return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
	}
});
$(function() {
	var body = document.body,
		div = body.appendChild( div = document.createElement( "div" ) );
	$.extend( div.style, {
		minHeight: "100px",
		height: "auto",
		padding: 0,
		borderWidth: 0
	});
	$.support.minHeight = true;
	$.support.selectstart = "onselectstart" in div;
	body.removeChild( div ).style.display = "none";
});
if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
	$.each( [ "Width", "Height" ], function( i, name ) {
		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
			type = name.toLowerCase(),
			orig = {
				innerWidth: $.fn.innerWidth,
				innerHeight: $.fn.innerHeight,
				outerWidth: $.fn.outerWidth,
				outerHeight: $.fn.outerHeight
			};
		function reduce( elem, size, border, margin ) {
			$.each( side, function() {
				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
				if ( border ) {
					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
				}
				if ( margin ) {
					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
				}
			});
			return size;
		}
		$.fn[ "inner" + name ] = function( size ) {
			if ( size === undefined ) {
				return orig[ "inner" + name ].call( this );
			}
			return this.each(function() {
				$( this ).css( type, reduce( this, size ) + "px" );
			});
		};
		$.fn[ "outer" + name] = function( size, margin ) {
			if ( typeof size !== "number" ) {
				return orig[ "outer" + name ].call( this, size );
			}
			return this.each(function() {
				$( this).css( type, reduce( this, size, true, margin ) + "px" );
			});
		};
	});
}
if ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {
	$.fn.removeData = (function( removeData ) {
		return function( key ) {
			if ( arguments.length ) {
				return removeData.call( this, $.camelCase( key ) );
			} else {
				return removeData.call( this );
			}
		};
	})( $.fn.removeData );
}
(function() {
var uaMatch = /msie ([\w.]+)/.exec( navigator.userAgent.toLowerCase() ) || [];
	$.ui.ie = uaMatch.length ? true : false;
	$.ui.ie6 = parseFloat( uaMatch[ 1 ], 10 ) === 6;
})();
$.fn.extend({
	disableSelection: function() {
		return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +
			".ui-disableSelection", function( event ) {
				event.preventDefault();
			});
	},
	enableSelection: function() {
		return this.unbind( ".ui-disableSelection" );
	}
});
$.extend( $.ui, {
	plugin: {
		add: function( module, option, set ) {
			var i,
				proto = $.ui[ module ].prototype;
			for ( i in set ) {
				proto.plugins[ i ] = proto.plugins[ i ] || [];
				proto.plugins[ i ].push( [ option, set[ i ] ] );
			}
		},
		call: function( instance, name, args ) {
			var i,
				set = instance.plugins[ name ];
			if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {
				return;
			}
			for ( i = 0; i < set.length; i++ ) {
				if ( instance.options[ set[ i ][ 0 ] ] ) {
					set[ i ][ 1 ].apply( instance.element, args );
				}
			}
		}
	},
	contains: $.contains,
	hasScroll: function( el, a ) {
		if ( $( el ).css( "overflow" ) === "hidden") {
			return false;
		}
		var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
			has = false;
		if ( el[ scroll ] > 0 ) {
			return true;
		}
		el[ scroll ] = 1;
		has = ( el[ scroll ] > 0 );
		el[ scroll ] = 0;
		return has;
	},
	isOverAxis: function( x, reference, size ) {
		return ( x > reference ) && ( x < ( reference + size ) );
	},
	isOver: function( y, x, top, left, height, width ) {
		return $.ui.isOverAxis( y, top, height ) && $.ui.isOverAxis( x, left, width );
	}
});
})( jQuery );
(function( $, undefined ) {
var uuid = 0,
	slice = Array.prototype.slice,
	_cleanData = $.cleanData;
$.cleanData = function( elems ) {
	for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
		try {
			$( elem ).triggerHandler( "remove" );
		} catch( e ) {}
	}
	_cleanData( elems );
};
$.widget = function( name, base, prototype ) {
	var fullName, existingConstructor, constructor, basePrototype,
		namespace = name.split( "." )[ 0 ];
	name = name.split( "." )[ 1 ];
	fullName = namespace + "-" + name;
	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};
	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};
	$.extend( constructor, existingConstructor, {
		version: prototype.version,
		_proto: $.extend( {}, prototype ),
		_childConstructors: []
	});
	basePrototype = new base();
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( $.isFunction( value ) ) {
			prototype[ prop ] = (function() {
				var _super = function() {
						return base.prototype[ prop ].apply( this, arguments );
					},
					_superApply = function( args ) {
						return base.prototype[ prop ].apply( this, args );
					};
				return function() {
					var __super = this._super,
						__superApply = this._superApply,
						returnValue;
					this._super = _super;
					this._superApply = _superApply;
					returnValue = value.apply( this, arguments );
					this._super = __super;
					this._superApply = __superApply;
					return returnValue;
				};
			})();
		}
	});
	constructor.prototype = $.widget.extend( basePrototype, {
		widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix : name
	}, prototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		widgetBaseClass: fullName,
		widgetFullName: fullName
	});
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
		});
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}
	$.widget.bridge( name, constructor );
};
$.widget.extend = function( target ) {
	var input = slice.call( arguments, 1 ),
		inputIndex = 0,
		inputLength = input.length,
		key,
		value;
	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
				if ( $.isPlainObject( value ) ) {
					target[ key ] = $.isPlainObject( target[ key ] ) ?
						$.widget.extend( {}, target[ key ], value ) :
						$.widget.extend( {}, value );
				} else {
					target[ key ] = value;
				}
			}
		}
	}
	return target;
};
$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName || name;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string",
			args = slice.call( arguments, 1 ),
			returnValue = this;
		options = !isMethodCall && args.length ?
			$.widget.extend.apply( null, [ options ].concat(args) ) :
			options;
		if ( isMethodCall ) {
			this.each(function() {
				var methodValue,
					instance = $.data( this, fullName );
				if ( !instance ) {
					return $.error( "cannot call methods on " + name + " prior to initialization; " +
						"attempted to call method '" + options + "'" );
				}
				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
					return $.error( "no such method '" + options + "' for " + name + " widget instance" );
				}
				methodValue = instance[ options ].apply( instance, args );
				if ( methodValue !== instance && methodValue !== undefined ) {
					returnValue = methodValue && methodValue.jquery ?
						returnValue.pushStack( methodValue.get() ) :
						methodValue;
					return false;
				}
			});
		} else {
			this.each(function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} )._init();
				} else {
					$.data( this, fullName, new object( options, this ) );
				}
			});
		}
		return returnValue;
	};
};
$.Widget = function(  ) {};
$.Widget._childConstructors = [];
$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",
	options: {
		disabled: false,
		create: null
	},
	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = uuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;
		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );
		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();
		if ( element !== this ) {
			$.data( element, this.widgetName, this );
			$.data( element, this.widgetFullName, this );
			this._on( true, this.element, {
				remove: function( event ) {
					if ( event.target === element ) {
						this.destroy();
					}
				}
			});
			this.document = $( element.style ?
				element.ownerDocument :
				element.document || element );
			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
		}
		this._create();
		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},
	_getCreateOptions: $.noop,
	_getCreateEventData: $.noop,
	_create: $.noop,
	_init: $.noop,
	destroy: function() {
		this._destroy();
		this.element
			.unbind( this.eventNamespace )
			.removeData( this.widgetName )
			.removeData( this.widgetFullName )
			.removeData( $.camelCase( this.widgetFullName ) );
		this.widget()
			.unbind( this.eventNamespace )
			.removeAttr( "aria-disabled" )
			.removeClass(
				this.widgetFullName + "-disabled " +
				"ui-state-disabled" );
		this.bindings.unbind( this.eventNamespace );
		this.hoverable.removeClass( "ui-state-hover" );
		this.focusable.removeClass( "ui-state-focus" );
	},
	_destroy: $.noop,
	widget: function() {
		return this.element;
	},
	option: function( key, value ) {
		var options = key,
			parts,
			curOption,
			i;
		if ( arguments.length === 0 ) {
			return $.widget.extend( {}, this.options );
		}
		if ( typeof key === "string" ) {
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( value === undefined ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( value === undefined ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}
		this._setOptions( options );
		return this;
	},
	_setOptions: function( options ) {
		var key;
		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}
		return this;
	},
	_setOption: function( key, value ) {
		this.options[ key ] = value;
		if ( key === "disabled" ) {
			this.widget()
				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
			this.hoverable.removeClass( "ui-state-hover" );
			this.focusable.removeClass( "ui-state-focus" );
		}
		return this;
	},
	enable: function() {
		return this._setOption( "disabled", false );
	},
	disable: function() {
		return this._setOption( "disabled", true );
	},
	_on: function( suppressDisabledCheck, element, handlers ) {
		var delegateElement,
			instance = this;
		if ( typeof suppressDisabledCheck !== "boolean" ) {
			handlers = element;
			element = suppressDisabledCheck;
			suppressDisabledCheck = false;
		}
		if ( !handlers ) {
			handlers = element;
			element = this.element;
			delegateElement = this.widget();
		} else {
			element = delegateElement = $( element );
			this.bindings = this.bindings.add( element );
		}
		$.each( handlers, function( event, handler ) {
			function handlerProxy() {
				if ( !suppressDisabledCheck &&
						( instance.options.disabled === true ||
							$( this ).hasClass( "ui-state-disabled" ) ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}
var match = event.match( /^(\w+)\s*(.*)$/ ),
				eventName = match[1] + instance.eventNamespace,
				selector = match[2];
			if ( selector ) {
				delegateElement.delegate( selector, eventName, handlerProxy );
			} else {
				element.bind( eventName, handlerProxy );
			}
		});
	},
	_off: function( element, eventName ) {
		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;
		element.unbind( eventName ).undelegate( eventName );
	},
	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},
	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-hover" );
			},
			mouseleave: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-hover" );
			}
		});
	},
	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-focus" );
			},
			focusout: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-focus" );
			}
		});
	},
	_trigger: function( type, event, data ) {
		var prop, orig,
			callback = this.options[ type ];
		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();
		event.target = this.element[ 0 ];
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}
		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};
$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}
		var hasOptions,
			effectName = !options ?
				method :
				options === true || typeof options === "number" ?
					defaultEffect :
					options.effect || defaultEffect;
		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}
		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;
		if ( options.delay ) {
			element.delay( options.delay );
		}
		if ( hasOptions && $.effects && ( $.effects.effect[ effectName ] || $.uiBackCompat !== false && $.effects[ effectName ] ) ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue(function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			});
		}
	};
});
if ( $.uiBackCompat !== false ) {
	$.Widget.prototype._getCreateOptions = function() {
		return $.metadata && $.metadata.get( this.element[0] )[ this.widgetName ];
	};
}
})( jQuery );
(function( $, undefined ) {
$.ui = $.ui || {};
var cachedScrollbarWidth,
	max = Math.max,
	abs = Math.abs,
	round = Math.round,
rhorizontal = /left|center|right/,
rvertical = /top|center|bottom/,
roffset = /[\+\-]\d+%?/,
rposition = /^\w+/,
rpercent = /%$/,
	_position = $.fn.position;
function getOffsets( offsets, width, height ) {
	return [
parseInt( offsets[ 0 ], 10 ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),
parseInt( offsets[ 1 ], 10 ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )
	];
}
function parseCss( element, property ) {
	return parseInt( $.css( element, property ), 10 ) || 0;
}
$.position = {
	scrollbarWidth: function() {
		if ( cachedScrollbarWidth !== undefined ) {
			return cachedScrollbarWidth;
		}
		var w1, w2,
div = $( "<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>" ),
			innerDiv = div.children()[0];
		$( "body" ).append( div );
		w1 = innerDiv.offsetWidth;
		div.css( "overflow", "scroll" );
		w2 = innerDiv.offsetWidth;
		if ( w1 === w2 ) {
			w2 = div[0].clientWidth;
		}
		div.remove();
		return (cachedScrollbarWidth = w1 - w2);
	},
	getScrollInfo: function( within ) {
		var overflowX = within.isWindow ? "" : within.element.css( "overflow-x" ),
			overflowY = within.isWindow ? "" : within.element.css( "overflow-y" ),
			hasOverflowX = overflowX === "scroll" ||
				( overflowX === "auto" && within.width < within.element[0].scrollWidth ),
			hasOverflowY = overflowY === "scroll" ||
				( overflowY === "auto" && within.height < within.element[0].scrollHeight );
		return {
			width: hasOverflowX ? $.position.scrollbarWidth() : 0,
			height: hasOverflowY ? $.position.scrollbarWidth() : 0
		};
	},
	getWithinInfo: function( element ) {
		var withinElement = $( element || window ),
			isWindow = $.isWindow( withinElement[0] );
		return {
			element: withinElement,
			isWindow: isWindow,
			offset: withinElement.offset() || { left: 0, top: 0 },
			scrollLeft: withinElement.scrollLeft(),
			scrollTop: withinElement.scrollTop(),
			width: isWindow ? withinElement.width() : withinElement.outerWidth(),
			height: isWindow ? withinElement.height() : withinElement.outerHeight()
		};
	}
};
$.fn.position = function( options ) {
	if ( !options || !options.of ) {
		return _position.apply( this, arguments );
	}
	options = $.extend( {}, options );
	var atOffset, targetWidth, targetHeight, targetOffset, basePosition,
		target = typeof options.of === "string" ?
			$( document ).find( options.of ) :
			$( options.of ),
		within = $.position.getWithinInfo( options.within ),
		scrollInfo = $.position.getScrollInfo( within ),
		targetElem = target[0],
		collision = ( options.collision || "flip" ).split( " " ),
		offsets = {};
	if ( targetElem.nodeType === 9 ) {
		targetWidth = target.width();
		targetHeight = target.height();
		targetOffset = { top: 0, left: 0 };
	} else if ( $.isWindow( targetElem ) ) {
		targetWidth = target.width();
		targetHeight = target.height();
		targetOffset = { top: target.scrollTop(), left: target.scrollLeft() };
	} else if ( targetElem.preventDefault ) {
		options.at = "left top";
		targetWidth = targetHeight = 0;
		targetOffset = { top: targetElem.pageY, left: targetElem.pageX };
	} else {
		targetWidth = target.outerWidth();
		targetHeight = target.outerHeight();
		targetOffset = target.offset();
	}
	basePosition = $.extend( {}, targetOffset );
	$.each( [ "my", "at" ], function() {
		var pos = ( options[ this ] || "" ).split( " " ),
			horizontalOffset,
			verticalOffset;
		if ( pos.length === 1) {
			pos = rhorizontal.test( pos[ 0 ] ) ?
				pos.concat( [ "center" ] ) :
				rvertical.test( pos[ 0 ] ) ?
					[ "center" ].concat( pos ) :
					[ "center", "center" ];
		}
		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";
		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";
		horizontalOffset = roffset.exec( pos[ 0 ] );
		verticalOffset = roffset.exec( pos[ 1 ] );
		offsets[ this ] = [
			horizontalOffset ? horizontalOffset[ 0 ] : 0,
			verticalOffset ? verticalOffset[ 0 ] : 0
		];
		options[ this ] = [
			rposition.exec( pos[ 0 ] )[ 0 ],
			rposition.exec( pos[ 1 ] )[ 0 ]
		];
	});
	if ( collision.length === 1 ) {
		collision[ 1 ] = collision[ 0 ];
	}
	if ( options.at[ 0 ] === "right" ) {
		basePosition.left += targetWidth;
	} else if ( options.at[ 0 ] === "center" ) {
basePosition.left += targetWidth / 2;
	}
	if ( options.at[ 1 ] === "bottom" ) {
		basePosition.top += targetHeight;
	} else if ( options.at[ 1 ] === "center" ) {
basePosition.top += targetHeight / 2;
	}
	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );
	basePosition.left += atOffset[ 0 ];
	basePosition.top += atOffset[ 1 ];
	return this.each(function() {
		var collisionPosition, using,
			elem = $( this ),
			elemWidth = elem.outerWidth(),
			elemHeight = elem.outerHeight(),
			marginLeft = parseCss( this, "marginLeft" ),
			marginTop = parseCss( this, "marginTop" ),
			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,
			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,
			position = $.extend( {}, basePosition ),
			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );
		if ( options.my[ 0 ] === "right" ) {
			position.left -= elemWidth;
		} else if ( options.my[ 0 ] === "center" ) {
position.left -= elemWidth / 2;
		}
		if ( options.my[ 1 ] === "bottom" ) {
			position.top -= elemHeight;
		} else if ( options.my[ 1 ] === "center" ) {
position.top -= elemHeight / 2;
		}
		position.left += myOffset[ 0 ];
		position.top += myOffset[ 1 ];
		if ( !$.support.offsetFractions ) {
			position.left = round( position.left );
			position.top = round( position.top );
		}
		collisionPosition = {
			marginLeft: marginLeft,
			marginTop: marginTop
		};
		$.each( [ "left", "top" ], function( i, dir ) {
			if ( $.ui.position[ collision[ i ] ] ) {
				$.ui.position[ collision[ i ] ][ dir ]( position, {
					targetWidth: targetWidth,
					targetHeight: targetHeight,
					elemWidth: elemWidth,
					elemHeight: elemHeight,
					collisionPosition: collisionPosition,
					collisionWidth: collisionWidth,
					collisionHeight: collisionHeight,
					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],
					my: options.my,
					at: options.at,
					within: within,
					elem : elem
				});
			}
		});
		if ( $.fn.bgiframe ) {
			elem.bgiframe();
		}
		if ( options.using ) {
			using = function( props ) {
				var left = targetOffset.left - position.left,
					right = left + targetWidth - elemWidth,
					top = targetOffset.top - position.top,
					bottom = top + targetHeight - elemHeight,
					feedback = {
						target: {
							element: target,
							left: targetOffset.left,
							top: targetOffset.top,
							width: targetWidth,
							height: targetHeight
						},
						element: {
							element: elem,
							left: position.left,
							top: position.top,
							width: elemWidth,
							height: elemHeight
						},
						horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
						vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
					};
				if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {
					feedback.horizontal = "center";
				}
				if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {
					feedback.vertical = "middle";
				}
				if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {
					feedback.important = "horizontal";
				} else {
					feedback.important = "vertical";
				}
				options.using.call( this, props, feedback );
			};
		}
		elem.offset( $.extend( position, { using: using } ) );
	});
};
$.ui.position = {
	fit: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
				outerWidth = within.width,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = withinOffset - collisionPosLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
				newOverRight;
			if ( data.collisionWidth > outerWidth ) {
				if ( overLeft > 0 && overRight <= 0 ) {
					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
					position.left += overLeft - newOverRight;
				} else if ( overRight > 0 && overLeft <= 0 ) {
					position.left = withinOffset;
				} else {
					if ( overLeft > overRight ) {
						position.left = withinOffset + outerWidth - data.collisionWidth;
					} else {
						position.left = withinOffset;
					}
				}
			} else if ( overLeft > 0 ) {
				position.left += overLeft;
			} else if ( overRight > 0 ) {
				position.left -= overRight;
			} else {
				position.left = max( position.left - collisionPosLeft, position.left );
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
				outerHeight = data.within.height,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = withinOffset - collisionPosTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
				newOverBottom;
			if ( data.collisionHeight > outerHeight ) {
				if ( overTop > 0 && overBottom <= 0 ) {
					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
					position.top += overTop - newOverBottom;
				} else if ( overBottom > 0 && overTop <= 0 ) {
					position.top = withinOffset;
				} else {
					if ( overTop > overBottom ) {
						position.top = withinOffset + outerHeight - data.collisionHeight;
					} else {
						position.top = withinOffset;
					}
				}
			} else if ( overTop > 0 ) {
				position.top += overTop;
			} else if ( overBottom > 0 ) {
				position.top -= overBottom;
			} else {
				position.top = max( position.top - collisionPosTop, position.top );
			}
		}
	},
	flip: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.left + within.scrollLeft,
				outerWidth = within.width,
				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = collisionPosLeft - offsetLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
				myOffset = data.my[ 0 ] === "left" ?
					-data.elemWidth :
					data.my[ 0 ] === "right" ?
						data.elemWidth :
						0,
				atOffset = data.at[ 0 ] === "left" ?
					data.targetWidth :
					data.at[ 0 ] === "right" ?
						-data.targetWidth :
						0,
				offset = -2 * data.offset[ 0 ],
				newOverRight,
				newOverLeft;
			if ( overLeft < 0 ) {
				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
				if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {
					position.left += myOffset + atOffset + offset;
				}
			}
			else if ( overRight > 0 ) {
				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
				if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {
					position.left += myOffset + atOffset + offset;
				}
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.top + within.scrollTop,
				outerHeight = within.height,
				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = collisionPosTop - offsetTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
				top = data.my[ 1 ] === "top",
				myOffset = top ?
					-data.elemHeight :
					data.my[ 1 ] === "bottom" ?
						data.elemHeight :
						0,
				atOffset = data.at[ 1 ] === "top" ?
					data.targetHeight :
					data.at[ 1 ] === "bottom" ?
						-data.targetHeight :
						0,
				offset = -2 * data.offset[ 1 ],
				newOverTop,
				newOverBottom;
			if ( overTop < 0 ) {
				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
				if ( ( position.top + myOffset + atOffset + offset) > overTop && ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) ) {
					position.top += myOffset + atOffset + offset;
				}
			}
			else if ( overBottom > 0 ) {
				newOverTop = position.top -  data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
				if ( ( position.top + myOffset + atOffset + offset) > overBottom && ( newOverTop > 0 || abs( newOverTop ) < overBottom ) ) {
					position.top += myOffset + atOffset + offset;
				}
			}
		}
	},
	flipfit: {
		left: function() {
			$.ui.position.flip.left.apply( this, arguments );
			$.ui.position.fit.left.apply( this, arguments );
		},
		top: function() {
			$.ui.position.flip.top.apply( this, arguments );
			$.ui.position.fit.top.apply( this, arguments );
		}
	}
};
(function () {
	var testElement, testElementParent, testElementStyle, offsetLeft, i,
		body = document.getElementsByTagName( "body" )[ 0 ],
		div = document.createElement( "div" );
	testElement = document.createElement( body ? "div" : "body" );
	testElementStyle = {
		visibility: "hidden",
		width: 0,
		height: 0,
		border: 0,
		margin: 0,
		background: "none"
	};
	if ( body ) {
		$.extend( testElementStyle, {
			position: "absolute",
			left: "-1000px",
			top: "-1000px"
		});
	}
	for ( i in testElementStyle ) {
		testElement.style[ i ] = testElementStyle[ i ];
	}
	testElement.appendChild( div );
	testElementParent = body || document.documentElement;
	testElementParent.insertBefore( testElement, testElementParent.firstChild );
	div.style.cssText = "position: absolute; left: 10.7432222px;";
	offsetLeft = $( div ).offset().left;
	$.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;
	testElement.innerHTML = "";
	testElementParent.removeChild( testElement );
})();
if ( $.uiBackCompat !== false ) {
	(function( $ ) {
		var _position = $.fn.position;
		$.fn.position = function( options ) {
			if ( !options || !options.offset ) {
				return _position.call( this, options );
			}
			var offset = options.offset.split( " " ),
				at = options.at.split( " " );
			if ( offset.length === 1 ) {
				offset[ 1 ] = offset[ 0 ];
			}
if ( /^\d/.test( offset[ 0 ] ) ) {
				offset[ 0 ] = "+" + offset[ 0 ];
			}
if ( /^\d/.test( offset[ 1 ] ) ) {
				offset[ 1 ] = "+" + offset[ 1 ];
			}
			if ( at.length === 1 ) {
if ( /left|center|right/.test( at[ 0 ] ) ) {
					at[ 1 ] = "center";
				} else {
					at[ 1 ] = at[ 0 ];
					at[ 0 ] = "center";
				}
			}
			return _position.call( this, $.extend( options, {
				at: at[ 0 ] + offset[ 0 ] + " " + at[ 1 ] + offset[ 1 ],
				offset: undefined
			} ) );
		};
	}( jQuery ) );
}
}( jQuery ) );
(function( $, undefined ) {
var requestIndex = 0;
$.widget( "ui.autocomplete", {
	version: "1.9.2-snc",
	defaultElement: "<input>",
	options: {
		appendTo: "body",
		autoFocus: false,
		delay: 300,
		minLength: 1,
		position: {
			my: "left top",
			at: "left bottom",
			collision: "none"
		},
		source: null,
		change: null,
		close: null,
		focus: null,
		open: null,
		response: null,
		search: null,
		select: null
	},
	pending: 0,
	_create: function() {
		var suppressKeyPress, suppressKeyPressRepeat, suppressInput;
		this.isMultiLine = this._isMultiLine();
		this.valueMethod = this.element[ this.element.is( "input,textarea" ) ? "val" : "text" ];
		this.isNewMenu = true;
		this.element
			.addClass( "ui-autocomplete-input" )
			.attr( "autocomplete", "off" );
		this._on( this.element, {
			keydown: function( event ) {
				if ( this.element.prop( "readOnly" ) ) {
					suppressKeyPress = true;
					suppressInput = true;
					suppressKeyPressRepeat = true;
					return;
				}
				suppressKeyPress = false;
				suppressInput = false;
				suppressKeyPressRepeat = false;
				var keyCode = $.ui.keyCode;
				switch( event.keyCode ) {
				case keyCode.PAGE_UP:
					suppressKeyPress = true;
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					suppressKeyPress = true;
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					suppressKeyPress = true;
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					suppressKeyPress = true;
					this._keyEvent( "next", event );
					break;
				case keyCode.ENTER:
				case keyCode.NUMPAD_ENTER:
					if ( this.menu.active ) {
						suppressKeyPress = true;
						event.preventDefault();
						this.menu.select( event );
					}
					break;
				case keyCode.TAB:
					if ( this.menu.active ) {
						this.menu.select( event );
					}
					break;
				case keyCode.ESCAPE:
					if ( this.menu.element.is( ":visible" ) ) {
						this._value( this.term );
						this.close( event );
						event.preventDefault();
					}
					break;
				default:
					suppressKeyPressRepeat = true;
					this._searchTimeout( event );
					break;
				}
			},
			keypress: function( event ) {
				if ( suppressKeyPress ) {
					suppressKeyPress = false;
					event.preventDefault();
					return;
				}
				if ( suppressKeyPressRepeat ) {
					return;
				}
				var keyCode = $.ui.keyCode;
				switch( event.keyCode ) {
				case keyCode.PAGE_UP:
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					this._keyEvent( "next", event );
					break;
				}
			},
			input: function( event ) {
				if ( suppressInput ) {
					suppressInput = false;
					event.preventDefault();
					return;
				}
				this._searchTimeout( event );
			},
			focus: function() {
				this.selectedItem = null;
				this.previous = this._value();
			},
			blur: function( event ) {
				if ( this.cancelBlur ) {
					delete this.cancelBlur;
					return;
				}
				clearTimeout( this.searching );
				this.close( event );
				this._change( event );
			}
		});
		this._initSource();
		this.menu = $( "<ul>" )
			.addClass( "ui-autocomplete" )
			.appendTo( this.document.find( this.options.appendTo || "body" )[ 0 ] )
			.menu({
				input: $(),
				role: null
			})
			.zIndex( this.element.zIndex() + 1 )
			.hide()
			.data( "menu" );
		this._on( this.menu.element, {
			mousedown: function( event ) {
				event.preventDefault();
				this.cancelBlur = true;
				this._delay(function() {
					delete this.cancelBlur;
				});
				var menuElement = this.menu.element[ 0 ];
				if ( !$( event.target ).closest( ".ui-menu-item" ).length ) {
					this._delay(function() {
						var that = this;
						this.document.one( "mousedown", function( event ) {
							if ( event.target !== that.element[ 0 ] &&
									event.target !== menuElement &&
									!$.contains( menuElement, event.target ) ) {
								that.close();
							}
						});
					});
				}
			},
			menufocus: function( event, ui ) {
				if ( this.isNewMenu ) {
					this.isNewMenu = false;
if ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {
						this.menu.blur();
						this.document.one( "mousemove", function() {
							$( event.target ).trigger( event.originalEvent );
						});
						return;
					}
				}
				var item = ui.item.data( "ui-autocomplete-item" ) || ui.item.data( "item.autocomplete" );
				if ( false !== this._trigger( "focus", event, { item: item } ) ) {
if ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {
						this._value( item.value );
					}
				} else {
					this.liveRegion.text( item.value );
				}
			},
			menuselect: function( event, ui ) {
				var item = ui.item.data( "ui-autocomplete-item" ) || ui.item.data( "item.autocomplete" ),
					previous = this.previous;
				if ( this.element[0] !== this.document[0].activeElement ) {
					this.element.focus();
					this.previous = previous;
					this._delay(function() {
						this.previous = previous;
						this.selectedItem = item;
					});
				}
				if ( false !== this._trigger( "select", event, { item: item } ) ) {
					this._value( item.value );
				}
				this.term = this._value();
				this.close( event );
				this.selectedItem = item;
			}
		});
		this.liveRegion = $( "<span>", {
				role: "status",
				"aria-live": "polite"
			})
			.addClass( "ui-helper-hidden-accessible" )
			.insertAfter( this.element );
		if ( $.fn.bgiframe ) {
			this.menu.element.bgiframe();
		}
		this._on( this.window, {
			beforeunload: function() {
				this.element.removeAttr( "autocomplete" );
			}
		});
	},
	_destroy: function() {
		clearTimeout( this.searching );
		this.element
			.removeClass( "ui-autocomplete-input" )
			.removeAttr( "autocomplete" );
		this.menu.element.remove();
		this.liveRegion.remove();
	},
	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "source" ) {
			this._initSource();
		}
		if ( key === "appendTo" ) {
			this.menu.element.appendTo( this.document.find( value || "body" )[0] );
		}
		if ( key === "disabled" && value && this.xhr ) {
			this.xhr.abort();
		}
	},
	_isMultiLine: function() {
		if ( this.element.is( "textarea" ) ) {
			return true;
		}
		if ( this.element.is( "input" ) ) {
			return false;
		}
		return this.element.prop( "isContentEditable" );
	},
	_initSource: function() {
		var array, url,
			that = this;
		if ( $.isArray(this.options.source) ) {
			array = this.options.source;
			this.source = function( request, response ) {
				response( $.ui.autocomplete.filter( array, request.term ) );
			};
		} else if ( typeof this.options.source === "string" ) {
			url = this.options.source;
			this.source = function( request, response ) {
				if ( that.xhr ) {
					that.xhr.abort();
				}
				that.xhr = $.ajax({
					url: url,
					data: request,
					dataType: "json",
					success: function( data ) {
						response( data );
					},
					error: function() {
						response( [] );
					}
				});
			};
		} else {
			this.source = this.options.source;
		}
	},
	_searchTimeout: function( event ) {
		clearTimeout( this.searching );
		this.searching = this._delay(function() {
			if ( this.term !== this._value() ) {
				this.selectedItem = null;
				this.search( null, event );
			}
		}, this.options.delay );
	},
	search: function( value, event ) {
		value = value != null ? value : this._value();
		this.term = this._value();
		if ( value.length < this.options.minLength ) {
			return this.close( event );
		}
		if ( this._trigger( "search", event ) === false ) {
			return;
		}
		return this._search( value );
	},
	_search: function( value ) {
		this.pending++;
		this.element.addClass( "ui-autocomplete-loading" );
		this.cancelSearch = false;
		this.source( { term: value }, this._response() );
	},
	_response: function() {
		var that = this,
			index = ++requestIndex;
		return function( content ) {
			if ( index === requestIndex ) {
				that.__response( content );
			}
			that.pending--;
			if ( !that.pending ) {
				that.element.removeClass( "ui-autocomplete-loading" );
			}
		};
	},
	__response: function( content ) {
		if ( content ) {
			content = this._normalize( content );
		}
		this._trigger( "response", null, { content: content } );
		if ( !this.options.disabled && content && content.length && !this.cancelSearch ) {
			this._suggest( content );
			this._trigger( "open" );
		} else {
			this._close();
		}
	},
	close: function( event ) {
		this.cancelSearch = true;
		this._close( event );
	},
	_close: function( event ) {
		if ( this.menu.element.is( ":visible" ) ) {
			this.menu.element.hide();
			this.menu.blur();
			this.isNewMenu = true;
			this._trigger( "close", event );
		}
	},
	_change: function( event ) {
		if ( this.previous !== this._value() ) {
			this._trigger( "change", event, { item: this.selectedItem } );
		}
	},
	_normalize: function( items ) {
		if ( items.length && items[0].label && items[0].value ) {
			return items;
		}
		return $.map( items, function( item ) {
			if ( typeof item === "string" ) {
				return {
					label: item,
					value: item
				};
			}
			return $.extend({
				label: item.label || item.value,
				value: item.value || item.label
			}, item );
		});
	},
	_suggest: function( items ) {
		var ul = this.menu.element
			.empty()
			.zIndex( this.element.zIndex() + 1 );
		this._renderMenu( ul, items );
		this.menu.refresh();
		ul.show();
		this._resizeMenu();
		ul.position( $.extend({
			of: this.element
		}, this.options.position ));
		if ( this.options.autoFocus ) {
			this.menu.next();
		}
	},
	_resizeMenu: function() {
		var ul = this.menu.element;
		ul.outerWidth( Math.max(
			ul.width( "" ).outerWidth() + 1,
			this.element.outerWidth()
		) );
	},
	_renderMenu: function( ul, items ) {
		var that = this;
		$.each( items, function( index, item ) {
			that._renderItemData( ul, item );
		});
	},
	_renderItemData: function( ul, item ) {
		return this._renderItem( ul, item ).data( "ui-autocomplete-item", item );
	},
	_renderItem: function( ul, item ) {
		return $( "<li>" )
			.append( $( "<a>" ).text( item.label ) )
			.appendTo( ul );
	},
	_move: function( direction, event ) {
		if ( !this.menu.element.is( ":visible" ) ) {
			this.search( null, event );
			return;
		}
if ( this.menu.isFirstItem() && /^previous/.test( direction ) ||
this.menu.isLastItem() && /^next/.test( direction ) ) {
			this._value( this.term );
			this.menu.blur();
			return;
		}
		this.menu[ direction ]( event );
	},
	widget: function() {
		return this.menu.element;
	},
	_value: function() {
		return this.valueMethod.apply( this.element, arguments );
	},
	_keyEvent: function( keyEvent, event ) {
		if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
			this._move( keyEvent, event );
			event.preventDefault();
		}
	}
});
$.extend( $.ui.autocomplete, {
	escapeRegex: function( value ) {
return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
	},
	filter: function(array, term) {
		var matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), "i" );
		return $.grep( array, function(value) {
			return matcher.test( value.label || value.value || value );
		});
	}
});
$.widget( "ui.autocomplete", $.ui.autocomplete, {
	options: {
		messages: {
			noResults: "No search results.",
			results: function( amount ) {
				return amount + ( amount > 1 ? " results are" : " result is" ) +
					" available, use up and down arrow keys to navigate.";
			}
		}
	},
	__response: function( content ) {
		var message;
		this._superApply( arguments );
		if ( this.options.disabled || this.cancelSearch ) {
			return;
		}
		if ( content && content.length ) {
			message = this.options.messages.results( content.length );
		} else {
			message = this.options.messages.noResults;
		}
		this.liveRegion.text( message );
	}
});
}( jQuery ));
(function( $, undefined ) {
var mouseHandled = false;
$.widget( "ui.menu", {
	version: "1.9.2-snc",
	defaultElement: "<ul>",
	delay: 300,
	options: {
		icons: {
			submenu: "ui-icon-carat-1-e"
		},
		menus: "ul",
		position: {
			my: "left top",
			at: "right top"
		},
		role: "menu",
		blur: null,
		focus: null,
		select: null
	},
	_create: function() {
		this.activeMenu = this.element;
		this.element
			.uniqueId()
			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )
			.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length )
			.attr({
				role: this.options.role,
				tabIndex: 0
			})
			.bind( "click" + this.eventNamespace, $.proxy(function( event ) {
				if ( this.options.disabled ) {
					event.preventDefault();
				}
			}, this ));
		if ( this.options.disabled ) {
			this.element
				.addClass( "ui-state-disabled" )
				.attr( "aria-disabled", "true" );
		}
		this._on({
			"mousedown .ui-menu-item > a": function( event ) {
				event.preventDefault();
			},
			"click .ui-state-disabled > a": function( event ) {
				event.preventDefault();
			},
			"click .ui-menu-item:has(a)": function( event ) {
				var target = $( event.target ).closest( ".ui-menu-item" );
				if ( !mouseHandled && target.not( ".ui-state-disabled" ).length ) {
					mouseHandled = true;
					this.select( event );
					if ( target.has( ".ui-menu" ).length ) {
						this.expand( event );
					} else if ( !this.element.is( ":focus" ) ) {
						this.element.trigger( "focus", [ true ] );
						if ( this.active && this.active.parents( ".ui-menu" ).length === 1 ) {
							clearTimeout( this.timer );
						}
					}
				}
			},
			"mouseenter .ui-menu-item": function( event ) {
				var target = $( event.currentTarget );
				target.siblings().children( ".ui-state-active" ).removeClass( "ui-state-active" );
				this.focus( event, target );
			},
			mouseleave: "collapseAll",
			"mouseleave .ui-menu": "collapseAll",
			focus: function( event, keepActiveItem ) {
				var item = this.active || this.element.children( ".ui-menu-item" ).eq( 0 );
				if ( !keepActiveItem ) {
					this.focus( event, item );
				}
			},
			blur: function( event ) {
				this._delay(function() {
					if ( !$.contains( this.element[0], this.document[0].activeElement ) ) {
						this.collapseAll( event );
					}
				});
			},
			keydown: "_keydown"
		});
		this.refresh();
		this._on( this.document, {
			click: function( event ) {
				if ( !$( event.target ).closest( ".ui-menu" ).length ) {
					this.collapseAll( event );
				}
				mouseHandled = false;
			}
		});
	},
	_destroy: function() {
		this.element
			.removeAttr( "aria-activedescendant" )
			.find( ".ui-menu" ).andSelf()
				.removeClass( "ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons" )
				.removeAttr( "role" )
				.removeAttr( "tabIndex" )
				.removeAttr( "aria-labelledby" )
				.removeAttr( "aria-expanded" )
				.removeAttr( "aria-hidden" )
				.removeAttr( "aria-disabled" )
				.removeUniqueId()
				.show();
		this.element.find( ".ui-menu-item" )
			.removeClass( "ui-menu-item" )
			.removeAttr( "role" )
			.removeAttr( "aria-disabled" )
			.children( "a" )
				.removeUniqueId()
				.removeClass( "ui-corner-all ui-state-hover" )
				.removeAttr( "tabIndex" )
				.removeAttr( "role" )
				.removeAttr( "aria-haspopup" )
				.children().each( function() {
					var elem = $( this );
					if ( elem.data( "ui-menu-submenu-carat" ) ) {
						elem.remove();
					}
				});
		this.element.find( ".ui-menu-divider" ).removeClass( "ui-menu-divider ui-widget-content" );
	},
	_keydown: function( event ) {
		var match, prev, character, skip, regex,
			preventDefault = true;
		function escape( value ) {
return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
		}
		switch ( event.keyCode ) {
		case $.ui.keyCode.PAGE_UP:
			this.previousPage( event );
			break;
		case $.ui.keyCode.PAGE_DOWN:
			this.nextPage( event );
			break;
		case $.ui.keyCode.HOME:
			this._move( "first", "first", event );
			break;
		case $.ui.keyCode.END:
			this._move( "last", "last", event );
			break;
		case $.ui.keyCode.UP:
			this.previous( event );
			break;
		case $.ui.keyCode.DOWN:
			this.next( event );
			break;
		case $.ui.keyCode.LEFT:
			this.collapse( event );
			break;
		case $.ui.keyCode.RIGHT:
			if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
				this.expand( event );
			}
			break;
		case $.ui.keyCode.ENTER:
		case $.ui.keyCode.SPACE:
			this._activate( event );
			break;
		case $.ui.keyCode.ESCAPE:
			this.collapse( event );
			break;
		default:
			preventDefault = false;
			prev = this.previousFilter || "";
			character = String.fromCharCode( event.keyCode );
			skip = false;
			clearTimeout( this.filterTimer );
			if ( character === prev ) {
				skip = true;
			} else {
				character = prev + character;
			}
			regex = new RegExp( "^" + escape( character ), "i" );
			match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {
				return regex.test( $( this ).children( "a" ).text() );
			});
			match = skip && match.index( this.active.next() ) !== -1 ?
				this.active.nextAll( ".ui-menu-item" ) :
				match;
			if ( !match.length ) {
				character = String.fromCharCode( event.keyCode );
				regex = new RegExp( "^" + escape( character ), "i" );
				match = this.activeMenu.children( ".ui-menu-item" ).filter(function() {
					return regex.test( $( this ).children( "a" ).text() );
				});
			}
			if ( match.length ) {
				this.focus( event, match );
				if ( match.length > 1 ) {
					this.previousFilter = character;
					this.filterTimer = this._delay(function() {
						delete this.previousFilter;
					}, 1000 );
				} else {
					delete this.previousFilter;
				}
			} else {
				delete this.previousFilter;
			}
		}
		if ( preventDefault ) {
			event.preventDefault();
		}
	},
	_activate: function( event ) {
		if ( !this.active.is( ".ui-state-disabled" ) ) {
			if ( this.active.children( "a[aria-haspopup='true']" ).length ) {
				this.expand( event );
			} else {
				this.select( event );
			}
		}
	},
	refresh: function() {
		var menus,
			icon = this.options.icons.submenu,
			submenus = this.element.find( this.options.menus );
		submenus.filter( ":not(.ui-menu)" )
			.addClass( "ui-menu ui-widget ui-widget-content ui-corner-all" )
			.hide()
			.attr({
				role: this.options.role,
				"aria-hidden": "true",
				"aria-expanded": "false"
			})
			.each(function() {
				var menu = $( this ),
					item = menu.prev( "a" ),
					submenuCarat = $( "<span>" )
						.addClass( "ui-menu-icon ui-icon " + icon )
						.data( "ui-menu-submenu-carat", true );
				item
					.attr( "aria-haspopup", "true" )
					.prepend( submenuCarat );
				menu.attr( "aria-labelledby", item.attr( "id" ) );
			});
		menus = submenus.add( this.element );
		menus.children( ":not(.ui-menu-item):has(a)" )
			.addClass( "ui-menu-item" )
			.attr( "role", "presentation" )
			.children( "a" )
				.uniqueId()
				.addClass( "ui-corner-all" )
				.attr({
					tabIndex: -1,
					role: this._itemRole()
				});
		menus.children( ":not(.ui-menu-item)" ).each(function() {
			var item = $( this );
if ( !/[^\-—–\s]/.test( item.text() ) ) {
				item.addClass( "ui-widget-content ui-menu-divider" );
			}
		});
		menus.children( ".ui-state-disabled" ).attr( "aria-disabled", "true" );
		if ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
			this.blur();
		}
	},
	_itemRole: function() {
		return {
			menu: "menuitem",
			listbox: "option"
		}[ this.options.role ];
	},
	focus: function( event, item ) {
		var nested, focused;
		this.blur( event, event && event.type === "focus" );
		this._scrollIntoView( item );
		this.active = item.first();
		focused = this.active.children( "a" ).addClass( "ui-state-focus" );
		if ( this.options.role ) {
			this.element.attr( "aria-activedescendant", focused.attr( "id" ) );
		}
		this.active
			.parent()
			.closest( ".ui-menu-item" )
			.children( "a:first" )
			.addClass( "ui-state-active" );
		if ( event && event.type === "keydown" ) {
			this._close();
		} else {
			this.timer = this._delay(function() {
				this._close();
			}, this.delay );
		}
		nested = item.children( ".ui-menu" );
if ( nested.length && ( /^mouse/.test( event.type ) ) ) {
			this._startOpening(nested);
		}
		this.activeMenu = item.parent();
		this._trigger( "focus", event, { item: item } );
	},
	_scrollIntoView: function( item ) {
		var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
		if ( this._hasScroll() ) {
			borderTop = parseFloat( $.css( this.activeMenu[0], "borderTopWidth" ) ) || 0;
			paddingTop = parseFloat( $.css( this.activeMenu[0], "paddingTop" ) ) || 0;
			offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
			scroll = this.activeMenu.scrollTop();
			elementHeight = this.activeMenu.height();
			itemHeight = item.height();
			if ( offset < 0 ) {
				this.activeMenu.scrollTop( scroll + offset );
			} else if ( offset + itemHeight > elementHeight ) {
				this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );
			}
		}
	},
	blur: function( event, fromFocus ) {
		if ( !fromFocus ) {
			clearTimeout( this.timer );
		}
		if ( !this.active ) {
			return;
		}
		this.active.children( "a" ).removeClass( "ui-state-focus" );
		this.active = null;
		this._trigger( "blur", event, { item: this.active } );
	},
	_startOpening: function( submenu ) {
		clearTimeout( this.timer );
		if ( submenu.attr( "aria-hidden" ) !== "true" ) {
			return;
		}
		this.timer = this._delay(function() {
			this._close();
			this._open( submenu );
		}, this.delay );
	},
	_open: function( submenu ) {
		var position = $.extend({
			of: this.active
		}, this.options.position );
		clearTimeout( this.timer );
		this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )
			.hide()
			.attr( "aria-hidden", "true" );
		submenu
			.show()
			.removeAttr( "aria-hidden" )
			.attr( "aria-expanded", "true" )
			.position( position );
	},
	collapseAll: function( event, all ) {
		clearTimeout( this.timer );
		this.timer = this._delay(function() {
			var currentMenu = all ? this.element :
				$( event && event.target ).closest( this.element.find( ".ui-menu" ) );
			if ( !currentMenu.length ) {
				currentMenu = this.element;
			}
			this._close( currentMenu );
			this.blur( event );
			this.activeMenu = currentMenu;
		}, this.delay );
	},
	_close: function( startMenu ) {
		if ( !startMenu ) {
			startMenu = this.active ? this.active.parent() : this.element;
		}
		startMenu
			.find( ".ui-menu" )
				.hide()
				.attr( "aria-hidden", "true" )
				.attr( "aria-expanded", "false" )
			.end()
			.find( "a.ui-state-active" )
				.removeClass( "ui-state-active" );
	},
	collapse: function( event ) {
		var newItem = this.active &&
			this.active.parent().closest( ".ui-menu-item", this.element );
		if ( newItem && newItem.length ) {
			this._close();
			this.focus( event, newItem );
		}
	},
	expand: function( event ) {
		var newItem = this.active &&
			this.active
				.children( ".ui-menu " )
				.children( ".ui-menu-item" )
				.first();
		if ( newItem && newItem.length ) {
			this._open( newItem.parent() );
			this._delay(function() {
				this.focus( event, newItem );
			});
		}
	},
	next: function( event ) {
		this._move( "next", "first", event );
	},
	previous: function( event ) {
		this._move( "prev", "last", event );
	},
	isFirstItem: function() {
		return this.active && !this.active.prevAll( ".ui-menu-item" ).length;
	},
	isLastItem: function() {
		return this.active && !this.active.nextAll( ".ui-menu-item" ).length;
	},
	_move: function( direction, filter, event ) {
		var next;
		if ( this.active ) {
			if ( direction === "first" || direction === "last" ) {
				next = this.active
					[ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )
					.eq( -1 );
			} else {
				next = this.active
					[ direction + "All" ]( ".ui-menu-item" )
					.eq( 0 );
			}
		}
		if ( !next || !next.length || !this.active ) {
			next = this.activeMenu.children( ".ui-menu-item" )[ filter ]();
		}
		this.focus( event, next );
	},
	nextPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isLastItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.nextAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base - height < 0;
			});
			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.children( ".ui-menu-item" )
				[ !this.active ? "first" : "last" ]() );
		}
	},
	previousPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isFirstItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.prevAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base + height > 0;
			});
			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.children( ".ui-menu-item" ).first() );
		}
	},
	_hasScroll: function() {
		return this.element.outerHeight() < this.element.prop( "scrollHeight" );
	},
	select: function( event ) {
		this.active = this.active || $( event.target ).closest( ".ui-menu-item" );
		var ui = { item: this.active };
		if ( !this.active.has( ".ui-menu" ).length ) {
			this.collapseAll( event, true );
		}
		this._trigger( "select", event, ui );
	}
});
}( jQuery ));
;
/*! RESOURCE: /scripts/jquery-ui-fix-tooltip.js */
if (typeof jQuery.fn.bsTooltip === "function")
    jQuery.fn.tooltip = jQuery.fn.bsTooltip;
;
/*! RESOURCE: /scripts/doctype/SetTransactionSource.js */
(function(){
	if (!window.transaction_source) {
		var attrs = [ "Interface=Web", "Interface-Type=Classic Environment" ];
		if ((window.NOW && NOW.isUsingPolaris) || (top.NOW && top.NOW.isPolarisWrapper === "true"))
			attrs.push("Interface-Name=Unified Navigation App");
		else
			attrs.push("Interface-Name=Core UI");
		window.transaction_source = attrs.join();
	}
	if (window.jQuery) {
		window.jQuery.ajaxPrefilter(function(options) {
			if (!options.crossDomain) {
				if (!options.headers)
					options.headers = {};
				options.headers["X-Transaction-Source"] = window.transaction_source;
			}
		});
	}
})()
;
/*! RESOURCE: /scripts/classes/ui/Point.js */
var Point = Class.create();
Point.prototype = {
	initialize : function(x, y) {
		this.x = x;
		this.y = y;
	},
		
		getX: function() {
			return this.x;
		}, 
		
		getY: function() {
			return this.y;
		}
	}
;
/*! RESOURCE: /scripts/classes/util/CookieJar.js */
var CookieJar = Class.create({
	appendString: "__CJ_",
	initialize: function(options) {
		this.options = {
expires: 3600,
path: '',
domain: '',
sameSite: '',
secure: ''
		};
		Object.extend(this.options, options || {});
		if (this.options.expires != '') {
			var date = new Date();
			date = new Date(date.getTime() + (this.options.expires * 1000));
			this.options.expires = '; Expires=' + date.toGMTString();
		}
		if (this.options.path != '') {
			this.options.path = '; Path=' + escape(this.options.path);
		}
		if (this.options.domain != '') {
			this.options.domain = '; Domain=' + escape(this.options.domain);
		}
		if (this.options.sameSite != '') {
			this.options.sameSite = '; SameSite=' + escape(this.options.sameSite);
		}
		if (this.options.secure == 'secure') {
			this.options.secure = '; Secure';
		} else {
			this.options.secure = '';
		}
	},
	put: function(name, value) {
		name = this.appendString + name;
		cookie = this.options;
		var type = typeof value;
		switch(type) {
		  case 'undefined':
		  case 'function' :
		  case 'unknown'  : return false;
		  case 'boolean'  : 
		  case 'string'   : 
		  case 'number'   : value = String(value.toString());
		}
		var cookie_str = name + "=" + escape(Object.toJSON(value));
		try {
			document.cookie = cookie_str + cookie.expires + cookie.path + cookie.domain + cookie.sameSite + cookie.secure;
		} catch (e) {
			return false;
		}
		return true;
	},
	get: function(name) {
		name = this.appendString + name;
		var cookies = document.cookie.match(name + '=(.*?)(;|$)');
		if (cookies) {
			return (unescape(cookies[1])).evalJSON();
		} else {
			return null;
		}
	}
});
;
/*! RESOURCE: /scripts/list_filter.js */
var runFilterHandlers = {}
function setImage(element, src) {
	element = $(element);
	if (!element)
	    return;
	
    element.src = src;
}
function swapImage(imgId, newSrc) {
	return function () {setImage(imgId, newSrc);};
}
function setDisplay(element, display) {
    var i = $(element);
    i.style.display = display;    
}
function runFilter(name, listId) {
	if (queueFilters[name]) {
		columnsGet(name, runFilterCallBack);
		return;
	}
	runFilter0(name, listId);
}
function runFilterCallBack() {
  queueFilters[mainFilterTable] = null;
  runFilter0(mainFilterTable);
}
function runFilter0(name, listId) {  
    var filter = getFilter(name);
	if (name.endsWith('.'))
		name = name.substring(0, name.length - 1);
	if (!runFilterHandlers[name])
		return;
	
	runFilterHandlers[name](name, filter, listId);
} 
function saveFilterRadioChange() {
   var div = gel('savefiltergroupref');
   var grp = getMessage('Group');
   if (getGroupSaveOption() == grp)
      div.style.display = "inline";
   else
      div.style.display = "none";
}
function getFilterVisibility() {
    var vis = getGroupSaveOption();
    var me = getMessage('Me');
    var eone = getMessage('Everyone');
    var grp = getMessage('Group');
    if (vis == me)
       return vis;
       
    if (vis == eone)
       return "GLOBAL";
       
    if (vis != grp)
       return me;
       
    var vis = '';
    var e = gel('save_filter_ref_id').value;
    var e = gel(e);
    if (e) 
        vis = e.value;
    
    if (!vis) 
        return me;
        
    return vis;
}
function getGroupSaveOption() {
  var rb = gel('MeRadio');
  if (rb && rb.checked)
     return rb.value;
     
  rb = gel('EveryoneRadio');
  if (rb && rb.checked)
     return rb.value;
     
  rb = gel('GroupRadio');
  if (rb && rb.checked)
     return rb.value;
     
  return getMessage('Me');
}
;
/*! RESOURCE: /scripts/doctype/simpleStorage.js */
(function(root, factory) {
	"use strict";
	if (typeof define === 'function' && define.amd)
		define(factory);
	else
		root.simpleStorage = factory();
}(this, function() {
    "use strict";
	var VERSION = "0.1.2",
		_storage = false,
		_storage_size = 0,
		_storage_available = false,
		_ttl_timeout = null;
	function _init() {
		window.localStorage.setItem("__simpleStorageInitTest", "tmpval");
		window.localStorage.removeItem("__simpleStorageInitTest");
		_load_storage();
		_handleTTL();
		_setupUpdateObserver();
		if ("addEventListener" in window) {
			window.addEventListener("pageshow", function(event) {
				if (event.persisted) {
					_reloadData();
				}
			}, false);
		}
		_storage_available = true;
	}
	function _setupUpdateObserver() {
		if ("addEventListener" in window) 
			window.addEventListener("storage", _reloadData,false);
		else
			document.attachEvent("onstorage", _reloadData);
	}
	function _reloadData() {
		try {
			_load_storage();
		} catch (E) {
			_storage_available = false;
			return;
		}
		_handleTTL();
	}
	function _load_storage() {
		var source = localStorage.getItem("simpleStorage");
		try {
			_storage = JSON.parse(source) || {};
		} catch (E) {
			_storage = {};
		}
		_storage_size = _get_storage_size();
	}
	function _save() {
		try {
			localStorage.setItem("simpleStorage", JSON.stringify(_storage));
			_storage_size = _get_storage_size();
		} catch (E) {
			return E;
		}
		return true;
	}
	function _get_storage_size() {
		var source = localStorage.getItem("simpleStorage");
		return source ? String(source).length : 0;
	}
    function _handleTTL(){
        var curtime, i, len, expire, keys, nextExpire = Infinity, expiredKeysCount = 0;
        clearTimeout(_ttl_timeout);
        if (!_storage || !_storage.__simpleStorage_meta || !_storage.__simpleStorage_meta.TTL)
            return;
        curtime = +new Date();
        keys = _storage.__simpleStorage_meta.TTL.keys || [];
        expire = _storage.__simpleStorage_meta.TTL.expire || {};
        for (i = 0, len = keys.length; i<len; i++){
            if (expire[keys[i]] <= curtime){
                expiredKeysCount++;
                delete _storage[keys[i]];
                delete expire[keys[i]];
            }else{
                if (expire[keys[i]] < nextExpire){
                    nextExpire = expire[keys[i]];
                }
                break;
            }
        }
        if (nextExpire != Infinity){
            _ttl_timeout = setTimeout(_handleTTL, Math.min(nextExpire - curtime, 0x7FFFFFFF));
        }
        if (expiredKeysCount){
            keys.splice(0, expiredKeysCount);
            _cleanMetaObject();
            _save();
        }
    }
    function _setTTL(key, ttl){
        var curtime = +new Date(), i, len, added = false;
        ttl = Number(ttl) || 0;
        if (ttl !== 0){
            if (_storage.hasOwnProperty(key)){
                if (!_storage.__simpleStorage_meta)
                    _storage.__simpleStorage_meta = {};
                if (!_storage.__simpleStorage_meta.TTL)
                    _storage.__simpleStorage_meta.TTL = {expire: {}, keys:[]};
                _storage.__simpleStorage_meta.TTL.expire[key] = curtime + ttl;
                if (_storage.__simpleStorage_meta.TTL.expire.hasOwnProperty(key)){
                    for (i = 0, len = _storage.__simpleStorage_meta.TTL.keys.length; i<len; i++){
                        if (_storage.__simpleStorage_meta.TTL.keys[i] == key){
                            _storage.__simpleStorage_meta.TTL.keys.splice(i);
                        }
                    }
                }
                for (i = 0, len = _storage.__simpleStorage_meta.TTL.keys.length; i<len; i++){
                    if (_storage.__simpleStorage_meta.TTL.expire[_storage.__simpleStorage_meta.TTL.keys[i]] > curtime + ttl){
                        _storage.__simpleStorage_meta.TTL.keys.splice(i, 0, key);
                    }
                }
                if (!added)
                    _storage.__simpleStorage_meta.TTL.keys.push(key);
            } else
                return false;
        } else {
            if (_storage && _storage.__simpleStorage_meta && _storage.__simpleStorage_meta.TTL){
                if (_storage.__simpleStorage_meta.TTL.expire.hasOwnProperty(key)){
                    delete _storage.__simpleStorage_meta.TTL.expire[key];
                    for (i = 0, len = _storage.__simpleStorage_meta.TTL.keys.length; i<len; i++){
                        if (_storage.__simpleStorage_meta.TTL.keys[i] == key){
                            _storage.__simpleStorage_meta.TTL.keys.splice(i, 1);
                            break;
                        }
                    }
                }
                _cleanMetaObject();
            }
        }
        clearTimeout(_ttl_timeout);
        if (_storage && _storage.__simpleStorage_meta && _storage.__simpleStorage_meta.TTL && _storage.__simpleStorage_meta.TTL.keys.length){
            _ttl_timeout = setTimeout(_handleTTL, Math.min(Math.max(_storage.__simpleStorage_meta.TTL.expire[_storage.__simpleStorage_meta.TTL.keys[0]] - curtime, 0), 0x7FFFFFFF));
        }
        return true;
    }
	function _cleanMetaObject() {
		var updated = false, hasProperties = false, i;
		if (!_storage || !_storage.__simpleStorage_meta)
			return updated;
		if (_storage.__simpleStorage_meta.TTL && !_storage.__simpleStorage_meta.TTL.keys.length) {
			delete _storage.__simpleStorage_meta.TTL;
			updated = true;
		}
		for (i in _storage.__simpleStorage_meta) {
			if (_storage.__simpleStorage_meta.hasOwnProperty(i)) {
				hasProperties = true;
				break;
			}
		}
		if (!hasProperties) {
			delete _storage.__simpleStorage_meta;
			updated = true;
		}
		return updated;
	}
	try {
		_init();
	} catch (E) {}
	return {
		version : VERSION,
		canUse : function() {
			return !!_storage_available;
		},
		set : function(key, value, options) {
			if (key == "__simpleStorage_meta") 
				return false;
			if (!_storage)
				return false;
			if (typeof value == "undefined")
				return this.deleteKey(key);
			options = options || {};
			try {
				value = JSON.parse(JSON.stringify(value));
			} catch (E) {
				return E;
			}
			_storage[key] = value;
			_setTTL(key, options.TTL || 0);
			return _save();
		},
		get : function(key) {
			if (!_storage) 
				return false;
			if (_storage.hasOwnProperty(key)
					&& key != "__simpleStorage_meta") {
				if (this.getTTL(key)) {
					return _storage[key];
				}
			}
		},
		deleteKey : function(key) {
			if (!_storage) 
				return false;
			if (key in _storage) {
				delete _storage[key];
				_setTTL(key, 0);
				return _save();
			}
			return false;
		},
		setTTL : function(key, ttl) {
			if (!_storage) 
				return false;
			_setTTL(key, ttl);
			return _save();
		},
		getTTL : function(key) {
			if (!_storage) 
				return false;
	
			if (_storage.hasOwnProperty(key)) {
				if (_storage.__simpleStorage_meta
						&& _storage.__simpleStorage_meta.TTL
						&& _storage.__simpleStorage_meta.TTL.expire
						&& _storage.__simpleStorage_meta.TTL.expire
								.hasOwnProperty(key)) {
	
					var ttl = Math.max(_storage.__simpleStorage_meta.TTL.expire[key] - (+new Date()) || 0, 0);
					return ttl || false;
				} else {
					return Infinity;
				}
			}
	
			return false;
		},
	flush : function() {
		if (!_storage)
			return false;
		_storage = {};
		_storage_size = 0;
		try {
			localStorage.removeItem("simpleStorage");
			return true;
		} catch (E) {
			return E;
		}
	},
	index : function() {
		if (!_storage) 
			return false;
		var index = [], i;
		for (i in _storage) {
			if (_storage.hasOwnProperty(i)
					&& i != "__simpleStorage_meta") {
				index.push(i);
			}
		}
		return index;
	},
	storageSize : function() {
		return _storage_size;
	}, 
	
	getStorage : function() {
		return _storage;
	}
};
}));
;
/*! RESOURCE: /scripts/doctype/GwtMessage14.js */
var GwtMessage = Class.create({
	DEFAULT_LANGUAGE: "en",
	PREFETCH_ENTRY_KEY : "PREFETCH_ENTRY_KEY",
	
	initialize: function() {},
	set: function(n, v) {
		if (!v)
			GwtMessage._messages[n] = true;
		else
			GwtMessage._messages[n] = v;
	},
	format: function(msg) {
		if (!msg)
			return "";
		var str = msg;
		for (var i = 1; i < arguments.length; i++) {
			var paramIndex = i - 1;
			var rx = new RegExp("\{[" + paramIndex + "]\}", "g");
			str = str.replace(rx, arguments[i]);
		}
		return str;
	},
	getMessage: function(strVal) {
		var valList = [];
		valList.push(strVal);
		var messages = this.getMessages(valList);
		var msg = messages[strVal];
		if (arguments.length > 1) {
			var realArray = [].slice.call(arguments, 0);
			realArray[0] = msg;
			msg = this.format.apply(this, realArray);
		}
		return msg;
	},
	getMessages: function(resolveList) {
		var pageMsgs = {};
		var dataRequiringAjaxCall = [];
		var results = {};
		for (var i = 0; i < resolveList.length; i++) {
			var v = GwtMessage._messages[resolveList[i]]; 
			if (v === true)
				pageMsgs[resolveList[i]] = resolveList[i];
			else if (v)
				pageMsgs[resolveList[i]] = v;
			else 
				dataRequiringAjaxCall.push(resolveList[i]);
		}
		
		if (dataRequiringAjaxCall.length > 0) {
			this._loadNewMessages(dataRequiringAjaxCall);
results = this._buildListFromCache(dataRequiringAjaxCall);
		}
		
		for (var key in pageMsgs)
			results[key] = pageMsgs[key];
		
		return results;
	},
	_loadNewMessages: function(resolveList) {
		var cachedMessages = this._findCachedKeys(resolveList);
		var keysToResolve = this._removeCachedEntries(resolveList, cachedMessages);
		if (keysToResolve.length == 0)
			return;
			
	  	var ajax = new GlideAjax("SysMessageAjax");
  		ajax.addParam("sysparm_keys", keysToResolve.length);
  		ajax.addParam("sysparm_prefetch", this._shouldPrefetch() ? "true" : "false");
  		for (var i = 0; i < keysToResolve.length; i++) {
			var keyVal = "key" + i;
			ajax.addParam(keyVal, keysToResolve[i]);
  		}
	    
		var rxml = ajax.getXMLWait();
		this._processResponse(rxml);
	},
	_removeCachedEntries: function(resolveList) {
		var messagesToResolve = new Array();
		for (var i = 0; i < resolveList.length; i++) {
			var key = resolveList[i];
			if (this._getCache().get(key))
				continue;
			messagesToResolve.push(key);
		}
		return messagesToResolve;
	},
	
	_processResponse: function(rxml) {
		if (rxml == null)
			return;
	  	this._processItems(rxml, "preitem");
	  	this._processItems(rxml, "item");
	},
	
	_shouldPrefetch : function() {
		var pf = this._getCache().get(this._PREFETCH_ENTRY_KEY);
		var now = new Date().getTime();
		if (typeof pf == 'undefined' || (pf + 60000) < now) {
			this._getCache().put(this._PREFETCH_ENTRY_KEY, now);
			return true;
		}
		
		return false;
	},
	
	_processItems: function(xml, name) {
		var items = xml.getElementsByTagName(name);
		for (var i=0; i < items.length; i++) {
			var key = items[i].getAttribute("key");
			var value = items[i].getAttribute("value");
			this.setMessage(key, value);
		}
	},
	
	setMessage: function(key, msg) {
		this._getCache().put(key, msg);
	},
		
	isDefaultLanguage: function() {
		return this.getLanguage() == this.getDefaultLanguage();
	},
	
	getLanguage: function() {
		return g_lang;
	},
	
	getDefaultLanguage: function() {
		return this.DEFAULT_LANGUAGE;
	},
	
	_findCachedKeys: function(resolveList) {
		var answer = new Array();
		var cache = this._getCache();
		for (var i =0; i< resolveList.length; i++) {
			var key = resolveList[i];
			var value = cache.get(key);
			if (value)
				answer.push(key);
		}
		
		return answer;
	},
	
	_buildListFromCache: function(resolveList) {
		var answer = {};
		var cache = this._getCache();
		for (var i =0; i < resolveList.length; i++) {
			var key = resolveList[i];
			var value = cache.get(key);
			answer[key] = value;
		}
		
		return answer;
	},
	_getCache: function() {
		if (NOW.useSimpleStorage && simpleStorage.canUse()) {
			var synch = simpleStorage.get("simpleStorageSynch");
			if (NOW.simpleStorageSynch != synch) {
				jslog("*** simpleStorageSynch, size: " + simpleStorage.storageSize());
				simpleStorage.flush();
				simpleStorage.set("simpleStorageSynch", NOW.simpleStorageSynch);
			}
			
			return {
				put: function(key, value) {
					return simpleStorage.set("MSG_" + NOW.language + "_" + key, value);
				},
				get : function(key) {
					return simpleStorage.get("MSG_" + NOW.language + "_" + key);
				}
			}
		}
		try {
			if (getTopWindow().g_cache_message)
				return getTopWindow().g_cache_message;
		} catch (e) { }
			
		if (typeof(g_cache_message) != "undefined")
			return g_cache_message;
		g_cache_message = new GlideClientCache(500);
		return g_cache_message;
	}, 
	
	fetch: function(resolveList, callback) {
		var cachedMessages = this._findCachedKeys(resolveList);
		var keysToResolve = this._removeCachedEntries(resolveList, cachedMessages);
		if (keysToResolve.length == 0) {
			var answer = this.getMessages(resolveList);
			callback(answer);
			return;
		}
		var ajax = new GlideAjax("SysMessageAjax");
		ajax.addParam("sysparm_keys", keysToResolve.length);
		ajax.addParam("sysparm_prefetch", this._shouldPrefetch() ? "true" : "false");
		for (var i = 0; i < keysToResolve.length; i++) {
			var keyVal = "key" + i;
			ajax.addParam(keyVal, keysToResolve[i]);
		}
		ajax.getXML(this.fetched.bind(this), null, {
			fn : callback,
			list : resolveList
		});
	},
	
	fetched: function(response, parms) {
		this._processResponse(response.responseXML);
var answer = this.getMessages(parms.list);
		parms.fn(answer);
	}
});
GwtMessage._messages = {};
function getMessage(msg, callback) {
	if (typeof callback == "function") {
		if (typeof msg == "object")
			new GwtMessage().fetch(msg, callback);
		else
			new GwtMessage().fetch([msg], function(o){callback(o[msg]);});
	} else {
		if (typeof msg == "object")
			return new GwtMessage().getMessages(msg);
			
		return new GwtMessage().getMessage(msg);
	}
}
function getMessages(msgs) {
	return new GwtMessage().getMessages(msgs);
}
;
/*! RESOURCE: /scripts/doctype/DynamicTranslation.js */
var GET_DYNAMIC_TRANSLATION = "/api/sn_dt/v1/dynamic_translation/get_dynamic_translation";
var GET_DYNAMIC_TRANSLATIONS = "/api/sn_dt/v1/dynamic_translation/get_dynamic_translations";
var GET_DETECTED_LANGUAGE = '/api/sn_dt/v1/dynamic_translation/get_detected_language';
var GET_DETECTED_LANGUAGES = '/api/sn_dt/v1/dynamic_translation/get_detected_languages';
var IS_ENABLED = "/api/sn_dt/v1/dynamic_translation/is_enabled";
function setSourceInParms(parms) {
    parms = parms || {};
    parms.event = parms.event || {};
    parms.event.source = 'clientAPI';
    return parms;
}
function isNotValidInputText(msg) {
    return (typeof msg != 'string');
}
function isNotValidString(str) {
    return ((str === null) || (typeof str !== 'string')) ? true : (str.trim().length === 0);
}
function isNotValidTranslator(translator) {
    return ((translator != null) && (typeof translator != 'string'));
}
function isNotValidTargetLanguages(targetLanguages) {
    if (!Array.isArray(targetLanguages) || (targetLanguages.length === 0)) {
        return true;
    }
    for (var index = 0; index < targetLanguages.length; index++) {
        if (isNotValidString(targetLanguages[index])) {
            return true;
        }
    }
    return false;
}
function isNotValidAdditionalParameters(additionalParameters) {
    if (!Array.isArray(additionalParameters) || (additionalParameters.length === 0)) {
        return true;
    } else {
        for (var index = 0; index < additionalParameters.length; index++) {
            var additionalParameter = additionalParameters[index];
            if (!additionalParameter || (additionalParameter.constructor != {}.constructor) || (Object.keys(additionalParameter).length != 2)) {
                return true;
            }
            for (eachkey in additionalParameter) {
                if (!(eachkey === 'parameterName' || eachkey === 'parameterValue') || isNotValidString(additionalParameter[eachkey])) {
                    return true;
                }
            }
        }
    }
    return false;
}
function isNotValidTexts(texts) {
    if (!Array.isArray(texts) || (texts.length === 0)) {
        return true;
    }
    for (var index = 0; index < texts.length; index++) {
        if (isNotValidInputText(texts[index])) {
            return true;
        }
    }
    return false;
}
var errorHandler = {
    rejectErrorMessage: function(response) {
        if (this.hasMultipleTexts) {
            this.reject({
                'code': this.code,
                'message': response,
                'status': 'Error'
            });
        } else {
            this.reject({
                'code': this.code,
                'message': response
            });
        }
    }
};
function validateOptionalParameters(parms, isTranslation, hasMultipleTexts) {
    errorHandler['hasMultipleTexts'] = hasMultipleTexts;
    if (parms.constructor != {}.constructor) {
        errorHandler['code'] = '40006';
        getMessage("Additional parameters are invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
        return false;
    }
    if (isNotValidTranslator(parms.translator)) {
        errorHandler['code'] = '40003';
        getMessage("Translator (\"translator\" field) is invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
        return false;
    }
    if (isTranslation) {
        if ((parms.sourceLanguage != null) && isNotValidString(parms.sourceLanguage)) {
            errorHandler['code'] = '40008';
            getMessage("Source language (\"sourceLanguage\" field) is invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            return false;
        }
        if (parms.targetLanguages && isNotValidTargetLanguages(parms.targetLanguages)) {
            errorHandler['code'] = '40007';
            getMessage("Target languages (\"targetLanguages\" field) are invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            return false;
        }
        if (parms.additionalParameters && isNotValidAdditionalParameters(parms.additionalParameters)) {
            errorHandler['code'] = '40006';
            getMessage("Additional parameters are invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            return false;
        }
    }
    return true;
}
function handleErrorResponse(response, hasMultipleTexts) {
    errorHandler['hasMultipleTexts'] = hasMultipleTexts;
    if (response.status === 400) {
        errorHandler['code'] = '40001';
        getMessage("Dynamic Translation plugin is not installed", errorHandler.rejectErrorMessage.bind(errorHandler));
    } else {
        errorHandler['code'] = '40051';
        getMessage("Unknown error occurred", errorHandler.rejectErrorMessage.bind(errorHandler));
    }
}
var DynamicTranslation = Class.create({
    getTranslation: function(msg, parms) {
        function getOnSuccessResponse(response) {
            var successResponse = {
                'translations': response.result.translations,
                'translator': response.result.translator
            };
            if (response.result.detectedLanguage) {
                successResponse['detectedLanguage'] = response.result.detectedLanguage;
            }
            return successResponse;
        }
        function getOnErrorResponse(response) {
            return JSON.parse(response.result.errorMessage);
        }
        return new Promise(function(resolve, reject) {
            errorHandler['reject'] = reject;
            if (isNotValidInputText(msg)) {
                errorHandler['code'] = '40000';
                getMessage("Text is missing or invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            } else if (!parms || validateOptionalParameters(parms, true, false)) {
                translationRequest = JSON.stringify({
                    'textToTranslate': msg,
                    'parms': setSourceInParms(parms)
                });
                $j.ajaxSetup({
                    headers: {
'Content-Type': 'application/json',
'Accept': 'application/json'
                    }
                });
                $j.post(GET_DYNAMIC_TRANSLATION, translationRequest, function(response) {
                        if (!response.result.isError)
                            resolve(getOnSuccessResponse(response));
                        else
                            reject(getOnErrorResponse(response));
                    })
                    .fail(function(response) {
                        handleErrorResponse(response, false);
                    });
            }
        });
    },
    getTranslations: function(msg, parms) {
        function getOnSuccessResponse(response) {
            var successResponse = {
                'status': response.result.status,
                'translations': response.result.translations,
                'translator': response.result.translator
            };
            return successResponse;
        }
        function getOnErrorResponse(response) {
            var errorDetails = JSON.parse(response.result.errorMessage);
            var errorResponse = {
                'status': errorDetails.status,
                'code': errorDetails.code,
                'message': errorDetails.message
            };
            if (errorDetails['translations']) {
                errorResponse['translations'] = errorDetails['translations'];
            }
            return errorDetails;
        }
        return new Promise(function(resolve, reject) {
            errorHandler['reject'] = reject;
            if (!msg || isNotValidTexts(msg)) {
                errorHandler['code'] = '40000';
                errorHandler['hasMultipleTexts'] = true;
                getMessage("Text is missing or invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            } else if (!parms || validateOptionalParameters(parms, true, true)) {
                translationRequest = JSON.stringify({
                    'textsToTranslate': msg,
                    'parms': setSourceInParms(parms)
                });
                $j.ajaxSetup({
                    headers: {
'Content-Type': 'application/json',
'Accept': 'application/json'
                    }
                });
                $j.post(GET_DYNAMIC_TRANSLATIONS, translationRequest, function(response) {
                        if (!response.result.isError)
                            resolve(getOnSuccessResponse(response));
                        else
                            reject(getOnErrorResponse(response));
                    })
                    .fail(function(response) {
                        handleErrorResponse(response, true);
                    });
            }
        });
    },
    isTranslationEnabled: function(translator) {
        var isEnabled = this.isEnabled;
        return new Promise(function(resolve, reject) {
            if (isNotValidTranslator(translator)) {
                getMessage("Translator (\"translator\" field) is invalid", function(response) {
                    reject({
                        'code': '40003',
                        'message': response
                    });
                });
            } else {
                var params = {
                    event: {
                        eventName: 'isTranslationEnabled'
                    },
                    translator: translator
                };
                isEnabled(params).then(function(response) {
                    resolve(response.translation);
                }, function(response) {
                    reject(false);
                });
            }
        });
    },
    getDetectedLanguage: function(text, parms) {
        function getOnSuccessResponse(response) {
            return {
                'detectedLanguage': response.result.detectedLanguage,
                'alternatives': response.result.alternatives,
                'translator': response.result.translator
            };
        }
        function getOnErrorResponse(response) {
            return JSON.parse(response.result.errorMessage);
        }
        return new Promise(function(resolve, reject) {
            errorHandler['reject'] = reject;
            if (isNotValidInputText(text)) {
                errorHandler['code'] = '40000';
                getMessage("Text is missing or invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            } else if (!parms || validateOptionalParameters(parms, false, false)) {
                detectionRequest = JSON.stringify({
                    'text': text,
                    'parms': setSourceInParms(parms)
                });
                $j.ajaxSetup({
                    headers: {
'Content-Type': 'application/json',
'Accept': 'application/json'
                    }
                });
                $j.post(GET_DETECTED_LANGUAGE, detectionRequest, function(response) {
                        if (!response.result.isError)
                            resolve(getOnSuccessResponse(response));
                        else
                            reject(getOnErrorResponse(response));
                    })
                    .fail(function(response) {
                        handleErrorResponse(response, false);
                    });
            }
        });
    },
    getDetectedLanguages: function(texts, parms) {
        function getOnSuccessResponse(response) {
            var successResponse = {
                'status': response.result.status,
                'detections': response.result.detections,
                'translator': response.result.translator
            };
            return successResponse;
        }
        function getOnErrorResponse(response) {
            var errorDetails = JSON.parse(response.result.errorMessage);
            var errorResponse = {
                'status': errorDetails.status,
                'code': errorDetails.code,
                'message': errorDetails.message
            };
            if (errorDetails['detections']) {
                errorResponse['detections'] = errorDetails['detections'];
            }
            return errorDetails;
        }
        return new Promise(function(resolve, reject) {
            errorHandler['reject'] = reject;
            if (!texts || isNotValidTexts(texts)) {
                errorHandler['code'] = '40000';
                errorHandler['hasMultipleTexts'] = true;
                getMessage("Text is missing or invalid", errorHandler.rejectErrorMessage.bind(errorHandler));
            } else if (!parms || validateOptionalParameters(parms, false, true)) {
                detectionRequest = JSON.stringify({
                    'texts': texts,
                    'parms': setSourceInParms(parms)
                });
                $j.ajaxSetup({
                    headers: {
'Content-Type': 'application/json',
'Accept': 'application/json'
                    }
                });
                $j.post(GET_DETECTED_LANGUAGES, detectionRequest, function(response) {
                        if (!response.result.isError)
                            resolve(getOnSuccessResponse(response));
                        else
                            reject(getOnErrorResponse(response));
                    })
                    .fail(function(response) {
                        handleErrorResponse(response, true);
                    });
            }
        });
    },
    isEnabled: function(parms) {
        function isValidTranslator(translator) {
            return (translator) && (typeof translator != 'string') ? false : true;
        }
        return new Promise(function(resolve, reject) {
            var translator = (parms && (parms.constructor == {}.constructor)) ? parms.translator : parms;
            if (isValidTranslator(translator)) {
                parms = (typeof parms === 'string') ? {
                    'translator': translator
                } : parms;
                isEnabledRequest = JSON.stringify({
                    'parms': setSourceInParms(parms)
                });
                $j.ajaxSetup({
                    headers: {
'Content-Type': 'application/json',
'Accept': 'application/json'
                    }
                });
                $j.post(IS_ENABLED, isEnabledRequest, function(response) {
                        var res = response.result;
                        resolve(res);
                    })
                    .fail(function() {
                    	resolve({
                            'translation': false,
                            'detection': false,
                            'batchTranslation': false,
                            'batchDetection': false
                        });
                    });
            } else {
                getMessage("Translator (\"translator\" field) is invalid", function(response) {
                    reject({
                        'code': '40003',
                        'message': response
                    });
                });
            }
        });
    }
});
DynamicTranslation.getTranslation = function(textToTranslate, parms) {
    return new DynamicTranslation().getTranslation(textToTranslate, parms);
};
DynamicTranslation.getTranslations = function(textsToTranslate, parms) {
    return new DynamicTranslation().getTranslations(textsToTranslate, parms);
};
DynamicTranslation.isTranslationEnabled = function(translator) {
    return new DynamicTranslation().isTranslationEnabled(translator);
};
DynamicTranslation.getDetectedLanguage = function(text, parms) {
    return new DynamicTranslation().getDetectedLanguage(text, parms);
};
DynamicTranslation.getDetectedLanguages = function(texts, parms) {
    return new DynamicTranslation().getDetectedLanguages(texts, parms);
};
DynamicTranslation.isEnabled = function(parms) {
    return new DynamicTranslation().isEnabled(parms);
};
;
/*! RESOURCE: /scripts/classes/GlideFilterDescription.js */
var GlideFilterDescription = Class.create({
	initialize: function() {},
	choices: null,
	
	setParsedQuery: function(strVal) {
		this.parsedQuery = strVal;
	},
	
	getParsedQuery: function() {
		return this.parsedQuery;
	},
	
	setBaseLine: function(value) {
		this.baseLine = value;
	},
	
	getBaseLine: function() {
		return this.baseLine;
	},	
	
	setMetaData: function(value) {
		this.metaData = value;
	},
	
	getMetaData: function() {
		return this.metaData;
	},
	
	setPreferenceParam: function(value) {
		this.preference = value;
	},
	
	getPreferenceParam: function() {
		return this.preference;
	},
	
	setExpanded: function(value) {
		this.expanded = value;
	},
	
	getExpanded: function() {
		return this.expanded;
	},
	setName: function(value) {
		this.name = value;
	},
	
	getName: function() {
		return this.name;
	},
	
	
	setFilter: function(value) {
		this.filter = value;
	},
	
	getFilter: function() {
		return this.filter;
	},
	
	setTableName: function(value) {
		this.tableName = value;
	},
	
	getTableName: function() {
		return this.tableName;
	},
	
	setPinned: function(value) { 
		this.pinned = value;
	},
	
	getPinned: function() {
		return this.pinned;
	},
	
	setMainFilterTable: function(filterTable) {
		this.mainFilterTable = filterTable;
	},
	
	getMainFilterTable: function() {
		return this.mainFilterTable;
	},
	setPinnable: function(value) {
		this.pinnable = value;
	},
	
	getPinnable: function() {
		return this.pinnable;
	},
	
	setShowRelated: function(value) {
		this.showRelated = value;
	},
	
	getShowRelated: function() {
		return this.showRelated;
	},
	
	setChoiceListMap: function(value) {
		this.choiceList = value;
	},
	
	getChoiceList: function(table) {
		if (typeof this.choiceList == 'undefined')
			return null;
		return this.choiceList[table];	
	}
});
;
/*! RESOURCE: /scripts/classes/GlideFilterHandlers.js */
var GlideFilterHandler = Class.create({
	MAP_OPEN: "$" + "{",
	filterClass: "",
	
	initialize: function(tableName, item, mappingId) {
		this.maxValues = 0;
		this.tableName = tableName;
		this.item = item;
		this.isRightOperandShowingRelatedFields = false;
		this.lastOperator = null;
		this.mappingId = mappingId;
		window.NOW.GlideFilterHandlersResponseCache = window.NOW.GlideFilterHandlersResponseCache || new GlideClientCache();
	},
	
	destroy: function() {
		if (this.tr) {
			if (this.tr.operSel)
				this.tr.operSel.onchange = null;
			this.tr = null;
		}
		for (i = 0; i < this.inputCnt; i++) {
			this.inputs[i].onkeypress = null;
			this.inputs[i].onchange = null;
			this.inputs[i] = null;
		}
		this.destroyMappingSupport();
	},
	create: function(tr, values, filterClass) {
		this.tr = tr;
		if (values && values.indexOf(this.MAP_OPEN) != -1) {
			console.log("implement GlideFilterHandler#create mapping support");
		}
		this._setup(values);
		this._init(values);
		this._build(filterClass);
		if (this.listenForOperChange)
			this.tr.operSel.onchange = this._operOnChange.bind(this);
		
		this.isRightOperandShowingRelatedFields = false;
		
		this.lastOperator = this._getOperator();
	},
	
	_setup: function(values) {
	},
	
	getTableName: function() {
		return this.tableName;
	},
	
	getFilterText: function(oper) {
		return '';
	},
	
	_init: function(values) {
		this._initValues(values);
		this._initialMappingValue = values;
		this._initInputs();
	},
	
	_initValues: function(values) {
		var op = this._getOperator();
		if (!values) {
			this.values = [];
		} else if (this.tr && this.tr.varType === "variables" && !this.userDateFormat) {
			this.values = [ values ];
		} else {
			if (this.tr && this.tr.varType === "boolean") {
				if (values === "0")
					values = "false";
				else if (values === "1")
					values = "true";
				else if (values === "False")
					values = "false";
			}
			this.values = values.split("@");
		}
			
		for (var i = this.values.length; i < this.maxValues; i++) 
			this.values[i] = "";				
		
	},
	
	_initInputs: function() {
		this.inputCnt = 0;
		this.inputs = [];
		for (var i = 0; i < this.maxValues; i++)
			this.inputs[i] = null;
	},
	
	_clearValues: function() {
		this.values = [];
		for (var i = 0; i < this.maxValues; i++) 
			this.values[i] = "";
	},
	
		
	_isEmptyOper: function() {
		var op = this._getOperator();
		if (op == 'ISEMPTY' || op == 'ISNOTEMPTY' || op == 'ANYTHING' || op == 'EMPTYSTRING' || op == 'VALCHANGES') {
			this._clearValues();
			return true;
		}
		
		return false;
	},
	
	_getOperator: function() {
		return getSelectedOption(this.tr.operSel).value;
	},
	
	_getInputValue: function(el) {
		var value = "";
		if (el == null)
			return value;
			
		if (el.tagName.toUpperCase() == "TEXTAREA") {
			value = el.value;
			return this._isTemplate() ? this._removeTrailingSpaces(value) : value;
		}
		
		if (el.tagName.toUpperCase() == "INPUT") {
			value = this._escapeIfRequired(el.value);
			return this._isTemplate() ? this._removeTrailingSpaces(value) : value;
		}
		
		var options = el.options;
		if (el.multiple) {
			var vals = [];
			for (var i = 0; i < options.length; i++) {
				if (options[i].selected)
					vals.push(options[i].value);
			}
			return vals.join(",");
		}
		return options[el.selectedIndex].value;
	},
	
	_escapeIfRequired: function(value) {
		if (this._getOperator() == "BETWEEN") {
			if (value == null) {
				for (var i = 0; i < this.values; i++)
					this.values[i] = this._escape(this.values[i]);
				return this.values;
			} 
			return this._escape(value);
		} 
		return value;
	},
	
	_escape: function (value) {
		if (value == null)
			return;
value = value.replace(/\\/g, "\\\\")
value = value.replace(/@/g, "\\@")
		return value;
	},
	
	_unescapeIfRequired: function() {
		if (this._getOperator() == "BETWEEN")
			for (var i=0; i < this.values.length; i++) 
				this.values[i] = this._unescape(this.values[i]);	
	},
	
	_unescape: function (value) {
		return this._parseValues(value,'@')[0];
	},
	
	
	_addTextInput: function(type, td, label) {
		if (!td)
			td = this.tr.tdValue;
		if (!this._isEmptyOper()) {
			if (this.tr.tdMapping)
				this.tr.tdMapping.show();
		}
		var associatedField = this.item && this.item.label;
		var input = addTextInput(td, this.values[this.inputCnt], type, associatedField, label);
		this.inputs[this.inputCnt] = input;
		this.inputCnt++;
		return input;
	},
	_addInvisibleTextInput: function(type, td) {
		var input = $(this._addTextInput(type, td));
		input.addClassName('sr-only');
		input.setAttribute('disabled', 'disabled');
		input.siblings().each(function(sibling){ sibling.hasAttribute('data-date-format') && sibling.remove()});
		this.inputCnt--;
		this.inputs.pop();
		getMessage('No value needed', function(msg) {
			input.value = msg;
		});
	},
	_addBetweenTextInput: function(type, td) {	
		if (!td)
			td = this.tr.tdValue;
			
		var associatedField = this.item && this.item.label;
		var input = addTextInput(td, this.values[this.inputCnt], type, associatedField);
		this.inputs[this.inputCnt] = input;
		this.inputCnt++;
		return input;
	},
	
	_addTextArea: function() {	
		if (!this._isEmptyOper()) {
			if (this.tr.tdMapping)
				this.tr.tdMapping.show();
		}
		var associatedField = this.item && this.item.label;
		var input = addTextArea(this.tr.tdValue, this.values[this.inputCnt], associatedField);
		this.inputs[this.inputCnt] = input;
		this.inputCnt++;
		return input;
	},
	_addSelect: function(width, multi, size) {
		var associatedField = this.item && this.item.label;
		var s = _createFilterSelect(width, multi, associatedField);
		this.tr.tdValue.setAttribute("data-value", associatedField);
		this.tr.tdValue.appendChild(s);
		this.inputs[this.inputCnt] = s;
		this.inputCnt++;
		return s;
	},
	
	_operOnChange: function() {
		var lastOp = this.lastOperator; 
		this.lastOperator = this._getOperator();
	 
		
		if((fieldComparisonOperators.indexOf(lastOp) >= 0) != (fieldComparisonOperators.indexOf(this.lastOperator) >= 0) || lastOp == "DYNAMIC") {
			this.inputCnt = 0;
			this.input = [];
		}
		this.getValues();
		this._unescapeIfRequired();
		this._build();	
	},
	
	
	_isTemplate: function() {
		var t = this.tr;
		while (t) {
			t = findParentByTag(t, 'table');
			if (t) {				
				var id = t.id + '';
				if (id.indexOf('filters_table') != -1)
					break;
			}
		}
		if (!t)
			return false;
			
		return t.getAttribute('gsft_template') == 'true';
	},
	_renderDynamicOperandInput: function(op) {
		if (typeof g_dynamic_filter_options == "undefined")
			return false;
		if (op != "DYNAMIC")
			return false;
		var addedReferenceInput = false;
		var arr = g_dynamic_filter_options.split("##");
		for (var i = 0; i < arr.length; i++) {
			var aItem = arr[i];
			if (aItem.length == 0)
				continue;
			var aItemArr = aItem.split("::");
			if (aItemArr.length < 3)
				continue;
			var isExclusiveDynamic = typeof gtf_exclusive_dynamics != 'undefined' && gtf_exclusive_dynamics == "true";
			if ( !isExclusiveDynamic && this.item && this.item.getReference() == aItemArr[2] || this.originalTableName == aItemArr[3] ) {
				if (!addedReferenceInput)
					var input = this._addSelect(180, false, 1);
				var arrInput = [];
				arrInput.push(aItemArr[1]);
				var translated = getMessages(arrInput);
				addOption(input, aItemArr[0], translated[aItemArr[1]], this.rightOperand == aItemArr[0]);
				addedReferenceInput = true;
			}
		}
		return addedReferenceInput;
	},
	setOriginalTable: function(tableNameFull) {
		if (tableNameFull.indexOf(".") == -1)
			this.originalTableName = tableNameFull;
		else
			this.originalTableName = tableNameFull.split(".")[1];
	},
	
	getValues: function() {
		this._clearValues();
		if (this.inputCnt == 0)
			return "";
			
		for (var i = 0; i < this.maxValues; i++) 
			this.values[i] = this._getInputValue(this.inputs[i]);
		if (this._isMappingEnabled)
			return this.getMappingValue();
		if (this.inputCnt == 1)
			return this.values[0];
		else 
			return this.values.join("@");
	},
	
	_getFilterTable: function() {
		if (this.tr && this.tr.conditionRow && this.tr.conditionRow.tableName) {
			var conditionRowTableName = this.tr.conditionRow.tableName.split(".");
			if (conditionRowTableName.length > 0 && conditionRowTableName[0]) {
				return conditionRowTableName[0];
			}
		}
		return firstTable;
	},
	 _populateRightOperandChoices : function() {
		var field = this.item.name;
		var table = "";
		if (typeof mainFilterTable == "undefined")
			table = this._getFilterTable();
		else
			table = mainFilterTable;
		var selection = this.values[0];
		if (null != table && "" != table && null != field && "" != field) {
			var s = this._addSelect(this.width, false, 1);
			s.onchange = this.rightOperandfieldOnChange.bind(s, table,this);
			var completeSelection = "";
			if (selection)
				completeSelection = table + '.' + selection;
			else
				completeSelection = table;
			var showRelatedFields = "no";
			if (this.isRightOperandShowingRelatedFields || (selection && selection.indexOf(".") >= 0))
				showRelatedFields = "yes";
			this.addChoices(s, completeSelection, "",
					this._filterRightOperand, selection, null,
					showRelatedFields, this.item);
			if (null != selection)
				this.selectRightOperand(s, selection);
		}
	},
	
	selectRightOperand : function(select, selection) {
		var o = getSelectedOption(select);
		var options = select.options;
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			if (null != option && option.value == selection) {
				option.innerHTML = getFullLabel(option);
				option.style.color = 'green';
				option.wasSelected = 'true';
				select.style.width = "240px";
				option.selected = true;
				select.selectedIndex = i;
				break;
			}
		}
	},
	_getReportTable : function() {
return firstTable;
	},
		
	rightOperandfieldOnChange : function(table, t) {
		var fieldName = this.value;
		var idx = fieldName.indexOf("...");
		var f = fieldName.substring(0, idx);
		if (f != table)
			f = table + "." + f;
		f = f + ".";
		if (idx != -1) {
			if (fieldName == '...Show Related Fields...') {
				t.isRightOperandShowingRelatedFields = true;
				t.addChoices(this, f, "", t._filterRightOperand,
						fieldName, null, "yes", t.item);
			} else if (fieldName == '...Remove Related Fields...') {
				t.isRightOperandShowingRelatedFields = false;
				t.addChoices(this, f, "", t._filterRightOperand,
						fieldName, null, "no", t.item);
			}
else {
				t.isRightOperandShowingRelatedFields = true;
				t.addChoices(this, f, "", t._filterRightOperand,
						fieldName, null, "yes", t.item);
			}
			return;
		}
		var o = getSelectedOption(this);
		var fieldName = o.value;
		var name = currentTable = getTableFromOption(o);
		var options = this.options;
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			if (optionWasSelected(option)) {
				option.innerHTML = getNormalLabel(option);
				option.style.color = 'black';
				option.wasSelected = 'false';
				break;
			}
		}
		if (setup(name) == false)
			return;
		var tr = this.parentNode.parentNode;
		o.normalLabel = o.innerHTML;
		o.innerHTML = getFullLabel(o);
		o.style.color = 'green';
		o.wasSelected = 'true';
		this.style.width = "240px";
	},
	
	addChoices : function(s, target, fValue, filterMethod, fieldName, filter, showRelated, leftOperandElement) {
		var forFilter;
		var onlyRestrictedFields;
		if (filter) {
			forFilter = filter.getOpsWanted();
			onlyRestrictedFields = filter.onlyRestrictedFields;
		}
		var messages = getMessages(MESSAGES_CONDITION_RELATED_FILES);
		while (s.length > 0)
			s.remove(0);
		var placeholder = false;
		var selindex = 0;
		var indentLabel = false;
		var savedItems = new Object();
		var savedLabels = new Array();
		var labelPrefix = '';
		var headersAdded = false;
		var parts = target.split(".");
		var tableName = parts[0];
		var tableDef = getTableReference(tableName);
		var extension = '';
		var prefix = '';
		if (parts.length > 1 && parts[1] != null && parts[1] != '') {
			var o = null;
			if (filterExpanded && parts.length > 2) {
				var tableLabel = tableDef.getLabel();
				if (tableLabel == null)
					tableLabel = "Parent";
				o = addOption(s, tableDef.getName() + "...", tableLabel
						+ " " + messages['lowercase_fields'], false);
				o.tableName = tableDef.getName();
				o.style.color = 'blue';
			}
			if (parts[1] == PLACEHOLDERFIELD) {
				o = addOption(s, PLACEHOLDER,
						messages['-- choose field --'], true);
				o.style.color = 'blue';
				o.tableName = tableDef.getName();
				o.fullLabel = messages['-- choose field --'];
				placeholder = true;
			}
			var sPeriod = "";
			var cname = '';
			for (var i = 1; i < parts.length - 1; i++) {
				var f = parts[i];
				if (f == null || f == '')
					break;
				var elementDef = tableDef.getElement(parts[i]);
				if (elementDef == null)
					break;
				var childTable = tableName;
				if (elementDef.isReference()) {
					childTable = elementDef.getReference();
					if (elementDef.isExtensionElement())
						extension = childTable;
					else
						extension = '';
				} else {
					if (fieldName != null && fieldName.indexOf("...") > -1) {
						childTable = parts[0];
					} else {
						break;
					}
				}
				var parentTable = (extension != '') ? extension : elementDef.getTable().getName();
				var tableDef = getTableReference(childTable, parentTable);
				if (cname.length)
					cname = cname + ".";
				cname += elementDef.getName();
				sPeriod = "." + sPeriod;
				var clabel = sPeriod + elementDef.getLabel() + "-->"
						+ elementDef.getRefLabel() + " "
						+ messages['lowercase_fields'];
				if (s.length === 0) {
					o = addOption(s, PLACEHOLDER,
						messages['-- choose field --'], true);
					o.style.color = 'blue';
					o.tableName = tableDef.getName();
					o.fullLabel = messages['-- choose field --'];
				}
				o = addOption(s, cname + "...", clabel, false);
				o.tablename = tableDef.getName();
				o.style.color = 'blue';
				selindex++;
				indentLabel = true;
				headersAdded = true;
				if (labelPrefix.length)
					labelPrefix += ".";
				labelPrefix += elementDef.getLabel();
				if (prefix.length)
					prefix += ".";
				prefix += elementDef.getName();
			}
		}
		columns = tableDef.getColumns();
		queueColumns[tableDef.getName()] = columns;
		var textIndex = false;
		if (!noOps && !indentLabel) {
			var root = columns.getElementsByTagName("xml");
			if (root != null && root.length == 1) {
				root = root[0];
				textIndex = root.getAttribute("textIndex");
			}
		}
		var items = (extension != '') ? tableDef.getTableElements(extension) : tableDef.getElements();
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var t = item.getName();
			if (filterMethod != null && t != fValue) {
				if (filterMethod(leftOperandElement, item,
						this.isRightOperandShowingRelatedFields) == true) {
					continue;
				}
			}
			var t = item.getName();
			if (prefix != '')
				t = prefix + '.' + t;
			if (!noOps && item.getAttribute("filterable") == "no" && !allowConditionsForJournal(item.getAttribute("type"), filter))
				continue;
			if (!item.canRead()) {
				if (t != fValue) {
					continue;
				} else {
					item.setCanRead('yes');
				}
			}
			if (!item.isActive()) {
				if (t != fValue) {
					continue;
				} else {
					item.setActive('yes');
				}
			}
			var label = item.getLabel();
			if ((!elementDef || elementDef.getType() != "glide_var")
					&& !item.isReference()) {
				savedItems[label] = t;
				savedLabels[savedLabels.length] = label;
			}
			if (item.isReference() && leftOperandElement.isReference()) {
				if (item.getReference() == leftOperandElement.getReference()) {
					savedItems[label] = t;
					savedLabels[savedLabels.length] = label;
				}
			}
			if (item.isReference() && !item.isRefRotated()
					&& item.getType() != 'glide_list' && filterExpanded
					&& showRelated == 'yes') {
				label += "-->" + item.getRefLabel();
				label += " " + messages['lowercase_fields'];
				t += "...";
				savedItems[label] = t;
				savedLabels[savedLabels.length] = label;
			}
		}
		items = tableDef.getExtensions();
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var label = item.getLabel() + " (+)";
			t = item.getExtName() + "...";
			if (prefix != '')
				t = prefix + '.' + t;
			savedItems[label] = t;
			savedLabels[savedLabels.length] = label;
		}
		if (!onlyRestrictedFields
				&& ((fValue == TEXTQUERY || textIndex)
						&& filterMethod == null || forFilter)) {
			o = addOption(s, TEXTQUERY, messages['Keywords'], (fValue == TEXTQUERY));
			o.fullLabel = messages['Keywords'];
		}
		for (var i = 0; i < savedLabels.length; i++) {
			var sname = savedLabels[i];
			if (s.length === 0 && sname.includes("-->")) {
				this._addPlaceholderOption(s, tableDef, messages);
			}
			var o = addOption(s, savedItems[sname], sname, savedItems[sname] == fValue);
			o.tableName = tableDef.getName();
			if (labelPrefix != '')
				o.fullLabel = labelPrefix + "." + sname;
			else
				o.fullLabel = sname;
			if (indentLabel) {
				var yyy = o.innerHTML;
				o.innerHTML = "&nbsp;&nbsp;&nbsp;" + yyy;
			}
			var v = o.value;
			if (v.indexOf("...") != -1)
				if (o.fullLabel.indexOf("(+)") == -1)
					o.style.color = 'blue';
				else
					o.style.color = 'darkred';
		}
		if (filterExpanded && !onlyRestrictedFields) {
			if (s.length === 0) {
				this._addPlaceholderOption(s, tableDef, messages);
			}
			
			if (showRelated != 'yes') {
				var o = addOption(s, "...Show Related Fields...", messages['Show Related Fields'], false);
				o.style.color = 'blue';
			} else {
				var o = addOption(s, "...Remove Related Fields...",messages['Remove Related Fields'], false);
				o.style.color = 'blue';
			}
		}
		if (!placeholder && (s.selectedIndex == 0 && ((textIndex && fValue != TEXTQUERY) || headersAdded)))
			s.selectedIndex = selindex;
		if (s.selectedIndex >= 0) {
			fValue = getSelectedOption(s).value;
		}
		return s;
	},
	_addPlaceholderOption: function(s, tableDef, messages) {
		var o = addOption(s, PLACEHOLDER,
			messages['-- choose field --'], true);
		o.style.color = 'blue';
		o.tableName = tableDef.getName();
		o.fullLabel = messages['-- choose field --'];
	},
	_filterRightOperand : function(leftOperandElement, rightOperandElement, isRightOperandShowingRelatedFields) {
		var filterOut = true;
		if (null != leftOperandElement && null != rightOperandElement) {
			var leftType = leftOperandElement.getType();
			var rightType = rightOperandElement.getType();
			if ('reference' != leftType) {
				if ('reference' == rightType && isRightOperandShowingRelatedFields)
					filterOut = false;
				if (leftType == rightType)
					filterOut = false;
			} else {
				if ('reference' == rightType)
					filterOut = false;
			}
		}
		return filterOut;
	},
	_renderRightOperandAsFieldList : function(operation) {
		if ("SAMEAS" == operation || "NSAMEAS" == operation
				|| "GT_FIELD" == operation || "LT_FIELD" == operation
				|| "GT_OR_EQUALS_FIELD" == operation
				|| "LT_OR_EQUALS_FIELD" == operation)
			return true;
		return false;
	},
	_addSameAsLabels : function(t, op) {
		if (op == 'SAMEAS' || op == 'NSAMEAS') {
			var ASMSG = getMessage('as');
			var FROMMSG = getMessage('from');
			var span = cel("span", t.tr.tdValue);
			span.style.marginLeft = "3px";
			span.style.marginRight = "5px";
			if (op == 'SAMEAS')
				span.innerHTML = ASMSG;
			else
				span.innerHTML = FROMMSG;
		}
	},
	_parseValues : function(value, delimiter) {
		var sb = "";
		var parts = [];
		if (value == null)
			value = ""
		var escapeChar = '\\';
		var escaped = false;
		for (var i = 0; i < value.length; i++) {
			var checkChar = value.substr(i, 1);
			if (!escaped) {
				if (checkChar == escapeChar) {
					escaped = true;
					continue;
				}
				if (checkChar == delimiter) {
					parts.push(sb);
					sb = "";
					continue;
				}
			} else
				escaped = false;
			sb += checkChar;
		}
		parts.push(sb);
		return parts;
	},
setFilterClass : function(filterClass) {
		this.filterClass = filterClass;
	},
	getFilterClass : function() {
		return this.filterClass;
	},
	initMappingSupport: function(shouldEnable, type, mappingMgr) {
		var that = this;
		var td = this.tr.tdMapping;
		this._parentMappingMgr = mappingMgr;
		if (!td || !mappingMgr)
			return;
		this.mappingType = type;
		if (shouldEnable) {
			td.innerHTML = '<input type="hidden" class="mapping_condition_input" >';
		} else {
			td.innerHTML = "";
		}
		this.mappingInput = td.querySelector(".mapping_condition_input");
		var value = this._initialMappingValue || "";
		this._initMappingValue(value);
		this._initialMappingValue = null;
		this._parentMappingMgr.initElement(this);
	},
	_initMappingValue: function(value) {
		if (value.indexOf("{{") !== -1) {
			this.setMappingValue(value);
			this.activateMapping();
		} else {
			this.deactivateMapping();
		}
	},
	destroyMappingSupport: function() {
		if (this._parentMappingMgr && typeof this._parentMappingMgr.destroyElement === "function")
			this._parentMappingMgr.destroyElement(this);
	},
	activateMapping: function() {
		this._isMappingEnabled = true;
		if (!this.tr)
			return;
		this.tr.tdValue.style.display = "none";
		addClassName(this.tr.tdMapping, "active");
		if (this._parentMappingMgr && typeof this._parentMappingMgr.notifyStateChange === "function")
			this._parentMappingMgr.notifyStateChange(this);
	},
	deactivateMapping: function() {
		this._isMappingEnabled = false;
		if (!this.tr)
			return;
		this.tr.tdValue.style.display = "";
		removeClassName(this.tr.tdMapping, "active");
		if (this._parentMappingMgr && typeof this._parentMappingMgr.notifyStateChange === "function")
			this._parentMappingMgr.notifyStateChange(this);
	},
	_getMappingInput: function() {
		return this.tr.tdMapping.querySelector(".mapping_condition_input");
	},
	getMappingValue: function() {
		return this._getMappingInput().value;
	},
	setMappingValue: function(value) {
		this._getMappingInput().value = value;
	},
	_removeTrailingSpaces: function(value) {
return value.replace(/ +$/, "");
	},
	
	type: "GlideFilterHandlers"
});
var GlideFilterString = Class.create(GlideFilterHandler, {
	_setup : function(values) {
		this.maxValues = 2;
		this.listenForOperChange = true;
		this.rightOperand = values;
	},
	_build : function() {
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			if (this.tr.tdMapping)
				this.tr.tdMapping.hide();
			return;
		}
		var op = this._getOperator();
		if (this._renderDynamicOperandInput(op))
			return;
		if (this._renderRightOperandAsFieldList(op)) {
			this._addSameAsLabels(this, op);
			this._populateRightOperandChoices();
		} else if (op == 'IN') {
			var saveMe = useTextareas;
			useTextareas = true;
			var inp = this._addTextArea();
			inp.style.width = '20em';
			var v = this.values[this.inputCnt - 1];
			if (this._isTemplate()) {
				inp.value = v;
			} else {
				if (v) {
					if (isMSIE)
v = v.replace(/,/g, '\n\r');
					else
v = v.replace(/,/g, '\n');
					inp.value = v;
				}
			}
			useTextareas = saveMe;
		} else if (op === "BETWEEN") {
			this._addTextInput(null, null, 'First input value');
			var txt = document.createTextNode(" " + getMessage('and') + " ");
			this.tr.tdValue.appendChild(txt);
			this._addTextInput(null, null, 'Second input value');
		} else {
			this._addTextInput();
		}
	},
	_getInputValue : function(el) {
		if (el == null)
			return '';
		if (!(el.tagName.toUpperCase() == "TEXTAREA"))
			return GlideFilterHandler.prototype._getInputValue.call(this, el);
		var value = el.value + '';
		if (!this._isTemplate()) {
value = value.replace(/[\n\t]/g, ',');
value = value.replace(/\r/g, '');
		} else
value = this._removeTrailingSpaces(value);
		return this._escapeIfRequired(value);
	},
	_initMappingValue: function(value) {
		this.setMappingValue(value);
		this.activateMapping();
	},
	getValues : function() {
		this._clearValues();
		if (this.inputCnt == 0)
			return "";
		for (var i = 0; i < this.maxValues; i++)
			this.values[i] = this._getInputValue(this.inputs[i]);
		if (this._isMappingEnabled)
			return this.getMappingValue();
		if (this.inputCnt == 1)
			return this.values[0];
		else {
			this._escapeIfRequired();
			return this.values.join("@");
		}
	},
	_initInputs : function() {
		if (this._getOperator() == "DYNAMIC") {
			this.inputCnt = 1;
			this.maxValues = 1;
		} else
			this.inputCnt = 0;
		this.inputs = [];
		for (var i = 0; i < this.maxValues; i++)
			this.inputs[i] = null;
	},
	_initValues : function(values) {
		var op = this._getOperator();
		if (op == "BETWEEN") {
			if (!values)
				this.values = [];
			else
				this.values = this._parseValues(values, "@");
			for (var i = this.values.length; i < this.maxValues; i++)
				this.values[i] = "";
		} else {
			this.values = [];
			this.values[0] = values;
		}
	},
	type: "GlideFilterString"
});
var GlideFilterNumber = Class.create(GlideFilterString, {
	_initValues : function(values) {
		var op = this._getOperator();
		if (op == "BETWEEN") {
			if (!values)
				this.values = [];
			else
				this.values = values.split("@");
			for (var i = this.values.length; i < this.maxValues; i++)
				this.values[i] = "";
		} else {
			this.values = [];
			this.values[0] = values;
		}
	},
	type: "GlideFilterNumber"
});
var GlideFilterDuration = Class.create(GlideFilterHandler, {
	
	_setup: function(values) {
		this.maxValues = 2;
		var valueArray = this._parseValues (values, "@");
this.duration = new GlideDuration(valueArray[0],  this.item);
		if (this._getOperator() == "BETWEEN") {
			this.maxValues = 2;
			if (valueArray.length > 1)
this.durationTo = new GlideDuration(valueArray[1],  this.item);
			else
this.durationTo = new GlideDuration(valueArray[0],  this.item);
				
		}
		this.listenForOperChange = true;
	},
	destroy: function() {
		if (this.tr)
			this.tr.tdValue.innerHTML = "";
		this.inputCnt = 0;
		GlideFilterHandler.prototype.destroy.call(this);
	},
		
	_initValues: function(values) {
		this.values = new Array();
		this.values[0] = this.duration.getDays();
		this.values[1] = this.duration.getHours();
		this.values[2] = this.duration.getMinutes();
		this.values[3] = this.duration.getSeconds();
		this.inputCnt = 4;
		if (this._getOperator() == "BETWEEN") {
			this.values[4] = this.duration.getDays();
			this.values[5] = this.duration.getHours();
			this.values[6] = this.duration.getMinutes();
			this.values[7] = this.duration.getSeconds();
			this.inputCnt = 8;
		}
	},	
	
	getValues: function() {
		this._clearValues();
		if (this.inputCnt == 0)
			return "";
			
		var answer = this.duration.getValue();
		this.values[0] = this.duration.getDays();
		this.values[1] = this.duration.getHours();
		this.values[2] = this.duration.getMinutes();
		this.values[3] = this.duration.getSeconds();
		if (this._isMappingEnabled)
			return this.getMappingValue();
		if (this._getOperator() == "BETWEEN") {
			if (this.durationTo) {
				var answer1 = this.durationTo.getValue();
				this.values[4] = this.durationTo.getDays();
				this.values[5] = this.durationTo.getHours();
				this.values[6] = this.durationTo.getMinutes();
				this.values[7] = this.durationTo.getSeconds();
				return "javascript:gs.getDurationDate('" + answer + "')@javascript:gs.getDurationDate('" + answer1 + "')";
			}
		}
		return "javascript:gs.getDurationDate('" + answer + "')";
	},
	
	_build: function() {
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			if (this.tr.tdMapping)
				this.tr.tdMapping.hide();
			return;
		} else if (this.tr.tdMapping)
			this.tr.tdMapping.show();
		if(this._renderRightOperandAsFieldList(this._getOperator())) {
			this._addSameAsLabels(this, this._getOperator());
			this._populateRightOperandChoices();
		} else {
			this.inputCnt = 1;
			this.duration.buildHTML(this.tr.tdValue);
			
			if (this._getOperator() == "BETWEEN" && this.maxValues == 2) {
				var txt = document.createTextNode(" " + getMessage('and') + " ");
				this.tr.tdValue.appendChild(txt);
				if (!this.durationTo)
					this.durationTo = new GlideDuration();
				this.durationTo.buildHTML(this.tr.tdValue);
			}
			
			
		}
	},
	type: "GlideFilterDuration"
});
var GlideFilterStringMulti = Class.create(GlideFilterString, {
	_setup : function(values) {
		this.maxValues = 1;
		this.listenForOperChange = true;
		this.rightOperand = values;
	},
	_build : function() {
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			return;
		}
		if (this._renderDynamicOperandInput(this._getOperator()))
			return;
		if (this._renderRightOperandAsFieldList(this._getOperator())) {
			this._addSameAsLabels(this, this._getOperator());
			this._populateRightOperandChoices();
		} else
			this._addTextArea();
	},
	type: "GlideFilterStringMulti"
});
var GlideFilterChoice = Class.create(GlideFilterHandler, {
	
	_setup: function(values) {
		this.maxValues = 2;
		this.listenForOperChange = true;
	},
	
	setChoices: function(choices) {
		this.choices = choices;
	},
	
	setWidth: function(width) {
		this.width = width;
	},
	
	setMulti: function(multi) {
		this.multi = multi;
	},
	
	setSize: function(size) {
		this.size = size;
	},
	
	_build: function() {
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			if (this.tr.tdMapping)
				this.tr.tdMapping.hide();
			return;
		}
		if(this._renderRightOperandAsFieldList(this._getOperator())) {
			this._addSameAsLabels(this, this._getOperator());
			this._populateRightOperandChoices();
		}else {		
			var s = this._addSelect(this.width, this.multi, this.size);
			this._fillSelect();
		}
	},
	
	_fillSelect: function(inputIndex) {
		if (inputIndex == null)
			inputIndex = 0;
		if (!this._isEmptyOper() && this.tr.tdMapping)
			this.tr.tdMapping.show();
		var vars = {};
		if (this.values[inputIndex]) {
			var valSplit = this.values[inputIndex].split(',');
			for (var i = 0; i < valSplit.length; i++) {
				vars[valSplit[i]] = true;
			}
		}
		
		var removeNone = false;
		var oper = this._getOperator();
		if ((oper == 'IN') || (oper == 'NOT IN'))
			removeNone = true;
			
		if (isMSIE && this.inputs[0].multiple) {
var isIE6 = /MSIE 6/.test(navigator.userAgent);
			if (isIE6)
				this.inputs[0].focus();
		}
		for (var i = 0; i < this.choices.length; i++) {
			var option = this.choices[i];
			if (option[0] == '' && removeNone)
			 	continue;
			var selected = (vars[option[0]] != null || this.values[inputIndex] == option[0]);
			addOption(this.inputs[inputIndex], option[0], option[1], selected);
		}
	},
	type: "GlideFilterChoice"
});
var GlideFilterChoiceDynamic = Class.create(GlideFilterChoice, {
	
	_initValues: function(values) {
		this.values = (typeof values !== "undefined") ? [values] : [];
	},
	_setup: function(values) {
		this.size = 4;
		this.maxValues = 2;
		this.listenForOperChange = true;
	},
	
	setChoices: function(choices) {
		this.choices = choices;
	},
	_initMappingValue: function(value) {
		this.mappingType = 'choice';
		if (value.indexOf("{{") !== -1) {
			this.setMappingValue(value);
			this.activateMapping();
		} else {
			this.deactivateMapping();
		}
	},
	
	_build: function() {
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			if (this.tr.tdMapping)
				this.tr.tdMapping.hide();
			return;
		}
		var oper = this._getOperator();
		if (this._renderRightOperandAsFieldList(oper)) {
			this._addSameAsLabels(this, oper);
			this._populateRightOperandChoices();
		} else if ((oper == 'LIKE') || (oper == 'STARTSWITH') || (oper == 'ENDSWITH') || (oper == 'NOT LIKE')) {
			if (this.prevOper && (this.prevOper != 'LIKE') && (this.prevOper != 'STARTSWITH') && (this.prevOper != 'ENDSWITH'))
				this._clearValues();
				
			this._addTextInput();
		} else if ((oper == 'IN') || (oper == 'NOT IN')) {
			this.multi = true;
			var s = this._addSelect(this.width, this.multi, this.size);
			if (!this.hasChoices) {
				s.disabled = true;
				this._getChoices();
			} else 
				this._fillSelect();
			
		} else if (oper == 'BETWEEN')	 {
			this.multi = false;
			if (Array.isArray(this.values) && this.values.length === 1)
				this.values = this.values.join('').split("@");
			var s = this._addSelect(this.width, this.multi, 1);
			if (!this.hasChoices) {
				s.disabled = true;
				this._getChoices();
			} else 
				this._fillSelect();
	
			var txt = document.createTextNode(" " + getMessage('and') + " ");
			this.tr.tdValue.appendChild(txt);
			this.multi = false;
			var s = this._addSelect(this.width, this.multi, 1);
			if (!this.hasChoices) {
				s.disabled = true;
				this._getChoices();
			} else 
				this._fillSelect(1);
		} else {
			this.multi = false;
			var s = this._addSelect(this.width, this.multi, 1);
			if (!this.hasChoices) {
				s.disabled = true;
				this._getChoices();
			} else 
				this._fillSelect();
		}
		this.prevOper = oper;
	},
	
	_getChoices: function() {
		if (typeof g_filter_description != 'undefined' && g_filter_description.getChoiceList(this.tr.tableField) != null) {
			var response = loadXML(g_filter_description.getChoiceList(this.tr.tableField));
			this._addChoices(response);	
		} else {
			var ajax = new GlideAjax('PickList');
			ajax.addParam('sysparm_chars', '*');
			ajax.addParam('sysparm_nomax', 'true');
			ajax.addParam('sysparm_name', this.tr.tableField);
			var domain = gel('sysparm_domain');
			if (domain)
				ajax.addParam('sysparm_domain', domain.value);
			if (this.tr.includeExtendedChoices === 'false')
				ajax.addParam('sysparm_include_extended_choices', 'false');
			response = this._resolveChoicesFromCache(ajax);
			this._addChoices(response);
		}
	},
	_resolveChoicesFromCache : function (request) {
		var cacheKey = JSON.stringify(request.params, Object.keys(request.params).sort());
		var choiceCache = window.NOW.GlideFilterHandlersResponseCache;
		var cachedItem = choiceCache.get(cacheKey);
		if (!cachedItem) {
			var response = request.getXMLWait();
			choiceCache.put(cacheKey, response);
			return response;
		}
		return cachedItem;
	},
	_addChoices : function(xml) {
		if (!xml)
			return;
		
		var msg = new GwtMessage();
		var select = this.inputs[0];
		select.disabled = false;
		select.options.length = 0;
		this.choices = [];
		this.hasChoices = true;
		var root = xml.documentElement;
		var dep = root.getAttribute("dependent");
		var items = xml.getElementsByTagName("item");
		var addNone = (root.getAttribute("include_none") === "false") ? false : true;
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			if (item.getAttribute("value") == '')
				addNone = false;
		}
		if (addNone)
			this.choices[0] = [ '', msg.getMessage('-- None --') ];
		
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var v = item.getAttribute("value");
			var l = item.getAttribute("label");
			var option = [ v, l ];
			this.choices.push(option);
		}
		if (dep != null) {
			this.choices = this.choices
					.sort(function(a, b) {
						if ((a[1].toLowerCase() + "") < (b[1]
								.toLowerCase() + "")) {
							return -1;
						}
						if ((a[1].toLowerCase() + "") > (b[1]
								.toLowerCase() + "")) {
							return 1;
						}
						return 0;
					});
			for (var i = 0; i < this.choices.length - 1; i++) {
				if (this.choices[i][1] == this.choices[i + 1][1])
					i = this.amendLabel(i);
			}
		}
		this._fillSelect();
	},
	
	amendLabel: function(i) {
		var dupe = this.choices[i][1];
		while (i < this.choices.length && this.choices[i][1] == dupe) {
			var c = this.choices[i];
			c[1] = c[1] + " - " + c[0];
			i++;
		}
		return i-1;
	},
	type: "GlideFilterChoiceDynamic"
});
var GlideFilterSnapshotChoice = Class.create(GlideFilterChoiceDynamic, {
	_getChoices: function() {
		this._addChoices(this.item.attributes.options);
	},
	_addChoices: function(options) {
		if (!options)
			return;
		var select = this.inputs[0];
		select.disabled = false;
		select.options.length = 0;
		this.hasChoices = true;
		this.choices = JSON.parse(options);
		this._fillSelect();
	},
	type: "GlideFilterSnapshotChoice"
});
var GlideFilterCurrency = Class.create(GlideFilterString, {
	
	initialize: function(tableName, item) {
		GlideFilterHandler.prototype.initialize.call(this, tableName, item);
	},
	
	_operOnChange: function() {
		var lastOp = this.lastOperator; 
		this.lastOperator = this._getOperator();
		
		if((fieldComparisonOperators.indexOf(lastOp) >= 0) != (fieldComparisonOperators.indexOf(this.lastOperator) >= 0)) {
			this.inputCnt = 0;
			this.input = [];
		}
		this.getValues();
		if (lastOp != 'BETWEEN' && this._getOperator() == 'BETWEEN') {
			this.values[2] = this.values[1];
			this.values[1] = '';
		}
		this._unescapeIfRequired();
		this._build();	
	},
	_setup: function(values) {
		this.maxValues = 2;
		this.id = this.tr.tableField + "." + guid();
		this.listenForOperChange = true;
	},
	
	_build: function() {
		GlideFilterString.prototype._build.call(this);
		var s = this._addSelect(60, false, 1);
		this._getCurrencies(s);
	},
	
	_getCurrencies: function(s) {
		var currencies = new Array();
		if (currencies.length != 0)
			return currencies;
		
		var ajax = new GlideAjax("CurrencyConverter");
		ajax.addParam("sysparm_name", "getCurrencies");
		ajax.getXMLAnswer(this._getCurrenciesResponse.bind(this), null, s);
	},
	
	_getCurrenciesResponse: function(answer, s) {		
		var values = answer;
		var currencies = values.split(",");
	var cache = this._getCache();
		cache.put("currencies", values);
		for (var i = 0; i < currencies.length; i++)
			addOption(s, currencies[i], currencies[i]);
			
		this.currency_widget = s;
		this._parseValue();
	},
	
	_resolveFromCache:function() {
		var cache = this._getCache();
		var value = cache.get("currencies");
		if (value)
			return value.split(",");
		
		return [];
	},
	
	_getCache:function() {
		if (typeof(g_cache_currency) != "undefined")
			return g_cache_currency;
			
		g_cache_currency = new GlideClientCache(1);
		
		return g_cache_currency;
	},
	_parseValue: function() {
		if (this.inputs.length == 0)
			return;
		var processSelect = false;
		var currency;
		for (var i=0; i < this.inputs.length; i++) {
			var v = this.inputs[i].value;
			if (!v)
				continue;
			if (v.indexOf('javascript') < 0) {
if (v.match(/[A-Z]+[,;][0-9]+/g)) {
					processSelect = true
var splitValue = v.split(/[,;]+/);
					currency = splitValue[0];
					this.inputs[i].value = splitValue[1];
				}
				continue;
			}
			processSelect = true;
			var sa = v.split(';');
			var first = sa[0].split('\'');
			currency = first[first.length - 1];
			var price = sa[sa.length - 1];
			var priceIndex = price.indexOf('\'');
			price = price.substring(0, priceIndex);
			this.inputs[i].value = price;
		}
		if (!processSelect)
			return;
		var sel = new Select(this.currency_widget);
		sel.selectValue(currency);
	},
	getValues: function() {
		if (this._isMappingEnabled)
			return this.getMappingValue();
		if (!this.currency_widget)
			return '';
		var v = GlideFilterString.prototype.getValues.call(this);
		var tn = this.item.table.tableName;
		var fn = this.item.name;
		var valList = v.split('@');
		if (valList[0] === "NULL")
return "NULL";
		var	fromVal = 'javascript:global.getCurrencyFilter(\'' + tn + '\',\'' + fn + '\', \'' + this.currency_widget.value + ';' + valList[0] + '\')'
		if ((valList.length > 1 && this._getOperator() == 'BETWEEN') || (valList.length > 2))
			return fromVal + '@javascript:global.getCurrencyFilter(\'' + tn + '\',\'' + fn +'\', \'' + this.currency_widget.value + ';' + valList[1] + '\')'
		return fromVal;
	},
	
	destroy : function() {
		GlideFilterString.prototype.destroy.call(this);
		this.currency_widget = null;
	},
	type: "GlideFilterCurrency",
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideDuration.js */
var GlideDuration = Class.create({
	
	MAX_UNIT_DAYS: 4,
	MAX_UNIT_HOURS: 3,
	MAX_UNIT_MINUTES: 2,
	MAX_UNIT_SECONDS: 1,
	
	initialize: function(value, item) {
		this.values = new Array();
		var gMessage = new GwtMessage();
		var values = ["Days", "Hours", "Minutes", "Seconds"];
		var answer = gMessage.getMessages(values);
		this.daysMessage = answer["Days"];
		this.hourMessage = answer["Hours"];
		this.minutesMessage = answer["Minutes"];
		this.secondsMessage = answer["Seconds"];
		this.maxLevel = this.MAX_UNIT_DAYS;
		if (item) {
			this.item = item;
			this.maxLevel = this._parseMaxUnit(this.item.getNamedAttribute('max_unit'));
		}
		if (value)
			this.values = GlideDuration.parseDurationToParts(value);
		for (var i = this.values.length; i < 4; i++)
			this.values[i] = "0";
	},
	
	buildHTML: function(parent) {		
		this.parent = parent;
		this.days = 0;
		this.hour = 0;
		this.minute = 0;
		this.second = 0;
		if (this.maxLevel == this.MAX_UNIT_DAYS) {
			this._addSpan(this.daysMessage);
			this.days = this._addInput("dur_day", this.getDays());
			this.days.maxLength = "5";
			this.days.style.marginRight = "5px";
		}
		else
			this.hour = (this.getDays() * 24);
		if (this.maxLevel >= this.MAX_UNIT_HOURS) {
			this._addSpan(this.hourMessage);
			this.hour = this._addInput("dur_hour", this.hour + parseInt(this.getHours(), 10));
			if (this.maxLevel == this.MAX_UNIT_HOURS)
this.hour.maxLength = "7";
			this._addSpan(":");
		}
		else
			this.minute = ((this.hour + parseInt(this.getHours(),10)) * 60);
		if (this.maxLevel == this.MAX_UNIT_MINUTES)
			this._addSpan(this.minutesMessage);
		if (this.maxLevel >= this.MAX_UNIT_MINUTES) {
			this.minute = this._addInput("dur_min", this.minute + parseInt(this.getMinutes(), 10));
	        if (this.maxLevel == this.MAX_UNIT_MINUTES)
	            this.minute.maxLength = "9";
			this._addSpan(":");
		}
		else
			this.second = ((this.minute + parseInt(this.getMinutes(),10)) * 60);
		
		if (this.maxLevel == this.MAX_UNIT_SECONDS)
			this._addSpan(this.secondsMessage);
		this.second = this._addInput("dur_sec", this.second + parseInt(this.getSeconds(), 10));
		if (this.maxLevel == this.MAX_UNIT_SECONDS)
		    this.second.maxLength = "10";
	},
	
	_addInput: function (id, value) {
		var ic = cel("input", this.parent);
		ic.className = 'filerTableInput form-control';
		ic.id = id;
		ic.size = "2";
		ic.maxLength = "2";
		ic.value = value;
		ic.setAttribute('aria-label', this.getAriaLabel(id));
		return ic;
	},
	
	_addSpan: function(text) {
		var sp = cel("label", this.parent);
		sp.className = 'condition';
        sp.innerHTML = text;
	},
	
	getDays: function() {
		return this.values[0];
	},
	
	getHours: function() {
		return this.values[1];
	},
	
	getMinutes: function() {
		return this.values[2];
	},
	
	getSeconds: function() {
		return this.values[3];
	},
	
	getValue: function() {
		var day = 0;
		var hour = 0;
		var min = 0;
		var sec = 0;
		if (this.maxLevel == this.MAX_UNIT_DAYS)
			day = parseInt(this.days.value, 10);
		if (this.maxLevel >= this.MAX_UNIT_HOURS)
			hour = parseInt(this.hour.value, 10);
		if (this.maxLevel >= this.MAX_UNIT_MINUTES)
			min = parseInt(this.minute.value, 10);
		if (this.maxLevel >= this.MAX_UNIT_SECONDS)
			sec = parseInt(this.second.value, 10);
		
		if (sec >= 60) {
min += Math.floor(sec / 60);
			sec = sec % 60;
		}
		if (min >= 60) {
hour += Math.floor(min / 60);
			min = min % 60;
		}
		if (hour >= 24) {
day += Math.floor(hour / 24);
			hour = hour % 24;
		}
		
		if (!day || day == null)
			day = 0;
		if (!hour || hour == null)
			hour = 0;
		if (!min || min == null)
			min = 0;
		if (!sec || sec == null)
			sec = 0;
		this.values[0] = day + '';
		this.values[1] = hour + '';
		this.values[2] = min + '';
		this.values[3] = sec + '';
		return day + " " + hour + ":" + min + ":" + sec;
	},
	
	_parseMaxUnit: function(max_unit) {
		switch (max_unit) {
		case 'hours':
			maxLevel = this.MAX_UNIT_HOURS;
			break;
		case 'minutes':
			maxLevel = this.MAX_UNIT_MINUTES;
			break;
		case 'seconds':
			maxLevel = this.MAX_UNIT_SECONDS;
			break;
		default:
			maxLevel = this.MAX_UNIT_DAYS;
		}
		
		return maxLevel;
	},
	getAriaLabel: function(id) {
		var gMessage = new GwtMessage();
		var label = '';
		switch (id) {
			case 'dur_day':
				label = gMessage.getMessage('Days');
				break;
			case 'dur_hour':
				label = gMessage.getMessage('Hours');
				break;
			case 'dur_min':
				label = gMessage.getMessage('Minutes');
				break;
			case 'dur_sec':
				label = gMessage.getMessage('Seconds');
				break;
		}
		return label;
	}
});
GlideDuration.parseDurationToParts = function(value) {
	var MS_IN_DAY = 86400000;
	if (value.indexOf("javascript:") == 0) {
		var s = value.split("'");
		value = s[1];
	}
	var parts = value.split(" ");
	if (parts.length == 2) {
		var times = parts[1].split(":");
		for (var i=0; i < times.length; i++)
			parts[1+i] = times[i];
		var dateParts = parts[0].split("-");
		if (dateParts.length == 3)
parts[0] = parseInt(Date.parse(dateParts[1] + '/' + dateParts[2] + '/' + dateParts[0] + ' 00:00:00 UTC')) / MS_IN_DAY;
	} else if(parts.length === 1) {
		var newPart = [];
		newPart[0] = 0;
		var times = value.split(":");
		for (var i=0; i < times.length; i++)
			newPart[1+i] = times[i];
		parts = newPart;
	}
	return parts;
}
;
/*! RESOURCE: /scripts/classes/GlideFilterReference.js */
var GlideFilterReference = Class.create(GlideFilterHandler, {
	_setup: function(values) {
		this.maxValues = 1;
		this.tableField = this.tr.tableField;
		this.id = this.tableField + "." + guid();
		this.listenForOperChange = true;
		this.rightOperand = values;
	
	},
	
	_initValues: function(values) {
		this.values = [];
        if (values)
           this.values[0] = values;
	},
	_build: function() {
		clearNodes(this.tr.tdValue);
		var inDoctypeMode = (document.documentElement.getAttribute('data-doctype') == 'true');
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			if (this.tr.tdMapping)
				this.tr.tdMapping.hide();
			return;
		}
		var op = this._getOperator();
		var input = this._addTextInput("hidden");
		input.id = this.id;
		
		
		if (this._renderRightOperandAsFieldList(op)) {
			this._addSameAsLabels(this, op);
			this._populateRightOperandChoices();
			return;
		}
		
		if (this._renderDynamicOperandInput(op))
			return;
			
		input = this._addTextInput();
		input.id = "sys_display." + this.id;
		input.onfocus = this._onFocus.bind(this);
		input.onkeydown = this._onKeyDown.bindAsEventListener(this);
		input.onkeypress = this._onKeyPress.bindAsEventListener(this);
		input.onkeyup = this._onKeyUp.bindAsEventListener(this);
		input.autocomplete = "off";
		input.ac_columns = "";
		input.ac_order_by = "";
		if (inDoctypeMode) {
			input.setAttribute("class", "pull-left form-control filter-reference-input");
			input.setAttribute("style", "width: 80%");
		}
		setAttributeValue(input, 'autocomplete', 'off');
		var displayValue = gel('fancy.' + this.values[0]);
		if (displayValue && displayValue.value != '')
			this.inputs[1].value = displayValue.value;
		else if (this.values) {
			this.inputs[1].value = this.values;
			this._resolveReference();
		}
		
		var view = $$("[name='sysparm_view']")[0];
    	if (view && (view.value == "sys_ref_list"))
    		return;
		if (inDoctypeMode) {
			var btn = cel("button");
			btn.setAttribute("class", "icon-search btn btn-default filerTableAction");
			btn.setAttribute("style", "margin-left: 2px");
			var nameOfStackEl = gel("sysparm_nameofstack");
			if (nameOfStackEl && nameOfStackEl.value == "reflist") {
				btn.setAttribute("aria-label", getMessage('Lookup unavailable in Reference Lists, use autocomplete'));
				btn.setAttribute("title", getMessage('Lookup unavailable in Reference Lists, use autocomplete'));
				btn.setAttribute("disabled", "disabled");
			} else {
				btn.setAttribute("aria-label", getMessage('Lookup using list'));
				btn.setAttribute("title", getMessage('Lookup using list'));
				btn.setAttribute("aria-haspopup", true);
				btn.onclick = this._refListOpen.bindAsEventListener(this);
			}
			this.tr.tdValue.style.minWidth = "200px";
			this.tr.tdValue.appendChild(btn);
		} else {
var image = createImage("images/reference_list.gifx", "Lookup using list", this, this._refListOpen);
			image.setAttribute("class", "filerTableAction");
			this.tr.tdValue.appendChild(image);
		}
	},
	_refListOpen: function() {
		var target = this.id;
		if (target.indexOf("IO:") > -1)
			target = target.substring(target.indexOf("IO:"), target.length);
		if (this.useRefQual && this.item.getRefQual() && !this.item.getRefQual().startsWith("javascript:"))
			reflistOpen(target, this.item.getName(), this.item.getReference(), null, false, null, this.item.getRefQual());
		else {
			var qualifier;
			var reference = this.item.getReference();
			if (!reference) {
				reference = "sys_choice";
				qualifier = "table=" + this.getTableName() + "^element=" + this.item.getName();
			}
			reflistOpen(target, this.item.getName(), reference, null, null, null, qualifier);
		}
		this._onRefListOpen();
		return false;
	},
	_onRefListOpen: function () {
	},
	setUseRefQual: function(useRefQual) {
		this.useRefQual = useRefQual;
	},
	getValues: function() {
		this._clearValues();
		if (this._isMappingEnabled)
			return this.getMappingValue();
		if (this._isEmptyOper())
            return '';
		   
  		var oper = this._getOperator();
  		var input = this.inputs[0];
		if (this.inputCnt == 2) {
	   		var userInput = this.inputs[1];
	   		var userInputVal = userInput.value;
	   		if (userInputVal != null && (userInputVal.indexOf("javascript:") > -1))
	   			input = userInput;
	   		else if (this._useDisplayValue(oper))
	   			input = userInput;
	   		else if (this.item.getType() == 'glide_list' && oper == "DYNAMIC")
	   			input = userInput;
		}
		if (input) {
  			return input.value;
		} else
  			return '';
	},
	_useDisplayValue: function(oper) {
		return this.item.getType() != 'glide_list' && oper != '=' && oper != '!=' && oper != "CHANGESFROM" && oper != "CHANGESTO"; 
	},
	
	_resolveReference: function() {
		if (this.values[0]) {
			var ajax = new GlideAjax("ResolveRef");
			ajax.addParam("sysparm_name", this.tableField);
			ajax.addParam("sysparm_value", this.values[0]);
			ajax.getXML(this._resolveReferenceResponse.bind(this));
		}
	},
	_resolveReferenceResponse: function(request) {
		if (!request)
			return;
		
		var xml = request.responseXML;
		if (!xml)
			return;
			
		if (xml) {
		    var items = xml.getElementsByTagName("item");
			if (items && items.length > 0 && items[0] && this.inputs[1])
				this.inputs[1].value = items[0].getAttribute("label");
		}
	},
	_onFocus: function(evt) {
		if (!this.inputs[1].ac) {
			var partialSearchFilterTypes = ',STARTSWITH,ENDSWITH,LIKE,NOT LIKE,';
			var tdOper = this.inputs[1].up(1).tdOper;
			var currentFilterType = (tdOper.firstElementChild || tdOper.children[0] || {}).value;
			if (partialSearchFilterTypes.indexOf(','+currentFilterType+',') > -1)
				this.inputs[1].setAttribute('is_filter_using_contains', 'true');
			this.inputs[1].ac = new AJAXReferenceCompleter(this.inputs[1], this.id, '');
			this.inputs[1].ac.elementName = this.tableField;
			
			this.inputs[1].ac.clearDerivedFields = true;
			if (this.useRefQual && this.item.getRefQual()) {
				this.inputs[1].ac.setIgnoreRefQual(false);
				this.inputs[1].ac.setRefQual(this.item.getRefQual());
			} else {
				this.inputs[1].ac.setIgnoreRefQual(true);
			}
		}
	},
	
	_onKeyDown: function(evt) {
		return acReferenceKeyDown(this.inputs[1], evt);
	},
	
	_onKeyPress: function(evt) {
		return acReferenceKeyPress(this.inputs[1], evt);
	},
	
	_onKeyUp: function(evt) {
		return acReferenceKeyUp(this.inputs[1], evt);
	},
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideFilterVariables.js */
var GlideFilterVariables = Class.create(GlideFilterHandler, {
	_setup: function(values) {
		this.maxValues = 1;
		this.id = this.tr.tableField + "." + guid();
		this.catID = "item_option_new.cat_item." + guid();
		this.listenForOperChange = true;
		this.rightOperand = values;
	
	},
	
	_initValues: function(values) {
		this.values = [];
		this.varValue = '';
        if (values) {
           this.values[0] = values.substring(0,32);
           this.refQuery = values.substring(32);
           var query = new GlideEncodedQuery(this.tableName, "IO:" + this.values[0] + this.refQuery, null);
           query.parse();
           var terms = query.getTerms();
           var term = terms[0];
           this.varOp = term.getOperator();
           this.varValue = term.getValue();
        }
   	},
	_build: function() {
	    this.queryID = this.tr.tdValue.queryID;
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			return;
		}
        
        this._hideOperators();	
		 
		var input = this._addTextInput("hidden");
		input.id = this.id;
			
		input = this._addTextInput();
		input.id = "sys_display." + this.id;
		input.onfocus = this._onFocus.bind(this);
		input.onRefPick = this._onFocus.bind(this);
		input.onkeydown = this._onKeyDown.bindAsEventListener(this);
		input.onkeypress = this._onKeyPress.bindAsEventListener(this);
		input.onkeyup = this._onKeyUp.bindAsEventListener(this);
		input.autocomplete = "off";
		input.data_completer = "AJAXTableCompleter";
		input.ac_columns = "cat_item;category";
		input.ac_order_by = "";
		input.placeholder = getMessage("Select Variable");
		setAttributeValue(input, 'autocomplete', 'off');
		var displayValue = gel('fancy.' + this.values[0]);
		if (displayValue && displayValue.value != '')
			this.inputs[1].value = displayValue.value;
		else if (this.values) {
			this.inputs[1].value = this.values;
			this._resolveReference();
		}
		if (document.documentElement.getAttribute('data-doctype') == 'true') {
			var btn = cel("button");
			btn.setAttribute("class", "icon-search btn btn-default filerTableAction");
			btn.setAttribute("aria-label", getMessage('Lookup using list'));
			btn.setAttribute("aria-haspopup", true);
			btn.onclick = this._refListOpen.bindAsEventListener(this);
			this.tr.tdValue.appendChild(btn);
		} else {
var image = createImage("images/reference_list.gifx", "Lookup using list", this, this._refListOpen);
			image.setAttribute("class", "filerTableAction")
			this.tr.tdValue.appendChild(image);
		}
		
		this._buildCatItemReference();
		this._makeCatItemFirst();
		
		if (!this.values[0]) 
			return;
		      
	    this._getVariableType(this.values[0]);
	},
	
	_buildCatItemReference: function() {
	   var queryID = this.queryID;
	   td = this.tr.conditionRow.addTD(this.tr, queryID);
	   td.nowrap = true;
	   this.tr.catTD = td;
	   
		var input = this._addTextInput("hidden", td);
		input.id = this.catID;
			
		input = this._addTextInput("", td);
		input.id = "sys_display." + this.catID;
		input.onfocus = this._onFocusCat.bind(this);
		input.onRefPick = this._onFocusCat.bind(this);
		input.onkeydown = this._onKeyDownCat.bindAsEventListener(this);
		input.onkeypress = this._onKeyPressCat.bindAsEventListener(this);
		input.onkeyup = this._onKeyUpCat.bindAsEventListener(this);
		input.autocomplete = "off";
		input.data_completer = "AJAXTableCompleter";
		input.ac_columns = "cat_item;category";
		input.ac_order_by = "";
		input.placeholder = getMessage("Select Item");
		setAttributeValue(input, 'autocomplete', 'off');
		if (document.documentElement.getAttribute('data-doctype') == 'true') {
			var btn = cel("button");
			btn.setAttribute("class", "icon-search btn btn-default filerTableAction");
			btn.setAttribute("aria-label", getMessage('Lookup using list'));
			btn.setAttribute("aria-haspopup", true);
			btn.onclick = this._refListOpenCat.bindAsEventListener(this);
			td.addClassName("form-inline");
			td.appendChild(btn);
		} else {
var image = createImage("images/reference_list.gifx", "Lookup using list", this, this._refListOpenCat);
			image.setAttribute("class", "filerTableAction");
			td.appendChild(image);
		}
	},
	
	destroy: function() {
		this.inputCnt = 0;
		if (this.tr) {
			this.tr.tdValue.innerHTML = "";
            
			if (this.tr.variableID) {	
				this.tr.removeChild(this.tr.variableID);
				this.tr.variableID = null;
			}
			
			if (this.tr.catTD) {
				this.tr.removeChild(this.tr.catTD);
				this.tr.catTD = null;
			}
			
			var td = this.tr.tdOper;
			if (td)	
				td.style.display="inline";	
		}
		
		GlideFilterHandler.prototype.destroy.call(this);
	},
    
	setOriginalTable: function(tableName) {
		this.originalTableName = tableName;
	},
	
	_hideOperators: function() {
	    if (this.tr.tdOper)
		   this.tr.tdOper.style.display="none";
	},
	
    _refListOpen: function() {
        if (this.values[2])
        	reflistOpen(this.id, this.item.getName(), this.item.getReference(), "", false, "", "cat_item="+this.variableRefQual);
        else
        	reflistOpen(this.id, this.item.getName(), this.item.getReference());
        
        return false;
    },  
    
    _refListOpenCat: function() {
        reflistOpen(this.catID, "cat_item", "sc_cat_item");
        return false;
    },      
	
   	getValues: function() {
		this._clearValues();
		if (this._isMappingEnabled)
			return this.getMappingValue();
  		var oper = this._getOperator();
  		var input = this.inputs[0];
		if (input) {
  			return input.value; 	
		} else
  			return '';
	},
	
	getFilterText: function(oper) {
		if (!this.variableFilter)
			return '';
	   return "variables." + this.getValues() + oper + this.variableFilter.getValues();
	},
	
	_useDisplayValue: function(oper) {
		return this.item.getType() != 'glide_list' && oper != '=' && oper != '!=' && oper != "CHANGESFROM" && oper != "CHANGESTO"; 
	},
	
	_resolveReference: function() {
		if (this.values[0]) {
			var ajax = new GlideAjax("ResolveRef");
			ajax.addParam("sysparm_name", this.tr.tableField);
			ajax.addParam("sysparm_value", this.values[0]);
			ajax.getXML(this._resolveReferenceResponse.bind(this));
		}
	},
	_resolveReferenceResponse: function(request) {
		if (!request)
			return;
		
		var xml = request.responseXML;
		if (!xml)
			return;
			
		if (xml) {
		    var items = xml.getElementsByTagName("item");
			if (items && items.length > 0 && items[0] && this.inputs[1])
				this.inputs[1].value = items[0].getAttribute("label");
		}
	},
	
	_resolveReferenceCat: function() {
		if (this.values[2]) {
			var ajax = new GlideAjax("ResolveRef");
			ajax.addParam("sysparm_name", "item_option_new.cat_item");
			ajax.addParam("sysparm_value", this.values[2]);
			ajax.getXML(this._resolveReferenceResponseCat.bind(this));
		}
	},
	
	_resolveReferenceResponseCat: function(request) {
		if (!request)
			return;
		
		var xml = request.responseXML;
		if (!xml)
			return;
			
		if (xml) {
		    var items = xml.getElementsByTagName("item");
			if (items && items.length > 0 && items[0]) {
				this.inputs[3].value = items[0].getAttribute("label");
				this.values[3] = this.inputs[3].value;
			}
		}
	},
	_onFocus: function(evt) {
		if (!this.inputs[1].ac) {	
			this.inputs[1].ac = new AJAXTableCompleter(this.inputs[1], this.id, '');
			this.inputs[1].ac.setFilterCallBack(this._refValueChange.bind(this));
			this.inputs[1].ac.elementName = this.tr.tableField;
			this.inputs[1].ac.setAdditionalValue("ac_columns","cat_item;category");
			if (this.values[2])
			   this.inputs[1].ac.setAdditionalValue("sysparm_ref_qual","cat_item=" + this.variableRefQual);
			else
			   this.inputs[1].ac.setAdditionalValue("sysparm_ref_qual","");
			
			this.inputs[1].ac.clearDerivedFields = true;
		}
	},
	
	_refValueChange: function() {
	   var ref = this.inputs[1].ac;
	   var e = ref.getKeyElement();
	   var id = e.value;
	   this._clearQuery();
	   this.values[0] = id;  
	   if (id) 
	   	 this._getVariableType(id);
	},
	
	_catValueSet: function(catValue) {
	   if (this.values[2] == catValue)
	      return;
	   
	   this.values[2] = catValue;
	   this.variableRefQual = catValue;
	   this.values[3] = catValue;
	   this._resolveReferenceCat();
	   this._setQualifier(this.inputs[1].ac, this.values[2]);
	},
	
	_refValueChangeCat: function() {
	   var ref = this.inputs[3].ac;
	   var e = ref.getKeyElement();
	   var id = e.value;
	   this.values[2] = id;
	   this.variableRefQual = id;
	   this._clearVariable();
	   this._hideOperators();
	   this._clearHandler();
	   this._filterVariableReference();
	},
	
	_clearVariable: function() {
	   var e = gel(this.id);
	   if (e)
	      e.value = '';
	      
	   e = gel("sys_display." + this.id);
	   if (e)
	      e.value = '';
	},
	
	_clearHandler: function() {
	   if (!this.vType)
	      return;
	      
	   this.variableFilter = this._getHandler();
	   var conditionRow = this.tr.conditionRow;
	   var td = this.tr.tdOper;
	   if (td)
	      this.tr.removeChild(td);
	      
	   this.tr.tdOper = null;
	   
	   if (this.tr.tdValue && this.tr.variableID) {
	      this.tr.removeChild(this.tr.tdValue);
	   	  this.tr.tdValue = null;
	   }
	},
	
	_filterVariableReference: function() {
	   this._onFocus();
	   if (this.values[2])
	    this._setQualifier(this.inputs[1].ac, this.values[2]);
	   else
	   	this.inputs[1].ac.setAdditionalValue("sysparm_ref_qual","");
	   	
	   this._clearQuery();
	},
	
	_setQualifier: function(ac, catItem) {
	   if (ac)
	      ac.setAdditionalValue("sysparm_ref_qual","cat_item="+catItem);
	      
	   this._addVariableSets(ac, catItem);
	},
	
	_addVariableSets: function(ac, catItem) {
	   var sets = new GlideRecord('io_set_item');
	   var callback = this._getSetResponse.bind(this, ac, catItem, sets)
	   var fn = function(gr) {
	      callback(ac, catItem, sets);
	   };
	   sets.addQuery("variable_set.type", "one_to_one");
	   sets.query('sc_cat_item', catItem, fn);
	},
	
	_getSetResponse: function(ac, catItem, sets) {
	   if (!sets.hasNext())
	      return;
	      
	   var setList = new Array();
	   while (sets.next()) 
	      setList.push(sets.variable_set+'');
	   
	   this.variableRefQual = catItem + "^OR" + "variable_setIN" + setList.join(",");
	   if (ac)
	      ac.setAdditionalValue("sysparm_ref_qual","cat_item=" + this.variableRefQual);
	},
	
	_clearQuery: function() {
       this.values[0] = "";
       this.refQuery = ""
       this.varOp = ""
       this.varValue = ""  
	},
	
	_getVariableType: function(id) {
	   this.grVariable = new GlideRecord('item_option_new');
	   var callback = this._getVariableResponse.bind(this)
	   var fn = function(gr) {
	      callback();
	   };
	   
	   this.grVariable.query('sys_id', id, fn);
	},
	
	_getVariableResponse: function() {
	   if (!this.grVariable.next()) {
	      this.grVariable = null;
	      this._buildStringType();
	   } else
	      this._buildType(this.grVariable);
	         
	   this._setFilterBasedOnType();
	   
	   if (this.grVariable && this.grVariable.cat_item)
	      this._catValueSet(this.grVariable.cat_item);
	},
	
	_buildStringType: function() {
	   this.vItem = new TableElement("string", "String");
	   this.vItem.setType("string");
	},
	
	_setFilterBasedOnType: function() {
	   this.variableFilter = this._getHandler();
	   if (!this.tr)
	   	  return;
	   var conditionRow = this.tr.conditionRow;
	   var td = this.tr.tdOper;
	   if (td)
	      this.tr.removeChild(td);
	   td = conditionRow.addTD(this.tr, this.queryID);
	   conditionRow.tdOper = td;
	   td.id = "oper";
	   this.tr.tdOper = td;
	   td.style.width="99px";
	   if (!this.tr.variableID) {
	   	   this.tr.tdValue.id = "variableid";
	   	   this.tr.variableID = this.tr.tdValue;
	   	   this.tr.tdValue = null;
	   }
	   if (this.tr.tdValue)
	      this.tr.removeChild(this.tr.tdValue);
	   td = conditionRow.addTD(this.tr, this.queryID);
	   conditionRow.tdValue = td;
	   td.id = "value";
	   td.noWrap = true;
	   this.tr.tdValue = td;
	   this._moveButtons();
       var operSel = addOperators(this.tr.tdOper, this.vType, this.varOp, this.isChoice, false, false);
       this.tr.operSel = operSel;
  	   var tid = this.tr.tableField;
  	   this.tr.tableField = "IO:" + this.values[0];
	   this.variableFilter.create(this.tr, this.varValue);
	   this.tr.tableField = tid;
	},
	
	_makeCatItemFirst: function() {
	    var td = this.tr.tdValue;
	    this.tr.removeChild(td);
	    this.tr.appendChild(td);
		this._moveButtons();
	},
	
	_moveButtons: function() {
	   var td = this.tr.tdOrButton;
	   this.tr.removeChild(td);
	   this.tr.appendChild(td);
	   td = this.tr.tdRemoveButton;
	   this.tr.removeChild(td);
	   this.tr.appendChild(td);
	},
	
	_buildType: function(gr) {
	   	this.vItem = new TableElement(gr.type, gr.type);
	   	if (gr.type == "1")
	      	this.vItem.setType("boolean");
	   	else if (gr.type == "8") {
		     this.vItem.setType("reference");
		     this.vItem.setReference(gr.reference);
	        } else if (gr.type == "10") {
	             this.vItem.setType("calendar");
	   	} else if (gr.type == "7") {
	             this.vItem.setType("checkbox");
	   	} else if (gr.type == "18" || gr.type == "22" || gr.type == "3") {
	      	     this.vItem.setType("multiple_choice");
	   	} else if (gr.type == "5") {
	             this.vItem.setType("select");
	   	} else if (gr.type == "4") {
	      	     this.vItem.setType("numeric_scale");
	   	} else if (gr.type == "9") {
	      	     this.vItem.setType("calendar");
	   	} else if (gr.type == "21") {
		     this.vItem.setType("glide_list");
		     this.vItem.setReference(gr.list_table);
	        } else
	   	     this._buildStringType();
	},
	
	_getHandler: function() {
		if (this.vItem.type == "boolean") {
		   this.vType = "boolean";
		   var handler = new GlideFilterChoice(this.tableName, this.item);
		   handler.setChoices(sysvalues["catalog_boolean"]);
		   return handler;
		}
		
		if (this.vItem.type == "checkbox") {
		   this.vType = "boolean";
		   var handler = new GlideFilterChoice(this.tableName, this.item);
		   handler.setChoices(sysvalues["boolean"]);
		   return handler;
		}
		
		if (this.vItem.type == "multiple_choice") {
		   this.vType = "referencechoice";
		   var handler = new GlideFilterVariablesChoiceDynamic("var.IO:" + this.values[0], this.item);
		   return handler;
		}
		
		if (this.vItem.type == "select") {
		   this.vType = "referencechoice";
		   var handler = new GlideFilterVariablesChoiceDynamic("var.IO:" + this.values[0], this.item);
		   return handler;
		}
		
		if (this.vItem.type == "numeric_scale") {
		   this.vType = "integer";
		   this.isChoice = true;
		   var handler = new GlideFilterVariablesChoiceDynamic("var.IO:" + this.values[0], this.item);
		   return handler;
		}
		
		if (this.vItem.type == "reference") {
this.vType = "referencevariable";
		   var handler = new GlideFilterReference("var.IO:" + this.values[0], this.vItem);
		   return handler;
		}
		if (this.vItem.type == "glide_list") {
		   this.vType = "reference";
		   var handler = new GlideFilterReference("var.IO:" + this.values[0], this.vItem);
		   return handler;
		}
		
		if (this.vItem.type == "calendar") {
		  	this.vType = "calendar";
			var handler = new GlideFilterDate(this.tableName, this.vItem);
			return handler;
		}
		
		this.vType = "string"; 
	   	return new GlideFilterString(this.tableName, this.item);
	},
	
	_onKeyDown: function(evt) {
		return acReferenceKeyDown(this.inputs[1], evt);
	},
	
	_onKeyPress: function(evt) {
		return acReferenceKeyPress(this.inputs[1], evt);
	},
	
	_onKeyUp: function(evt) {
		return acReferenceKeyUp(this.inputs[1], evt);
	},
	
	_onKeyDownCat: function(evt) {
		return acReferenceKeyDown(this.inputs[3], evt);
	},
	
	_onKeyPressCat: function(evt) {
		return acReferenceKeyPress(this.inputs[3], evt);
	},
	
	_onKeyUpCat: function(evt) {
		return acReferenceKeyUp(this.inputs[3], evt);
	},
	
	_onFocusCat: function(evt) {
		if (!this.inputs[3].ac) {	
			this.inputs[3].ac = new AJAXTableCompleter(this.inputs[3], this.catID, '');
			this.inputs[3].ac.setFilterCallBack(this._refValueChangeCat.bind(this));
			this.inputs[3].ac.elementName = "item_option_new.cat_item";
			this.inputs[3].ac.setAdditionalValue("ac_columns","short_description;category");
			this.inputs[3].ac.setAdditionalValue("sysparm_ref_qual","active=true");
			
			this.inputs[3].ac.clearDerivedFields = true;
		}
	},
	z: null
});
var GlideFilterVariablesChoiceDynamic = Class.create(GlideFilterChoiceDynamic, {
	_getChoices: function() {
			var ajax = new GlideAjax('PickList');
			ajax.addParam('sysparm_chars', '*');
			ajax.addParam('sysparm_nomax', 'true');
			ajax.addParam('sysparm_name', this.tableName);
			var response = ajax.getXMLWait();
			this._addChoices(response);
	}
});
;
/*! RESOURCE: /scripts/classes/GlideFilterQuestions.js */
var GlideFilterQuestions = Class.create(GlideFilterVariables, {
	
    _refListOpenCat: function() {
        reflistOpen(this.catID, "cat_item", "sc_cat_item_producer");
        return false;
    },   
    
	_onFocusCat: function(evt) {
		if (!this.inputs[3].ac) {	
			this.inputs[3].ac = new AJAXTableCompleter(this.inputs[3], this.catID, '');
			this.inputs[3].ac.setFilterCallBack(this._refValueChangeCat.bind(this));
			this.inputs[3].ac.elementName = "item_option_new.cat_item";
			this.inputs[3].ac.setAdditionalValue("ac_columns","short_description;category");
			this.inputs[3].ac.setAdditionalValue("sysparm_ref_qual","active=true^sys_class_name=sc_cat_item_producer");
			
			this.inputs[3].ac.clearDerivedFields = true;
		}
	},   
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideFilterItemVariables.js */
var GlideFilterItemVariables = Class.create(GlideFilterVariables, {
	getFilterText: function(oper) {
		if (!this.variableFilter)
			return '';
		var varSyntax = "variables.";
		if ($j(this.tr).closest('.filter_controls-with-overflow').attr('has-item-variable-syntax') === 'true')
			varSyntax = "variablesHASITEMVARIABLE:";
		return varSyntax + this.getValues() + oper + this.variableFilter.getValues();
	},
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideFilterVariableMap.js */
var GlideFilterVariableMap = Class.create(GlideFilterHandler, {
	
	_setup: function(values) {
		this.maxValues = 1;
		this.id = this.tr.tableField + "." + guid();
		this.selectedOption = values;
		this.usedFields = {};
		this.varTypes = { 1 : ['string'] };
	},
	_build: function() {
	    this.queryID = this.tr.tdValue.queryID;
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			return;
		}
		
		this._hideOperators();
		this.select = this._addSelect(380, false, 1);
		this.select.onchange = this._updateFields.bind(this);
		
		var displayValue = gel('fancy.' + this.values[0]);
		if (displayValue && displayValue.value != '')
			this.select.value = displayValue.value;
		else if (this.values) {
			this.select.value = this.values;
		}
		      
		this._buildVariableSelect();
		$(this.select).addClassName('filter_type');
		var $select = $j(this.select);
		if (!$select.data('select2'))
			$select.select2();
		
	},
	
	_buildVariableSelect: function() {	
		if (this.values.length == 0 ||  this.values == '-- value --')
			addOption(this.select, this.values, getMessage("-- Select Variable --"), true);
		
		if (this.item == null)
			return;
		
		var arr = g_dynamic_filter_variable_options.split("##");
		for (var i = 0; i < arr.length; i++) {
			var aItem = arr[i];
			if (aItem.length == 0)
				continue;
			var aItemArr = aItem.split("::");
			if (aItemArr.length < 3)
				continue;
			var arrInput = [];
			arrInput.push(aItemArr[1]);
			var translated = getMessages(arrInput);
			addOption(this.select, aItemArr[0], translated[aItemArr[1]], this.selectedOption == aItemArr[0]);
		}
	},
	
	_hideOperators: function() {
	    if (this.tr.tdOper)
		   this.tr.tdOper.style.display="none";
	},      
	
   	getValues: function() {
		this._clearValues();
		if (this._isMappingEnabled)
			return this.getMappingValue();
  		var oper = this._getOperator();
  		var input = this.inputs[0];
		if (input) {
  			return input.value; 	
		} else
  			return '';
	},
	
	_updateFields : function() {
	},
	
	_clearFieldUsed : function(name, condition) {
		this.usedFields[name] = false;
	},
	
	_buildType: function(gr) {
	   	this.vItem = new TableElement(gr.type, gr.type);
	   	if (gr.type == "1")
	      	this.vItem.setType("boolean");
	   	else if (gr.type == "8") {
	   		this.vItem.setType("reference");
	   		this.vItem.setReference(gr.reference);
	    } else if (gr.type == "10") {
	        this.vItem.setType("calendar");
	   	} else if (gr.type == "7") {
	      	this.vItem.setType("checkbox");
	   	} else if (gr.type == "18" || gr.type == "22" || gr.type == "3") {
	      	this.vItem.setType("multiple_choice");
	   	} else if (gr.type == "5") {
	      	this.vItem.setType("select");
	   	} else if (gr.type == "4") {
	      	this.vItem.setType("numeric_scale");
	   	} else if (gr.type == "9") {
	      	this.vItem.setType("calendar");
	   	} 
	},
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideFilterLabels.js */
var GlideFilterLabels = Class.create(GlideFilterHandler, {
	_setup: function(values) {
		this.maxValues = 1;
		this.id = this.tr.tableField + "." + guid();
		this.labID = "label_entry.label." + guid();
		this.listenForOperChange = true;
		this.rightOperand = values;
	
	},
	
	_initValues: function(values) {
		this.values = [];
		this.varValue = '';
        if (values) {
           this.values[0] = values.substring(0,32);
           this.refQuery = values.substring(32);
           this.varValue = this.refQuery;
        }
   	},
	_build: function() {
	    this.queryID = this.tr.tdValue.queryID;
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			return;
		}
        var enhancedFiltersEnabled = this.getProperty('glide.enable.enhanced.tag.filter.options');
	  if (!enhancedFiltersEnabled)
			this._hideOperators();
		var inDoctypeMode = (document.documentElement.getAttribute('data-doctype') == 'true');
		 
		var input = this._addTextInput("hidden");
		input.id = this.labID;
			
		input = this._addTextInput();
		input.id = "sys_display." + this.labID;
		input.onfocus = this._onFocus.bind(this);
		input.onRefPick = this._onFocus.bind(this);
		input.onkeydown = this._onKeyDown.bindAsEventListener(this);
		input.onkeypress = this._onKeyPress.bindAsEventListener(this);
		input.onkeyup = this._onKeyUp.bindAsEventListener(this);
		input.autocomplete = "off";
		input.data_completer = "AJAXTableCompleter";
		input.ac_columns = "short_description";
		input.ac_order_by = "";
		if (!enhancedFiltersEnabled || this._getOperator() === '=' || this._getOperator() === '!=')
			input.placeholder = getMessage("Select Label");
		setAttributeValue(input, 'autocomplete', 'off');
		var displayValue = gel('fancy.' + this.values[0]);
		if (displayValue && displayValue.value != '')
			this.inputs[1].value = displayValue.value;
		else if (this.values) {
			this.inputs[1].value = this.values;
			this._resolveReference();
		}
		if (inDoctypeMode) {
			var btn = cel("button");
			btn.setAttribute("class", "icon-search btn btn-default filerTableAction");
			btn.setAttribute("aria-label", getMessage('Lookup using list'));
			btn.setAttribute("aria-haspopup", true);
			btn.setAttribute("style", "margin-left: 2px");
			btn.onclick = this._refListOpen.bindAsEventListener(this);
			this.tr.tdValue.appendChild(btn);
		} else {
var image = createImage("images/reference_list.gifx", "Lookup using list", this, this._refListOpen);
			image.setAttribute("class", "filerTableAction")
			this.tr.tdValue.appendChild(image);
		}
		if (!this.varValue) 
			return;
		      
	    this._getVariableType(this.values[0]);
	},
	
	
	destroy: function() {
		this.inputCnt = 0;
		if (this.tr) {
			this.tr.tdValue.innerHTML = "";
            
			if (this.tr.variableID) {	
				this.tr.removeChild(this.tr.variableID);
				this.tr.variableID = null;
			}
			
			var td = this.tr.tdOper;
			if (td)	
				td.style.display="block";	
		}
		
		GlideFilterHandler.prototype.destroy.call(this);
	},
    
	setOriginalTable: function(tableName) {
		this.originalTableName = tableName;
	},
	
	_hideOperators: function() {
	    if (this.tr.tdOper)
		   this.tr.tdOper.style.display="none";
	},
	
    _refListOpen: function() {
        reflistOpen(this.labID, this.item.getName(), "label");
        return false;
    },  
    
	getProperty: function(property) {
		var gr = new GlideRecord('sys_properties');
		gr.addQuery('name', property);
		gr.query();
		if (gr.next())
			return gr.value == "true";
		return false;
	},
	
   	getValues: function() {
		this._clearValues();
		if (this._isMappingEnabled)
			return this.getMappingValue();
		if (this._isEmptyOper())
            return '';
		   
  		var oper = this._getOperator();
  		var input = this.inputs[0];
		if (this.inputCnt == 2) {
			var userInput = this.inputs[1];
			if (this._useDisplayValue(oper))
				input = userInput;
		}
		if (input) {
  			return input.value; 	
		} else
  			return '';
	},
	
	getFilterText: function(oper) {
	   var dot = '.';
	   var operatorToUse = this.getProperty('glide.enable.enhanced.tag.filter.options') ? oper : '=';
	   return dot + this.getValues() + operatorToUse + this.getValues();
	},
	
	_useDisplayValue: function(oper) {
		return this.item.getType() != 'glide_list' && oper != '=' && oper != '!=' && oper != "CHANGESFROM" && oper != "CHANGESTO"; 
	},
	
	_resolveReference: function() {
		if (this.values[0]) {
			var ajax = new GlideAjax("ResolveRef");
			ajax.addParam("sysparm_name", "label_entry.label");
			ajax.addParam("sysparm_value", this.values[0]);
			ajax.getXML(this._resolveReferenceResponse.bind(this));
		}
	},
	_resolveReferenceResponse: function(request) {
		if (!request)
			return;
		
		var xml = request.responseXML;
		if (!xml)
			return;
			
		if (xml) {
		    var items = xml.getElementsByTagName("item");
			if (items && items.length > 0 && items[0] && this.inputs[1])
				this.inputs[1].value = items[0].getAttribute("label");
		}
	},
	
	_onFocus: function(evt) {
		if (!this.inputs[1].ac) {
			var oper = this._getOperator();
			var partialSearchFilterType = oper != '=';
			if (partialSearchFilterType)
				this.inputs[1].setAttribute('is_filter_using_contains', 'true');
			this.inputs[1].ac = new AJAXTableCompleter(this.inputs[1], this.labID, '');
			this.inputs[1].ac.setFilterCallBack(this._refValueChange.bind(this));
			this.inputs[1].ac.elementName = "label_entry.label";
			this.inputs[1].ac.setAdditionalValue("ac_columns","short_description");
			
			this.inputs[1].ac.clearDerivedFields = true;
		}
	},
	
	_refValueChange: function() {
	   var ref = this.inputs[1].ac;
	   var e = ref.getKeyElement();
	   var id = e.value;
	   this.values[0] = id; 
	},
	
	_moveButtons: function() {
	   var td = this.tr.tdOrButton;
	   this.tr.removeChild(td);
	   this.tr.appendChild(td);
	   td = this.tr.tdRemoveButton;
	   this.tr.removeChild(td);
	   this.tr.appendChild(td);
	},
	
	_onKeyDown: function(evt) {
		return acReferenceKeyDown(this.inputs[1], evt);
	},
	
	_onKeyPress: function(evt) {
		return acReferenceKeyPress(this.inputs[1], evt);
	},
	
	_onKeyUp: function(evt) {
		return acReferenceKeyUp(this.inputs[1], evt);
	},
	
	_onKeyDownCat: function(evt) {
		return acReferenceKeyDown(this.inputs[3], evt);
	},
	
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideFilterReferenceMulti.js */
var GlideFilterReferenceMulti = Class.create(GlideFilterReference, {
	
	_setup: function(values) {
		this.maxValues = 20;
		this.id = this.tr.tableField + "." + guid();
		this.listenForOperChange = true;
	},
	_initAutoCompleter: function() {
		if (!this.inputs[1].ac) {
			if(this.item.getReference("reference") == "sys_user"){
				$(this.inputs[1]).setAttribute('allow_invalid', true)
				$(this.inputs[1]).setAttribute('reference', "sys_user");
			}
			this.inputs[1].ac = new AJAXReferenceCompleterMulti(this.inputs[1], this.id, '');
			this.inputs[1].ac.elementName = this.tr.tableField;
			
			this.inputs[1].ac.clearDerivedFields = true;
		}
	},
	_onFocus: function(evt) {
		this._initAutoCompleter();
	},
	_onRefListOpen: function() {
		this._initAutoCompleter();
	},
	_resolveReference: function() {
		if (this.values) {
			var ajax = new GlideAjax("ResolveRefMulti");
			ajax.addParam("sysparm_name", this.tr.tableField);
			ajax.addParam("sysparm_value", this.values);
			ajax.getXML(this._resolveReferenceResponse.bind(this));
		}
	},
	
	_resolveReferenceResponse: function(request) {
		if (!request)
			return;
		
		var xml = request.responseXML;
		if (!xml)
			return;
			
		if (xml) {
		    var items = xml.getElementsByTagName("item");
		    if (items && items.length > 0) {
		    	this._initAutoCompleter();
		    	this.inputs[1].ac.resetHash();
		    	for (var i=0; i<items.length; i++) {
		    		this.inputs[1].ac.setHash(items[i].getAttribute("name"), items[i].getAttribute("label"));
		    	}
		    	this.inputs[1].ac._setFormValues();
		    }
		}
	},
	
	getValues: function() {
		this._initAutoCompleter();
		if (this._isMappingEnabled)	
			return this.getMappingValue();
		
		return this.inputs[1].ac.getKeyValue();
	},
	
	_initValues: function(values) {
		if (!values)
		   this.values = [];
		else
			this.values = values;
	}
	
});
;
/*! RESOURCE: /scripts/classes/GlideFilterDate.js */
var GlideFilterDate = Class.create(GlideFilterHandler, {
	SYS_DATE_FORMAT: "yyyy-MM-dd",
	SYS_TIME_FORMAT: "HH:mm:ss",
	SYS_DATE_TIME_FORMAT: "yyyy-MM-dd HH:mm:ss",
	_setup: function(values) {
		this.maxValues = 4;
		this.listenForOperChange = true;
		this.userDateFormat = g_user_date_format;
		this.userTimeFormat = g_user_date_time_format.substring(g_user_date_format.length + 1);
		this.userDateTimeFormat = g_user_date_time_format;
		this.id = "GwtGFD_" + guid();
		this.allowTime = this.item.isDateTime();
	},
	_build: function() {
		if (!window.date_calendars) {
			window.date_calendars = {};
		}
		if (window.date_calendars[this.tableName]) {
			this.buildDate(window.date_calendars[this.tableName]);
			return;
		}
            var req = new XMLHttpRequest();
var path = "/api/now/ui/date_time/legacy"
            if(this.tableName)
            	path = path + "?table_name=" + this.tableName;
            req.open("GET", path, false);
req.setRequestHeader('Accept', 'application/json');
            if (typeof g_ck != 'undefined' && g_ck != "") {
                req.setRequestHeader('X-UserToken', g_ck);
            }
			req.setRequestHeader('X-Transaction-Source', window.transaction_source);
            var responseFunction = function(request) {
                var result = JSON.parse(request.response).result;
                var calendar = result.timeAgoDates;
                calendar.DATEPART = result.datePartNoTranslation;
                calendar.BETWEEN = result.between;
                calendar.RELATIVE = result.relative;
                calendar.TRENDVALUES = result.trendValues;
                calendar.WHEN = result.when;
                calendar.TRENDVALUES_WITH_FIELDS_PLURAL = result.trendValuesWithFieldsPlural;
                calendar.TRENDVALUES_WITH_FIELDS = result.trendValuesWithFields;
                calendar.WHEN_WITH_FIELDS = result.whenWithFields;
                window.date_calendars[this.tableName] = calendar;
                
                this.buildDate(calendar);
            }.bind(this);
            req.onreadystatechange = function() { processReqChange(req, responseFunction)};
            req.send(null);
	},
	buildDate: function(dateFilterOptions) {
		this.calendar = dateFilterOptions;
		if (window.sysvalues && window.sysvalues.calendar) {
			var getUniqueExternalDates = this.getUniqueExternalDates(this.calendar, window.sysvalues.calendar);
			for (var i = 0; i < getUniqueExternalDates.length; i++) {
				this.calendar.push(getUniqueExternalDates[i]);
			}
		}
		this.ANDMSG = getMessage('and');
		this.FROMMSG = getMessage('from');
		this.ASMSG = getMessage('as');
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			return;
		}
		var oper = this._getOperator();
		if (this.prevOper && (this.prevOper != oper))
			this._clearValues();
		switch (oper) {
			case 'SAMEAS':
			case 'NSAMEAS':
				if (this.getFilterClass() != "GlideTemplateFilter") {
					this._addDateSelect(this.id, this.calendar['TRENDVALUES_WITH_FIELDS'], this.values[1], [1]);
					var span = cel("span", this.tr.tdValue);
					span.style.marginLeft = "3px";
					span.style.marginRight = "5px";
					if(oper == 'SAMEAS')
						span.innerHTML = this.ASMSG;
					else
						span.innerHTML = this.FROMMSG;
				}
				this._populateRightOperandChoices();
				break;
			case '=':
				var input = this._addCalendar(this.id);
				this.inputs = [input];
				input.type = "text";
				input.value = (this.values[0].indexOf("{{") !== -1 ? "" : this.values[0]);
				input.id = this.id + "_input_1";
				input.allowTime = this.allowTime
				this.inputCnt = 1;
				break;
			case '!=':
			case 'ON':
			case 'NOTON':
				var val = this.values[0];
				if (val)
					val += "@" + this.values[1] + "@" + this.values[2];
				this._addDateChoices(this.id, val, [0, 1, 2], false);
				break;
case '<':
case '>=':
				var pos = 1;
				this._addDateChoices(this.id, this.values[0], [pos], this.allowTime, 'start');
				break;
case '>':
case '<=':
				var pos = 3;
				this._addDateChoices(this.id, this.values[0], [pos], this.allowTime, 'end');
				break;
			case 'BETWEEN':
				this._addDateChoices(this.id, this.values[0], [1], this.allowTime, 'start', oper);
				var span = cel("span", this.tr.tdValue);
				span.style.marginLeft = "3px";
				span.style.marginRight = "5px";
				span.className = "filter-inline-label";
				span.innerHTML = this.ANDMSG;
				this._addDateChoices(this.id + "_2", this.values[1], [3], this.allowTime, 'end', oper);
				this.initBetweenMapping(this.values[0], this.values[1]);
				break;
			case 'DATEPART':
				var trendOper = "EE";
				if (this.values[1]) {
					var parts = this.values[1].split(",");
					if (parts.length == 3)
						trendOper = parts[2].substring(1, 3);
				}
				this._addDateSelect(this.id, this.calendar['RELATIVE'], trendOper, [1]);
				this._addDateSelect(this.id + "_2", this.calendar['DATEPART'], this.values[0], [0]);
				break;
			case 'RELATIVE':
                var thisValues = this.values;
var newOptionsList = this.calendar['RELATIVE'].filter(function(el) { return !(el[1].match(/[GEL]E/i) && !(thisValues && thisValues[0].match(el[1])))});
				this._addDateSelect("1", newOptionsList, this.values[0], [1]);
				var input = this._addTextInput();
				input.value = this.values[3];
				input.style.width = "30px";
				input.maxLength = 5;
				this._addDateSelect(this.id + "_2", this.calendar['TRENDVALUES'], this.values[1], [1]);
				this._addDateSelect(this.id + "_3", this.calendar['WHEN'], this.values[2], [1]);
				break;
			case 'MORETHAN':
			case 'LESSTHAN':
				var input = this._addTextInput();
				if(null == this.values[3] || "" == this.values[3])
					this.values[3]=0;
				if (isMSIE)
					input.style.marginTop = "-1px";
				input.value = this.values[3];
				input.style.width = "30px";
				input.style.marginRight = "2px";
				input.maxLength=2;
				this._addDateSelect(this.id + "_2", this.calendar['TRENDVALUES_WITH_FIELDS_PLURAL'], this.values[1], [1]);
				this._addDateSelect(this.id + "_3", this.calendar['WHEN_WITH_FIELDS'], this.values[2], [1]);
				this._populateRightOperandChoices();
				break;
			case 'SINCE':
				var s = this._addSelect(this.width, this.multi, this.size);
				s.style.marginRight = "3px";
				s.id = this.id + "_select_1";
				var base = new GlideRecord('cmdb_baseline');
				base.addOrderBy('name');
				base.query();
				while (base.next()) {
					var selected = false;
					var value = "javascript:getBaseFilter('" + base.name + "')";
					if (value == this.values[0])
						selected = true;
					var o = addOption(s, value, base.name, selected);
				}
				break;
			case 'ANYTHING':
				break;
		}
		this.prevOper = oper;
		if (notOneOf('BETWEEN ANYTHING RELATIVE SINCE MORETHAN LESSTHAN SAMEAS NSAMEAS DATEPART')) {
			this.initAlphaMapping(this.values[0]);
		}
		function notOneOf(str) {
			return str.split(' ').indexOf(oper) == -1;
		}
	},
	getUniqueExternalDates: function(calendar, globals) {
		if (!Array.isArray(calendar) || !Array.isArray(globals)) return [];
		var stringifiedCalendar = JSON.stringify(calendar);
		return globals.filter(function(item) {
			return stringifiedCalendar.indexOf(JSON.stringify(item)) === -1;
		});
	},
	getValues: function() {
		if (this.inputCnt == 0)
			return "";
		for (var i = 0; i < this.maxValues; i++)
			this.values[i] = this._getInputValue(this.inputs[i]);
		if (this.supportsMapping) {
			if (this._getOperator() == 'BETWEEN') {
				var $td = $j(this.tr.tdValue);
				var $in1 = $td.find('#em_input_1');
				var $in2 = $td.find('#em_input_2');
				if ($in1.val() || $in2.val()) {
					return (
						($in1.val() || this._getDateGenerate(this._convertDate(this.values[0]), 'start')) +
						"@" +
						($in2.val() || this._getDateGenerate(this._convertDate(this.values[1]), 'end'))
					);
				}
			} else if (this._getOperator() == 'ON') {
				var gemVal = $j(this.tr.tdValue).find('#em_input_1').val();
				if (gemVal)
					return gemVal + "@" + gemVal + "@" + gemVal;
			} else {
				var gemVal = $j(this.tr.tdValue).find('#em_input_1').val();
				if (gemVal) {
					return gemVal;
				}
			}
		}
		switch (this._getOperator()) {
			case 'ON':
			case 'NOTON':
				if (this.values[0].indexOf('@') != -1)
					return this.values[0];
				var value = this._convertDate(this.values[0]);
				return value + "@" + this._getDateGenerate(value, 'start') + "@" + this._getDateGenerate(value, 'end');
			case '<':
			case '<=':
				var value = this._convertDate(this.values[0]);
				return this._getDateGenerate(value, 'start');
			case '>':
			case '>=':
				var value = this._convertDate(this.values[0]);
				return this._getDateGenerate(value, 'end');
			case 'BETWEEN':
				var start = this._convertDate(this.values[0]);
				start = this._getDateGenerate(start, 'start');
				var end = this._convertDate(this.values[1]);
				end = this._getDateGenerate(end, 'end');
				return start + "@" + end;
			case 'DATEPART':
				var trendOper = this.values[0];
				var datePart = this.values[1];
				var values = this.calendar['DATEPART'];
				for (var i = 0; i < values.length; i++) {
					if (datePart == values[i][0]) {
						datePart = values[i][1];
						break;
					}
				}
				datePart = datePart.split(")")[0] + ",'" + trendOper + "')";
				return this.values[1] + "@" + datePart;
				break;
			case '=':
			case '!=':
				return this.values[0];
				break;
			case 'RELATIVE':
				return this.values[0] + "@" + this.values[2] + "@" + this.values[3] + "@" + this.values[1];
				break;
			case 'SAMEAS':
			case 'NSAMEAS':
				if (this.values[1] == "")
					return this.values[0];
				return this.values[1] + "@" + this.values[0];
				break;
			case 'MORETHAN':
			case 'LESSTHAN':
				if (isNaN(this.values[0]))
					this.values[0] = 0;
				return this.values[3] + "@" + this.values[1] + "@" + this.values[2] + "@" + this.values[0];
				break;
			case 'SINCE':
				return this.values[0];
				break;
			case 'ANYTHING':
				return "";
				break;
			default:
				if (this.inputCnt == 1)
					return this.values[0];
				else
					return this.values.join("@");
		}
	},
    _addDateSelect: function (id, values, matchValue, positions, dynamicOptions) {
        var s = this._addSelect(this.width, this.multi, this.size);
        s.style.marginRight = "3px";
        s.id = this.id + "_select_" + id;
        this._addDateSelectOptions(s, values, matchValue, positions);
        if (dynamicOptions)
            this._addDateSelectOptions(s, dynamicOptions, matchValue, positions);
        return s;
    },
    _addDateSelectOptions: function(select, values, matchValue, positions) {
        if(!values)
            return;
        var map = getMessages(buildMap(values, 0));
        var previousValue = null;
        for (var i = 0; i < values.length; i++) {
            var option = values[i];
            var value = "";
            for (var pos = 0; pos < positions.length; pos++) {
                if (pos > 0)
                    value += "@";
                value += option[positions[pos]];
            }
            if (previousValue == null || previousValue != value)
                addOption(select, value, map[option[0]], value == matchValue);
            previousValue = value;
        }
    },
	_addDateChoices: function(id, matchValue, positions, allowTime, defaultTime, operator) {
        var dynamicOptions = this._getDynamicCalendarOption();
        var select = this._addDateSelect(id, this.calendar, matchValue, positions, dynamicOptions);
		this._addDatePicker(id, select, matchValue, allowTime, defaultTime, operator);
	},
    _getDynamicCalendarOption: function() {
        if (typeof g_dynamic_filter_options_calendar == 'undefined' || g_dynamic_filter_options_calendar == '')
            return [];
        var dynamicOptions = [];
        var items = g_dynamic_filter_options_calendar.split('##');
        for (var i = 0; i < items.length; i++) {
            if (items[i].length <= 0)
                continue;
            var option = items[i].split('::');
            dynamicOptions.push(option);
        }
        return dynamicOptions;
    },
	_addDatePicker: function(id, select, value, allowTime, defaultTime, operator) {
		var found = (select.selectedIndex != -1);
		if ((select.selectedIndex == 0) && (value) && (value != select.options[0].value))
			found = false;
		if (!found) {
			value = this._getDateFromValue(value);
			addOption(select, value, value, true);
		}
		select.allowTime = allowTime;
		select.defaultTime = defaultTime;
		if (defaultTime === 'start' && operator === 'BETWEEN') {
			select.title = getMessage('Choose first option');
		} else if (defaultTime === 'end' && operator === 'BETWEEN') {
			select.title = getMessage('Choose second option');
		}
		this._addCalendar(id, defaultTime, operator);
	},
	_addCalendar: function(id, defaultTime, operator) {
		var chooseDate = getMessage('Choose date...');
		var associatedField = this.item && this.item.label;
		if (defaultTime && operator === 'BETWEEN') {
			if (defaultTime === 'start') {
				chooseDate = getMessage('Choose start date...');
			} else {
				chooseDate = getMessage('Choose end date...');
			}
		} else {
			chooseDate = getMessage('Choose date...');
		}
		if (document.documentElement.getAttribute('data-doctype') == 'true') {
			var input = addTextInput(this.tr.tdValue, "", "hidden", associatedField);
			var cal = cel("button", this.tr.tdValue);
			cal.id = "cal_" + id;
			cal.name = cal.id;
			cal.setAttribute('type', 'button');
			cal.setAttribute('aria-label', chooseDate);
			cal.title = chooseDate;
			cal.onclick = this._calendarPopup.bind(this, id, cal);
			cal.style.marginRight = "1px";
			cal.style.verticalAlign = "top";
			cal.className = "btn btn-default icon-calendar";
			input.id = this.id + "_input_" + id;
			input.onchange = this._dateTimeComplete.bind(this, id);
		} else {
			var cal = cel("img", this.tr.tdValue);
			cal.id = "cal_" + id;
			cal.name = cal.id;
cal.src = "images/small_calendar.gifx";
			cal.alt = chooseDate;
			cal.title = chooseDate;
			cal.onclick = this._calendarPopup.bind(this, id);
			cal.style.marginLeft = "2px";
			cal.className = "button";
			var input = addTextInput(this.tr.tdValue, "", "hidden", associatedField);
			input.id = this.id + "_input_" + id;
			input.onchange = this._dateTimeComplete.bind(this, id);
		}
		return input;
	},
	_getDateFromValue: function(value) {
		var value = value.split("@")[0];
		var prefixString = "javascript:gs.dateGenerate(";
		if (value.indexOf(prefixString) == 0) {
			var parts = value.split("'");
			if (parts.length == 5) {
				value = parts[1];
				if (isDate(parts[3], this.SYS_TIME_FORMAT)) {
					var dt = getDateFromFormat(parts[3], this.SYS_TIME_FORMAT);
					value += " " + formatDate(new Date(dt), this.SYS_TIME_FORMAT);
				}
			}
		}
		if (isDate(value, this.SYS_DATE_TIME_FORMAT)) {
			var dt = getDateFromFormat(value, this.SYS_DATE_TIME_FORMAT);
			value = formatDate(new Date(dt), this.userDateTimeFormat);
		} else if (isDate(value, this.SYS_DATE_FORMAT)) {
			var dt = getDateFromFormat(value, this.SYS_DATE_FORMAT);
			value = formatDate(new Date(dt), this.userDateFormat);
		}
		return value;
	},
	_getDateGenerate: function(value, tag) {
		if (value.indexOf("javascript:") != -1)
			return value;
		if (isDate(value, this.SYS_DATE_TIME_FORMAT)) {
			var dt = getDateFromFormat(value, this.SYS_DATE_TIME_FORMAT);
			value = formatDate(new Date(dt), this.SYS_DATE_FORMAT);
			tag = formatDate(new Date(dt), this.SYS_TIME_FORMAT);
		}
		return "javascript:gs.dateGenerate('" + value + "','" + tag + "')";
	},
	_convertDate: function(value) {
		if (value.indexOf("javascript:") != -1)
			return value;
		if (isDate(value, this.userDateTimeFormat)) {
			var dt = getDateFromFormat(value, this.userDateTimeFormat);
			value = formatDate(new Date(dt), this.SYS_DATE_TIME_FORMAT);
		} else if (isDate(value, this.userDateFormat)) {
			var dt = getDateFromFormat(value, this.userDateFormat);
			value = formatDate(new Date(dt), this.SYS_DATE_FORMAT);
		}
		return value;
	},
	_getCalendarInput: function(id) {
		return gel(this.id + "_select_" + id);
	},
	_calendarPopup: function(id, btn) {
		var select = this._getCalendarInput(id);
		var currentDate = '';
		var defaultTime = "start";
		var allowTime = this.allowTime;
		if (select) {
			if (select && select.value.indexOf('javascript') == -1)
				currentDate = select.value;
			defaultTime = select.defaultTime
			allowTime = select.allowTime;
		}
		var format;
		if (allowTime) {
			format = this.userDateTimeFormat;
			if (!isDate(currentDate, format)) {
				var dt = new Date();
				if (isDate(currentDate, this.userDateFormat))
					dt = new Date(getDateFromFormat(currentDate, this.userDateFormat));
				if (defaultTime == 'end')
					dt.setHours(23, 59, 59);
				else
					dt.setHours(0, 0, 0);
				currentDate = formatDate(dt, this.userDateTimeFormat);
			}
		} else {
			format = this.userDateFormat;
		}
		var input = gel(this.id + "_input_" + id);
		if (!input)
			input = gel(this.id + '_input_1');
		input.value = currentDate;
ScriptLoader.getScripts('scripts/classes/GwtDateTimePicker.js', function() {
			new GwtDateTimePicker(input.id, format, allowTime, select || input );
		})
		return false;
	},
	_dateTimeComplete: function(id) {
		var select = gel(this.id + "_select_" + id);
		var input = gel(this.id + "_input_" + id);
		if (!select)
			return;
		var option = select.options[select.selectedIndex];
		var value = option.value;
		if (isDate(value, this.userDateFormat) || isDate(value, this.userDateTimeFormat)) {
			option.value = input.value;
			option.text = input.value;
		} else
			addOption(select, input.value, input.value, true);
    },
	initBetweenMapping: function(value1, value2) {
		var $td = $j(this.tr.tdValue);
		var $btn1   = this.emTemplate.makeBtn();
		var $field1 = this.emTemplate.makeField();
		var $input1 = this.emTemplate.makeInput('em_input_1', value1);
		var $nativeInput1 = $j(this.inputs[0]);
		var $dateBtn = $td.find('#cal_1');
		$dateBtn.after($btn1);
		$dateBtn.after($field1);
		$dateBtn.after($input1);
		var id = this.id;
		this._initMappingComponent($field1, $btn1, id, {
			glideType: 'calendar',
			isMultiText: false,
			originalMapping: value1.indexOf("{{") !== -1 ? value1 : "",
			parent: {
				show: function() {
					$td.find('#cal_1, select[id*="_select_1"]').show();
				},
				hide: function() {
					$td.find('#cal_1, select[id*="_select_1"]').hide();
				},
				onValue: function(msg) {
					var value = msg.wrappedValue;
					$input1.val(value);
					if (value.indexOf("{{") == -1) {
						$nativeInput1.val($nativeInput1.find("option:first").val());
					}
				}
			}
		});
		var $btn2   = this.emTemplate.makeBtn();
		var $field2 = this.emTemplate.makeField();
		var $input2 = this.emTemplate.makeInput('em_input_2', value2);
		var $nativeInput2 = $j(this.inputs[1]);
		$btn2.css({"margin-right": "90px"})
		$td.append($input2);
		$td.append($field2);
		$td.append($btn2);
		this._initMappingComponent($field2, $btn2, id, {
			glideType: 'calendar',
			isMultiText: false,
			originalMapping: value2.indexOf("{{") !== -1 ? value2 : "",
			parent: {
				show: function() {
					$td.find('#cal_2, select[id*="'+ id +'_select_'+ id +'_2"]').show();
					$td.find('button[id*="cal_'+ id +'_2"]').show();
				},
				hide: function() {
					$td.find('#cal_2, select[id*="'+ id +'_select_'+ id +'_2"]').hide();
					$td.find('button[id*="cal_'+ id +'_2"]').hide();
				},
				onValue: function(msg) {
					var value = msg.wrappedValue;
					$input2.val(value);
					if (value.indexOf("{{") == -1) {
						$nativeInput2.val($nativeInput2.find("option:first").val());
					}
				}
			}
		});
		$j(this.tr.tdValue)[this.supportsMapping ? 'removeClass' : 'addClass']("gem-unsupported");
		this._removePlaceholderBtn();
	},
	initAlphaMapping: function(value) {
		value = value.indexOf("{{") !== -1 ? value : "";
		var $td = $j(this.tr.tdValue);
		var $btn = this.emTemplate.makeBtn();
		var $field = this.emTemplate.makeField();
		var $input = this.emTemplate.makeInput('em_input_1', value);
		$td.append($field).append($btn).append($input);
		var $nativeInput = $j(this.inputs[0]);
		var id = this.id;
		this._initMappingComponent($field, $btn, id, {
			glideType: 'calendar',
			isMultiText: false,
			originalMapping: value.indexOf("{{") !== -1 ? value : "",
			parent: {
				show: function() {
					$td.find('#cal_1, select[id*="' + id + '_select_' + id +'"]').show();
						$td.find('input[id*="_input_1"]').show();
					$td.find('button[id*="cal_"]').show();
				},
				hide: function() {
					$td.find('#cal_1, select[id*="' + id + '_select_' + id +'"]').hide();
						$td.find('input[id*="_input_1"]').hide();
					$td.find('button[id*="cal_"]').hide();
				},
				onValue: function(msg) {
					var value = msg.wrappedValue;
					$input.val(value);
					if (value.indexOf("{{") == -1) {
						$nativeInput.val($nativeInput.find("option:first").val());
					}
				}
			}
		});
		$j(this.tr.tdValue)[this.supportsMapping ? 'removeClass' : 'addClass']("gem-unsupported");
		this._removePlaceholderBtn();
	},
	_removePlaceholderBtn: function() {
		$j(this.tr.tdMapping).html("");
		$j(this.tr.tdValue).css("display", "");
	},
	emTemplate: {
		makeBtn: function() {
			return $j(
				'<button role="button" class="btn btn-default em-field-toggle em-alt-btn em-icon-em gem-unsupported-target" ' +
						 'title="Set date from a contextual value"' +
						 'style="vertical-align: top;">' +
'</button>'
			);
		},
		makeField: function() {
			return $j(
'<em-alt-input class="hidden gem-unsupported-target"></em-alt-input>'
			);
		},
		makeInput: function(id, value) {
			var x = $j('<input type="hidden" id="' + id + '">');
			x.val(value || "");
			return x;
		}
	},
	_initMappingComponent: function($field, $btn, id, opts) {
		if (window.g_elementMappingMgr) {
			g_elementMappingMgr.initSubField($field, $btn, this.mappingId, opts)
		}
	},
	initMappingSupport: function(shouldEnable, type, mappingMgr) {
		var td = this.tr.tdMapping;
		if (!td || !mappingMgr)
			return;
		this.mappingType = type;
		this.supportsMapping = !!shouldEnable;
		$j(this.tr.tdValue)[this.supportsMapping ? 'removeClass' : 'addClass']("gem-unsupported");
	},
	destroyMappingSupport: function() {
	},
	activateMapping: function() {
	},
	deactivateMapping: function() {
	},
	_initMappingValue: function(value) {
	},
	type: 'GlideFilterDate'
});
var GlideFilterDateEncrypted = Class.create(GlideFilterDate, {
	_getCalendarInput: function(id) {
		return gel(this.id + "_input_1");
	},
	_getDateGenerate: function(value) {
		return value;
	},
	_build: function() {
		clearNodes(this.tr.tdValue);
		this.inputCnt = 0;
		if (this._isEmptyOper()) {
			this._addInvisibleTextInput();
			return;
		}
		var oper = this._getOperator();
		if (this.prevOper && (this.prevOper != oper))
			this._clearValues();
		switch (oper) {
			case 'ON':
			case 'NOTON':
			case '=':
			case '!=':
			case '<':
			case '<=':
			case '>':
			case '>=':
				var value = this.values[0];
				this.setTextInput(this.id, value, this.allowTime);
				break;
			default:
				return '';
		}
		this.prevOper = oper;
	},
	setTextInput: function(id, value, allowTime) {
		var input = this._addCalendar(id);
		this.inputs = [input];
		input.type = "text";
		input.readOnly = true;
		input.value = (value.indexOf("{{") !== -1 ? "" : value);
		input.onclick = this._calendarPopup.bind(this, id);
		if (input.value == "") {
			var msg = NOW.msg;
			input.placeholder = msg.getMessage('-- choose date --');
		}
		input.id = id + "_input_1";
		input.allowTime = allowTime;
		this.inputCnt = 1;
	},
});
;
/*! RESOURCE: /scripts/classes/GlideFilterGeopoint.js */
var GlideFilterGeopoint = Class.create(GlideFilterString, {
	initialize: function(tableName, item) {
		GlideFilterHandler.prototype.initialize.call(this, tableName, item);
		this.FROMMSG = getMessage('from');
		this.POINTLABEL = getMessage('Coordinates');
		this.CNVRTMSG = getMessage('Convert value to a different unit')
		this.unit = "m";
		this.id = "GwtGFG_" + guid();
	},
	_setup: function() {
		this.maxValues = 1;
		this.id = this.tr.tableField + "." + guid();
		this.listenForOperChange = true;
	},
	_init: function(values) {
		this.inputs = [];
		this.parts = [];
		if ("=" == this._getOperator() || "!=" == this._getOperator()) {
			if (!values) {
				this.values = "";
				this.parts = [""];
				return;
			}
			this.values = [values];
			this.parts = [values];
			return;
		}
		if (!values && "DISTANCE_SPHERE_WITHIN" == this._getOperator())
			values = "";
		var distance = "";
		var unit = "m";
		var point = "";
var pointMatches = values.match(/\((.*?)\)/);
var distMatches =  values.match(/[\d\.,]+$/);
		if (!distMatches) {
			this.parts = [distance, unit, point];
			this.values = point;
			return;
		}
		var analyzed = this._getDistanceAndUnitFromConversion(distMatches[0]);
		distance = analyzed.distance;
		unit = analyzed.unit;
		if(pointMatches)
			point = pointMatches[0];
		this.parts = [distance, unit, point];
		this.values = [distance];
	},
	_build: function() {
		GlideFilterString.prototype._build.call(this);
		var input = this.inputs[0];
		if (!input.id)
			input.id = "distance_" + this.id;
		if (this.parts && this.parts.length == 3) {
			var s = this._addSelect(80, false, 1);
			if (!s.id)
				s.id = "unit_" + this.id;
			addOption(s, "m", "-- unit--");
			this._getUnits(s);
			this.unit_widget = s;
			s.addEventListener("change", (e) => {
				this.unit = e.currentTarget.value;
			});
			this._addUnitConverter(this.tr.tdValue, input, s);
			this._addCoordinateInput(this.tr.tdValue, input);
		}
	},
	_addUnitConverter: function(element, input, unit) {
		var converter = cel("button", element);
		converter.className = 'filter-inline-label';
converter.innerHTML = '<i className="icon-edit"></i>';
		converter.id = "cnv_" + this.id;
		converter.name = converter.id;
		converter.setAttribute('type', 'button');
		converter.setAttribute('aria-label', this.CNVRTMSG);
		converter.title = this.CNVRTMSG;
		converter.addEventListener('click', (e) => {
			this._converterPopup(input, unit);
		});
		converter.style.marginInlineEnd = "1px";
		converter.style.verticalAlign = "top";
		converter.className = "btn btn-default icon-edit";
	},
	_addCoordinateInput: function(element, input) {
		var span = cel("span", element);
		span.className = 'filter-inline-label';
		span.innerHTML = this.FROMMSG;
		var pointInput = this._addTextInput(null, null, "Point");
		pointInput.value = this.parts[2];
	},
	_operOnChange: function() {
		var lastOp = this.lastOperator;
		this.lastOperator = this._getOperator();
		var newOp = this._getOperator();
		if (lastOp == newOp)
			return this._build();
		var unit = this.parts[1] || "m";
		var point = this.parts[2] || this.parts[0];
		this.values = [];
		if ( "DISTANCE_SPHERE_WITHIN" == newOp) {
			this.inputCnt = 3;
			this.values =[];
			this.parts =["", unit, point];
		}
		if ("=" == newOp || "!=" == newOp) {
			this.inputCnt = 1;
			this.values = [point];
			this.parts = [point];
		}
		this._unescapeIfRequired();
		this._build();
	},
	_converterPopup: function(inputElement, unitElement) {
ScriptLoader.getScripts('scripts/classes/GwtGeopointUnitPicker.js?v=' + g_builddate, function() {
			new GwtGeopointUnitPicker({inputFieldId: inputElement.id, unitSelectId: unitElement.id,
					positionElement: inputElement, initialValue: inputElement.value, initialFrom: unitElement.value})
		})
	},
	_getDistanceAndUnitFromConversion: function(distance) {
		var asNumber = Number(distance);
		var ret = {distance: distance, unit: "m"};
		if (isNaN(asNumber))
			return ret;
		ret.distance = asNumber;
		ret.unit = this._determineBestUnit(asNumber);
		this.unit = ret.unit ? ret.unit : "m";
		if (ret.unit == 'm')
			return ret;
		ret.distance = this._convertFromUnitToUnit(ret.distance, "m", this.unit);
		return ret;
	},
	_getUnits: function(s) {
		var units = this._resolveFromCache("geo_point_units");
		if (units.length != 0)
			return this._addUnitsToSelect(units, s);
		var ajax = new GlideAjax("snAJAXGeoPointUtility");
		ajax.addParam("sysparm_name", "getUnits");
		ajax.getXMLAnswer(this._getUnitsResponse.bind(this), null, s);
	},
	_getUnitsResponse: function(answer, s) {
		var units = [];
		try {
			units = JSON.parse(answer);
		} catch (e) {
			units = [];
		}
		if (units.length > 0) {
			var cache = this._getCache();
			cache.put("geo_point_units", units);
		}
		return this._addUnitsToSelect(units, s);
	},
	_addUnitsToSelect: function(units, s) {
		this._removeAllOptions(s);
		for (var i = 0; i < units.length; i++)
			addOption(s, units[i]["abbreviation"], units[i]["display_value"]);
		if(this.unit)
			s.value = this.unit;
	},
	_determineBestUnit: function(num) {
		return "m";
	},
	_convertFromUnitToUnit: function(distance, unitFrom, unitTo) {
		var conversionToMeters = {
			m: function(val) {
				return val;
			},
			km: function(val) {
				return val * 1000;
			},
			ft: function(val) {
				return val * .3048
			},
			mi: function(val) {
				return val * 1609.34;
			}
		}
		var conversionFromMeters = {
			m: function(val) {
				return val;
			},
			km: function(val) {
return val / 1000;
			},
			ft: function(val) {
				return val * 3.28084
			},
			mi: function(val) {
				return val * 0.000621371;
			}
		}
		if (!unitTo || !unitFrom || unitTo == unitFrom)
			return distance;
		if (!conversionToMeters.hasOwnProperty(unitTo) || !conversionFromMeters.hasOwnProperty(unitFrom))
			return distance;
		if (unitFrom == "m")
			return this._convertToIntegerIfNeeded(conversionFromMeters[unitTo].call(this, distance));
		var distanceMeters = this._convertToIntegerIfNeeded(conversionToMeters[unitFrom].call(this, distance));
		return this._convertToIntegerIfNeeded(conversionFromMeters[unitTo].call(this, distanceMeters));
	},
	_convertToIntegerIfNeeded: function(number, tolerance = 0.0001) {
		if (isNaN(number))
			return number;
		if (number < 1)
			return Number.parseFloat(number).toFixed(4);
		var rounded = Math.round(number);
		if (Math.abs(number - rounded) < tolerance)
			return rounded;
		return Number.parseFloat(number).toFixed(4);
	},
	_getTables: function(s) {
		var tables = this._resolveFromCache("geo_point_tables");
		if (tables.length != 0)
			return this._addTablesToSelect(tables, s);
		var ajax = new GlideAjax("GeopointUtility");
		ajax.addParam("sysparm_name", "getTables");
		ajax.getXMLAnswer(this._getTablesResponse.bind(this), null, s);
	},
	_getTablesResponse: function(answer, s) {
		var tables = [];
		try {
			tables = JSON.parse(answer);
		} catch (e) {
			tables = [];
		}
		if (tables.length > 0) {
			var cache = this._getCache();
			cache.put("geo_point_tables", tables);
		}
		this._addTablesToSelect(tables, s);
	},
	_addTablesToSelect: function(tables, s) {
		this._removeAllOptions(s);
		for (var i = 0; i < tables.length; i++)
			addOption(s, tables[i]["table"], tables[i]["label"]);
		this.table_widget = s;
	},
	_resolveFromCache:function(name) {
		var cache = this._getCache();
		var value = cache.get(name);
		if (value)
			return value;
		return [];
	},
	_getCache:function() {
		if (typeof(g_cache_units) != "undefined")
			return g_cache_units;
		g_cache_units = new GlideClientCache(1);
		return g_cache_units;
	},
	_removeAllOptions: function(select) {
		if (!select)
			return;
		var s = new Select(select);
		s.clear();
	},
	getValues: function() {
		if (!this.inputs)
			return "";
		if (this.inputs && this.inputs.length == 3 && this.parts && this.parts.length == 3) {
			var distance = this._convertFromUnitToUnit(this.inputs[0].value, this.inputs[1].value, "m");
			var point = this._ensureFormat(this.inputs[2].value);
			return point + "<" + distance;
		}
		return this._ensureFormat(this.inputs[0].value);
	},
	_ensureFormat: function(value) {
		if (!value)
			return "(0,0)"
		value = value + "";
		if (!value.startsWith("("))
			value = "(" + value;
		if (!value.endsWith(")"))
			value = value + ")";
		return value;
	},
	destroy : function() {
		GlideFilterString.prototype.destroy.call(this);
		this.unit_widget = null;
	},
	type: 'GlideFilterGeopoint',
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideEventHandler.js */
var GlideEventHandler = Class.create({
    initialize: function (handlerName, handler, fieldName) {
        this.handlerName = handlerName;
        this.handler = handler;
        this.fieldName = fieldName;
    }
});
;
/*! RESOURCE: /scripts/classes/GlideUIElement.js */
var GlideUIElement = Class.create({
	CACHE_ELEMENTS: true,
	ENABLE_CHILD_WALKING: false,
	
	initialize: function (tableName, fieldName, type, mandatory, reference, attributes, scope, isChoice, xmlView) {
		this.tableName = tableName;
		this.fieldName = fieldName;
		this.type = type;
		this.mandatory = mandatory;
		this.reference = reference;
		this.attributes = attributes;
		this.elementFetched = false;
		this.elementParentNode;
		this.fetchedNodes = {};
		this.scope = scope || "global";
		this.isChoice = isChoice;
		this.xmlView = xmlView;
	},
	
	getType: function() {
		return this.type;	
	},
	
	getID: function() {
		return this.tableName + '.' + this.fieldName;
	},
	
	getElementParentNode: function() {
		if (!this.elementFetched) {
			this.elementParentNode = gel('element.' + this.getID());
			this.elementFetched = true;
		}
			
		return this.elementParentNode;
	},
	
	getElement: function() {
		return this.getChildElementById(this.getID());
	},
	
	getLabelElement: function() {
		var parentElementNode = this.getElementParentNode();
		if (!parentElementNode)
			parentElementNode = document;
			
	    var labels = parentElementNode.getElementsByTagName('label');
	    for (var i = 0; (label = labels[i]); i++) {
	        if (label.htmlFor == this.getID())
	           return label;
	    }
		
		return this.getStatusElement();
	},
	
	getStatusElement: function() {
		return this.getChildElementById('status.' + this.getID());		
	},
	
	getChildElementById: function(id) {
		if (this.fetchedNodes[id])
			return this.fetchedNodes[id];
			
		var element = this.getChildElementById0(id);
		if (element)
			this.fetchedNodes[id] = element;
			
		return element;
	},
	
	getChildElementById0: function(id) {
		var element;
		
		if (this.ENABLE_CHILD_WALKING) {
			element = this._findSubChild(this.getElementParentNode(), id);
			if (element)
				return element;
		}
		
		return gel(id);
	},
	
	isMandatory: function() {
		return this.mandatory;
	},
	isDerived: function() {
		if (!this.fieldName)
			return false;
			
		return this.fieldName.indexOf('.') > -1;
	},
	setMandatory: function(mandatory) {
		this.mandatory = mandatory;
	},
	getValue: function() {
		var element = this.getElement();
		return element && element.value;
	},
	
	getScope: function() {
		return this.scope;
	},
	isXmlView: function() {
		return this.xmlView;
	},
	_findSubChild: function(startNode, id) {
		if (!startNode || (startNode.id && startNode.id == id))
			return startNode;
			
		var childNodes = startNode.children || startNode.childNodes;
		for(var i = 0; i < childNodes.length; i++) {
			var foundNode = this._findSubChild(childNodes[i], id);
			if (foundNode)
				return foundNode;
		}
		
		return;
	},
	
	type: "GlideUIElement"
});
function newGlideUIElement(tableName, fieldName, type, mandatory, reference, attributes, scope, isChoice, isXmlView) {
	if (mandatory && fieldName && fieldName.indexOf('.') > -1)
		return new GlideMandatoryDerivedUIElement(tableName, fieldName, type, mandatory, reference, attributes, scope, isChoice, isXmlView);
	return new GlideUIElement(tableName, fieldName, type, mandatory, reference, attributes, scope, isChoice, isXmlView);
}
;
/*! RESOURCE: /scripts/classes/GlideMandatoryDerivedUIElement.js */
var GlideMandatoryDerivedUIElement = Class.create(GlideUIElement, {
	initialize: function ($super, tableName, fieldName, type, mandatory, reference, attributes, scope, isChoice, xmlView) {
		$super(tableName, fieldName, type, mandatory, reference, attributes, scope, isChoice, xmlView);
		this.referenceFieldName = fieldName ? fieldName.substr(0, fieldName.lastIndexOf('.')) : '';
		this.mandatoryDerived = mandatory && this.referenceFieldName ? true : false;
		if (this.mandatoryDerived) {
this.mandatory = null;
			var e = this.getElement();
			if (e)
				e.setAttribute("mandatory", mandatory);
		}
		this.referenceField;
	},
	isMandatory: function() {
		return this.mandatory == null ?
				!this._isDisabled() && this.isMandatoryByReferenceField() :
				this.mandatory;
	},
	isMandatoryByReferenceField: function() {
		return this.referenceField && (this.referenceField.isMandatory() || this.referenceField.getValue()) ? true : false;
	},
	getElementMandatory: function() {
		var e = this.getElement();
		return e ? e.getAttribute('mandatory') : null; 
	},
	setReferenceField: function(reference) {
		this.referenceField = reference;
	},
	_isDisabled: function() {
		var control = this.getElement();
		if (!control)
			return true;
		if (control.getAttribute('derived-waiting') === "true")
			return false;
		return control.disabled || control.readOnly ||
			((typeof control.hasClassName === "function") && control.hasClassName("readonly")) ||
			((typeof control.getAttribute === "function") && control.getAttribute("writeaccess") == "false");	
	},
	type: "GlideMandatoryDerivedUIElement"
});
;
/*! RESOURCE: /scripts/classes/GlideUser.js */
var GlideUser = Class.create({
    initialize: function(userName, firstName, lastName, nonDefaultRoles, userID, departmentID) {
        this.userName = userName;
        this.firstName = firstName;
        this.lastName = lastName;
		this.setFullName(this.firstName + " " + this.lastName);
		this.setRoles(nonDefaultRoles);
        this.userID = userID;
		this.departmentID = departmentID;
		this.preferences = new Object();
		this.clientData = new Object();
    },
    
    hasRoleExactly: function(role, includeDefaults) {
    	if (!role || typeof role != 'string')
    		return false;
    	
    	var rolesToCheck = this.roles;
    	if (includeDefaults)
    		rolesToCheck = this.allRoles;
    	for (var x = 0, l = rolesToCheck.length; x < l; x++) {
            if (rolesToCheck[x].toLowerCase() == role.toLowerCase())
                return true;
        }
        return false;
    },
    hasRoles: function(includeDefaults) {
    	if (includeDefaults)
    		return (this.allRoles.length > 0);
    	else
    		return (this.roles.length > 0);
    },
    
    hasRole: function(role, includeDefaults) {
       if (this.hasRoleExactly('maint', includeDefaults))
           return true;
       if (this.hasRoleExactly(role, includeDefaults))
           return true;
       if (role == 'maint')
           return false;
       if (this.hasRoleExactly('admin', includeDefaults))
           return true;
       return false;
    },
	
	hasRoleFromList: function(roles, includeDefaults) {
		var rolesToMatch = new Array();
		
		if (roles)
rolesToMatch = roles.split(/\s*,\s*/);
		
		if (rolesToMatch.length == 0)
			return true;
			
		for(var i = 0; i < rolesToMatch.length; i++) {
			var r = rolesToMatch[i];
			if (r && this.hasRole(r, includeDefaults))
				return true;
		}
		
		return false;
	},
	
	getFullName: function() {
		return this.fullName;
	},
	
	getUserName: function() {
		return this.userName;
	},
	
	getUserID: function() {
		return this.userID;
	},
	
	getDepartmentID: function() {
		return this.departmentID;
	},
	
	setFullName: function(fn) {
		this.fullName = fn;
	},
	
	getRoles: function(includeDefaults) {
		if (includeDefaults)
			return this.allRoles;
		return this.roles;
	},
	
	getAvailableElevatedRoles: function() {
		return this.elevatedRoles;
	},
	
	setRoles: function(r, includeDefaults) {
		if (includeDefaults) {
	        if (r)
this.allRoles = r.split(/\s*,\s*/);
	        else
	            this.allRoles = new Array();
		} else {
	        if (r)
this.roles = r.split(/\s*,\s*/);
	        else
	            this.roles = new Array();			
		}
	},
	setElevatedRoles: function(r) {
        if (r)
this.elevatedRoles = r.split(/\s*,\s*/);
        else
            this.elevatedRoles = new Array();
	},
	
	setActiveElevatedRoles: function(r) {
	  if (r)
this.activeElevatedRoles = r.split(/\s*,\s*/);
	  else
	      this.activeElevatedRoles = new Array();
	},
	
	getActiveElevatedRoles: function() {
	  return this.activeElevatedRoles;
	},
	
	setDomain: function(d) {
		this.domain = d;
	},
	
	getPreference: function(n) {
		return this.preferences[n];
	},
	
	setPreference: function(n, v) {
		this.preferences[n] = v;
	},
	
	deletePreference: function(n) {
		delete this.preferences[n];
	},
	
	getClientData: function(n) {
		return this.clientData[n];
	},
	
	setClientData: function(n, v) {
		this.clientData[n] = v;
	},
	
	setBannerImage: function(s) {
		this.bannerImage = s;
	},
	
	getBannerImage: function() {
		return this.bannerImage;
	},
	
	setBannerText: function(s) {
		this.bannerText = s;
	},
	
	getBannerText: function() {
		return this.bannerText;
	},
	
	setHomePages: function(s) {
		this.homePages = s;
	},
	
	getHomePages: function() {
		return this.homePages;
	},
	
	type: "GlideUser"
});
;
/*! RESOURCE: /scripts/classes/ContextMenuExportHandler.js */
var ContextMenuExportHandler = Class.create({
    initialize: function(g_list, export_format) {
        this.g_list = g_list;
        this.export_format = export_format;
    },
    exportRecords: function() {
        var sysparm_rows = this.g_list.grandTotalRows;
        var num_rows = parseInt(sysparm_rows);
        var sysparm_query = this.g_list.getQuery({ orderby: true, fixed: true });
        var sysparm_view = this.g_list.view;
        var sysparm_query_no_domain = false;
        if ('submitValues' in this.g_list && 'sysparm_query_no_domain' in this.g_list.submitValues)
            sysparm_query_no_domain = this.g_list.submitValues.sysparm_query_no_domain;
        if (num_rows < g_export_warn_threshold) {
            var dialog = new GwtPollDialog(this.g_list.tableName, sysparm_query, sysparm_rows, sysparm_view, this.export_format, undefined, undefined, sysparm_query_no_domain);
            dialog.execute();
            return;
        }
        var dialog = new GwtExportScheduleDialog(this.g_list.tableName, sysparm_query, sysparm_rows, sysparm_view, this.export_format, undefined, this.export_format, sysparm_query_no_domain);
        dialog.execute();
    }
});
;
/*! RESOURCE: /scripts/doctype/GlideForm14.js */
function default_on_submit() {
	if (!g_form)
		return true;
	return g_form.onSubmit();
}
var GlideForm = Class.create({
	INFO_CLASS: "fieldmsg notification notification-info",
	ERROR_CLASS: "fieldmsg notification notification-error",
	WARNING_CLASS: "fieldmsg notification notification-warning",
	MSG_ROW: "_message_row",
	initialize : function(tableName, mandatory, checkMandatory, checkNumeric, checkInteger, isSearch) {
		this.tableName = tableName;
this.modified = false;
this.modifiedFields = {};
		this.mandatoryOnlyIfModified = false;
		this.elements = [];
		this.mandatory = mandatory;
		this.checkMandatory = checkMandatory;
		this.checkNumeric = checkNumeric;
		this.checkInteger = checkInteger;
		this.nameMap = [];
		this.attributes = [];
		this.validators = [];
		this.disabledFields = [];
		this.securityReadOnlyFields = [];
		this.genAIModifiedFields = {};
		this.elementHandlers = {};
		this.prefixHandlers = {};
		this.derivedWaiting = {};
		this.newRecord = gel('sys_row') && gel('sys_row').value == "-1";
		this.personalizeHiddenFields = null;
		this.personalizePrefKey = "personalize_" + this.tableName + "_" + this.getViewName();
		this._isLiveUpdating = false;
		this._onUserChangedHandlers = [];
		this.mandatoryDerivedFields = {};
		this.submitAttemptsCount = 0;
		
		if (isSearch) {
			var gf = this;
			setTimeout(function() {CachedEvent.emit('glideform.initialized', gf)}, 0);
		}
		else {
			if (this.classname !== 'ServiceCatalogForm' && this.classname !== 'ServiceCatalogForm17') {
				CachedEvent.emit('glideform.initialized', this);
			}
		}
		window.addEventListener("load", function() {
			if (g_form) {
				var formElement = g_form.getFormElement();
				formElement && formElement.removeAttribute("autocomplete");
			}
		});
	},
	fieldChanged : function(elementName, changeFlag) {
		if (!this._internalChange) {
			if (changeFlag) {
				this.modified = true;
				this.modifiedFields[elementName] = true;
			} else if (this.modifiedFields[elementName]) {
				this.modifiedFields[elementName] = false;
				this._checkModified();
			}
		}
		var uniqueValue = this.getUniqueValue();
		CustomEvent.fireAll('form.isModified', {uniqueValue: uniqueValue, isModified: this.modified, iframeElId: window.frameElement ? window.frameElement.id : null});
		var field = this.mandatoryDerivedFields[elementName];
		if (field && this._isDerivedWaiting(elementName)) {
			var newValue = field.getValue();
			if (newValue && field.getElementMandatory() != 'true')
				this._setMandatory(field.fieldName, field, true);
			else if (!newValue && !field.isMandatory() && field.getElementMandatory() != 'false')
				this._setMandatory(field.fieldName, field, false);
		}
	},
 	triggerOnUserChangeValue: function(fieldName, originalValue, newValue) {		
 		if (this._internalChange || this._onUserChangedHandlers.length === 0) 
 			return;	
		this._onUserChangedHandlers.forEach(function(fn) {	
			fn.call(fn, fieldName, originalValue, newValue);	
		});
 	},
	_checkModified: function() {
		for (var n in this.modifiedFields) {
			if (this.modifiedFields[n]) {
				this.modified = true;
				return;
			}
		}
		this.modified = false;
	},
	setMandatoryOnlyIfModified : function() {
		this.mandatoryOnlyIfModified = true;
	},
	disableMandatoryCheck : function() {
		this.checkMandatory = false;
	},
	enableMandatoryCheck : function() {
		this.checkMandatory = true;
	},
	addNameMapEntry : function(entry) {
		this.nameMap.push(entry);
	},
addGlideUIElement : function(ed) {
		this._checkDerivedFieldMandatory(ed);
		this.elements.push(ed);
	},
_checkDerivedFieldMandatory : function(ed) {
		if (ed.mandatoryDerived) {
			ed.setReferenceField(this.getGlideUIElement(ed.referenceFieldName));
			if (!ed.isMandatory() && (!ed.getValue() || this.isNewRecord()))
				this._setMandatory(ed.fieldName, ed, false);
			var key = this.getTableName() + '.' + ed.fieldName;
			this.mandatoryDerivedFields[key] = ed;
		}
		this._setDerivedFieldsMandatory(ed);		
	},
	_setDerivedFieldsMandatory : function(ed) {
		if (ed.getType() !== 'reference')
			return;
		for (var name in this.mandatoryDerivedFields) {
			var field = this.mandatoryDerivedFields[name]
			if (field.referenceFieldName == ed.fieldName) {
				if (!field.referenceField)
					field.setReferenceField(ed);
				var mandatory = field.isMandatory();
				if (mandatory.toString() != field.getElementMandatory()) {
					this._setMandatory(field.fieldName, field, mandatory);
					this._setDerivedFieldsMandatory(field);
				}
			}
		}
	},
	registerHandler: function(id, handler) {
		this.elementHandlers[id] = handler;
	},
	registerPrefixHandler: function(prefix, handlerObject) {
		var handler = new GlideFormPrefixHandler(handlerObject);
		this.prefixHandlers[prefix] = handler;
	},
	getPrefixHandler: function(id) {
		if (!id)
			return;
		if (id.indexOf('.') < 0)
			id = 'variables.' + id;
		var idSplit = id.split(".");
		var handler = this.prefixHandlers[idSplit[0]];
		if (typeof handler == "undefined")
			return;
		handler.setFieldName(id);
		return handler;
	},
	getElement: function(id) {
		if (this.elementHandlers[id] && (typeof this.elementHandlers[id].getElement == "function"))
			return this.elementHandlers[id].getElement();
		else
			return this.getControl(id);
	},
	getParameter : function(parm) {
		if (!(parm.substr(0, 8) == 'sysparm_'))
			parm = 'sysparm_' + parm;
		var pcel = gel(parm);
		if (pcel)
			return pcel.value;
		else
			return '';
	},
	hasAttribute : function(s) {
		if (this.attributes[s])
			return true;
		return false;
	},
	addAttribute : function(s) {
		this.attributes[s] = s;
	},
	addValidator : function(fieldType, validator) {
		this.validators[fieldType] = validator;
	},
	_getPersonalizeHiddenFields: function() {
		if (this.personalizeHiddenFields == null) {
			var prefVal = NOW[this.personalizePrefKey] || getPreference(this.personalizePrefKey);
			if ('false' == prefVal)
				this.personalizeHiddenFields = [];
			else if (prefVal.length)
				this.personalizeHiddenFields = prefVal.split(",");
			else
				this.personalizeHiddenFields = [];
		}
		return this.personalizeHiddenFields;
	},
	
	resetPersonalizeHiddenFields: function() {
		this.personalizeHiddenFields = [];
		
		this._savePersonalizeHiddenFields(function(){window.reloadWindow(window);});
	},
	_savePersonalizeHiddenFields: function(callback) {
		setPreference(this.personalizePrefKey, this.personalizeHiddenFields.join(","), callback);
	},
	isUserPersonalizedField: function(fieldName){
		fieldName = this.removeCurrentPrefix(fieldName); 
		return this.personalizeHiddenFields === null ? false : this.personalizeHiddenFields.indexOf(fieldName) != -1;
	},
	setUserDisplay: function(fieldName, display) {
		fieldName = this.removeCurrentPrefix(fieldName);
		this._getPersonalizeHiddenFields();
		for(var i = this.personalizeHiddenFields.length-1; i>=0; i--) {
			if (this.personalizeHiddenFields[i] === fieldName) {
				this.personalizeHiddenFields.splice(i, 1);
			}
		}
		this.setDisplay(fieldName, display);
		if ((display === false || display === 'false') && !this.isMandatory(fieldName))
			this.personalizeHiddenFields.push(fieldName);
		this._savePersonalizeHiddenFields();
	},
	setDisplay : function(fieldName, display) {
		fieldName = this.removeCurrentPrefix(fieldName);
		if (!this.getGlideUIElement(fieldName) && !!this._hasSCUIElement(fieldName))
			g_sc_form.setDisplay(fieldName, display);
		else
			this._setDisplay(fieldName, display, this.isMandatory(fieldName), this.getValue(fieldName));
	},
	_hasSCUIElement : function(name) {
		return this._hasSCForm() && typeof g_sc_form.getSCUIElement !== 'undefined' && g_sc_form.getSCUIElement(name);
	},
	_hasSCForm : function() {
		return typeof g_sc_form != "undefined" && g_sc_form;
	},
	_setDisplay: function(fieldName, display, isMandatory, fieldValue) {
		var s = this.tableName + '.' + fieldName;
		var control = this.getControl(fieldName);
		
		var displayValue = 'none';
		if (display == 'true' || display == true) {
			display = true;
			displayValue = '';
		} else {
			display = false;
		}
		var opticsVisibleMessage = "Visibility set to " + (display ? 'visible' : 'hidden');
		
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler) {
				handler.getObject().setDisplay(handler.getFieldName(), display);
				opticsLog(this.tableName, fieldName, opticsVisibleMessage);
			}
			return;
		}
		if ((display != true) && isMandatory && fieldValue == '')
			return;
		var theElement = control;
		if (this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].getElement == "function"))
			theElement = this.elementHandlers[control.id].getElement();
		if (this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].setDisplay == "function")) {
			this.elementHandlers[control.id].setDisplay(display ? '' : 'none');
		} else {
			this.changeElementStyle(fieldName, 'display', displayValue);
		}
		opticsLog(this.tableName, fieldName, opticsVisibleMessage);
		this.setSensitiveDisplayValue(s + ".ui_policy_sensitive", displayValue);
		var glideElement = this.getGlideUIElement(fieldName);
		if (glideElement)
			if (glideElement.type == 'script' || glideElement.type == 'script_plain' || glideElement.type == 'xml')
				CustomEvent.fire('element_script_display_' + display, {'element': glideElement});
		if (theElement.tagName === 'TEXTAREA' && display) {
			$j(theElement).trigger("autosize.resize");
		}
		_frameChanged();
	},
	setSensitiveDisplayValue: function(name, displayValue) {
		var elements = document.getElementsByName(name);
		for (i = 0; i < elements.length; i++ ) {
			elements[i].style.display = displayValue;
		}
	},
	setValidation : function(fieldName, validate) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (!control)
			return;
		if (validate == 'false')
			validate = false;
		if (validate != false) {
			control.removeAttribute('validate');
			return;
		}
		control.setAttribute('validate', 'false');
	},
	getViewName: function(){
		var sysparmView = gel('sysparm_view');
		var view = "default";
		if (sysparmView && sysparmView.value)
			view = sysparmView.value;
		
		return view;
	},
	setVisible : function(fieldName, visibility) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				handler.getObject().setVisible(handler.getFieldName(),
						visibility);
		}
		var v = 'hidden';
		if (visibility == 'true')
			visibility = true;
		if (visibility)
			v = 'visible';
		if ((visibility != true) && this.isMandatory(fieldName) && (this.getValue(fieldName) == ''))
			return;
		this.changeElementStyle(fieldName, 'visibility', v);
		opticsLog(this.tableName, fieldName, "Visibility set to " + v);
	},
	changeElementStyle: function(fieldName, name, value) {
		var ge = this.getGlideUIElement(fieldName);
		if (!ge)
			return;
		if (this.changeElementParent(ge, name, value))
			return;
		var labelElement = ge.getLabelElement();
		if (labelElement)
			labelElement.parentNode.parentNode.style[name] = value;
		var parentTR = findParentByTag(ge.getElement(), "tr");
		if (parentTR && parentTR != labelElement)
			parentTR.style[name] = value;
	},
	changeElementParent : function(ge, name, value) {
		var element = ge.getElementParentNode();
		if (element) {
			element.style[name] = value;
			var decoration = $(element).select(".reference_decoration, .btn-ref");
			var isEmptyRef = ge.type == 'reference' && this.getValue(ge.fieldName) == '';
			if (decoration && decoration.length > 0) {
				for (var i = 0; i < decoration.length; i++) {
					if (decoration[i].getAttribute('list-read-only') === "true")
						continue;
					if (isEmptyRef && (decoration[i].getAttribute('data-type') == 'reference_popup'))
						decoration[i].style[name] = 'none';
					else
						decoration[i].style[name] = value;
				}
			}
			return true;
		}
		return false;
	},
	getLabel : function(id) {
		id = this.removeCurrentPrefix(id);
		var label;
		var labels = document.getElementsByTagName('label');
		for (var i = 0; (label = labels[i]); i++) {
			if (label.htmlFor.endsWith('.' + id))
				return label;
		}
		for (var i = 0; (label = labels[i]); i++) {
			if(label.htmlFor.endsWith(id))
				return label;
			if (label.htmlFor.indexOf("autogen") !== -1) {
				var children = label.children;
				for (var j = 0; j < children.length; j++) {
					var child = children[j];
					if (child.id && child.id.endsWith('.' + id))
						return label;
				}
			}
		}
		return false;
	},
	isNewRecord : function() {
		return this.newRecord;
	},
	isMandatory: function(fieldName) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var thisElement = this.getGlideUIElement(fieldName);
		if (!thisElement) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				return handler.getObject().isMandatory(handler.getFieldName());
			else
			return false;
		}
		return thisElement.isMandatory();
	},
	addSecurityReadOnlyFields: function (fields) {
		this.securityReadOnlyFields = fields.split(',').filter(function(item) {
			return item !== undefined && item !== null && item !== "";
		});
	},
	isSecurityReadOnlyField: function(fieldName) {
		return this.securityReadOnlyFields.some(function(securityField) {
			return securityField === this.tableName + "." + fieldName;
		}, this);
	},
	setRequiredChecked: function(fieldName, required) {
		if(!fieldName || !fieldName.startsWith('ni.VE') || !fieldName.startsWith("ni.QS")) {
			jslog("Invalid variable id");
			return;
		}
		var handler = this.getPrefixHandler(this.resolvePrettyNameMap(fieldName));
		if(!handler) {
			jslog("Invalid variable id");
			return;
		}	
		handler.getObject().setRequiredChecked(fieldName, required);
	},
	_setAriaRequired : function(fieldName, value) {
		if (!fieldName) {
			return;
		}
		value = value || false;
		var visibleControls = this._getVisibleControls(fieldName);
		visibleControls.forEach(function(visibleControl){
			visibleControl.setAttribute('aria-required', value);
		});
	},
	setMandatory : function(fieldName, mandatory) {
		var thisElement = this.getGlideUIElement(fieldName);
		if (!thisElement) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				handler.getObject().setMandatory(handler.getFieldName(), mandatory);
			return;
		}
		if (this.isSecurityReadOnlyField(fieldName)) {
			opticsLog(this.tableName, fieldName, "Unable to set security read-only field's mandatory state to " + mandatory);
			return;
		}
		thisElement.setMandatory(mandatory);
		this._setMandatory(fieldName, thisElement, mandatory);
		this._setDerivedFieldsMandatory(thisElement);
	},
	_setMandatory : function(fieldName, thisElement, mandatory) {
		if (!thisElement)
			return;
		var e = thisElement.getElement();
		if (e) {
			e.setAttribute("mandatory", mandatory);
			onChangeLabelProcessByEl(e, thisElement.getStatusElement());
			this._setAriaRequired(fieldName, mandatory);
		}
		var control = this.getControl(fieldName);
		if (control && control.id && this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].setMandatory == "function"))
			this.elementHandlers[control.id].setMandatory(mandatory);
		if (mandatory) {
			setMandatoryExplained(true);
			var value = this.getValue(fieldName);
			if (value == '') {
				this._setDisplay(fieldName, true, true, '');
				this._setReadonly(fieldName, false, true, '');
			}
		}
		opticsLog(this.tableName, fieldName, "Mandatory set to " + mandatory);
	},
	setDisabled: function (fieldName, disabled) {
		this.setReadonly(fieldName, disabled);
	},
	setReadOnly: function (fieldName, disabled) {
		this.setReadonly(fieldName, disabled);
	},
	setReadonly: function (fieldName, disabled) {
		fieldName = this.removeCurrentPrefix(fieldName);
		if (fieldName && this._isDerivedWaiting(fieldName))
			addSetDerivedReadOnlyListener(fieldName, disabled);
		else
			this._setReadonly(fieldName, disabled, this.isMandatory(fieldName), this.getValue(fieldName));
	},
	_setDerivedWaitingReadonly: function (fieldName, disabled) {
		fieldName = this.removeCurrentPrefix(fieldName);
		this._setReadonly(fieldName, disabled, this.isMandatory(fieldName), this.getValue(fieldName));
		var control = this.getControl(fieldName);
		if (!control)
			return;
		if (disabled)
			control.setAttribute('derived-waiting', true);
		else
			control.removeAttribute('derived-waiting');
	},
	_setReadonly : function(fieldName, disabled, isMandatory, fieldValue) {
		var s = this.tableName + '.' + fieldName;
		var control = this.getControl(fieldName);
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				handler.getObject()._setReadonly(
						handler.getFieldName(), disabled, isMandatory,
						fieldValue);
			return;
		}
		var ge = this.getGlideUIElement(fieldName);
		if (!ge) {
			opticsLog(this.tableName, fieldName, "Unable to set invalid field's ReadOnly to " + disabled);
			return;
		}
		this._setReadonly0(ge, control, s, fieldName, disabled, isMandatory, fieldValue);
	},
	_setReadonly0: function (ge, control, s, fieldName, disabled, isMandatory, fieldValue) {
		if (disabled && isMandatory && fieldValue == '') {
			opticsLog(this.tableName, fieldName, "Unable to set blank mandatory field's read-only state to " + disabled);
			return;
		}
		if (this.isSecurityReadOnlyField(fieldName)) {
			opticsLog(this.tableName, fieldName, "Unable to set security read-only field's read-only state to " + disabled);
			return;
		}
		if (control.getAttribute('gsftlocked') == 'true') {
			opticsLog(this.tableName, fieldName, "Unable to set locked field's ReadOnly to " + disabled);
			return;
		}
		if (this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].setReadOnly == "function")) {
			if (this.elementHandlers[control.id].setReadOnly(disabled) == true)
				return;
		} else
			this.setDisabledControl(control, disabled);
		this._setDisabledField(control, disabled);
		onChangeLabelProcessByEl(control, ge.getStatusElement());
		this._setFieldReadOnly(ge, "sys_display." + s, disabled);
		this._setFieldReadOnly(ge, "sys_select." + s, disabled);
		var $inputGroup = $j(ge.getElementParentNode()).find(".input-group");
		if ($inputGroup.length){
			if (disabled)
				$inputGroup.addClass('input-group-disabled');
			else
				$inputGroup.removeClass('input-group-disabled');
		}
		this.setSensitiveDisplayValue(s + ".ui_policy_sensitive", disabled ? 'none' : '');
		this._setFieldReadOnly(ge, "ni." + this.tableName + "." + fieldName, disabled);
if (this.tableName == "ni")
			this._setFieldReadOnly(ge, "ni." + ge.fieldName, disabled);
		
		var suggestionExists = gel('ni.dependent_reverse.' + this.tableName + '.' + fieldName);
		
		if (suggestionExists){
			this._setFieldReadOnly(ge, "lookup." + this.tableName + "." + fieldName, disabled, true);
		}
		opticsLog(this.tableName, fieldName, "ReadOnly set to " + disabled);
	},
	_setFieldReadOnly : function(ge, s, disabled, skipProcessLabelChange) {
		var control = ge.getChildElementById(s);
		var value;
		if (control) {
			this.setDisabledControl(control, disabled);
			this._setDisabledField(control, disabled);
			if (!skipProcessLabelChange) {
				value = (ge.type === "reference" || ge.type === "glide_list") && ge.getElement() ?
						ge.getElement().value : control.value;
				onChangeLabelProcessByEl(control, ge.getStatusElement(), value);
			}
		}
	},
	setDisabledControl: function (control, disabled) {
		if (disabled) {
			control.setAttribute("readonly", "readonly");
			addClassName(control, 'disabled');
		} else {
			control.removeAttribute("readonly");
			removeClassName(control, 'disabled');
		}
		if (control.tagName == "SELECT") {
			var $control = $j(control);
			$control.find('option').prop('disabled', disabled);
			if ($control.data('select2'))
				$control.select2('container').toggleClass('select2-container-disabled', disabled);
		} else if (control.getAttribute('type') == 'checkbox')
			control.setAttribute('aria-readonly', disabled);
	},
	_setDisabledField: function (control, disabled) {
		if (disabled) {
			addClassName(control, 'disabled');
			addClassName(control, 'readonly');
			this._addDisabledField(control);
		} else  {
			removeClassName(control, 'disabled');
			removeClassName(control, 'readonly');
			this._removeDisabledField(control);
		}
	},
	_addDisabledField: function (control) {
		var n = this.disabledFields.length;
		this.disabledFields[n] = control;
	},
	_removeDisabledField: function (control) {
		var n = this.disabledFields.length;
		for (i = 0; i < n; i++) {
			if (this.disabledFields[i] == control) {
				this.disabledFields.splice(i,1);
				break;
			}
		}
	},
	onSubmit: function () {
		this.getFormElement().addClassName('form-submitted');
		this.submitAttemptsCount++;
		CustomEvent.fireTop('glideform.submit_attempted');
		var action = this.getActionName();
		if (action && !action.startsWith("sysverb_no_update"))
			this.submitted = true;
		if (action == 'sysverb_back' || action == 'sysverb_cancel' || action == 'sysverb_delete' || action == 'sysverb_query')
			return true;
		
		if (action == 'sysverb_m2ms'){
			CustomEvent.fire('sn.stream.clearOnSilentSubmit');
		}
		this._sendGenAIFeedback();
		var rc = this.mandatoryCheck();
if (rc && this._hasSCForm())
			rc = g_sc_form.mandatoryCheck() && g_sc_form.catalogOnSubmit();
		rc = rc && this.validate();
		return rc;
	},
	_sendGenAIFeedback() {
		var req = new XMLHttpRequest();
		Object.keys(this.genAIModifiedFields).forEach((genAIResponseLogID) => {
		  let fieldsData = {};
		  this.genAIModifiedFields[genAIResponseLogID].forEach((field) => {
			const fieldName = field.fieldName;
			const fieldValue = this.getValue(fieldName);
			const genAIGeneratedValue = field.fieldValue;
			if(fieldValue !== genAIGeneratedValue)
			fieldsData[fieldName] = this.getValue(fieldName);
		  });
		  if(Object.keys(fieldsData).length != 0)
		  {
req.open("POST", "/api/sn_uxc_gen_ai/uxc_generative_ai/feedback", true);
req.setRequestHeader("Content-Type", "application/json");
		  req.setRequestHeader("X-userToken", window.g_ck);
		  req.send(
			JSON.stringify({
			  logId: genAIResponseLogID,
			  isResponseEdited: true,
			  edited_response: fieldsData
			})
		  );
		}
		});
		
	},
	enableUIPolicyFields: function() {
		for (var i = 0; i < this.disabledFields.length; i++) {
			var field = this.disabledFields[i];
			var disabledID = field.id;
			if (!field.parentNode)
				continue;
			if (this._isDerivedWaiting(disabledID)) {
				continue;
			}
			var existingElement = document.querySelector('input[name="' + field.name + '"]');
			if (existingElement) {
				if (existingElement.uiPolicyField == field) {
					existingElement.value = field.value;
					continue;
				}
				if (!existingElement.disabled)
					continue;
			}
			var hiddenInput = document.createElement('input');
			hiddenInput.name = field.name;
			hiddenInput.type = "hidden";
			hiddenInput.value = field.value;
			hiddenInput.uiPolicyField = field;
			field.parentNode.appendChild(hiddenInput);
		}
		
		var derivedWaiting = this.derivedWaiting;
		Object.keys(derivedWaiting).forEach(function (key) {
			var fieldId = derivedWaiting[key].refFieldName + '.' + key;
			jslog("Disabling field: " + fieldId)
			$j("[id='"+fieldId+"']").prop('disabled', true);
			$j("[id='sys_original."+fieldId+"']").prop('disabled', true);
		});
	},
	
	focusFirstVisibleField : function(fields) {
		var focusDetermined = false;
		for (var i = 0; i < fields.length && !focusDetermined; i++) {
			var field = fields[i];
			var widget = this.getControl(field);
			if (g_tabs2Sections.isActivated()) {
				var tabName = this.getTabNameForField(field);
				var tabIndex = g_tabs2Sections.findTabIndexByName(tabName);
				if (tabName && g_tabs2Sections.activeTab !== tabIndex && g_tabs2Sections.setActiveNoPreference)
					g_tabs2Sections.setActiveNoPreference(tabIndex);
			}
			
				var tryLabel = !$j(widget).is(':visible');
				if (!tryLabel) {
					try {
						var formEle = this.getFormElement();
						if (formEle) {
							var firstInvalidEle = formEle.querySelector("[aria-invalid='true']");
							if(firstInvalidEle)
								firstInvalidEle.focus();
							else
								widget.focus();
						} else
						widget.focus();
						focusDetermined = true;
					} catch (e) {
						tryLabel = true;
					}
				}
				if (tryLabel) {
					var displayWidget = this.getDisplayBox(field);
					if (displayWidget && displayWidget.getAttribute("type") == "hidden"){
						var streamDisplayWidget = gel("activity-stream-" + field + "-textarea");
						if (streamDisplayWidget) {
							try {
								streamDisplayWidget.focus();
								focusDetermined = true;
							} catch (exception) {
							}
						}
					}
					else if (displayWidget) {
						try {
							displayWidget.focus();
							focusDetermined = true;
						} catch (exception) {
						}
					}
				}
			}
	},
	mandatoryCheck : function() {
		if (!this.checkMandatory || (!this.modified && this.mandatoryOnlyIfModified))
			return true;
		var rc = true;
		var invalidFields = new Array();
		var labels = new Array();
		var missing = this.getMissingFields();
		var invalidWidgets = [];
		for (var i = 0; i < missing.length; i++) {
			rc = false;
			var field = missing[i];
			var widgetVisibleControls = this._getVisibleControls(field);
			if (widgetVisibleControls.length > 0) {
				invalidWidgets.push(widgetVisibleControls);
			}
			labels.push(this.tableName + '.' + field);
			var widgetLabel = this.getLabelOf(field);
			var shortLabel = trim(widgetLabel + '');
			invalidFields.push(shortLabel);
		}
		if (!rc) {
			var theText = invalidFields.join(', ');
			theText = getMessage('The following mandatory fields are not filled in') + ': ' + theText;
			try {
				this.addErrorMessage(theText);
				CustomEvent.fireAll('glideform.mandatorycheck.failed', theText);
				this.submitted = false;
				this.focusFirstVisibleField(missing);
			} catch (e) {
			}
		}
		for (var i = 0; i < labels.length; i++) {
			if(window.NOW.isUsingPolaris) {
				this.flash(labels[i], "RGB(var(--now-alert--warning--background-color,var(--now-color_alert--warning-0,244,240,191)))", 0);
			} else {
				this.flash(labels[i], "#FFFACD", 0);
			}
		}
		for (var i = 0; i < invalidWidgets.length; i++) {
			for (var j = 0; j < invalidWidgets[i].length; j++) {
				invalidWidgets[i][j].setAttribute('aria-invalid', 'true');
			}
		}
		return rc;
	},
	setVariablesReadOnly: function(readOnly) {
		for (var x=0; x < g_form.elements.length; x++) {
			for (var i = 0; i < this.nameMap.length; i++) {
				var entry = this.nameMap[i];
				var element = g_form.elements[x];
				if (entry.realName == element.fieldName && element.tableName == "variable") {
					if (!this._hasSCForm())
						this.setReadOnly(entry.prettyName, readOnly);
					else
						g_sc_form.setReadOnly(entry.prettyName, readOnly);
				}
			}
		}
	},
	getHelpTextControl : function(variableName) {
		var handler = this.getPrefixHandler(variableName);
		var ele;
		if (handler) {
			var handlerObject = handler.getObject();
			ele = handlerObject.getHelpTextControl(handlerObject.removeCurrentPrefix(variableName));
		}
		if(!ele) {
			jslog("getHelpTextControl is supported for only Service Catalog Variables");
			return;
		}
		return ele;
	},
	getEditableFields : function() {
		var fa = this.elements;
		var answer =[];
		for (var i = 0; i < fa.length; i++) {
			var ed = fa[i];
			var widget = this.getControl(ed.fieldName);
			if (!widget)
				continue;
			if (this.isEditableField(ed, widget))
				answer.push(ed.fieldName);
		}
		return answer;
	},
	isEditableField : function(ge, control) {
		var isEditableFieldFn = this._getHandlerFn(control, 'isEditableField');
		if (isEditableFieldFn)
			return isEditableFieldFn(ge, control);
		if (!this.isTemplateCompatible(ge, control))
			return false;
		if (!this.isVisible(ge, control))
			return false;
		if (this.isReadOnly(ge, control))
			return false;
		if (this.isDisplayNone(ge, control))
			return false;
		return true;
	},
	isTemplateCompatible: function(ge, control) {
		var isTemplatableFn = this._getHandlerFn(control, 'isTemplatable');
		return !isTemplatableFn || isTemplatableFn(ge, control);
	},
	_getHandlerFn : function(control, fn) {
		if (!control)
			return;
		var handler = this.elementHandlers[control.id];
		if (!handler)
			return;
		var handlerFn = handler[fn];
		if (!handlerFn || typeof handlerFn !== "function")
			return;
		return handlerFn;
	},
	isFieldVisible: function(fieldName) {
		var ge = this.getGlideUIElement(this._removeTableName(fieldName));
		return !!ge && this.isVisible(ge, this.getControl(fieldName));
	},
	isVisible : function(ge, control) {
		var elHandlersCtrl = control && this.elementHandlers[control.id];
		var controlType = elHandlersCtrl && elHandlersCtrl.type;
		
		if (controlType !== 'GlideStreamJournalElement')
			if (this.isDisplayNone(ge, control))
				return false;
	
		if (elHandlersCtrl)
			if (typeof this.elementHandlers[control.id].isVisible == "function")
				return this.elementHandlers[control.id].isVisible();
		if (control && ge.getType() != "glide_duration" && ge.getType != "glide_time") {
			var xx = control.style['visibility'];
			if (xx == 'hidden'){
				var readOnlyField = gel("sys_readonly." + control.id);
				if ((readOnlyField && readOnlyField.style['visibility'] == 'hidden') || !readOnlyField)
					return false;
			}
		}
		xx = this._getElementStyle(ge, 'visibility');
		if (xx == 'hidden' || this._elementHasClass(ge, "hidden"))
			return false;
		var tab = this._getTabNameForElement(control);
		if (tab && !this.isSectionVisible(tab))
			return false;
		if (!control && !ge.getElementParentNode())
			return false;
		return true;
	},
	isDisabled : function(fieldName) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (!control)
			return true;
		if (this.elementHandlers[control.id])
			if (typeof this.elementHandlers[control.id].isDisabled == "function")
				return this.elementHandlers[control.id].isDisabled();
		return this.isReadOnly("", control);
	},
	isReadOnly : function(ge, control) {
		if (!control)
			return true;
		if (this.elementHandlers[control.id])
			if (typeof this.elementHandlers[control.id].isReadOnly == "function")
				return this.elementHandlers[control.id].isReadOnly();
		return control.disabled ||
			control.readOnly ||
			((typeof control.hasClassName === "function") && control.hasClassName("readonly")) ||
			((typeof control.getAttribute === "function") && control.getAttribute("writeaccess") == "false");
	},
	isDisplayNone : function(ge, control) {
		var parentNode = ge.getElementParentNode();
		if(parentNode && parentNode.style.display == 'none')
			return true;
		if (((ge.isXmlView && ge.isXmlView()) || ['xml', 'script', 'script_plain'].indexOf(ge.getType() > -1)) &&
			parentNode &&
			parentNode.closest('.section') &&
			parentNode.closest('.section').style.display == 'none')
			return true;
		if ((ge.isXmlView && ge.isXmlView()) || ['html', 'html_script', 'translated_html', 'composite_name', 'url', 'xml', 'script', 'script_plain'].indexOf(ge.getType()) > -1)
			return false;
		if (!control)
			return;
		else {
			var xx = control.style['display'];
			if (xx == 'none') {
				var readOnlyField = gel("sys_readonly." + control.id);
				if ((readOnlyField && readOnlyField.style['display'] == 'none') || !readOnlyField)
					return true;
			}
		}
		var xx = this._getElementStyle(ge, 'display');
		if (xx == 'none')
			return true;
		return false;
	},
	_getElementStyle : function(ge, style) {
		var element = ge.getElementParentNode();
		if (element)
			return element.style[style];
		var labelElement = ge.getLabelElement();
		if (labelElement)
			return labelElement.parentNode.parentNode.style[style];
		var parentTR = findParentByTag(ge.getElement(), "tr");
		if (parentTR && parentTR != labelElement)
			return parentTR.style[name];
		return "";
	},
	
	_elementHasClass : function(ge, className) {
		var element = ge.getElementParentNode();
		if (element)
			return element.className === className || element.className.indexOf(className + " ") === 0 ||  element.className.indexOf(" " + className) > -1;
		return false;
	},
	getMissingFields: function() {
		var fa = this.elements;
		var answer = [];
		for (var i = 0; i < fa.length; i++) {
			var ed = fa[i];
			if (!ed.isMandatory())
				continue;
			var widget = this.getControl(ed.fieldName);
			if (!widget)
				continue;
			if (this._isMandatoryFieldEmpty(ed))
				answer.push(ed.fieldName);
		}
		if (this._hasSCForm())
			g_sc_form.getMissingFields(answer);
		return answer;
	},
	_isMandatoryFieldEmpty : function(ed) {
		var widgetValue = this.getValue(ed.fieldName);
		if (widgetValue != null && widgetValue != '')
			return false;
		if (ed.supportsMapping) {
			var id = "sys_mapping." + ed.tableName + "." + ed.fieldName;
			var mappingValue = this.getValue(id);
			if (mappingValue.trim())
				return false;
			var nonMappedFieldValue = this.getValue(ed.tableName + "." + ed.fieldName);
			if (nonMappedFieldValue.trim())
				return false;
			return true;
		}
		var displayBox = this.getDisplayBox(ed.fieldName);
		if (displayBox != null) {
			var displayValue = displayBox.value;
			if (displayValue != null && displayValue != '' && displayBox.getAttribute('data-ref-dynamic') == 'true') {
				return false;
			}
		}
		if ((this.isNewRecord() || this.mandatory))
			return true;
		widgetName = "sys_original." + this.tableName + '.' + ed.fieldName;
		widget = gel(widgetName);
		if (widget) {
			widgetValue = widget.value;
			if ((widgetValue === null || widgetValue === '') && ed.type !== "journal_input" && ed.type !== "glide_list")
				return false;
		}
		return true;
	},
	resolveNameMap : function(prettyName) {
		var rc = prettyName;
		for (var i = 0; i < this.nameMap.length; i++) {
			var entry = this.nameMap[i];
			if (entry.prettyName == prettyName) {
				rc = entry.realName;
			}
		}
		return rc;
	},
	
	resolveLabelNameMap : function(name) {
		var pname = name;
		for (var i = 0; i < this.nameMap.length; i++) {
			var el = this.nameMap[i];
			if (el.realName === pname || el.prettyName === pname) {
				pname = el.label;
				break;
			}
		}
		return pname;
	},
	
	resolvePrettyNameMap: function(realName) {
		var pname = realName;
		for (var i = 0; i < this.nameMap.length; i++)
			if ('ni.VE' + this.nameMap[i].realName == realName
					|| 'ni.QS' + this.nameMap[i].realName.substring(3) == realName
					|| this.nameMap[i].realName == realName) {
				pname = this.nameMap[i].prettyName;
				break;
			}
		return pname;
	},
	getFormElement: function() {
		return gel(this.tableName + '.do');
	},
	getControl: function(fieldName) {
		var ge = this.getGlideUIElement(fieldName);
		if (ge) {
			var widget = ge.getElement();
			if (widget) {
				return widget;
			}
		}
		return this.getControlByForm(fieldName);
	},
	getControlByForm : function(fieldName) {
		var form = this.getFormElement();
		if (!form)
			return;
		widget = form[this.tableName + '.' + fieldName];
		if (!widget)
			widget = form[fieldName];
		if (!widget)
			widget = $j(form).find("[data-action-name='" + fieldName + "']").get(0);
		if (widget && typeof widget != 'string' && widget.length && widget.tagName != "SELECT") {
			for (var i = 0; i < widget.length; i++) {
				if (widget[i].checked)
					return widget[i];
				else if (widget[i].id == fieldName && widget[i].tagName == "INPUT" && widget[i].type != 'radio')
					return widget[i];
			}
			var wt = widget[0].type;
			if (typeof wt != 'undefined' && wt == 'radio')
				return widget[0];
		}
		return widget;
	},
	_tryLabelRow: function(fieldName) {
		var element = this._tryLabelRowElement(fieldName);
		if(element)
			return element.innerText || element.textContent;
		return null;
	},
	_tryLabelRowElement: function(fieldName) {
		var id = "label_" + fieldName;
		var row = gel(id);
		if (row) {
			var child = row.firstChild;
			if (child) {
				return child;
			}
		}
		return null;
	},
	getLabelOf : function(fieldName) {
		var fieldid = this.tableName + '.' + fieldName;
		var widgetLabel = this.getLabel(fieldid);
		var labelContent = "";
		if (widgetLabel) {
			labelContent = $j(widgetLabel).find('.label-text').text()
					|| widgetLabel.innerText
					|| widgetLabel.textContent;
			if (labelContent.indexOf('*') == 0
					&& document.documentElement.getAttribute('data-doctype') == 'true')
				labelContent = labelContent.toString().substring(1);
			if ((labelContent.lastIndexOf(":") + 1) == labelContent.length)
				labelContent = labelContent.toString().substring(0, (labelContent.length - 1));
		}
		if (labelContent == null || labelContent == '')
			labelContent = this._tryLabelRow(fieldName);
		if (labelContent == null || labelContent == '') {
			var handler = this.getPrefixHandler(this.resolvePrettyNameMap(fieldName));
			if(handler)
				labelContent = handler.getObject().getLabelOf(fieldName);
			else
				labelContent = fieldName;
		}
		
		return labelContent.trim();
	},
	setLabelOf: function(fieldName, value) {
		var control = g_form.getControl(fieldName);
		var setLabelOfSomething = false;
		if (this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].setLabelOf == "function"))
			setLabelOfSomething = this.elementHandlers[control.id].setLabelOf(value);
		var labelEl = this._getLabelEl(fieldName);
		if (labelEl) {
			$j(labelEl).find('.label-text').text(value);
			setLabelOfSomething = true;
		}
		return setLabelOfSomething;
	},
	_getLabelEl: function(fieldName) {
		var fieldID = this.tableName + '.' + fieldName;
		var labelEl = this.getLabel(fieldID);
		if (labelEl)
			return labelEl;
		labelEl = this._tryLabelRowElement(fieldName);
		if (labelEl)
			return labelEl;
		return false;
	},
	
	_getDecorationsEl: function(field) {
		var label = (field instanceof jQuery) ? field : $j(this._getLabelEl(field));
		if (!label.length)
			return null;
		var decorations = label.find('.field_decorations');
		if(!decorations.length) {
$j('<span class="field_decorations" data-label-decorations="[]" />').prependTo(label);
			decorations = label.find('.field_decorations');
		}
		return decorations;
	},
	_getDecorations: function(fieldName) {
		var attrName = 'data-label-decorations';
		var decorations = this._getDecorationsEl(fieldName);
		if (decorations && decorations.length) {
			var raw = decorations.attr(attrName);
			var json = JSON.parse(raw);
			if(json)
				return json;
		}
		return [];
	},
	_setDecorations: function(fieldName, decorations) {
		var isArr = Array.isArray || function(obj) { return $j.type(obj) === "array"; };
		if (!isArr(decorations))
			return false;
		var attrName = 'data-label-decorations';
		var labelEl = this._getLabelEl(fieldName);
		if (labelEl) {
			var raw = JSON.stringify(decorations);
			var decorEl = this._getDecorationsEl($j(labelEl));
			decorEl.empty();
decorEl.attr(attrName, raw);
			for (var i = 0; i < decorations.length; i++) {
				var dec = decorations[i];
				var $dec = $j('<span class="field_decoration ' + dec.icon + ' ' + dec.color + '" ' +
					'title="' + dec.text + '" ' +
'data-placement="right" data-container=".touch_scroll"></span>')
				decorEl.append($dec);
				$dec.tooltip().hideFix();
			}
			return true;
		}
		return false;
	},
	addDecoration: function(field, icon, text, color) {
		text = text || '';
		color = color || '';
		var decorations = this._getDecorations(field);
		var deco = {
			icon: icon,
			text: text,
			color: color
		};
		var isDuplicate = false;
		var maxi = decorations.length;
		for (var i = 0; i < maxi; i++) {
			var dec = decorations[i];
			if (dec.icon == icon
				&& dec.text == text
				&& dec.color == color) {
				isDuplicate = true;
			}
		}
		if(!isDuplicate)
			decorations.push(deco);
		this._setDecorations(field, decorations);
	},
	removeDecoration: function(field, icon, text, color) {
		text = text || '';
		color = color || '';
		var decorations = this._getDecorations(field);
		var out = [];
		var maxi = decorations.length;
		for (var i = 0; i < maxi; i++) {
			var dec = decorations[i];
			if (!(dec.icon == icon
				&& dec.text == text
				&& dec.color == color)) {
				out.push(dec);
			}
		}
		this._setDecorations(field, out);
	},
	removeAllDecorations: function(){
		$j('.field_decorations').remove();
	},
	getSectionNames: function() {
		return g_tabs2Sections.tabNames;
	},
	setSectionDisplay: function(name, display) {
		var index = g_tabs2Sections.findTabIndexByName(name);
		if (index === -1)
			return false;
		if (display === 'true' || display === true)
			g_tabs2Sections.showTab(index);
		else
			g_tabs2Sections.hideTab(index);
		return true;
	},
	isSectionVisible: function(name) {
		var index = g_tabs2Sections.findTabIndexByName(name);
		if(index !== -1)
			return g_tabs2Sections.isVisible(index);
		return false;
	},
	activateTab: function(name) {
		var index = g_tabs2Sections.findTabIndexByName(name);
		if (index !== -1)
			return g_tabs2Sections.setActive(index);
		return false;
	},
	getTabNameForField: function(fieldName) {
		if (!g_form.hasField(fieldName))
			return null;
		var control = g_form.getControl(fieldName);
		return this._getTabNameForElement(control);
	},
	_getTabNameForElement: function(element) {
		var sectionId = $j(element).closest('[data-section-id]').attr('id');
		if (sectionId) {
			var tabIndex = g_tabs2Sections.findTabIndexByID(sectionId);
			return g_tabs2Sections.tabNames[tabIndex];
		}
		return null;
	},
	_instanceofAny: function (obj, classes) {
		if (typeof obj === "undefined" || obj === null || typeof classes === "undefined" || !Array.isArray(classes))
			return false;
		for (var i = 0, iMax = classes.length; i < iMax; i += 1) {
			var aClass = window[classes[i]];
			if (typeof aClass === "undefined")
				continue;
			var constructor = obj.constructor;
			while (constructor) {
				if (constructor === aClass)
					return true;
				constructor = constructor.parent;
			}
			if (obj instanceof aClass)
				return true;
		}
		return false;
	},
	_getVisibleControls : function(field) {
		if (!field)
			return [];
		var visibleControls = [];
		var widgets = this.getControl(field) || [];
		if (widgets.length && this._instanceofAny(widgets, ['RadioNodeList', 'HTMLCollection']))
			widgets = Array.prototype.slice.call(widgets);
		widgets = [].concat(widgets);
		widgets.forEach(function(widget) {
			var widgetType = widget.getAttribute('type');
			if (!widgetType && widget.tagName === 'INPUT')
				widgetType = 'text';
			if (widget.tagName === 'TEXTAREA' && widgetType !== 'hidden')
				visibleControls.push(widget);
			else if (typeof widgetType === 'string' && widgetType.toLowerCase() !== 'hidden')
				visibleControls.push(widget);
			else {
				var widgetDisplayBox = this.getDisplayBox(field);
				if (widgetDisplayBox)
					visibleControls.push(widgetDisplayBox);
			}
		}.bind(this));
		return visibleControls;
	},
	validate : function() {
		var fa = this.elements;
		var rc = true;
		var labels = [];
		var invalidWidgets = [];
		var errorTab = -1;
		for (var i = 0; i < fa.length; i++) {
			var ed = fa[i];
			var widgetName = this.tableName + '.' + ed.fieldName;
			var widget = this.getControl(ed.fieldName);
			if (!widget)
				continue;
			if (!this.isEditableField(ed, widget))
				continue;
			if (widget.getAttribute("validate") == "false")
				continue;
			var widgetValue = widget.value;
			var widgetType = ed.type;
			var specialType = widget.getAttribute("specialtype");
			if (specialType)
				widgetType = specialType;
			var validator = this.validators[widgetType];
			if (!validator)
				continue;
			this.hideFieldMsg(widget);
			var isValid = validator.call(this, widgetValue);
			if (isValid != null && isValid != true) {
				var widgetLabel = this.getLabelOf(ed.fieldName);
				labels.push(widgetName);
				rc = false;
				if (isValid == false || isValid == "false")
					isValid = getMessage("Invalid text");
				this.showFieldMsg(widget, isValid, 'error');
				var widgetVisibleControls = this._getVisibleControls(ed.fieldName);
				if (widgetVisibleControls.length > 0) {
					invalidWidgets.push(widgetVisibleControls);
				}
				if (g_tabs2Sections.activeTab >= 0 && errorTab !== g_tabs2Sections.activeTab) {
					var tabName = this.getTabNameForField(ed.fieldName);
					if (tabName)
						errorTab = g_tabs2Sections.findTabIndexByName(tabName);
				}
			}
		}
		if (errorTab >= 0 && errorTab !== g_tabs2Sections.activeTab)
			g_tabs2Sections.setActiveNoPreference(errorTab);
		for (var i = 0; i < labels.length; i++) {
			if(window.NOW.isUsingPolaris) {
				this.flash(labels[i], "RGB(var(--now-alert--warning--background-color,var(--now-color_alert--warning-0,244,240,191)))", 0);
			} else {
				this.flash(labels[i], "#FFFACD", 0);
			}
		}
		for (var i = 0; i < invalidWidgets.length; i++) {
			for (var j = 0; j < invalidWidgets[i].length; j++) {
				invalidWidgets[i][j].setAttribute('aria-invalid', 'true');
			}
		}
		return rc;
	},
	removeCurrentPrefix: function(id) {
		if (id){
		   if (id.indexOf('current.') == 0){
			 id = id.substring(8);
		   }
		   return id;
		}
	},
	
	removeVariablesPrefix: function(id) {
		return id && id.startsWith("variables.") ? id.substring(10) : id;
	},
	
	hasVariablesPrefix: function(id) {
		return id && id.startsWith("variables.");
	},
	isNumeric: function(internaltype) {
		if (internaltype == 'decimal')
			return true;
		if (internaltype == 'float')
			return true;
		if (internaltype == 'integer')
			return true;
		if (internaltype == 'numeric')
			return true;
		return false;
	},
	isInteger: function(internaltype) {
		if (internaltype == 'integer')
			return true;
		return false;
	},
	setTemplateValue: function(fieldName, value, displayValue) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (control)
		   control.templateValue = 'true';
		var text = "Field modified by template";
		var status = this.setValue(fieldName, value, displayValue, true);
		if (status)
			return status;
		this.addDecoration(fieldName, 'icon-success', text);
	},
	sendFeedbackOnSubmit: function (fieldName, response) {
		const genAIResponseLogID = response.logId;
		if (genAIResponseLogID) {
		  if (this.genAIModifiedFields[genAIResponseLogID])
			this.genAIModifiedFields[genAIResponseLogID].push({ fieldName, fieldValue: this.getValue(fieldName) });
		  else this.genAIModifiedFields[genAIResponseLogID] = [{ fieldName, fieldValue: this.getValue(fieldName) }];
		}
	},
	setValue : function(fieldName, value, displayValue, fromSetTemplateValue) {
var oldValue = this.getValue(fieldName);
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				handler.getObject().setValue(handler.getFieldName(),
						value, displayValue);
			return;
		} else {
			var isChoicePresent = false;
			if (control.options && control.options.length) {
				for (var i = 0; i < control.options.length; i++) {
					control.options[i].removeAttribute('selected');
					if (control.options[i].value === value)
						isChoicePresent = true;
				}
				if (!isChoicePresent && g_allow_field_dependency_for_templates && fromSetTemplateValue)
					return this._getDependentFieldErrorObject(fieldName);
			}
		}
		var previousInternalChangeValue = this._internalChange;
		this._internalChange = true;
		var response = this._setValue(fieldName, value, displayValue, true, fromSetTemplateValue);
		this._internalChange = previousInternalChangeValue;
		this._opticsInspectorLog(fieldName, oldValue);
		if (response && response.success === false)
			return response;
	},
	getNiBox: function(fieldName) {
		var niName = 'ni.' + this.tableName + '.' + fieldName;
		return gel(niName);
	},
	getDisplayBox: function(fieldName) {
		var dName, field;
		dName = 'sys_display.' + this.tableName + '.' + fieldName;
		field = gel(dName);
		if (field)
			return field;
		dName = 'sys_display.' + fieldName;
		field = gel(dName);
		if (field)
			return field;
		var handler = this.getPrefixHandler(fieldName);
		if (handler) {
			var handlerObject = handler.getObject();
			return handlerObject.getDisplayBox(handlerObject.removeCurrentPrefix(fieldName));
		}
		return;
	},
	clearValue: function(fieldName) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				control = handler.getObject().clearValue(handler.getFieldName());
		   return;
		}
		if (control.id && this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].clearValue === "function")) {
			this.elementHandlers[control.id].clearValue();
			return;
		}
		if (!control.options) {
			this.setValue(fieldName, '', '');
			return;
		}
		var opt = this._getEmptyOrDefaultOption(control.options);
		if (opt && (control.selectedIndex == -1 || control.value != opt.value))
			this.setValue(fieldName, opt.value, opt.text);
	},
	_getEmptyOrDefaultOption : function(options) {
		if (!options || options.length == 0)
			return null;
		for (i = 0; i < options.length; i++) {
			var opt = options[i];
			if (opt.value === '')
				return opt;
		}
		return options[0];
	},
	_setEmptyMandatoryFieldsVisible : function(fieldName) {
		fieldName = this._sanitizeFieldName(fieldName);
		if (!this.isMandatory(fieldName) || this._isDerivedWaiting(fieldName))
			return;
		var ge = this.getGlideUIElement(fieldName)
		if (ge && !this.isVisible(ge, this.getControl(fieldName))) {
			this.setVisible(fieldName, true);
			this.setDisplay(fieldName, true);
		}
	},
	_sanitizeFieldName : function(fieldName){
		if (fieldName){
			fieldName = this.removeCurrentPrefix(fieldName);
			fieldName = this._removeTableName(fieldName);
		}
		return fieldName;
	},
	_removeTableName : function(fieldName) {
		var tablePrefix = this.tableName + ".";
		if (fieldName && fieldName.startsWith(tablePrefix))
			return fieldName.substring(tablePrefix.length);
		return fieldName;
	},
	_setReadOnlyValue: function(fieldName, value, displayValue, control) {
		var updatedValue = value;
		var readOnlyField = gel('sys_readonly.' + control.id);
		if (readOnlyField) {
			if (g_form.getGlideUIElement(fieldName).type === 'currency') {
				var handler = new CurrencyElement(control.id, 'currency');
				var extractedValues = handler._extractCurrency(value, displayValue);
				if (extractedValues && extractedValues.withSymbolGrouping) {
					readOnlyField.value = extractedValues.withSymbolGrouping;
					updatedValue = extractedValues.type + ';' + extractedValues.amount;
				}
			} else if (readOnlyField.tagName == "SPAN") {
				var fieldType = readOnlyField.getAttribute('gsft_fieldtype');
				if (fieldType && fieldType.indexOf("html") > -1)
					readOnlyField.innerHTML = value;
				else
					readOnlyField.innerHTML = htmlEscape(value);
			} else if (displayValue && readOnlyField.tagName != "SELECT") {
				readOnlyField.value = displayValue;
			} else {
				readOnlyField.value = value;
				if (readOnlyField.tagName == "SELECT")
					$j(readOnlyField).trigger('change');
			}
		} else {
			readOnlyField = gel(control.id + "_label");
			if (readOnlyField && this.isReadOnly("", readOnlyField)) {
				displayValue = this._ensureDisplayValue(fieldName, value, displayValue);
				if (readOnlyField.tagName === 'SPAN' || readOnlyField.tagName === 'P')
					readOnlyField.innerHTML = displayValue;
				else
					readOnlyField.value = displayValue;
			}
		}
		if (readOnlyField)
			$j(readOnlyField).trigger("autosize.resize");
		return updatedValue;
	},
	_setValue: function(fieldName, value, displayValue, updateRelated, fromSetTemplateValue) {
		fieldName = this._sanitizeFieldName(fieldName);
		var control = this.getControl(fieldName);
		if (typeof control === 'undefined')
			return;
		var defaultControlValue = this._setReadOnlyValue(fieldName, value, displayValue, control);
		if (!value && value !== 0 && value !== false && !control.options)
			this._setEmptyMandatoryFieldsVisible(fieldName);
		if (control && control.id && this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].setValue == "function")) {
			this.elementHandlers[control.id].setValue(value, displayValue);
		} else if (control.options) {
			var isSelect2 = $j(control).data() && 'select2' in $j(control).data();			
			if (isSelect2)
				$j(control).select2('destroy');
			var i = this._getSelectedIndex(control, value, displayValue);
			control.selectedIndex = i;
			if (isSelect2)
				$j(control).select2().select2('val', value);
      
			if (!control.options[i].value)
				this._setEmptyMandatoryFieldsVisible(fieldName);
			onChange(this.tableName + "." + fieldName, fromSetTemplateValue, this);
		} else if (control.type == 'hidden') {
			var nibox = this.getNiBox(fieldName);
			if (nibox && nibox.type == 'checkbox') {
				if (value && value == '0')
					value = 'false';
				if (value && value == '1')
					value = 'true';
				control.value = value;
				onChange(this.tableName + "." + fieldName, false, this);
				if (value && value == 'false')
					nibox.checked = null;
				else if (value || value == 'true')
					nibox.checked = 'true';
				else
					nibox.checked = null;
				setCheckBox(nibox);
				return;
			}
			var displaybox = this.getDisplayBox(fieldName);
			if (displaybox) {
				var sel = gel("sys_select." + this.tableName + "." + fieldName);
				if (typeof(displayValue) === 'undefined' && value)
					displayValue = this._ensureDisplayValue(fieldName, value, displayValue, displaybox, fromSetTemplateValue);
				if (displayValue === "" && g_allow_field_dependency_for_templates && fromSetTemplateValue)
					return this._getDependentFieldErrorObject(fieldName);
				control.value = value != null ? value : '';
				if (typeof(displayValue) !== 'undefined') {
					displaybox.value = displayValue;
					onChange(this.tableName + "." + fieldName, fromSetTemplateValue, this);
					removeClassName(displaybox, 'ref_invalid');
					removeClassName(displaybox, 'ref_dynamic');
					displaybox.title = "";
					this._setReferenceSelect(control, sel, value, displayValue);
					refFlipImage(displaybox, control.id);
					if (updateRelated) {
						updateRelatedGivenNameAndValue(this.tableName + '.' + fieldName, value);
					}
					return;
				}
				onChange(this.tableName + "." + fieldName, fromSetTemplateValue, this);
				if (value == null || value == '')
					displayValue = '';
				displaybox.value = displayValue;
				this._setReferenceSelect(control, sel, value, displayValue);
				refFlipImage(displaybox, control.id);
				updateRelatedGivenNameAndValue(this.tableName + '.' + fieldName, value);
			} else if ($(control).hasClassName('glide_destroy_filter') || $(control).hasClassName('glideform-set-value')) {
				$j(control).val(value);
				onChange(this.tableName + "." + fieldName, false, this);
			} else {
				control.value = value;
				onChange(this.tableName + "." + fieldName, false, this);
			}
		} else {
			control.value = defaultControlValue;
			onChange(this.tableName + "." + fieldName, false, this);
		}
	},
	_setReferenceSelect: function(control, sel, value, displayValue) {
		if (control && !control.options && sel) {
			var i = this._getSelectedIndex(sel, value, displayValue);
			var $sel = $j(sel);
			sel.selectedIndex = i;
			if ($sel.data() && 'select2' in $sel.data())
				$sel.select2().select2('val', value);
		}
	},
	_getDependentFieldErrorObject : function(fieldName) {
		return {
			success: false,
message: new GwtMessage().getMessage("Value of the field <b>{0}</b> is incorrect.", fieldName)
		};
	},
	_getSelectedIndex : function(control, value, displayValue) {
		var options = control.options;
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			if (option.value == value) {
				return i;
			}
		}
		var dv = value;
		if (typeof (displayValue) != 'undefined')
			dv = displayValue;
		var newOption = new Option(dv, value);
		control.options[control.options.length] = newOption;
		return control.options.length - 1;
	},
	_ensureDisplayValue : function(fieldName, value, displayValue, displayBox, fromSetTemplateValue) {
		if (displayValue || value == null || value.toString() === '')
			return displayValue;
		var ed = this.getGlideUIElement(fieldName);
		if (!ed)
			return displayValue;
		if (ed.type != 'reference' && ed.type != 'domain_id' && ed.type != 'glide_list')
			return displayValue;
		var ga = new GlideAjax('AjaxClientHelper');
		ga.addParam('sysparm_name', 'getDisplay');
		ga.addParam('sysparm_table', ed.reference);
		ga.addParam('sysparm_value', value);
		if (displayBox !== 'undefined' && g_allow_field_dependency_for_templates && fromSetTemplateValue) {
			var dependentField = displayBox.getAttribute("data-dependent");
			var dependentFieldValue = dependentField ? g_form.getValue(dependentField) : '';
			ga.addParam('sysparm_dependent', dependentField);
			ga.addParam('sysparm_dependent_value', dependentFieldValue);
		}
		ga.getXMLWait();
		return ga.getAnswer();
	},
	getUniqueValue: function() {
		return this.getValue('sys_uniqueValue');
	},
	isDatabaseView: function() {
		var id = this.getUniqueValue();
		return id && id.indexOf('__ENC__') == 0;
	},
	getTitle: function() {
		return this.getValue('sys_titleValue');
	},
	getValue : function(fieldName) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				return handler.getObject().getValue(
						handler.getFieldName());
			return '';
		}
		return this._getValueFromControl(control);
	},
	getDisplayValue: function() {
		return this.getValue('sys_displayValue');
	},
	_getValueFromControl: function(control) {
		var value;
		if (this.elementHandlers[control.id] && (typeof this.elementHandlers[control.id].getValue == "function")) {
			value = this.elementHandlers[control.id].getValue();
		} else {
			value = control.value;
		}
		return (typeof value !== 'undefined') ? value.toString() : '';
	},
	getIntValue: function(fieldName) {
		var val = this.getValue(fieldName);
		if (!val || val.length == 0)
			return 0;
		return parseInt(formatClean(val));
	},
	getDecimalValue: function(fieldName) {
		var val = this.getValue(fieldName);
		if (!val || val.length == 0)
			return 0;
		var fc = formatClean(val);
fc = fc.replace(/,/g, '.');
		return parseFloat(fc);
	},
	getBooleanValue: function(fieldName) {
		var val = this.getValue(fieldName);
		val = val ? val + '' : val;
		if (!val || val.length == 0 || val =="false")
			return false;
		return true;
	},
	addOption: function (fieldName, choiceValue, choiceLabel, choiceIndex) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		var isSelect2 = $j(control).data() && 'select2' in $j(control).data();
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				handler.getObject().addOption(handler.getFieldName(), choiceValue, choiceLabel, choiceIndex);
			return;
		}
		
		if (isSelect2){
			if (!choiceLabel)
				choiceLabel = choiceValue;
			$j(control).select2('destroy');
			var newOption = new Option(choiceLabel, choiceValue);
			$j(control).append(newOption).trigger('change');
			$j(control).select2();
		}
		if (!control.options)
			return;
		var len = control.options.length;
		var evalLength;
		
		if (!isSelect2)
			evalLength = len
		else if (isSelect2) 
			evalLength = len - 1;
		
		for (i = 0; i < evalLength; i++) {
			if (control.options[i].text == choiceLabel) {
				return;
			}
		}
		if (choiceIndex == undefined)
choiceIndex = len;
		if (choiceIndex < 0 || choiceIndex > len)
choiceIndex = len;
		var newOption = new Option(choiceLabel, choiceValue);
		var value = choiceValue;
if (len > 0) {
value = this.getValue(fieldName);
			control.options[len] = new Option('', '');
			for (var i = len; i > choiceIndex; i--) {
				control.options[i].text = control.options[i - 1].text;
				control.options[i].value = control.options[i - 1].value;
			}
		}
		if (control.readAttribute("readonly") === "readonly") 
			newOption.disabled = true;
		control.options[choiceIndex] = newOption;
		if (isSelect2)
			control.options[len].remove();
		this.setValue(fieldName, value);
	},
	enableOption : function(control, choiceValue, choiceLabel) {
		var len = control.options.length;
		for (var i = len - 1; i >= 0; i--) {
			if (control.options[i].text == choiceLabel && control.options[i].value == choiceValue) {
				control.options[i].disabled = false;
				return true;
			}
		}
		return false;
	},
	clearOptions : function(fieldName) {
		fieldName = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(fieldName);
		if (control && !control.options) {
			var name = "sys_select." + this.tableName + "." + fieldName;
			control = gel(name);
		}
		if (!control) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				handler.getObject().clearOptions(handler.getFieldName());
			return;
		}
		if (!control.options)
			return;
		control.innerHTML = '';
	},
	getOptionControl : function(fieldName, choiceValue) {
		var noPrefix = this.removeCurrentPrefix(fieldName);
		var control = this.getControl(noPrefix);
		if (control && !control.options) {
			var name = "sys_select." + this.tableName + "." + noPrefix;
			control = gel(name);
		}
		return control;
	},
	removeOption : function(fieldName, choiceValue) {
		var control = this.getOptionControl(fieldName, choiceValue);
		if (!control)
			return;
		if (!control.options)
			return;
		var options = control.options;
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			if (option.value == choiceValue) {
				control.options[i] = null;
				break;
			}
		}
	},
	getOption : function(fieldName, choiceValue) {
		var control = this.getOptionControl(fieldName, choiceValue);
		if (!control)
			return null;
		if (!control.options)
			return null;
		var options = control.options;
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			if (option.value == choiceValue)
				return option;
		}
		return null;
	},
	removeContextItem: function(itemID) {
		for (av in contextMenus) {
			if (contextMenus[av]) {
				var menu = contextMenus[av];
				var c = menu.context;
				if (c)
					this.removeItem(menu, itemID);
			}
		}
	},
	removeItem: function(menu, itemID) {
		var items = menu.childNodes;
		for (var i = 0; i < items.length; i++) {
		var item = items[i];
			if (item.innerHTML == itemID) {
				menu.removeChild(item);
				clearNodes(item);
				break;
			}
		}
		return;
	},
	getGlideUIElement: function (fieldName) {
		fieldName = this.removeCurrentPrefix(fieldName);
		for (var i = 0; i < this.elements.length; i++) {
			var thisElement = this.elements[i];
			if (thisElement.fieldName == fieldName)
				return thisElement;
		}
	},
	getDerivedFields: function(fieldName, immediateOnly) {
		var parts = fieldName.split(".");
		parts.shift();
		fieldName = parts.join(".")+".";
		var list = new Array();
		for (var i = 0; i < this.elements.length; i++) {
			var thisElement = this.elements[i];
			if (thisElement.fieldName.indexOf(fieldName) == 0) {
				var target = thisElement.fieldName.substring(fieldName.length);
				list.push(target);
			}
		}
		if (list.length == 0)
		   return null;
		if (immediateOnly !== true)
			return list;
		list.sort(function(a, b) {
			return a.split('.').length - b.split('.').length;
		});
		list = list.filter(function(a, index, arr) {
			return !g_form._hasDerivedInBetween(a, arr);
		});
		if (list.length == 0)
			return null;
		return list;
	},
	_hasDerivedInBetween: function(derived, allDerived) {
		var levels = derived.split('.').length;
		for (var i = 0; i < allDerived.length; i++) {
			var d = allDerived[i];
			if (d === derived || d.split('.').length >= levels)
				break;
			if (derived.startsWith(d + '.'))
				return true;
		}
		return false;
	},
	_addDerivedWaiting: function(fieldName, refFieldName, isReadOnly) {
		if (!this.derivedWaiting[fieldName])
			this.derivedWaiting[fieldName] = { fieldName: fieldName, refFieldName: refFieldName, isReadOnly: isReadOnly || false };
		if (!isReadOnly)
			this._setDerivedWaitingReadonly(fieldName, true);
	},
	_isDerivedWaiting: function(fieldName) {
		var shortFieldName = this._removeTableName(fieldName);
		return (shortFieldName in this.derivedWaiting);
	},
	_removeDerivedWaiting: function(fieldName) {
		var shortFieldName = this._removeTableName(fieldName);
		if (shortFieldName in this.derivedWaiting)
			delete this.derivedWaiting[shortFieldName];
	},
	_resetDerivedField: function(fieldName) {
		if (this._isDerivedWaiting(fieldName)) {
			var shortFieldName = this._removeTableName(fieldName);
			if (!this.derivedWaiting[shortFieldName].isReadOnly)
				this._setDerivedWaitingReadonly(fieldName, false);
			this._removeDerivedWaiting(fieldName);
			CustomEvent.fire('derived_waiting_removed.' + fieldName);
		}
	},
	getReference: function(fieldName, callback) {
		var opticsContext = null;
		if (window['g_optics_inspect_handler'] && g_optics_inspect_handler.opticsContextStack.length > 0)
			opticsContext = g_optics_inspect_handler.opticsContextStack[g_optics_inspect_handler.opticsContextStack.length - 1];
		fieldName = this.removeCurrentPrefix(fieldName);
		var ed = this.getGlideUIElement(fieldName);
		if (!ed) {
			var handler = this.getPrefixHandler(fieldName);
			if (handler)
				return handler.getObject().getReference(handler.getFieldName(), callback);
			return;
		}
		if (ed.type != 'reference' && ed.type != 'domain_id')
			return;
		var value = this.getValue(fieldName);
		var gr = new GlideRecord(ed.reference);
		if (value == "") {
			if (callback)
				callback(gr);
			return gr;
		}
		if (window.g_event_handlers_localCache && !callback) {
			var cachedObj = window.g_event_handlers_localCache[fieldName];
			if (typeof cachedObj !== 'undefined' && cachedObj.sys_id === value) {
				jslog("GlideForm: getReference cache hit on " + this.getTableName() + "." + fieldName + ":" + value + ", skipped synchronous ajax call");
				return cachedObj;
			}
		}
		gr.addQuery(ed.referenceKey, value);
		if (callback) {
			var fn = function(gr) {
				gr.next();
				if (opticsContext)
					CustomEvent.fire('glide_optics_inspect_put_context', opticsContext["category"], opticsContext["name"], opticsContext["sys_id"]);
				callback(gr);
				if (opticsContext)
					CustomEvent.fire('glide_optics_inspect_pop_context');
			};
			gr.query(fn);
			return;
		} else {
			var sw = new StopWatch();
			sw.jslog("*** WARNING *** GlideForm: synchronous getReference call on " + this.getTableName() + " for " + fieldName);
			if (g_event_handlers_queryTracking) {
				gr.addAdditionalParam("sysparm_reference_query_table", this.getTableName());
				gr.addAdditionalParam("sysparm_reference_query_field", fieldName);
			}
		}
		gr.query();
		gr.next();
		return gr;
	},
	submit: function(actionName) {
		actionName = actionName || 'sysverb_update';
		var action = gel(actionName);
		if (!action)
			action = this._getLinkActionByAttribute(actionName);
		if (action)
			return gsftSubmit(action);
	},
	_getLinkActionByAttribute: function(actionName, attribute) {
		var attr = attribute || 'gsft_action_name';
		var selector = 'a[' + attr + '="' + actionName + '"]';
		var el = $j(selector);
		if (el.length === 0)
			return;
		return el[0];
	},
	save: function() {
		return this.submit('sysverb_update_and_stay');
	},
	getActionName : function() {
		var form = this.getFormElement();
		if (form) {
			var theButton = form.sys_action;
			if (theButton)
				return theButton.value;
		}
		return this.action;
	},
	getTableName: function() {
		return this.tableName;
	},
	getSections: function() {
		return $$('form span.tabs2_section span[data-header-only="false"]');
	},
	serialize: function (filterFunc) {
		var formName = this.tableName + '.do';
		if (!filterFunc)
			return Form.serialize(gel(formName)) + this._serializeDisabled();
		var elements = Form.getElements(gel(formName));
		var queryComponents = new Array();
		for (var i = 0; i < elements.length; i++) {
			if (filterFunc(elements[i])) {
				var queryComponent;
				if (elements[i].disabled)
					queryComponent = elements[i].id + '=' + encodeURIComponent(elements[i].value);
				else
					queryComponent = Form.Element.serialize(elements[i]);
				if (queryComponent)
					queryComponents.push(queryComponent);
			}
		}
		return queryComponents.join('&');
	},
	_serializeDisabled : function() {
		var n = this.disabledFields.length;
		var dfa = [];
		for (var i = 0; i < n; i++) {
			var e = this.disabledFields[i];
			if (!e.value || !e.id)
				continue;
			dfa.push(e.id + '=' + encodeURIComponent(e.value));
		}
		if (dfa.length)
			return '&' + dfa.join('&');
		return '';
	},
	serializeChanged: function() {
		var s = this.serializeTargetFields();
		var f = this.serialize(this.changedFieldsFilter.bind(this));
		if (f)
			f = "&" + f;
		return s + f;
	},
	serializeChangedAll: function() {
		var s = this.serializeTargetFields();
		var f = this.serialize(this.allChangedFieldsFilter.bind(this));
		if (f)
			f = "&" + f;
		return s + f;
	},
  	_serializeElementIfEmpty: function(key, value) {
		var obj = {};
		obj[key] = value;
		return key && value ? "&" + Object.toQueryString(obj) : "";
  	},
    
	serializeTargetFields: function() {
		var s = this._serializeElement("sys_target") || this._serializeElementIfEmpty("sys_target", this.getTableName());
		s += this._serializeElement("sys_uniqueValue");
		s += this._serializeElement("sys_row");
		s += this._serializeElement("sysparm_encoded_record");
		return s;
	},
	_serializeElement: function(id) {
		var e = gel(id);
		if (e) {
			var queryComponent = Form.Element.serialize(e);
			if (queryComponent)
				return "&" + queryComponent;
		}
		return "";
	},
	changedFieldsFilter: function(element) {
		if (element.changed
			&& element.id.startsWith(this.getTableName() + ".")
			&& (element.tagName.toUpperCase() != "TEXTAREA"))
			return true;
		if (element.id.startsWith("ni.VE") || element.id.startsWith("ni.QS")) {
			if (element.id.endsWith("read_only"))
				return false;
			return true;
		}
		if (element.name.startsWith("ni.WATERMARK"))
			return true;
		return false;
	},
	allChangedFieldsFilter: function(element) {
		if (element.changed && element.id.startsWith(this.getTableName() + "."))
			return true;
		return false;
	},
	flash: function (widgetName, color, count) {
		var row = null;
		var labels = new Array();
		var realLabel = this.getLabel(widgetName);
		if (realLabel)
			row = $(realLabel.parentNode.parentNode);
		else {
			jslog("flash() called for '" + widgetName + "' but there is no label for it")
			return;
		}
		var temp = row.select('.label_left');
		for (var i = 0; i < temp.length; i++)
			labels.push(temp[i]);
		temp = row.select('.label_right');
		for (var i = 0; i < temp.length; i++)
			labels.push(temp[i]);
		temp = row.select('.label');
		for (var i = 0; i < temp.length; i++)
			labels.push(temp[i]);
temp = row.select('.control-label');
		for (var i = 0; i < temp.length; i++)
			labels.push(temp[i]);
		count = count + 1;
		for (var i = 0; i < labels.length; i++) {
			var widget = labels[i];
			if (widget) {
				var originalColor = widget.style.backgroundColor;
				widget.style.backgroundColor = (count < 4 || isNaN(count)) ? color : '';
			}
		}
		if (count < 4)
				setTimeout('g_form.flash("' + widgetName + '", "' + originalColor + '", ' + count + ')', 500);
	},
	enable: function () {
		var form = this.getFormElement();
		if (form)
			for (var i = 0; i < form.elements.length; i++)
				form.elements[i].disabled = false;
	},
	disable: function() {
		var form = this.getFormElement();
		if (form)
			for (var i = 0; i < form.elements.length; i++)
				form.elements[i].disabled = true;
	},
	showRelatedList: function(listTableName) {
		CustomEvent.fire('related_lists.show', listTableName);
	},
	hideRelatedList: function(listTableName) {
		CustomEvent.fire('related_lists.hide', listTableName);
	},
	getRelatedListNames: function() {
		if (window.NOW.g_relatedLists)
			return window.NOW.g_relatedLists.lists;
		if (window.g_tabs2List) {
			var relatedListNames = [];
			var trimmedNames = g_tabs2List.tabIDs;
			for (var i = 0; i < trimmedNames.length; i++) 
				relatedListNames.push(trimmedNames[i].split('.').slice(1).join('.'));
			return relatedListNames;
		}
		var listWrapper = gel("related_lists_wrapper");
		if (!listWrapper)
			return [];
		var forthcomingTabs = listWrapper.getAttribute('data-lists');
		if (!forthcomingTabs)
			return [];
		return forthcomingTabs.split(',');
	},
	_getRelatedListID: function(listTableName) {
		var relatedList = this.findV2RelatedListName(listTableName);
		var relatedListId;
if (relatedList)
			relatedListId = relatedList.getAttribute("id");
		if (!relatedListId)
			relatedListId = this.getTableName() + "." + listTableName;
		return relatedListId;
	},
	findV2RelatedListName : function(listTableName) {
		var tableName = this.getTableName();
		var compareId = tableName + "." + listTableName;
		var rlw = gel("related_lists_wrapper");
		if (!rlw)
			return "";
		for (var i = 0; i < rlw.childNodes.length; i++) {
			var node = rlw.childNodes[i];
			if (node.nodeName != "DIV")
				continue;
			var idName = node.getAttribute("id");
			if (idName.length == 0)
				continue;
			if (idName.indexOf(compareId) > -1)
				return node;
		}
		if (typeof GlideLists2 == "undefined")
			return;
		for ( var id in GlideLists2) {
			var list = GlideLists2[id];
			if (list.getTableName() == listTableName && list.getParentTable() == tableName)
				return list.getContainer();
		}
		return "";
	},
	showRelatedLists : function() {
		var listNames = g_form.getRelatedListNames();
		for (var i = 0; i < listNames.length; i++) {
			this.showRelatedList(listNames[i]);
		}
	},
	hideRelatedLists : function() {
		var listNames = g_form.getRelatedListNames();
		for (var i = 0; i < listNames.length; i++) {
			this.hideRelatedList(listNames[i]);
		}
	},
	addInfoMessage: function(msg, id) {
		this._addFormMessage(msg, "info", id);
	},
	addWarningMessage: function(msg, id) {
		this._addFormMessage(msg, "warning", id);
	},
	addErrorMessage: function(msg, id) {
		this._addFormMessage(msg, "error", id);
	},
	addSuggestionMessage: function(msg, id) {
		this._addFormMessage(msg, 'suggestion', id)
	},
	addFormMessage: function(msg, type) {
		if (type !== 'error' && type !== 'warning' && type !== 'suggestion')
			type = 'info';
		this._addFormMessage(msg, type);
	},
	
	_addFormMessage: function(msg, type, id) {
		var scrollToMsg = gel("ni.escape_form_message");
		if (scrollToMsg && scrollToMsg.value === 'true')
			msg = htmlEscape(msg);
		GlideUI.get().addOutputMessage({msg: msg, type: type, id: id, preventDuplicates: true});
		var scrollDiv = getFormContentParent();
		scrollDiv.scrollTop = 0;
		window.GlideUXMetrics && GlideUXMetrics.track('Form Alerts', {name : msg, type: type});
	},
	clearMessages: function() {
		GlideUI.get().clearOutputMessages();
	},
showFieldMsg: function(input, message, type,  scrollForm, key) {
		var msgClass;
		var msgImage;
		var msgImageAlt;
		var msgRowType;
		switch(type) {
			case "info":
				msgClass = this.INFO_CLASS;
				msgRowType = 'info' + this.MSG_ROW;
				break;
			case "error":
				msgClass = this.ERROR_CLASS;
				msgRowType = 'error' + this.MSG_ROW;
				break;
			case "warning":
				msgClass = this.WARNING_CLASS;
				msgRowType = 'warning' + this.MSG_ROW;
				break;
			default:
				type = 'info';
				msgClass = this.INFO_CLASS;
				msgRowType = 'info' + this.MSG_ROW;
				break;
		}
		var inputElement = input;
if (typeof(inputElement)=="string")
		   inputElement = this.getControl(inputElement);
		if (!inputElement) {
			var handler = this.getPrefixHandler(input);
			if (handler) {
				var handlerObject = handler.getObject();
				var fieldName = handler.getFieldName();
				var actualName = handlerObject.getActualName(fieldName);
				inputElement = handlerObject.getControl(actualName);
			}
		}
		if (!inputElement || !message) {
			jslog("ERROR: invalid field or missing message passed to g_form.showFieldMsg('" + input + "','" + message + "')");
			return;
		}
		if (inputElement.id && this.elementHandlers[inputElement.id] && (typeof this.elementHandlers[inputElement.id].showFieldMsg == "function"))
			this.elementHandlers[inputElement.id].showFieldMsg(input, message, type);
		var positionedCursor = this._positionCursorAtError(inputElement, message);
		var fieldRowId = "element." + inputElement.id;
		var fieldRow = document.getElementById(fieldRowId);
		var doc;
		var isVariable = false;
		var variableMsgRow = null;
		if (!fieldRow) {
			var parent = inputElement.parentNode;
			while (parent != null) {
				if (parent.nodeName.toUpperCase() == 'TR') {	
					fieldRow = parent;
					isVariable = true;
					break;
				}	
				parent = parent.parentNode;
			}
		}
		if (!fieldRow) {
			jslog("Error adding field message. Couldn't find the row to add the field message to.");
			return;
		}
		doc = fieldRow.ownerDocument;
		var inputContainer = inputElement.up('.form-field');
		if (!inputContainer)
			inputContainer = inputElement.up();
		var fieldMsgContainer = inputContainer.down('.fieldmsg-container');
		if (!fieldMsgContainer) {
			fieldMsgContainer = doc.createElement('div');
			fieldMsgContainer.className = 'fieldmsg-container';
			if (isVariable)
				fieldMsgContainer.className = 'variable-field-msg';
			fieldMsgContainer.id = inputElement.id + '_fieldmsg';
			fieldMsgContainer.setAttribute('aria-live', 'polite');
			inputContainer.insert(fieldMsgContainer);
			inputElement.setAttribute('aria-describedby', fieldMsgContainer.id);
			if (inputElement.getAttribute('data-type') === 'glide_element_date_time') {
				var inputSibling = inputElement.siblings(inputElement.id + '_date_field_msg');
				if(inputSibling.length > 0){
					inputSibling[0].setAttribute('aria-describedby', fieldMsgContainer.id);
				}
				var buttonGroupSiblings = inputElement.siblings('.input-group-btn');
				if (buttonGroupSiblings.length > 0) {
					var buttonGroup = buttonGroupSiblings[0];
					var button = buttonGroup.querySelector('.date_time_trigger');
					if (button) {
						button.setAttribute('aria-describedby', fieldMsgContainer.id);
					}
				}
			}
		}
		var fieldMsgRow = doc.createElement('DIV');
		fieldMsgRow.className = msgClass;
		fieldMsgRow.hasFieldmsg = true;
		if (key)
			fieldMsgRow.setAttribute('data-fieldmsg-key', inputElement.id + '_fieldmsg_' + key);
		var fieldmsgMsg = doc.createTextNode(message);
		fieldMsgRow.appendChild(fieldmsgMsg);
		
		fieldMsgContainer.insert(fieldMsgRow);
		if (!fieldRow.visible() && fieldRow.getAttribute("data-type") == "journal_input") {
			var multipleInput = $("multiple-input-journal-entry");
			if (multipleInput && multipleInput.visible())
				fieldRow = $j("#multiple-input-journal-entry textarea")[0];
			else
				fieldRow = $("activity-stream-textarea");
		}
if (!positionedCursor)
			this._scrollToElementTR(fieldRow, fieldMsgRow, scrollForm);
		_frameChanged();
	},
	_scrollToElementTR: function(labelTR, msgTR, scrollForm) {
		var scroll = scrollForm;
		if (typeof scroll == "undefined") {
			var scrollToMsg = gel("ni.scroll_to_messsage_field");
			if (scrollToMsg == null)
				scroll = true;
			else {
				if (scrollToMsg.value != "false")
					scroll = true;
				else
					scroll = false;
			}
		}
		if (!scroll)
			return;
		var scrollDiv = getFormContentParent();
		var refControl = gel("sys_target");
		var ref;
		var titleDiv;
		if (refControl != null) {
			ref = refControl.value;
			titleDiv = gel(ref + ".form_header");
		} else {
			titleDiv = gel("form_header");
		}
		var headerHeight = 0;
		if (titleDiv && titleDiv.clientHeight)
			headerHeight = titleDiv.clientHeight;
		var topOfLabel = grabOffsetTop(labelTR);
		var needToScroll = false;
		if (topOfLabel > scrollDiv.scrollTop + scrollDiv.clientHeight)
needToScroll = true;
		else if (topOfLabel < scrollDiv.scrollTop + headerHeight)
needToScroll = true;
else {
			var topOfMsg = grabOffsetTop(msgTR);
			if (topOfMsg > scrollDiv.scrollTop + scrollDiv.clientHeight)
				needToScroll = true;
		}
		if (!needToScroll)
			return;
		var scrollTopSetting = topOfLabel - headerHeight;
		if (scrollDiv.id)
			setTimeout("$('" + scrollDiv.id + "').scrollTop = " + scrollTopSetting, 100);
		else
			scrollDiv.scrollTop = scrollTopSetting;
	},
showErrorBox: function(input, message,  scrollForm) {
		this.showFieldMsg(input, message, "error", scrollForm);
	},
	hideFieldMsg: function(input, clearAll, key) {
		var inputElement = input;
if (typeof(inputElement) == "string")
		   inputElement = this.getControl(inputElement);
		
		if (!inputElement) {
			var handler = this.getPrefixHandler(input);
			if (handler) {
				var handlerObject = handler.getObject();
				var fieldName = handler.getFieldName();
				var actualName = handlerObject.getActualName(fieldName);
				inputElement = handlerObject.getControl(actualName);
			}
		}
		
		if (!inputElement) {
			jslog("ERROR: invalid field ('" + input + "') passed to g_form.hideFieldMsg");
			return;
		}
		if (inputElement.id && this.elementHandlers[inputElement.id] && (typeof this.elementHandlers[inputElement.id].hideFieldMsg == "function"))
			this.elementHandlers[inputElement.id].hideFieldMsg(input, clearAll);
		var fieldTrId = "element." + inputElement.id;
		var tr = document.getElementById(fieldTrId);
		if (!tr) {
			var parent = inputElement.up("div.form-field.input_controls");
			if (!parent)
				parent = inputElement.up("td");
			if (parent) {
				var msgs = $(parent).select(".variable-field-msg");
				if (msgs)
					for (var i = 0; i < msgs.length; i++) {
						try {
							parent.removeChild(msgs[i]);}
						catch (err){
							msgs[i].parentNode.removeChild(msgs[i]);}
						if (!clearAll)
							return;
					}
			}
		}
		if (tr == null)
			return;
		var msgContainer = tr.down('.fieldmsg-container');
		if (!msgContainer)
			return;
		if (clearAll)
			msgContainer.update('');
		else {
			var selector;
			if (key)
				selector = '[data-fieldmsg-key="' + inputElement.id + '_fieldmsg_' + key + '"]';
			else
				selector = '.fieldmsg';
			var messages = msgContainer.select(selector);
			if (messages[0])
				messages[0].remove();
		}
	},
	hasFieldMsgs: function(type) {
		var formHasFieldMsgs = false;
		if (type) {
			var msgTRs = $(document.body).select('.fieldmsg.notification-' + type);
			formHasFieldMsgs = msgTRs.length > 0;
		}
		else {
			var msgTRs = $(document.body).select('.fieldmsg');
			formHasFieldMsgs = msgTRs.length > 0;
		}
		return formHasFieldMsgs;
	},
	hideAllFieldMsgs: function(type) {
		if (type) {
			var msgTRs = $(document.body).select('.fieldmsg.notification-' + type);
			for (var i = 0; i < msgTRs.length;i++) {
				msgTRs[i].parentNode.removeChild(msgTRs[i]);
			}
		}
		else {
			var msgTRs = $(document.body).select('.fieldmsg');
			for (var i = 0; i < msgTRs.length;i++) {
				msgTRs[i].parentNode.removeChild(msgTRs[i]);
			}
		}
		CustomEvent.fire('sn.form.hide_all_field_msg', type);
	},
	hideErrorBox: function(input) {
		this.hideFieldMsg(input);
	},
	setStreamJournalFieldsDisplay: function(show) {
		CustomEvent.fire('sn.stream.change_input_display', this.getTableName(), show);
		CustomEvent.fire('sn.form.change_input_display', !show);
	},
	_positionCursorAtError: function(elem, message) {
		if (typeof elem == "undefined" || elem.disabled)
			return false;
		var index = message.indexOf("line (");
		if (index > -1) {
			var parenIndex = message.indexOf(")", index+6);
			if (parenIndex > -1) {
				var lineNo = message.substring(index + 6, parenIndex);
				lineNo = parseInt(lineNo, 10);
				index = message.indexOf("(", parenIndex);
				if (index > -1) {
					parenIndex = message.indexOf(")", index);
					if (parenIndex > -1) {
						var columnNo = message.substring(index + 1, parenIndex);
						columnNo = parseInt(columnNo, 10);
						return this._setCaretPositionLineColumn(elem, lineNo, columnNo);
					}
				} else
					return this._setCaretPositionLineColumn(elem, lineNo, 1);
			}
		}
		return false;
	},
	_setCaretPositionLineColumn: function(elem, lineNo, columnNo) {
		var pl = 1;
		var data = elem.value;
		var len = data.length;
		var position = 0;
		while (pl < lineNo && position > -1) {
			position = data.indexOf('\n', position);
			if (position > -1)
				position++;
			pl++;
		}
		if (position == -1) {
			jslog("Failed to find editor caret position for error");
return false;
		}
		position += columnNo - 1;
		if (elem.createTextRange)
position -= lineNo - 1;
		try {
			this._setCaretPosition(elem, position);
		} catch (err) {
			jslog("Failed to position cursor at the error");
			return false;
		}
		return true;
	},
	_setCaretPosition: function(elem, caretPos) {
if (elem.createTextRange) {
			var range = elem.createTextRange();
			range.move('character', caretPos);
			range.select();
		} else {
if (elem.setSelectionRange) {
				if (caretPos == 0)
					caretPos = 1;
				elem.setSelectionRange(caretPos, caretPos + 1);
if (isSafari || isChrome)
					elem.focus();
else {
					var ev = document.createEvent("KeyEvents");
					ev.initKeyEvent("keypress", true, true, window, false, false, false, false, 0, elem.value.charCodeAt(caretPos - 1));
					elem.dispatchEvent(ev);
					elem.focus();
				}
			} else
				elem.focus();
		}
	},
	disableAttachments: function() {
		var icon = gel("header_add_attachment");
		if (icon)
			icon.style.display = 'none';
		AttachmentUploader.disableAttachments();
	},
	enableAttachments: function() {
		var icon = gel("header_add_attachment");
		if (icon)
			icon.style.display = '';
		AttachmentUploader.enableAttachments();
	},
	hasField: function(fieldName) {
		return !!this.getControl(fieldName);
	},
	setAction: function(action) {
		this.action = action;
	},
	getAction: function() {
		return this.action;
	},
	
	setScope: function(scope) {
		this.scope = scope;
	},
	
	getScope: function() {
		return this.scope;
	},
	setLiveUpdating: function(isLiveUpdating) {
		this._isLiveUpdating = isLiveUpdating;
	},
	isLiveUpdating: function() {
		return this._isLiveUpdating;
	},
	setLiveUpdateOriginalValue: function(fieldName, value, displayValue) {
		var element = this.getElement(fieldName);
		if (!element)
			return;
		if (this.elementHandlers[element.id] && (typeof this.elementHandlers[element.id].setLiveUpdateOriginalValue == "function"))
			return this.elementHandlers[element.id].setLiveUpdateOriginalValue(value, displayValue);
		var widgetName = "sys_original." + element.id;
		var widget = gel(widgetName);
		if (widget)
			widget.value = value;
		var originalDisplay = gel('sys_display.original.' + element.id);
		if (originalDisplay)
			originalDisplay.value = displayValue;
	},
	_opticsInspectorLog: function(fieldName, oldValue){
		var value = this.getValue(fieldName);
		opticsLog(this.tableName, fieldName, "Value changed from "
				+ (oldValue ? oldValue : "(empty)") + " to "
				+ (value ? value : "(empty)"), oldValue, value);
	},
	insertContentAtCursor: function(fieldName, content) {
		var element = this.getElement(fieldName);
		if (!element)
			return;
		if (this.elementHandlers[element.id] && (typeof this.elementHandlers[element.id].insertContentAtCursor == "function"))
			return this.elementHandlers[element.id].insertContentAtCursor(content);
		var cursorLocation = element.selectionStart;
		if (!cursorLocation)
			cursorLocation = 0;
		var originalContent = this.getValue(fieldName);
		if (typeof originalContent == 'string') {
			var newContent = originalContent.substr(0, cursorLocation) + content + originalContent.substr(cursorLocation);
			this.setValue(fieldName, newContent);
		}
	},
 	onUserChangeValue: function(handler) {
 		if (this._onUserChangedHandlers != null && this._onUserChangedHandlers.indexOf(handler) === -1)
 			this._onUserChangedHandlers.push(handler);
 		var gf = this;
 		return function() { 	
 			var index = gf._onUserChangedHandlers.indexOf(handler);	
 			if (index > -1)	
 				gf._onUserChangedHandlers.splice(index, 1);	
 		};	
 	},
	type: "GlideForm"
});
var GlideFormPrefixHandler = Class.create({
	initialize: function (handlerObject) {
		this.handlerObject = handlerObject;
		this.fieldName = "";
	},
	getObject: function() {
		return this.handlerObject;
	},
	getFieldName: function() {
		return this.fieldName;
	},
	setFieldName: function(id) {
		this.fieldName = id;
	},
	type: "GlideFormPrefixHandler"
});
;
/*! RESOURCE: /scripts/doctype/GwtContextMenu.js */
var gActiveContext;
var contextMenus = new Object();
var shortcuts = new Object();
var sanitizeText = /[^a-zA-Z0-9_ ]/g;
var GwtContextMenu = Class.create({
SUBMENU_INDICATOR: "<i class='icon-chevron-right context_submenu_indicator'/>",
CHECKED_IMAGE_PATH: "images/checked.pngx",
    CHECKED_ICON_CLASSES: ['icon-check','selected_item'],
    initialize: function(id, useBodyAsParent) {
        this.timeout = null;
        this.properties = new Object();
        this.setID(id);
        this.getMenu();
        this.onshow = null;
        this.onhide = null;
        this.beforehide = null;
        this.docRoot = this._getDocRoot();
        this.hasItems = false;
        this.hideOnlySelf = false;
	    this.trackSelected = false;
	    if (typeof useBodyAsParent == "undefined")
	        useBodyAsParent = false;
	    this._getParentElement(useBodyAsParent);
	    this.opener = undefined;
    },
    isEmpty: function() {
        return !this.hasItems;
    },
    _getParentElement: function(useBodyAsParent) {
        if (useBodyAsParent) {
            this.parentElement = document.body;
            return;
        }
        this.parentElement = getFormContentParent();
    },
    _getDocRoot: function() {
var docRoot = window.location.protocol + "//" + window.location.host;
if (window.location.pathname.indexOf("/") > -1) {
            var fp = window.location.pathname;
fp = fp.substring(0, fp.lastIndexOf("/"));
if (fp.substring(0, 1).indexOf("/") != -1)
                docRoot = docRoot + fp;
            else
docRoot = docRoot + "/" + fp;
        }
docRoot += "/";
        return docRoot;
    },
    add: function(label, id, keys) {
        this.hasItems = true;
        var m = this.getMenu();
        var d = document.createElement("div");
        d.setAttribute("item_id", id);
		if (g_accessibility === true) {
			d.className = "context_item default-focus-outline";
		} else {
			d.className = "context_item";
		}
        d.isMenuItem = true;
        d.setAttribute('role', 'menuitem');
        d.setAttribute('tabindex', '-1');
        var l = !keys ? label : (label + ' (' + keys + ')');
        d.innerHTML = l;
        if(keys)
        	d.setAttribute("data-label", label);
        m.appendChild(d);
        return d;
    },
    addHref: function(label, href, img, title, id, keys) {
        keys = this.addKeyShortcut(keys, href);
        var d = this.add(label, id, keys);
        d.setAttribute("href", href);
        if (title && title != null) {
            d.setAttribute("title", title);
d.addClassName("accessibility_no_tooltip");
		}
        this.setImage(d, img);
        return d;
    },
    addFunc: function(label, func, id) {
        var d = this.add(label, id);
        d.setAttribute("func_set", "true");
        d.func = func;
        return d;
    },
    addURL: function(label, url, target, id) {
        var d = this.add(label, id);
        url = this._updateURL(d, label, url);
        d.setAttribute("url", url);
        if (target)
            d.setAttribute("target", target);
        return d;
    },
    addHrefNoSort: function(label, href, id) {
        var item = this.addHref(label, href, null, null, id);
        item.setAttribute("not_sortable", "true");
        return item;
    },
    addHrefNoFilter: function(label, href, id) {
        var item = this.addHref(label, href, null, null, id);
        item.setAttribute("not_filterable", "true");
        return item;
    },
    addMenu: function(label, menu, id) {
        var item = this.add(label + this.SUBMENU_INDICATOR, id);
        item.setAttribute("aria-haspopup", "true");
        item.setAttribute("aria-controls", menu.id);
        item.setAttribute("label", "true");
        item.setAttribute("data-context-menu-label", label);
        menu.setParent(this);
        item.subMenu = menu;
        return item;
    },
    addAction: function(label, action, id) {
        return this.addHref(label, "contextAction('" + this.getTableName() + "', '" + action + "')", null, null, id);
    },
    addConfirmedAction: function(label, action, id) {
        return this.addHref(label, "contextConfirm('" + this.getTableName() + "', '" + action + "')", null, null, id);
    },
    addLine: function() {
        this.hasItems = true;
        var m = this.getMenu();
        var d = document.createElement("div");
        d.className = "context_item_hr";
        d.isMenuItem = true;
        d.disabled = "disabled";
        m.appendChild(d);
        return d;
    },
    addLabel: function(label, id) {
        var m = this.getMenu();
        var d = document.createElement("div");
        d.setAttribute("item_id", id);
        d.className = "context_item";
        d.isMenuItem = true;
        d.innerHTML = label;
        d.disabled = "disabled";
        m.appendChild(d);
        return d;
    },
    addKeyShortcut: function(keys, href) {
    	var topWindow = getTopWindow();
    	var keyboardEnabled = topWindow.com && topWindow.com.glide && topWindow.com.glide.ui && topWindow.com.glide.ui.keyboard;
        if(!keyboardEnabled)
        	return null;
    	if(!keys)
    		return keys;
        if(shortcuts[keys])
        	return keys;
        shortcuts[keys] = {};
        var callback = function(e) {
        	var start = e.data.href.indexOf('javascript:') == 0 ? 11 : 0;
        	var startParen = e.data.href.indexOf('(');
        	var functionName = startParen > start ? e.data.href.substring(start, startParen) : {};
        	var func = eval(functionName);
        	if(typeof func == 'function')
        		eval(e.data.href);
        	else
        		document.location.href = e.data.href;
        };
		addLoadEvent(function() {
			var keyboard = getTopWindow().com.glide.ui.keyboard;
			var isMainFrame = window.frameElement.id == keyboard.mainFrame;
			var isFormFrame = window.frameElement.id == keyboard.formFrame;
if(isMainFrame)
				shortcuts[keys] = keyboard.bind(keys, callback, {href:href}).global(keyboard.formFrame);
else if(isFormFrame)
				shortcuts[keys] = keyboard.bind(keys, callback, {href:href}).formFrame();
else
				shortcuts[keys] = null;
		});
		return keys;
    },
    getItem: function(itemId) {
        var items = this.getMenu().getElementsByTagName("div");
        for (var i = 0; i < items.length; i++) {
            var item = items[i];
            if (item.getAttribute("item_id") == itemId)
                return item;
        }
        return null;
    },
    setImage: function(item, img) {
        if (item && img) {
            var imageIsCheckmark = img === this.CHECKED_IMAGE_PATH;
            if (imageIsCheckmark) {
                this.setCheckedIcon(item);
                var selectedText = item.innerText || item.textContent;
                var ariaLabel = getMessage('Currently selected: ') + selectedText;
                item.setAttribute('aria-label', ariaLabel);
            } else {
                item.style.backgroundImage = "url(" + this.docRoot + img + ")";
                item.style.backgroundRepeat = "no-repeat";
            }
        }
    },
    setChecked: function(item) {
        if (item)
            this.setImage(item, this.CHECKED_IMAGE_PATH);
    },
    _generateCheckElement: function() {
        var classNames = this.CHECKED_ICON_CLASSES.join(' ');
        var checkElem = document.createElement("div");
        checkElem.setAttribute("class", classNames);
        return checkElem;
    },
    setCheckedIcon: function(item) {
        if (item) {
            var checkElem = this._generateCheckElement();
            item.appendChild(checkElem);
        }
    },
    clearImage: function(item) {
        if (item) {
            item.style.backgroundImage = "";
            item.style.backgroundRepeat = "";
            item.setAttribute('aria-label', '');
        }
    },
    clearCheckedIcon: function(item) {
        if (item) {
            var classNames = this.CHECKED_ICON_CLASSES.map(function(className) {return '.' + className}).join('');
            var checkedIcon = item.querySelector(classNames);
            if (checkedIcon)
                checkedIcon.remove();
        }
    },
    setDisabled: function(item) {
        if (!item)
            return;
        this._dullItem(item);
    },
    setEnabled: function(item) {
        if (!item)
            return;
        this._undullItem(item);
    },
    setHidden : function(item) {
        if (!item)
            return;
        this._hideItem(item);
    },
    setVisible : function(item) {
        if (!item)
            return;
        this._showItem(item);
    },
    setLabel: function(item, label) {
        if (item)
            item.innerHTML = label;
    },
    setHideOnlySelf: function(hideSelf) {
        this.hideOnlySelf = hideSelf;
    },
    clearSelected: function() {
        var items = this.getMenu().getElementsByTagName("div");
        for (var i = 0; i < items.length; i++) {
            var item = items[i];
            this.clearImage(item);
            this.clearCheckedIcon(item);
        }
    },
    clear: function() {
        var m = this.getMenu();
        clearNodes(m);
        this._setMinWidth();
        this.hasItems = false;
    },
    destroy: function() {
        this.parentElement = null;
        this.menu.context = null;
        this.menu.onmouseover = null;
        this.menu.onmouseout = null;
        this.menu.onclick = null;
        if (isMSIE)
            this.menu.outerHTML = null;
        this.parentMenu = null;
        this.onshow = null;
        this.onhide = null;
        this.properties = null;
        this.timeout = null;
        this.menu = null;
    },
    display: function(e) {
        if (!this.getParent())
            CustomEvent.fireAll('body_clicked', null);
        menuSort = true;
        this._dullMenu();
        this._toggleMenuItems("not_sortable", this.getProperty('sortable'));
        this._toggleMenuItems("not_filterable", this.getProperty('filterable'));
        this.setFiringObject(this._getElement(e));
        e = this._getRealEvent(e);
        this.opener = this._getOpener(e);
        var menu = this.getMenu();
        if (this.opener.hasAttribute('data-context-menu-label'))
            menu.setAttribute('aria-label', this.opener.getAttribute('data-context-menu-label'));
        if (this._isEmpty(menu))
            return;
        menu.style.left = "0";
        menu.style.top = "0";
        this.parentElement.appendChild(menu);
        this.opener && this.opener.setAttribute("aria-expanded", "true");
        if (this.getProperty("top") > 0 && ((this.getProperty("left") > 0) || (this.getProperty("right") > 0))) {
            menu.style.visibility = 'hidden';
            menu.style.display = 'block';
            this.moveMenuToXY(e, this.getProperty("left"), this.getProperty("top"), this.getProperty("right"));
        } else if (this.getParent()) {
            var x = this._getElement(e);
            menu.style.visibility = 'hidden';
            menu.style.display = 'block';
            this.moveMenuToParent(e, x);
        } else {
            var x = this._getElement(e);
            menu.style.visibility = 'hidden';
            menu.style.display = 'block';
            this.moveMenuToCursor(e);
        }
        gActiveContext = this;
        showObject(menu);
        this._focusFirstItem(menu);
    },
	hide : function(openModal) {
		gActiveContext = "";
		hideObject(this.getMenu());
		if (this.getMenu().parentNode)
			this.getMenu().parentNode.removeChild(this.getMenu());
		this.opener && this.opener.setAttribute("aria-expanded", "false");
		if (this.onhide)
			this.onhide();
		var firingObj = this.getFiringObject();
		if (firingObj) {
if (firingObj.tagName == 'I')
				this._toggleFocusLock(true);
if (!openModal)
				firingObj.focus();
		}
		CustomEvent.fire('refresh.event');
	},
	hideAll : function() {
		var m = this;
		while (m) {
			m.hide(m.parentElement.hasClassName("modal-open"));
			m = m.getParent();
		}
		this.opener && this.opener.setAttribute("aria-expanded", "false");
	},
    isListMenuGroupBy: function (x) {
return x.getAttribute("item_id") === "ab83ca6d0ad337020037c078040600bc";
    },
    isCreateFavorite: function(x) {
return x.getAttribute("item_id").includes('create_favorite');
    },
    isRefresh: function(x) {
return x.getAttribute("item_id").includes("216ac28a0a0a0bb200af43eb879c30ae");
    },
    isShowRecordCount: function() {
return this.id.includes('385356ad0a0a0b7c00b3d75ea03e5eb4');
    },
    isGroupBy: function() {
return this.id.includes('b16a5dbe0a0a0bbb00043b7b284050b6');
    },
    isFilter: function() {
return this.id.includes('b17a69630a0a0bbb00f2601a9fa1e2da');
    },
    isView: function() {
return this.id.includes('b169dd7f0a0a0bbb0062fb97a5ea1e1c');
    },
    _trackRunListActionMetrics(x) {
        var list = window.list;
        if (!list)
            return;
        var options = this._getHardCodedListTitleActions(x);
        if (options) {
            options.path = this._getMenuPathForUxMetrics();
            GlideListUxMetricsUtils.track('Run List Action', list, options);
            return;
        }
        var menuData = this._getTopmostMenuData();
        var topmostMenuOpener = menuData.opener;
        var topmostMenuId = menuData.id;
        options = {
            path: this._getMenuPathForUxMetrics(),
            actionName: x && x.innerText.replace(sanitizeText, '')
        }
        if (topmostMenuId.includes('context_list_row')) {
            var columnIndex = topmostMenuOpener.closest('td').cellIndex;
            options.contextMenuType = 'row';
            options.selectedSysId = topmostMenuOpener.closest('tr').getAttribute('sys_id');
            options.fieldName = list.fieldNames[columnIndex];
        }
        else if (topmostMenuId.includes('context_list_title')) {
            options.contextMenuType = "title"
        }
        else if (topmostMenuId.includes('context_list_header')) {
            var columnHeader = topmostMenuOpener.closest('th');
            options.contextMenuType = 'header';
            options.columnName = columnHeader.getAttribute('glide_label');
            options.fieldName = columnHeader.getAttribute('name');
            options.fieldType = columnHeader.getAttribute('glide_type');
        }
        else {
            return;
        }
        GlideListUxMetricsUtils.track('Run List Action', list, options);
    },
    _getHardCodedListTitleActions(x) {
        if (!x)
            return;
        var actionName, actionData;
        var itemId =  x.getAttribute('item_id');
        if (this.isCreateFavorite(x)) {
            actionName = 'UI16 Create Favorite';
        } else if (this.isRefresh(x)) {
            actionName = 'Refresh List';
        } else if (this.isShowRecordCount()) {
            actionName = 'Show Rows Per Page';
            actionData = {
                numRows: itemId
            };
        } else if (this.isGroupBy()) {
            actionName = 'Select Group By';
            actionData = {
                columnName: itemId
            };
        } else if (this.isFilter()) {
            actionName = 'Select List Filter';
            actionData = {
                filterQuery: itemId
            };
        } else if (this.isView()) {
            actionName = 'Select List View';
            actionData = {
                listViewName: x && x.innerText.replace(sanitizeText, '') || ''
            };
        } else {
            return;
        }
        return {
            actionName,
            actionData
        };
    },
    execute: function(e) {
        var x = this._getElement(e);
        var ariaDisabled = x.getAttribute('aria-disabled');
        if (x.isMenuItem && !x.disabled && (!ariaDisabled || ariaDisabled == 'false')) {
        	if (x.getAttribute("label") == "true") {
                this._getRealEvent(e).cancelBubble = true;
                return;
            }
            this._trackRunListActionMetrics(x);
            if (x.getAttribute("target")) {
              window.open(x.getAttribute("url"), x.getAttribute("target"));
            } else if (x.getAttribute("href")) {
              var expression = x.getAttribute("href");
              gActiveContext = this;
              eval(expression);
            } else if (x.getAttribute("func_set") == "true") {
                x.func();
            } else {
              window.location = x.getAttribute("url");
            }
            if (this.trackSelected) {
                this.clearSelected();
                this.setChecked(x);
            }
            if (this.id === 'context_labelMenu') {
                var options = {
                    name: x && x.innerText.replace(sanitizeText, '') || ''
                };
                GlideUXMetrics && GlideUXMetrics.track('Select Form View', options);
            }
            else if (this._isFormContextMenuEvent(this.id)) {
                this._trackContextMenuSelectUsage(x);
            }
        }
        
        if (x.subMenu)
            x.subMenu.hideAll();
        else
            this.hideAll();
        return false;
    },
    _trackContextMenuSelectUsage: function(x) {
        if (typeof (g_form) !== 'undefined') {
            var options = {
                name: x && x.innerText.replace(sanitizeText, '') || '',
                table: g_form.tableName || '',
                path: this._getMenuPathForUxMetrics()
            };
            GlideUXMetrics && GlideUXMetrics.track('Select Additional Action', options);
        }
    },
    _getMenuPathForUxMetrics: function() {
        return this._getMenuPath(this, []).join(' > ');
    },
    _getMenuPath: function(menuItem, path) {
        var parentMenu = menuItem.getParent();
        if (parentMenu)
            this._getMenuPath(parentMenu, path);
        var selectedMenu = menuItem.menu.getElementsByClassName('context_menu_hover')[0];
        if (selectedMenu)
            path.push(selectedMenu.innerText)
        return path;
    },
    _getTopmostMenuData: function() {
        var parentMenu = this.parentMenu;
        if (!parentMenu)
            return {
                opener: this.opener,
                id: this.id
            };
        while(parentMenu.parentMenu) {
            parentMenu = parentMenu.parentMenu;
        }
        return {
            opener: parentMenu.opener,
            id: parentMenu.id
        };
    },
    _isFormContextMenuEvent: function(id) {
        return id && id.includes('context_') && id !== 'context_personalize_menu' && !id.includes('context_list_');
    },
    menuLowLight: function(e) {
        var x = this._getElement(e);
        this._handleTimeout(false, x, e.relatedTarget);
        if (!x.isMenuItem)
            return;
        if (!x.subMenu || x.subMenu.getMenu().style.display == 'none')
			this._disableItem(x);
        window.status = '';
        CustomEvent.fire('refresh.event');
    },
    menuHighLight: function(e) {
        var x = this._getElement(e);
        this._handleTimeout(true, x);
        if (!x.isMenuItem)
            return;
        this._hideAllSubs(x.parentNode);
        this._enableItem(x);
        if (x.subMenu)
            this._expandSubMenu(x, e);
    },
    _expandSubMenu: function(menu, evt) {
menu.subMenu.setParent(this);
		menu.subMenu.display(evt);
    },
    menuKeyUp: function(e) {
    	var x = this._getElement(e);
        var handled = false;
        switch (e.keyCode) {
case 27:
	            this.hide();
	            handled = true;
	            break;
        }
        if (handled) {
            e.stopPropagation();
            e.preventDefault();
        }
    },
    menuKeyDown: function(e) {
if (e.keyCode !== 9)
            e.preventDefault();
        var x = this._getElement(e);
        var handled = false;
        switch (e.keyCode) {
case 9:
        		this.hideAll();
        		handled = true;
        		break;
case 32:
case 13:
                if (x.subMenu)
                    this._expandSubMenu(x, e);
                else
                    this.execute(e)
				handled = true;
                break;
case 40:
                this._dullMenu();
                this._focusNext(x);
				handled = true;
                break;
case 38:
                this._dullMenu();
				this._focusPrevious(x);
				handled = true;
                break;
case 39:
	            if (x.subMenu)
					this._expandSubMenu(x, e);
	            handled = true;
				break;
case 37:
                var parentMenu = this.getParent();
                if (parentMenu && parentMenu.menu) {
                    var parent = parentMenu.menu.select('[aria-controls="' + this.id + '"]');
                    parent[0].focus();
					this._hideAllSubs(parentMenu.menu);
                }
	            handled = true;
	            break;
        }
        if (handled) {
            e.stopPropagation();
        }
    },
	_isFocusableMenuItem: function(element) {
		return (!(element.classList.contains('context_item_hr'))
                && !(element.classList.contains('context-menu-minwidth'))
                && !(element.style.display == 'none'));
	},
    _focusNext: function(item) {
        var nextSibling = item.nextSibling;
        while (nextSibling && !this._isFocusableMenuItem(nextSibling))
		    nextSibling = nextSibling.nextSibling;
        if (nextSibling)
            nextSibling.focus();
        else {
			var firstItem = item.parentElement.querySelector("div.context_item");
			while (firstItem && !this._isFocusableMenuItem(firstItem))
			    firstItem = firstItem.nextSibling;
			if (firstItem && this._isFocusableMenuItem(firstItem))
			    firstItem.focus();
        }
    },
	_focusPrevious: function(item) {
		var previousSibling = item.previousSibling;
		while (previousSibling && !this._isFocusableMenuItem(previousSibling))
		    previousSibling = previousSibling.previousSibling;
		if (previousSibling)
			previousSibling.focus();
		else {
			var lastItem = item.parentElement.querySelector("div:last-child");
			while (lastItem && !this._isFocusableMenuItem(lastItem))
			    lastItem = lastItem.previousSibling;
			if (lastItem && this._isFocusableMenuItem(lastItem))
			    lastItem.focus();
		}
	},
moveMenuToXY: function(e, left, top, right) {
        var menu = this.getMenu();
        if (right)
            left = right - menu.offsetWidth;
        var offsetTop = window.pageYOffset + top;
        var offsetLeft = window.pageXOffset + left;
        this.moveMenu(top, left, 0, 0, offsetTop, offsetLeft);
    },
    moveMenuToCursor: function(e) {
        var offsetTop = 0;
        var offsetLeft = 0;
        var clientY = e.clientY;
        var clientX = e.clientX;
        if (isTouchDevice) {
            offsetTop = e.pageY;
            offsetLeft = e.pageX;
        } else if (!e.clientX && e.target) {
	        var $target = $j(e.target);
	        var rect = e.target.getBoundingClientRect();
            offsetTop = clientY = rect.top + $target.height();
            offsetLeft = clientX = rect.left + $target.width();
        } else {
			offsetTop = e.clientY;
			offsetLeft = e.clientX;
        }
        this.moveMenu(clientY, clientX, 0, 0, offsetTop, offsetLeft);
    },
	moveMenuToParent : function(e, firingObject) {
		    var parent = this.getParent().getMenu();
            var offsetTop = grabOffsetTop(firingObject) - parent.scrollTop;
            var borderLeftWidth = parseInt($j(this.getParent().getMenu()).css('border-right-width'), 10);
            var offsetLeft = grabOffsetLeft(parent) - borderLeftWidth;
            this.moveMenu(offsetTop, offsetLeft, firingObject.offsetHeight, parent.offsetWidth, offsetTop, offsetLeft);
	},
    moveMenu: function(top, left, height, width, offsetTop, offsetLeft) {
        var menu = this.getMenu();
        menu.style.overflowY = "visible";
        menu.setAttribute('gsft_has_scroll', false);
        if (menu.getAttribute('gsft_width'))
            menu.style.width = menu.getAttribute('gsft_width') + "px";
        if (menu.getAttribute('gsft_height'))
            menu.style.height = menu.getAttribute('gsft_height') + "px";
        var leftPos;
        var viewport = new WindowSize();
        if ((left + width + menu.offsetWidth) > viewport.width)
            leftPos = offsetLeft - menu.offsetWidth;
        else
            leftPos = offsetLeft + width;
        menu.style.left = leftPos + "px";
        var scrollOffsets = this._getScrollOffsets(this.parentElement);
        var scrollTop = scrollOffsets.top;
        var direction = 'down';
        var clip = 0;
        if ((top + menu.offsetHeight) > viewport.height) {
            var bottomClip = menu.offsetHeight - (viewport.height - top);
            var topClip = menu.offsetHeight - top + height;
            if (topClip < bottomClip) {
                direction = 'up';
                clip = topClip;
            } else
                clip = bottomClip;
        }
        var topPos;
        if (direction == 'up') {
            var mHeight = menu.offsetHeight;
            var bottomEdge = offsetTop + height;
            topPos = (bottomEdge > mHeight) ? (bottomEdge - mHeight): 0;
        } else
            topPos = offsetTop;
        var scrollbarWidth = getScrollBarWidthPx();
        if ((topPos - scrollTop + menu.offsetHeight) > viewport.height)
            clip = (topPos - scrollTop + menu.offsetHeight) - viewport.height + scrollbarWidth;
        menu.style.top = topPos + "px";
        if (clip > 0) {
            if (!menu.getAttribute('gsft_width')) {
                menu.setAttribute('gsft_width', menu.offsetWidth);
                menu.setAttribute('gsft_height', menu.offsetHeight);
            }
            menu.setAttribute('gsft_has_scroll', true);
            menu.style.overflowY = "auto";
            var w = menu.offsetWidth + 18;
            menu.style.width = w + "px";
var h = menu.offsetHeight - clip - 4;
            menu.style.height = h + "px";
        }
    },
    _getScrollOffsets: function(e) {
        var offsets = {};
        if (e.nodeName.toUpperCase() == "BODY") {
            offsets.top = window.pageYOffset || document.documentElement.scrollTop  || document.body.scrollTop;
            offsets.left = window.pageXOffset || document.documentElement.scrollLeft  || document.body.scrollLeft;
        } else {
            offsets.top = e.scrollTop;
            offsets.left = e.scrollLeft;
        }
        return offsets;
    },
    getFiringObject: function() {
        return this.eventObject;
    },
    getID: function() {
        return this.id;
    },
    getMenu: function() {
        if (!this.menu) {
            this.menu = contextMenus[this.getID()];
            if (!this.menu)
                this._createMenu();
            this._setMenuAttrs();
            this._setMinWidth();
        }
        return this.menu;
    },
    getParent: function() {
        return this.parentMenu;
    },
    getProperty: function(c) {
    	if (this.properties)
    		return this.properties[c];
    	else
    		return "";
    },
    getTableName: function() {
        return this.tableName;
    },
    setFiringObject: function(e) {
        this.eventObject = e;
    },
    setID: function(id) {
        this.id = id;
    },
    setOnShow: function(onshow) {
        this.onshow = onshow;
    },
    setOnHide: function(oh) {
        this.onhide = oh;
    },
    setBeforeHide: function(beforeHide) {
        this.beforehide = beforeHide;
    },
    setParent: function(m) {
        this.parentMenu = m;
        this.parentElement = m.parentElement;
    },
    setProperty: function(c, v) {
        this.properties[c] = v;
    },
    setTableName: function(name) {
        this.tableName = name;
    },
    setTimeout: function(t) {
        this.timeout = t;
    },
    setTrackSelected: function(flag) {
        this.trackSelected = flag;
    },
    _createMenu : function() {
        this.menu = document.createElement("div");
        this.menu.name = this.menu.id = this.getID();
        contextMenus[this.getID()] = this.menu;
    },
    _disableItem: function(item) {
    	var ariaDisabled = item.getAttribute('aria-disabled');
        if (item && !item.disabled && (!ariaDisabled || ariaDisabled == 'false')) {
            removeClassName(item, "context_menu_hover");
        }
        if (item && item.subMenu)
		item.setAttribute("aria-expanded", "false");
    },
    _dullMenu: function() {
        var items = this.getMenu().childNodes;
        for(var i = 0; i < items.length; i++) {
            var item = items[i];
            this._disableItem(item);
        }
    },
    _enableItem: function(item) {
    	var ariaDisabled = item.getAttribute('aria-disabled');
        if (item && !item.disabled && (!ariaDisabled || ariaDisabled == 'false')) {
            addClassName(item, "context_menu_hover");
            item.focus();
        }
		if (item && item.subMenu) {
			item.setAttribute("role", "menuitem");
			item.setAttribute("aria-expanded", "true");
		}
    },
    _getElement: function(e) {
        var x = e.target;
        try {
	        if (!x.isMenuItem && x.parentNode.isMenuItem)
	            x = x.parentNode;
        } catch (err) {}
        return x;
    },
    _getOpener: function(e) {
		var targetEl = this._getElement(e);
		var opener = $j(targetEl).closest("a.list_action");
		return opener[0] || targetEl;
	},
    _getRealEvent: function(e) {
        return e;
    },
    _handleTimeout: function(lght, firingObject, movingTo) {
        if (this.getProperty("timeout") > 0) {
            if (lght) {
                clearTimeout(this.timeout);
            } else {
                if (gActiveContext && gActiveContext.menu.contains(movingTo))
                    return;
                if (!firingObject.subMenu || firingObject.subMenu != gActiveContext)
                    this.timeout = setTimeout('contextHide()', this.getProperty("timeout"));
            }
        }
    },
    _hideAllSubs : function(el) {
      var list = el.getElementsByTagName("div");
      for (var i = 0; i < list.length; i++) {
            var element = list[i];
            if (element.subMenu) {
                var subMenu = element.subMenu.getMenu();
                this._hideAllSubs(element.subMenu.getMenu());
                hideObject(subMenu);
                this._disableItem(element);
            }
      }
    },
    _setMenuAttrs : function() {
        this.menu.context = this;
        this.menu.className = "context_menu";
        this.menu.style.display = "none";
        this.menu.style.zIndex = (this.getParent() ? GwtContextMenu.zIndex+1 : GwtContextMenu.zIndex);
        this.menu.setAttribute('role', 'menu');
        this.menu.onmouseover = this.menuHighLight.bind(this);
        this.menu.onmouseout = this.menuLowLight.bind(this);
        this.menu.onkeyup = this.menuKeyUp.bind(this);
        this.menu.onkeydown = this.menuKeyDown.bind(this);
        if ("ontouchstart" in window  && (typeof FastButton != 'undefined'))
        	new FastButton(this.menu, this.execute.bind(this));
        else
        	this.menu.onclick = this.execute.bind(this);
    },
    _setMinWidth: function() {
        var widther = document.createElement("div");
        widther.style.width = "120px";
        widther.style.height = "1px";
        widther.style.overflow = "hidden";
        widther.className = 'context-menu-minwidth';
        this.menu.appendChild(widther);
    },
    _toggleMenuItems: function(attr, enabled) {
        var items = this.getMenu().childNodes;
        for(var i = 0; i < items.length; i++) {
            var item = items[i];
            if (item.getAttribute(attr) == "true") {
                if (enabled) {
                    this._undullItem(item);
                } else {
                    this._dullItem(item);
                }
            }
        }
    },
    _dullItem: function(item) {
    	item.setAttribute('aria-disabled', true);
        addClassName(item, "is-disabled");
        removeClassName(item, "context_menu_hover");
    },
    _undullItem: function(item) {
    	item.setAttribute('aria-disabled', false);
        removeClassName(item, "is-disabled");
    },
    _hideItem: function(item) {
        item.style.display = 'none';
    },
    _showItem: function(item) {
        item.style.display = '';
    },
    _isEmpty: function(menu) {
        if (!menu)
            return true;
        if (!menu.firstChild)
            return true;
        return false;
    },
    _updateURL: function(d, label, url) {
		if(typeof GlideTransactionScope != 'undefined') {
			GlideTransactionScope.appendTransactionScope(function(name, value) {
				url += "&" + name + "=" + value;
			});
			return url;
		}
		if(typeof g_form != 'undefined') {
			this.dmap = this.dmap || {};
			this.dmap[label] = d;
			$(g_form.getFormElement()).observe('glidescope:initialized', function(e) {
				e.memo.gts.appendTransactionScope(function(name, value) {
					var _d = this.dmap[label];
					var _url = _d.getAttribute("url");
					_url += "&" + name + "=" + value;
					_d.setAttribute("url", _url);
				}.bind(this));
			}.bind(this));
		}
		return url;
    },
    _focusFirstItem: function(menu) {
        var contextItems = $(menu).select('.context_item');
        var firstItem = contextItems.shift();
        while (firstItem.style.display == 'none' && contextItems.length > 0)
            firstItem = contextItems.shift();
	    if (firstItem) {
	    	this._toggleFocusLock(false);
	    	firstItem.focus();
	    }
    },
    z: function() {
    },
    _toggleFocusLock: function(focusLockOn) {
    	var focusLockedElem = $j('#show_list');
    	if (!focusLockedElem[0])
    		return;
    	if (focusLockOn)
    		focusLockedElem.attr('tabindex', -1);
    	else
    		focusLockedElem.removeAttr('tabindex');
    }
});
GwtContextMenu.zIndex = 1100;
function displayContextMenu(e, name, filterable) {
	if (!getMenuByName(name))
		return;
	var contextMenu = getMenuByName(name).context;
	contextMenu.setProperty('sortable', true);
	contextMenu.setProperty('filterable', filterable);
	contextMenu.display(e);
}
function contextShow(e, tableName, timeoutValue, ttop, lleft, rright) {
	var frameWindow = null;
	try {
		frameWindow = window.frameElement;
		if (frameWindow && frameWindow.id == "dialog_frame" && frameWindow.noContext == true)
			return true;
	} catch(err) { }
    if (shouldSkipContextMenu(e))
        return true;
    e = getRealEvent(e);
    menuTable = tableName;
    var name = tableName;
    if (name && name.substring(0, 8) != "context_")
        name = "context_" + name;
    if (document.readyState && document.readyState != "complete" && document.readyState != "interactive" && typeof window.g_hasCompleted == "undefined") {
        jslog("Ignored context menu show for " + name + " because document was not ready");
        return false;
    }
window.g_hasCompleted = true;
    if (getMenuByName(name)) {
        var contextMenu = getMenuByName(name).context;
        contextMenu.setProperty('timeout', timeoutValue);
        contextMenu.setProperty('top', ttop);
        contextMenu.setProperty('left', lleft);
        contextMenu.setProperty('right', rright);
        if (contextMenu.menu.style.display == "block")
            contextMenu.menu.style.display = "none";
        else
            contextMenu.display(e);
        if (contextMenu.onshow)
            contextMenu.onshow();
        if (contextMenu.id === 'context_labelMenu') {
            if (typeof (g_form) !== 'undefined') {
                var options = {
                    table: g_form.tableName || '',
                    name: g_form.getViewName() || '',
                }
                GlideUXMetrics && GlideUXMetrics.track('Click Form View', options);
            }
        }
    }
    var metricEventActionsMap = {
        'contextmenu': 'Right Click',
        'click': 'Open Menu'
    };
    if (contextMenu.id === 'context_1') {
        var options = {
            action: metricEventActionsMap[e.type],
            table: g_form.tableName || ''
        }
        GlideUXMetrics && GlideUXMetrics.track('Open Form Context Menu', options);
    }
    return false;
}
function contextQuestionLabel(e, sys_id, type) {
    if (shouldSkipContextMenu(e))
        return true;
    e = getRealEvent(e);
    var name = "context_question_label";
    menuTable = "not_important";
    menuField = "not_important";
    rowSysId = sys_id;
    addQuestionActionItems(rowSysId, type);
	if (getMenuByName(name)) {
		var contextMenu = getMenuByName(name).context;
		contextMenu.setProperty('sysparm_sys_id', sys_id);
		contextMenu.display(e);
	}
    return false;
}
function addQuestionActionItems(id, type) {
	var jr = new GlideAjax("AJAXJellyRunner", "AJAXJellyRunner.do");
	jr.addParam('template', 'variable_context.xml');
	jr.addParam('sysparm_catalog_id', g_form.getUniqueValue());
	jr.addParam('sysparm_variable_id', id);
	jr.addParam('sysparm_variable_type', type);
	jr.addParam('sysparm_contextual_security', g_form.hasAttribute('contextual_security'));
	jr.setWantRequestObject(true);
	var response = jr.getXMLWait();
	if (!response)
		return;
	var html = response.responseText;
	html.evalScripts(true);
	return gcm;
}
function shouldSkipContextMenu(e) {
	if (e.ctrlKey && trustCtrlKeyResponse())
		return true;
	return false;
}
function trustCtrlKeyResponse() {
	return isMacintosh || !isSafari;
}
function contextTimeout(e, tableName, waitCount) {
	var name = "context_" + tableName;
	if (!getMenuByName(name))
		return;
	var contextMenu = getMenuByName(name).context;
	if (typeof waitCount == "undefined")
		waitCount = 500;
	contextMenu.setProperty("timeout", waitCount);
	var hideParam;
	if (contextMenu.hideOnlySelf == true)
		hideParam = '"' + name + '"';
	contextMenu.setTimeout(setTimeout('contextHide(' + hideParam + ')', waitCount));
}
function getMenuByName(name) {
	return contextMenus[name];
}
function getRowID(e) {
	var id = null;
	var cell = e.srcElement;
	if (cell == null)
		cell = e.target;
	var row = cell.parentNode;
	var id = row.id;
	if (id == null || id.length == 0)
		id = row.parentNode.id;
	return id;
}
function contextHide(name) {
	if (!gActiveContext)
		return;
	if (typeof name != "undefined" && gActiveContext.getID() != name)
			return;
	if (gActiveContext.beforehide) {
		if (gActiveContext.beforehide() == false)
			return;
	}
	gActiveContext.hideAll();
}
function elementAction(e, event, gcm) {
	var type = e.getAttribute("type");
	var choice = e.getAttribute("choice");
	var id = e.id;
	var fName = id.substring(id.indexOf('.') + 1);
	var tableName = fName.substring(0, fName.indexOf('.'));
	var haveAccess = $("personalizer_" + tableName);
	if (typeof (g_user) != 'undefined') {
		var count = 1;
		if (!gcm)
			gcm = addActionItems(fName, tableName, type, choice);
		if (gcm)
			return contextShow(event, gcm.getID(), -1, 0, 0);
	}
	return true;
}
function addActionItems(id, table, type, choice) {
	var jr = new GlideAjax("AJAXJellyRunner", "AJAXJellyRunner.do");
	jr.addParam('template', 'element_context.xml');
	jr.addParam('sysparm_id', id);
	jr.addParam('sysparm_table', table);
	jr.addParam('sysparm_type', type);
	jr.addParam('sysparm_choice', choice);
	jr.addParam('sysparm_contextual_security', g_form.hasAttribute('contextual_security'));
	jr.setWantRequestObject(true);
	var response = jr.getXMLWait();
	if (!response)
		return;
	var html = response.responseText;
	html.evalScripts(true);
	return gcm;
}
Event.observe(window, 'unload', clearMenus, false);
Event.observe(window, 'scroll', debounceContextScroll(100));
function debounceContextScroll(ms) {
    var timeout;
    return function () {
        if (timeout)
            clearTimeout(timeout);
        timeout = setTimeout(function () {
            contextMenuHide();
            timeout = null;
        }, ms);
    }
}
function clearMenus() {
	for (av in contextMenus) {
		if (contextMenus[av]) {
			var c = contextMenus[av].context;
			if (c) {
				c.destroy();
			}
			contextMenus[av] = null;
		}
	}
	for ( var keys in shortcuts) {
		if (shortcuts[keys])
			shortcuts[keys].clear();
	}
	shortcuts = null;
}
;
/*! RESOURCE: /scripts/doctype/functions.js */
function isDoctype() {
	return true;
}
function isPolarisWrapper() {
	return top.NOW && top.NOW.isPolarisWrapper === "true";
}
function isPolaris() {
	return window.NOW && window.NOW.isPolarisEnabled === "true" && isPolarisWrapper();
}
function isPolarisTemplate() {
	return window.NOW && window.NOW.polaris_page_info && window.NOW.polaris_page_info.canUsePolarisTemplates === true;
}
function gsftSubmitBack() {
	var backButton = document.getElementById('sysverb_back');
	checkDirtyForm(function save() {
		if (isDirtyFormAutosave())
			gsftSubmit(backButton);
		else
			gsftSubmit(null, $j(backButton).closest('form')[0], 'sysverb_check_save');
	}, function discard() {
		gsftSubmit(backButton);
	});
}
function gsftSubmitOnExternalClick(e, tableName) {
	if (!e.target || !e.target.href)
		return false;
	
	if (e.metaKey || e.ctrlKey)
		return true;
	
	var url = e.target.href;
	if (g_form && g_form.modified) {
		e.preventDefault();
		if (window.g_form_dirty_support) {
			if (window.g_form_dirty_autosave)			
				saveAndRedirect(tableName, url);			
			else {	
				renderSaveChangesDialog(function save() {	
					saveAndRedirect(tableName, url);	
				}, function discard() {	
					g_navigation.open(url);	
				});	
			}	
		} else
			g_navigation.open(url);
	}
	return true;
}
function encodeFormDataValue(str) {
return encodeURIComponent(str).replace(/[!'()~]/g, function (c) {
		return '%' + c.charCodeAt(0).toString(16).toUpperCase();
	})
.replace(/%20/g, '+')
.replace(/%0A/g, '%0D%0A');
}
function isFormDataBig(form) {
var formDataSizeLimit = 2 * 1024 * 1024;
	var postFormDataSize = 0;
	var bigFormData = false;
	for (var i = 0, iMax = form.elements.length; i < iMax; i += 1) {
		var element = form.elements.item(i);
		var tagName = element.tagName;
		var name = element.name || '';
		if (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && tagName !== 'SELECT')
			continue;
		if (name === '' || element.disabled)
			continue;
		if (tagName === 'SELECT' && (element.selectedIndex === -1
			|| (element.options.length && element.options[element.selectedIndex].disabled)))
			continue;
		if (tagName === 'INPUT' && element.type === 'checkbox' && !element.checked)
			continue;
		var value = encodeFormDataValue(element.value);
		postFormDataSize += (name + '=' + value + '&').length;
		if (postFormDataSize >= formDataSizeLimit) {
			bigFormData = true;
			break;
		}
	}
	return bigFormData;
}
function gsftSubmit(control,  form,  action_name) {
	var f;
	if (typeof form == "undefined") {
		f = findParentByTag(control, 'form');
		if (typeof form == "undefined") {
var sectionFormId = $("section_form_id");
			if (sectionFormId)
				f = $(sectionFormId.value);
		}
	} else 
		f = form;
	if (g_submitted)
		return false;
	if (typeof action_name == "undefined" && control)
		action_name = control.hasAttribute('data-action-name') ? control.getAttribute('data-action-name') : control.id;
	if (action_name == 'sysverb_delete') {
		if  (!confirm(getMessage("Delete this record") + "?")) {
			g_submitted = false;
			return false;
		}
	}
	f.sys_action.value=action_name;
	
	if (typeof f.onsubmit == "function" && action_name != 'sysverb_back') {
		var rc = f.onsubmit();
		if (rc === false) {
			g_submitted = g_form.submitted = false;
			return false;
		}
		top.NOW.magellan && top.NOW.magellan.setNavigatingState && top.NOW.magellan.setNavigatingState(true);
	}
	if (control && control.getAttribute('gsft_id')) {
		action_name = control.getAttribute('gsft_id');
		f.sys_action.value=action_name;
	}	
	if (action_name == 'sysverb_back') 
		g_submitted = false;  
	else
		g_submitted = true;
	
	if (typeof g_form != 'undefined' && g_form && g_submitted) {
g_form.enableUIPolicyFields();
	}
	CustomEvent.fireTop("glide:form_submitted");
	try {
		GlideAjax.disableSessionMessages();
		if (isFormDataBig(f)) {
			var appendChar = (f.action.indexOf('?') === -1) ? '?' : '&';
			f.action += appendChar + 'useMultipartAwareServlet=true';
f.enctype = 'multipart/form-data';
		}
		f.submit();
	} catch (ex) {
		GlideAjax.enableSessionMessages();
		if (ex.message.indexOf('Unspecified') == -1)
			throw ex;
	}
	return false;
}
function setCheckBox(box) {
  var name = box.name;
  var id = name.substring(3);
  var frm = box.form;
  if (frm)
  	frm[id].value = box.checked;
  else {
  	var widget = $(id);
  	if (widget)
  		widget.value = box.checked;
  }
  if (box['onchange'])
  	box.onchange();
}
function populateParmQuery(form, prefix, defaultNULL, action) {
  var keys = ['No records selected', 'Delete the selected item?', 'Delete these', 'items?'];
  var msgs = getMessages(keys);
  var keyset = getChecked(form);
  
  if (!action)
  	action = form.sys_action.value;
  if (action.indexOf("sysverb") != 0) {
	  if (keyset == '') {
	  	if (!alert(msgs["No records selected"])) 
	  		return false;
	  } else {
	  	if (action == "delete_checked") {
	  		var items = keyset.split(",");
	  		if (items.length == 1) {
	  			if (!confirm(msgs["Delete the selected item?"])) 
	  				return false;
	  			
	  		} else if (items.length > 0) {
	  			if (!confirm(msgs["Delete these"] + " " + items.length + " " + msgs["items?"])) 
	  				return false;
	  		}
	  	}
	  }
  } else if (form.sys_action.value == "sysverb_new") {
  	addInput(form, 'HIDDEN', 'sys_id', '-1');
  }
	  
  if (keyset == '' && defaultNULL)
  	keyset = defaultNULL;
  	
  if (prefix)
  	keyset = prefix + keyset;
  addInput(form, 'HIDDEN', 'sysparm_checked_items', keyset);
  return true;
}
function getChecked(form) {
  var keyset = '';
  var lookup = form;
  
  for (i = 0; i < lookup.elements.length; i++) {
	if ( lookup.elements[i].type != "checkbox") 
		continue;
	var v = lookup.elements[i];
	if (v.checked) {
   		var id = v.id.substring(3);
   		var skip = v.name.substring(0,4);
   		if (skip == "SKIP")
   		  continue;
   		
   		if (id == "all")
   			continue;
   		
   		if (keyset == '')
      		keyset = id;
   		else 
      		keyset = keyset + ',' + id;
	}
  } 
  return keyset;
}
function iterateList(e, row, value, update) {
	update = (typeof update === 'undefined') ? true : update;
	if (update)
		g_form.setMandatoryOnlyIfModified(true);
	var form = g_form.getFormElement();
	form.sys_action.value = value;
	var query = e.getAttribute("query");
	addInput(form, 'HIDDEN', 'sys_record_row', row);
	addInput(form, 'HIDDEN', 'sys_record_list', query);
	addInput(form, 'HIDDEN', 'sysparm_exclude_tiny_parms', ['sys_id','sysparm_record_row'].join());
	if (update && typeof form.onsubmit == "function") {
		var rc = form.onsubmit();
		if (!rc) {
			g_submitted = false;
			return false;
		}
	}
	try {
		form.submit();
	} catch (ex) {
		if (ex.message.indexOf('Unspecified') == -1)
			throw ex;
	}
	return false;
}
function refreshNav() {
	CustomEvent.fireTop('navigator.refresh');
}
function checkSave(tableName, urlBase, idField, refKey, viewOverride) {
	var sysid = document.getElementsByName(idField)[0].value;
	checkSaveID(tableName, urlBase, sysid, refKey, viewOverride);
}
function checkSaveID(tableName, urlBase, sysid, refKey, viewOverride) {
	sysid = trim(sysid);
	var url = urlBase+"?sys_id="+sysid;
	if (refKey)
		url += "&sysparm_refkey=" + refKey;
	if (viewOverride) {
		url += "&sysparm_view=" + viewOverride;
	} else {
	var view = $('sysparm_view');
    if (view != null) {
		view = view.value;
		if (view != '')
			url += "&sysparm_view=" + view;
	}
	}
	var nameOfStack = $('sysparm_nameofstack');
	if (nameOfStack != null) {
		nameOfStack = nameOfStack.value;
		if (nameOfStack != '')
			url += "&sysparm_nameofstack=" + nameOfStack;
	}
	if(typeof GlideTransactionScope != 'undefined') {
		GlideTransactionScope.appendTransactionScope(function(name, value) {
			url += "&" + name + "=" + value;
		});
	}
	return checkSaveURL(tableName, url);
}
function isDirtyFormAutosave() {
	return !window.g_form_dirty_support || window.g_form_dirty_autosave || !window.g_form || !g_form.modified;
}
function checkDirtyForm(successCallback, discardCallback) {
	if (isDirtyFormAutosave()) {
		successCallback();
		return;
	}
	
	renderSaveChangesDialog(successCallback, discardCallback);
}
function renderSaveChangesDialog(saveCallback, discardCallback) {
	
	if (isMSIE11) {
		if (confirm(getMessage("Changes have been made, continuing will discard the changes. Click 'OK' to discard changes."))) {
			g_form.modified = false;
			discardCallback();
		} else {
			saveCallback();
		}
		return;
	}
	
	var gm = new GlideModal('dirty_form_modal_confirmation');
	gm.setPreference('focusTrap', true);
	gm.setPreference('autoFocus', false);
	gm.setSize(200);
	gm.setTitle(getMessage('Save changes'));
	var content = $j(new XMLTemplate('dirty_form_modal').evaluate({displayValue: g_form.getDisplayValue()}));
	content.on('click', 'button', function(evt) {
		var button = evt.target;
		if (button.getAttribute('data-action') == 'discard') {
			g_form.modified = false;
			discardCallback();
		} else if (button.getAttribute('data-action') == 'save') {
button.disabled = true;
			saveCallback();
		}
	});
	window.nowapi.g_popup_manager && window.nowapi.g_popup_manager.destroypopDiv();
	gm.renderWithContent(content);
}
function checkSaveURL(tableName, url) {
	checkDirtyForm(function save() {
		saveAndRedirect(tableName, url);
	}, function discard() {
		g_navigation.open(url);
	});
}
function saveAndRedirect(tableName, url) {
	if (g_submitted)
		return false;
	var f = document.getElementById(tableName + ".do");
	if (g_form.getTableName() == tableName) {
		var fs = document.forms;
		for (var z=0; z < fs.length; z++) {
			if (typeof fs[z].sys_uniqueValue != 'undefined') {
				f = fs[z];
				break;
			}
		}
	}
	
	if (!g_form.isNewRecord())
	   g_form.setMandatoryOnlyIfModified(true);
	
	f.sys_action.value = 'sysverb_check_save';
	addInput(f, 'HIDDEN', 'sysparm_goto_url', url);
    if (typeof f.onsubmit == "function") {
      var rc = f.onsubmit();
      if (!rc) {
	  	g_submitted = false;
	  	return false;
	  }
    } 
    
    g_submitted = true;
	if (typeof g_form != 'undefined' && g_form)
g_form.enableUIPolicyFields();
	f.submit();
	return false;
}
function submitTextSearch(event, tableName) {
	if (event != true && event.keyCode != 13)
		return;
	var form = getControlForm(tableName);
	addHidden(form, 'sysverb_textsearch', form['sys_searchtext'].value);
	addHidden(form, 'sysparm_query', '');
	addHidden(form, 'sysparm_referring_url', '');
	form.submit();
}
function getControlForm(name) {
	var form = document.forms[name + '_control'];
if (isSafari || isChrome) {
		if (form) {
			var collectionType = form.toString();
			if (collectionType != "[object HTMLFormElement]")
				form = form[0];
		}
	}
	return form;
}
function getFormForList(listId) {
	return $(listId + "_control");
}
function getFormForElement(element) {
	var f = element.form;
	if (f)
		return f;
		
	return findParentByTag(element, "form");
}
function hideReveal(sectionName, imagePrefix, snap) {
	var el = $(sectionName);
	if (!el)
		return;
	var $s = $j('#section-' + sectionName);
	if ($s.length == 0)
		return _hideRevealDirect(sectionName, imagePrefix, snap);
	var $b = $j(".section-content", $s);
	
	if (!isPolarisTemplate()) {
		if ($s.hasClass("state-closed"))
	 		$b.show("medium");
		else
	 		$b.hide("medium");
	}
	$s.toggleClass('state-closed');
	$j('[data-aria-label-toggle]', $s).each(function(){
		var ariaLabel = $j(this).attr('aria-label');
		var ariaLabelToggle = $j(this).data('aria-label-toggle');
		$j(this).attr('aria-label', ariaLabelToggle);
		$j(this).data('aria-label-toggle', ariaLabel);
		var ariaExpanded = $j(this).attr('aria-expanded')
		$j(this).attr('aria-expanded',ariaExpanded === 'false' );
	});
	setPreference("collapse.section." + sectionName, $s.hasClass('state-closed') ? "true" : "false");
}
function _hideRevealDirect(sectionName, imagePrefix, snap) {
	var el = $(sectionName);
	if (!el)
		return;
	var img = $("img." + sectionName);
	var imageName = "section";
	if (imagePrefix)
		imageName = imagePrefix;
	if (el.style.display == "block") {
		hide(el);
		if (img) {
img.src = "images/"+imageName+"_hide.gifx";
img.alt = getMessage("Display / Hide");
		}
	} else {
		show(el);
		if (img) {
img.src = "images/"+imageName+"_reveal.gifx";
img.alt = getMessage("Display / Hide");
		}
	}
}
function hideRevealWithTitle(name, hideMsg, showMsg) {
	var el = $(name);
	if (!el)
		return;
	var img = $("img." + name);
	if (el.style.display == "block"){
		el.style.display = "none";
img.src = "images/section_hide.gifx"
		img.title = showMsg;
		img.alt = showMsg;
	} else {
		el.style.display = "block";
img.src = "images/section_reveal.gifx"
		img.title = hideMsg;
		img.alt = hideMsg;
	}
}
function toggleDisplaySetPreference(img, hideMsg, showMsg) {
	if (!img || !img.id)
		return;
	var id = img.id.substring(4);
	if (!id)
		return;
	var root = img.parentElement;
	while (root && root.id !== 'element.' + id) {
		root = root.parentElement;
	}
	if (!root)
		return;
	var el = root.querySelector('[id="' + id + '"]');
	if (!el)
		return;
	var msg = showMsg;
	if (el.style.display === 'none') {
		el.style.display = 'block';
img.src = 'images/section_reveal.gifx';
		msg = hideMsg;
	}
	else {
		el.style.display = 'none';
img.src = 'images/section_hide.gifx';
	}
	img.title = msg;
	img.alt = msg;
	if (img.hasAttribute('data-original-title'))
		img.setAttribute("data-original-title", msg);
	setPreference('collapse.' + id, el.style.display == 'none', null);
}
function forceHideWithTitle(name, msg) {
	var el = $(name);
	if (!el)
		return;
	var img = $("img." + name);
	el.style.display = "none";
img.src = "images/section_hide.gifx"
	img.title = msg;
	img.alt = msg;
}
function forceHide(sectionName){
	var el = $(sectionName);
	if (!el)
		return;
	var img = $("img." + sectionName);
	el.style.display = "none";
img.src = "images/section_hide.gifx";
	img.alt = getMessage("Collapse");
}
function forceReveal(sectionName, sectionNameStarts, tagName){	
    var els = $$(tagName);	
	if (els) {
		for(var c=0;c<els.length;++c) {
			if ( els[c].id.indexOf(sectionNameStarts) == 0 ) {			    
				forceHide(els[c].id);
		    }
		}
	}
	
	var el = $(sectionName);
	if (!el)
		return;
	var img = $("img." + sectionName);
	el.style.display = "block";
img.src = "images/section_reveal.gif";
	img.alt = getMessage("Expand");
	window.location = '#' + sectionName;
}
function insertAtCursor(textField, value) {
	if (document.selection) {
		textField.focus();
		sel = document.selection.createRange();
		sel.text = value;
	} else if (textField.selectionStart || textField.selectionStart == 0) {
		var startPos = textField.selectionStart;
		var endPos = textField.selectionEnd;
	
		textField.value = textField.value.substring(0, startPos) + value +
			textField.value.substring(endPos, textField.value.length);
	} else {
		textField.value += value;
	}
}
function insertScriptVar(textBoxName, selectBoxName) {
var textBox = $(textBoxName);
  var select = $(selectBoxName);
  var options = select.options;
  
  for (var i = 0; i != select.length; i++) {
    var option = options[i];
    if (!option.selected) 
      continue; 
   
    var label = option.text; 
    var v = option.value.split('.');
    v = 'current.' + v[1];
	insertAtCursor(textBox, v);
  }
}
function fieldTyped(me) {
	formChangeKeepAlive();
}
function setPreference(name, value, func) {
	var u = getActiveUser();
	if (u)
		u.setPreference(name, value);
	
	var url = new GlideAjax("UserPreference");
	url.addParam("sysparm_type", "set");
	url.addParam("sysparm_name", name);
	url.addParam("sysparm_value", value);
  	url.getXML(func);
}
function deletePreference(name) {
	var u = getActiveUser();
	if (u)
		u.deletePreference(name);
		
	var url = new GlideAjax("UserPreference");
	url.addParam("sysparm_type", "delete");
	url.addParam("sysparm_name", name);
  	url.getXML(doNothing);
}
function getPreference(name) {
	var u = getActiveUser();
	if (u) {
		var opinion =  u.getPreference(name);
		if (typeof opinion != 'undefined')
			return opinion;
	}
	console.warn("Preference " + name + " not found in the active user cache. Making a blocking AJAX call to load it. Consider pre-loading this property in glide_user.")
	var url = new GlideAjax("UserPreference");
	url.addParam("sysparm_type", "get");
	url.addParam("sysparm_name", name);
	var xml = url.getXMLWait();
	if (!xml)
		return '';
		
   	var items = xml.getElementsByTagName("item");
	for (var i = 0; i < items.length; i++) {
		var item = items[i];
		var value = item.getAttribute("value");
		if (u)
			u.setPreference(name, value);
		return value;
	}
	return '';
}
function getActiveUser() {
	return getTopWindow().g_active_user || window.g_user;
}
function labelClicked(label, elementType) {
	var hFor = label.htmlFor;
	if (hFor) {
		var elpaco = $("sys_display." + hFor);
		if (!elpaco || elpaco.type == "hidden") 
			elpaco = $(hFor);
		
if (elpaco === null) {
			var temp = hFor.split(".").slice(2).join(".");
			elpaco = $(temp+'_label');
		}
		
		if (elpaco && elpaco.type != "hidden" && elpaco.style.visibility != "hidden") {
			if (elpaco.disabled != true) {
				if (elementType == "html" || elementType == "translated_html") {
					var handler = g_form.elementHandlers[hFor];
					if (handler && handler.focusEditor) {
handler.focusEditor();
					}
				} else {
					elpaco.focus();
				}
			}
		}
	}
	
	return false;
}
function insertFieldName(textBoxName, label) {
var textBox = $(textBoxName);
	var index = label.indexOf(":");
	if (index > -1)
		insertAtCursor(textBox, "\n" + label);
	else
		insertAtCursor(textBox, label);
	
	var form = textBox.up('form');
	if (form) {
		var onChangeData = {id : textBox.id, value : textBox.value, modified : true};
		form.fire('glideform:onchange', onChangeData);
	}
}
function replaceRegEx(text, doc, tableName) {
  var s = "";
  var re = new RegExp("%\\{\\w+[\\}]");
  var m = re.exec(text);
  if (m != null) {  
    for (i = 0; i < m.length; i++) {
      s = s + m[i];
    }
  }
  
  if (tableName.indexOf('.') > 0)
  	tableName = tableName.split('.')[0];
  
  if (s.length > 0) {
	  var field = s.substring(2, s.length - 1);
	  var obj = doc.getElementById("sys_display." + tableName + "." +  field);
	  var val = "?";
	  if (obj != null)
		  val = obj.value;
		  
	  if (val.length == 0) {
var labelText = "?";
		  var labels = doc.getElementsByTagName("label");
		  for(i = 0; i < labels.length; i++){
		  	if (labels[i].htmlFor == tableName + "." + field) {
		  		labelText = labels[i].innerHTML;
		  		break;
		  	}
		  }
		  if (labelText.indexOf(':') > 0)
		  	labelText = labelText.split(':')[0];
		  		  
		  val = labelText;
	  }
	  re = new RegExp("%\\{" + field + "[\\}]", "g");	  
	  var result = text.replace(re, val);
	  if (result.indexOf("%{") > 0)
	  	result = replaceRegEx(result, doc, tableName);
	  
	  return result;
  }
  
  		return text;
}
function toggleInline(name) {
	_toggleDisplay(name, 'inline');
}
function _toggleDisplay(name, displayType) {
	var e = $(name);
	if (e.style.display == 'none' ) {
		e.style.display = displayType;
		setPreference(name, displayType, null);
	} else {
		e.style.display = 'none';
		setPreference(name, 'none', null);
	}	
}
function textareaResizer(id, change) {
  objectResizer(id, change, 'rows');
}
function textareaSizer(id, rows) {
	var element = $(id);
	if (element)
		setAttributeValue(element, 'rows', rows);
}
function selectResizer(id, change) {
  objectResizer(id, change, 'size');
}
function objectResizer(id, change) {
	var tinymceEditor = getTinyEditor(id);
	if (tinymceEditor) {
		resizeTinymce(tinymceEditor, change, true);
	} else {
		var element = $(id);
		if (!element)
			return;
	
		var value = parseInt($j(element).css("height"), 10);
	
		value += change;
		if (value < 1)
		  value = 1;
		if (element.tagName == 'INPUT') {
			element = $("div."+id);
			if (element) {
				if (change > 0) {
					  element.show();
				} else {
					element.hide();
				   value = 1;
				}
			}
		} else {
			var oldRows = element.rows;
				element.style.height = value + 'px';
				handleMaxMinHeights(element, value);
				resizeTextAreaIframe(true, id, value);
		}
		setPreference('textarea_height.' + id, value);
		_frameChanged();
	}
}
function isTinyMCEIncluded() {
	return !!(typeof tinymce !== 'undefined' && tinymce !== undefined && tinymce !== null && tinymce);
}
function getTinyEditor(id) {
	return isTinyMCEIncluded() ? tinymce.get(id) : null;
}
function resizeTinymce(editor, value, isDelta, force) {
	if (editor) {
		var isV5editor = tinymce.majorVersion === '5';
		if (isDelta) {
			isV5editor 
				? editor.theme.ui.resizeBy({ left: 0, top: value }) 
				: editor.theme.resizeBy(0, value);
		} else if (!force) {
			if (isV5editor) {
				var container = $j(editor.getContainer());
				var currentHeight = parseInt(container.css('height'), 10) || container.height();
				editor.theme.ui.resizeBy({ left: 0, top: value - currentHeight });
			} else
				editor.theme.resizeTo(null, value);
		} else {
			var container = isV5editor ? editor.getContainer() : editor.getContentAreaContainer().querySelector('iframe');
			$j(container).height(value);
		}
	}
}
function handleMaxMinHeights(element, height){
	if (!element || !height)
		return;
	var $element = $(element),
		maxHeight = parseInt($element.getStyle('maxHeight'), 10),
		minHeight = parseInt($element.getStyle('minHeight'), 10),
		id = getAttributeValue($element, 'id');
	if ( height >= maxHeight ){
		if ( $('sizer_plus_' + id) )
		$('sizer_plus_' + id).addClassName('disabled');
		$('sizer_plus_' + id).setAttribute('aria-disabled', "true");
		$element.setStyle({
			overflowY: 'auto'
		});
		return;
	}
	if ( height <= minHeight ) {
		if ( $('sizer_minus_' + id) )
		$('sizer_minus_' + id).addClassName('disabled');
		$('sizer_minus_' + id).setAttribute('aria-disabled', "true");
		return;
	}
	$('sizer_plus_' + id).removeClassName('disabled');
	$('sizer_minus_' + id).removeClassName('disabled');
	$('sizer_plus_' + id).removeAttribute('aria-disabled');
	$('sizer_minus_' + id).removeAttribute('aria-disabled');
}
function resizeTextAreaIframe() {
	var args = Array.prototype.slice.call(arguments, 0),
		tf = $("textarea_iframe." + id),
		doctype = args[0],
		id = args[1],
		height,
		oldRows,
		rows;
		if (doctype){
			height = args[2];
		} else {
			rows = args[2];
			oldRows = args[3];
		}
	if (!tf){
		var skipAdd60 = args[4];
		var adder = skipAdd60 ? 0 : 60;
		tf = $(id + '_ifr');
		if (!tf)
tf = $('textarea_iframe.' + id);
if (tf){
var tbl = $(id + '_tbl');
			var readOnlyDiv = $(id + '_readOnlyDiv');
			if (doctype){
				tf.style.height = (height + adder) + "px";
				if ( tbl ){
tbl.style.height = (height + adder) + "px";
				}
if ( readOnlyDiv ) {
					readOnlyDiv.style.height = (height + adder) + "px";
				}
				var tfDoc = tf.contentDocument || tf.contentWindow.document;
				var editor = getTinyEditor(id);
				var isReadonly = editor && editor.readonly;
				if (tfDoc && isReadonly) {
					function setHeightToScrollHeight() {
						if (tfDoc.documentElement.scrollHeight !== parseInt(tf.style.height, 10)) {
							tf.style.height = tfDoc.documentElement.scrollHeight + "px";
						}
					}
					setHeightToScrollHeight();
					window.onresize = setHeightToScrollHeight;
					CustomEventManager.on('tab.activated', function(){
						setHeightToScrollHeight();
					})
				}
			} else {
var elHeight = parseInt(tf.clientHeight);
if (elHeight == 0 && readOnlyDiv)
					elHeight = parseInt(readOnlyDiv.style.height);
var pixelsPerRow = 12;
				var newHeight = elHeight + (rows - oldRows) * pixelsPerRow;
				tf.style.height = newHeight + "px";
				if (tbl){
					tbl.style.height = (parseInt(tbl.style.height) + (newHeight-elHeight)) + "px";
				}
if (readOnlyDiv){
					readOnlyDiv.style.height = newHeight + "px";
				}
			}
		}
	}
	if (!tf)
		return;
	if (!tf.parentNode)
		return;
	if (!tf.parentNode.nextSibling)
		return;
	var nid = tf.parentNode.nextSibling.id;
	if (nid != id)
		return;
	var elHeight = tf.clientHeight;
var pixelsPerRow = Math.round(elHeight / oldRows);
	tf.style.height = rows * pixelsPerRow + "px";
}
function toggleQuestionRows(thisclass, display, fl) {
	forcelabels = false;
	if (fl == true)
		forcelabels = true;
	var rows = $(document.body).select('.' + thisclass);
	for (i = 0; i < rows.length; i++) {
	  var element = rows[i];
	  var id = element.id;
	  if ('CATEGORY_LABEL' != id || forcelabels)
		  element.style.display = display;
	}
	var openStyle='none';
	var closedStyle='none';
	if ('none' == display) 
		openStyle = '';
	else
		closedStyle = '';
	var s = $(thisclass+'CLOSED');
	s.style.display=closedStyle;
	s = $(thisclass+'OPEN');				
	s.style.display=openStyle;	
}
function toggleWorkflow(id, expandPref) {
	var map = getMessages(['Expand', 'Collapse']);
	var table = $("workflow." + id);
	var spans = table.getElementsByTagName("span");
	for (var i = 0; i != spans.length; i++) {
		var span = spans[i];
		if (!span.getAttribute("stage"))
			continue;
		var spanImage = $(span.id + '.image');
		var spanText = $(span.id + '.text');
		if (span.getAttribute("selected") == 'true')
			spanText.style.color = "RGB(var(--now-button--secondary--color,var(--now-color--neutral-18,22,27,28)))";
		var filterImg = $('filterimg.' + id);
		if (expandPref == "false") {
			span.style.display = "";
			spanText.style.display = "none";
filterImg.src = "images/filter_hide16.gifx";
			filterImg.title = map["Expand"];
			filterImg.alt = map["Expand"];
			filterImg.setAttribute("data-original-title", map["Expand"]);
			span.setAttribute("aria-expanded", "false");
		} else {
			span.style.display = "block";
			spanText.style.display = "";
			span.setAttribute("aria-expanded", "true");
filterImg.src = "images/filter_reveal16.gifx";
			filterImg.title = map["Collapse"];
			filterImg.alt = map["Collapse"];
			filterImg.setAttribute("data-original-title", map["Collapse"]);
		}
	}
	_frameChanged();
}
function toggleItemsEventHandler(event, id) {
	var e  = event || window.event;
	var code =  e.which || e.keyCode;
	
	if (code === 32 || code === 13) {
	    e.preventDefault();
	    
	    toggleItems(id);
	}
}
function togglePreference(id) {
	toggleItems(id);
}
function toggleItems(id, force) {
	var tables = $$("table");
	for (var i = 0; i < tables.length; i++) {
		var tableId = tables[i].id;
		if (tableId.indexOf("workflow.") == -1) 
			continue;
		
		var idParts = tables[i].id.split(".");
		if (id && tableId != "workflow." + id) 
			continue;
		
		var pref = getPref(idParts[1]);
		if (force != pref)
			toggleWorkflow(idParts[1], pref);
		
		if (id)
			break;				
	}
}
function getPref(id) {
	var filterImgSrc = $('filterimg.' + id).src
	if (filterImgSrc.indexOf('filter_hide') != -1) 
		return "true";
	 
	return "false";
}
document.addEventListener('keyup', checkForClientKeystroke) ;
function checkForClientKeystroke(evt) {
	if (evt.keyCode == 27 && window.g_popup_manager) {
		g_popup_manager.destroypopDiv();
		return;
	}
	if (evt.shiftKey && evt.ctrlKey && evt.keyCode == 74) {
		var gWindow = new GlideDialogWindow("client_js");
		gWindow.setTitle("JavaScript Executor");
		gWindow.setPreference('table', 'javascript_executor');
		gWindow.render();
		Event.stop(evt);
		return;
	}
	
	try {
		if (typeof parent.navVisible == "function") {
			if (evt.ctrlKey && evt.keyCode == 190 && !evt.shiftKey && !evt.altKey) {
				Event.stop(evt);
				if (parent.navVisible()) {
					parent.hideNav();
					parent.hide("banner_top_left");
					parent.hide("banner_top_right");
				} else {
					parent.showNav();
					parent.show("banner_top_left");
					parent.show("banner_top_right");
				}
			}
		}
	} catch (e) { }
}
function toggleHelp(name) {
   var wrapper = $('help_' + name + '_wrapper');
   var image = $('img.help_' + name + '_wrapper');
   if (wrapper.style.display=="block") {
	   wrapper.style.display = "none";
image.src = "images/filter_hide16.gifx";
   } else {
	   wrapper.style.display = "block"; 
image.src = "images/filter_reveal16.gifx";
   }
image.alt = getMessage("Display / Hide");
   _frameChanged();
}
function validateHex(field) {
  var num = field.value;
  var valid = isHex(num);
  if (!valid) {
    var sName = '';
    if (field.name != null)
       sName = ' of '+field.name+' ';
    alert("The entered value "+sName+"is not hex.  Please correct.");  
  }
}
function isHex(num) {
  var str = num.replace(new RegExp('[0-9a-fA-F]','g'),'');
  if (str.length > 0) 
    return false;
    
  return true;
}
function setLightWeightLink(name) {
	var v = $(name);
	if (!v)
	    return;
var link = $(name + "LINK");
var replace = $(name + "LINKreplace")
	if (!link && !replace)
	    return;
	var vis = "hidden";
	if (v.value != '')
	    vis = "";
	setLightWeightLinkDisplay(link, vis);
	setLightWeightLinkDisplay(replace, vis);
}
function setLightWeightLinkDisplay(el, vis) {
	if (!el)
		return;
	el.style.visibility = vis;
	el.style.display = vis == 'hidden' ? 'none' : '';
}
function toggleDebug(id) {
	id = id.split('.')[1];
	for (var i =0; i < 1000; i++) {
	    var widgetName = 'debug.' + id + '.' + i;
	    var w = $(widgetName);
	    if (!w)
	    	return; 	
	    	
	    w.toggle();
	}
}
function enterSubmitsForm(e, enter_submits_form) {
if (e.keyCode != 13)
		return true;
		
if (e.ctrlKey == true)
		return false;
var source = Event.element(e);
	var $source = $j(source);
	if (source.getAttribute("data-type")  && e.keyCode == 13 && source.getAttribute("data-type") == 'ac_reference_input')
	    return false;
	
if (source && source.type=="textarea")
		return true;
	if (source.getAttribute("contenteditable") === "true" && $source.is('.multiLinePill'))
		return true;
	if ($source.is('.delete_pill.remove-pill'))
		return true;
	if ($source.is('.dot_walk_btn'))
		return true;
if (source && source.type == "submit" || source.type == "button") {
if (source.disabled == false && source.onclick) {
source.onclick();
return false;
		}
	}
if (enter_submits_form == 'false')
		return false;
	var submitHeaderElements = $(document.body).select(".header").filter(function (el) {
		return el.type === 'submit' && !el.disabled;
});
	if (!submitHeaderElements.length)
		return false;
	var submitButton = submitHeaderElements.find(function(el) {
		return (el.value === 'sysverb_insert'
			|| el.value === 'sysverb_insert_and_stay'
			|| el.value === 'sysverb_update'
			|| el.value === 'sysverb_update_and_stay'
			|| el.value === 'sysverb_save'
			|| el.value === 'sys_security_acl_insert_with_roles');
	}) || submitHeaderElements[0];
source.blur();
	setTimeout(function(){
		submitButton.onclick();
	}, 0);
return false;
}
function gsftPrompt(title, question, onPromptComplete, onPromptCancel) {
		var dialog = new GlideDialogWindow('glide_prompt', false);
		dialog.setTitle(title);
		dialog.setPreference('title', question);    	
		dialog.setPreference('onPromptComplete', onPromptComplete);
		dialog.setPreference('onPromptCancel', onPromptCancel);		
		dialog.render();
}
function gsftConfirm(title, question, onPromptSave, onPromptCancel, onPromptDiscard) {
	var width, dialogClass = GlideDialogWindow;
	if (window.GlideModal) {
		dialogClass = GlideModal;
		width = 400;
	}
	var dialog = new dialogClass('glide_confirm', false, width);
	dialog.setTitle(title);
	dialog.setPreference('title', question);
	dialog.setPreference('onPromptSave', onPromptSave);
	dialog.setPreference('onPromptCancel', onPromptCancel);
	dialog.setPreference('onPromptDiscard', onPromptDiscard);
	dialog.render();
}
function tsIndexCreatorPopup(tableName){
	var gDialog = new GlideDialogWindow("dialog_text_index_creator");
	gDialog.setSize(400, 250);
	gDialog.setPreference("table_name", tableName);
	if (tableName != "")
		gDialog.setTitle('Generate Text Index');
	else
		gDialog.setTitle('Regenerate All Text Indexes');
	
	gDialog.render();
}
function isTextDirectionRTL(){
	return g_text_direction == 'rtl' ? true : false;
}
function simpleRemoveOption(sourceSelect) {
	var sourceOptions = sourceSelect.options;
	var selectedIds = [];
	var index = 0;
	for (var i = 0; i < sourceSelect.length; i++) {
		option = sourceOptions[i];
		if (option.selected) {
			selectedIds[index] = i;
			index++;
		}
	}
	for (var i = selectedIds.length - 1; i > -1; i--) 
		sourceSelect.remove(selectedIds[i]);
	sourceSelect.disabled = true;
	sourceSelect.disabled = false;
}
function saveAllSelected(fromSelectArray, toArray, delim, escape, emptyLabel, doEscape) {
	var translatedEmptyLabel = getMessage(emptyLabel);
	for (var i = 0; i < fromSelectArray.length; i++) {
		if (typeof fromSelectArray[i] == 'undefined') {
			toArray[i].value = '';
			continue;
		}
		var toValue = "";
		for (var j = 0; j < fromSelectArray[i].length; j++) {
			if (!(fromSelectArray[i].length == 1 && fromSelectArray[i].options[0].value == translatedEmptyLabel)) {
				var val = fromSelectArray[i].options[j].value;
				if (doEscape)
					val = encodeURIComponent(val);
				toValue += val.replace(new RegExp(delim, "g"), escape + delim);
			}
			if (j + 1 < fromSelectArray[i].length) 
				toValue += delim;
		}
		toArray[i].value = toValue;
	}
}
function sortSelect (obj) {
	var maxSort = obj.getAttribute("max_sort");
	if (!maxSort || maxSort == 0) 
		maxSort = 500; 
	if (obj.length > maxSort && isMSIE && !isMSIE9) { return; }
    if (!sortSupported(obj)) { return; }
	if (!hasOptions(obj)) { return; }
	
	var o = [];
	var o2 = [];
	var o3 = [];
	for (var i=0; i<obj.options.length; i++) {
		var newOption = new Option( obj.options[i].text, obj.options[i].value, obj.options[i].defaultSelected, obj.options[i].selected);
		copyAttributes(obj.options[i], newOption);
		if (newOption.value.indexOf('split') > 0)
			o2[o2.length] = newOption;
		else if (newOption.value && newOption.value.substr(0,2) !=="u_" && (newOption.value.indexOf('formatter') > 0 || newOption.value.indexOf('component') > 0 || 
			    newOption.value.indexOf('annotation') > 0 || newOption.value.indexOf('chart') > 0))
			o3[o3.length] = newOption;
		else
		    o[o.length] = newOption;
	}
	
	if (o.length == 0)
		return;
	
	o = o.sort(
			function(a,b) { 
				if ((a.text.toLowerCase()+"") < (b.text.toLowerCase()+"")) { return -1; }
				if ((a.text.toLowerCase()+"") > (b.text.toLowerCase()+"")) { return 1; }
				return 0;
			} 
		);
	
	o3 = o3.sort(
			function(a,b) { 
				if ((a.text.toLowerCase()+"") < (b.text.toLowerCase()+"")) { return -1; }
				if ((a.text.toLowerCase()+"") > (b.text.toLowerCase()+"")) { return 1; }
				return 0;
			} 
		);
 
	for (var i = 0; i < o.length; i++) {
		var newOption = new Option(o[i].text, o[i].value, o[i].defaultSelected, o[i].selected);
		copyAttributes(o[i], newOption);
		obj.options[i] = newOption;
	}
	
	var counter = 0;
	for (var i = o.length; i < (o.length + o2.length); i++) {
		var newOption = new Option(o2[counter].text, o2[counter].value, o2[counter].defaultSelected, o2[counter].selected);
		copyAttributes(o2[counter], newOption);
		obj.options[i] = newOption;
		counter++;
	}
	
	var counter = 0;
	for (var i = (o.length + o2.length); i < (o.length + o2.length + o3.length); i++) {
		var newOption = new Option(o3[counter].text, o3[counter].value, o3[counter].defaultSelected, o3[counter].selected);
		copyAttributes(o3[counter], newOption);
		obj.options[i] = newOption;
		counter++;
	}
}
function copyAttributes(from, to) {
	var attributes = from.attributes;
	for (var n = 0; n < attributes.length; n++) {
		var attr = attributes[n];
		var aname = attr.nodeName;
		var avalue = attr.nodeValue;
		to.setAttribute(aname, avalue);
	}
	if (from.style.cssText)
		to.style.cssText = from.style.cssText;
}
function hasOptions(obj) {
	if (obj != null && obj.options != null)
		return true;
		
	return false;
}
function sortSupported(obj) {
	if (obj == null) 
		return false;
	
    var noSort = obj.no_sort || obj.getAttribute('no_sort');
    if (noSort) {
        return false;
    }
	return true;
}
;
/*! RESOURCE: /scripts/scoped_object_generators.js */
function ScopedGlideAjaxGenerator(scope) {
	var ScopedGlideAjax = function() {
		ScopedGlideAjax.prototype.initialize.apply(this, arguments);
	};
	ScopedGlideAjax.prototype = classExtendForScope({}, window.GlideAjax.prototype, {
		scope: scope,
        initialize: function(endpoint, url) {
            GlideAjax.prototype.initialize.call(this, endpoint, url);
            this.setScope(this.scope);
        },
        getXMLWait: function() {
    		var err_options = {
    	    		text: "Access to getXMLWait is not available in scoped applications.",
    	    		type: "system",
    	    		attributes: { type: "error" }
    	    };
			notifyFromWrappedScopedObject(err_options);
        },
        setScope: function(newScope) {
            if (newScope != this.scope && newScope !== "global") {
                var err_options = {
                    text: "Scoped applications cannot impersonate other scopes.",
                    type: "system",
                    attributes: { type: "error" }
                };
				notifyFromWrappedScopedObject(err_options);
                return;
            }
            return GlideAjax.prototype.setScope.call(this, scope);
        },
        addParam: function(param, value) {
            if (param == "sysparm_scope" && value != this.scope && value != "global") {
                var err_options = {
                    text: "Scoped applications cannot impersonate other scopes.",
                    type: "system",
                    attributes: { type: "error" }
                };
				notifyFromWrappedScopedObject(err_options);
                return;
            }
            return window.GlideAjax.prototype.addParam.call(this, param, value);
        }
    })
    return ScopedGlideAjax;
}
function ScopedGFormGenerator(scope) {
	var ScopedGForm =  function() {};
	
	if ("undefined" == typeof g_form) {
		return ScopedGForm;
	}
	if ("global" == scope) {
		return g_form;
	}
	ScopedGForm.prototype = g_form;
	var scoped_g_form = new ScopedGForm();
	function inScope(fieldName) {
		try {
			var ge = _getUIElement(fieldName);
			if (ge && scope == ge.getScope())
				return true;
			if(ge && ge.isInherited && (scope == g_form.getScope()))
				return true;
		} catch (e) {
			jslog(e);
		}
		return false;
	}
	function _getUIElement(fieldName) {
		if (g_form.hasVariablesPrefix && g_form.removeVariablesPrefix)
			if (g_form.hasVariablesPrefix(fieldName))
				fieldName = g_form.resolveNameMap(g_form.removeVariablesPrefix(fieldName));
		return g_form.getGlideUIElement(fieldName) || g_form.getGlideUIElement(g_form.resolveNameMap(fieldName));
	};
	function _noCallbackError(displayName, fieldName) {
		var text = displayName + " for " + fieldName + " not allowed: missing callback function as parameter";
		console.error(text);
		jslog(text);
	}
	
	function _showScopeError(displayName, fieldName, value) {
		var text = displayName + " " + value + " not set on field " + fieldName + ": cross-scope access denied.";
		opticsLog(scoped_g_form.getTableName(), fieldName, text);
		if (g_form.isFieldVisible(fieldName))
			console.error(text);
		jslog(text);
	}
	function validField(fieldName) {
		fieldName = g_form.removeCurrentPrefix(fieldName);
		return g_form.hasField(fieldName) || g_form.getPrefixHandler(fieldName);
	}
	
	scoped_g_form.setReadOnly = function(fieldName, disabled) {
		if (!validField(fieldName))
			return;
		
		if (inScope(fieldName))
			return g_form.setReadOnly(fieldName, disabled);
			
		_showScopeError("ReadOnly", fieldName, disabled);
	}
	scoped_g_form.setReadonly = function(fieldName, disabled) {
		if (!validField(fieldName))
			return;
		
		if (inScope(fieldName))
			return g_form.setReadonly(fieldName, disabled);
			
		_showScopeError("ReadOnly", fieldName, disabled);
	}
	
	scoped_g_form.setMandatory = function(fieldName, mandatory) {
		if (!validField(fieldName))
			return;
		
		if (inScope(fieldName))
			return g_form.setMandatory(fieldName, mandatory);
		
		_showScopeError("Mandatory", fieldName, mandatory);
	}
	scoped_g_form.setDisplay = function(fieldName, display) {
		if (!validField(fieldName))
			return;
		
		if (inScope(fieldName))
			return g_form.setDisplay(fieldName, display);
			
		_showScopeError("Display", fieldName, display);
	}
	scoped_g_form.setDisabled = function(fieldName, disabled) {
		if (!validField(fieldName))
			return;
		
		if (inScope(fieldName))
			return g_form.setDisabled(fieldName, disabled);
			
		_showScopeError("Disabled", fieldName, disabled);
	}
	scoped_g_form.getReference = function(fieldName, callBack) {
		if (!validField(fieldName))
			return;
		
		if ('function' == typeof callBack)
			return g_form.getReference(fieldName, callBack);
			
		_noCallbackError("getReference", fieldName, false);
	}
	Object.defineProperty(scoped_g_form, "modified", {
		get: function () {
			return g_form.modified;
		},
		set: function (val) {
			g_form.modified = val;
		},
		enumerable: true,
		configurable: true
	});
	return scoped_g_form;
}
function ScopedGlideDialogWindowGenerator(scope) {
	var extendFrom = window.GlideDialogWindow ? GlideDialogWindow.prototype : GlideModal.prototype;
	var ScopedGlideDialogWindow = function() {
		ScopedGlideDialogWindow.prototype.initialize.apply(this, arguments);
	};
	ScopedGlideDialogWindow.prototype = classExtendForScope({}, extendFrom, {
        scope: scope,
        initialize: function(id, readOnly, width, height) {
            extendFrom.initialize.call(this, id, readOnly, width, height);
            this.setScope(this.scope);
        }
    });
    return ScopedGlideDialogWindow;
}
function classExtendForScope(extended, defaults, options) {
	if (window.jQuery)
		return jQuery.extend(extended, defaults, options);
	var prop;
	for (prop in defaults) {
		extended[prop] = defaults[prop];
	}
	for (prop in options) {
		extended[prop] = options[prop];
	}
	return extended;
}
function notifyFromWrappedScopedObject(msgObject) {
	jslog(msgObject.text);
	if (typeof nowapi !== 'undefined' && nowapi && typeof nowapi.hasOwnProperty('g_notification'))
		nowapi.g_notification.show(msgObject.attributes.type, msgObject.text);
	else if (typeof GlideUI != 'undefined')
		GlideUI.get().display(new GlideUINotification(msgObject));
}
;
/*! RESOURCE: /scripts/functions_reference.js */
function updateAndFlip(select, elementName) {
	var option = setSelectValue(select, elementName);
	onChange(elementName);
	refFlipImage(option, elementName);
}
function setSelectValue(select, elementName) {
	elementName = elementName || '';
	if (elementName.indexOf("sys_select.") === 0)
		elementName = elementName.replace("sys_select.", "");
	var value = '';
	var text = '';
	var option;
	if (select.selectedIndex != -1) {
		  option = select.options[select.selectedIndex];
		  value = option.value;
		  text = option.text;
	}
	  
	var id = gel(elementName);
	id.value = value;
	var idd = gel('sys_display.' + elementName);
	if (value == '')
		idd.value = '';
	else
		idd.value = text;
		 
	return option;
}
function refFlipImage(element, elementName, useText) {
	if (typeof g_form !== 'undefined' && !g_form.isFieldVisible(elementName))
return;
	var viewField = gel("view." + elementName);
	var viewRField = gel("viewr." + elementName);
	var viewHideField = gel("view." + elementName + ".no");
	var refid = gel(elementName);
	var value = element.value;
	
	if (!value) {
		hideObject(viewField);
		hideObject(viewRField);
		showObjectInline(viewHideField);
	} else {
		if(isDoctype()) {
			showObjectInlineBlock(viewField);
			showObjectInlineBlock(viewRField);
		} else {
			showObjectInline(viewField);
			showObjectInline(viewRField);
		}
		hideObject(viewHideField);
	}
}
function refFlipImageDisplay(element, dsp) {
	if (element)
		element.style.display = dsp;
}
function derivedFromChoiceListHasValue(elementName) {
	var parentName = elementName.substring(0, elementName.lastIndexOf('.'));
	if (parentName.indexOf('.') < 0)
		return false;
	var parent = gel(parentName);
	if (!parent || parent.getAttribute('choice') !== '3')
		return false;
	return !!parent.value || derivedFromChoiceListHasValue(parentName);
}
function emptyWithoutNoneRefChoiceListOnLoadHandler(elementName) {
	var element = gel(elementName);
	if (!element || !element.value)
		return;
	if (!derivedFromChoiceListHasValue(elementName)) {
		refFlipImage(element, elementName);
		onSelChange(elementName);
	}
}
function addSetDerivedReadOnlyListener(fieldName, disabled) {
	if (typeof g_form === 'undefined')
		return;
	var eventName = 'derived_waiting_removed.' + fieldName;
	var handler = function() {
		CustomEvent.un(eventName, handler);
		g_form.setReadonly(fieldName, disabled);
	};
	CustomEvent.unAll(eventName);
	CustomEvent.observe(eventName, handler);
}
;
/*! RESOURCE: /scripts/functions_onchange.js */
function onChange(elementName, fromSetTemplateValue, gForm){
	 var g_form = typeof gForm !== "undefined" ? gForm : this.g_form;
	elementName = elementName || '';
	var elementId = elementName;
	if (elementName.indexOf("sys_select.") === 0)
		elementName = elementName.replace("sys_select.", "");
	var eChanged,
		eOriginal,
		eDisplay,
		isMappingField = ifFieldHasElementMappingPrefix(elementName);
	if (isMappingField) {
		elementName = removeMappingPrefix(elementName);
		eChanged = gel(elementName);
		eOriginal = gel("sys_mapping.original." + elementName);
		eDisplay = gel("sys_mapping." + elementName);
	} else {
		eChanged = gel(elementName);
		eOriginal = gel("sys_original." + elementName);
		eDisplay = gel("sys_display." + elementName);
	
		if (eOriginal == null) {
			return;
		}
	}
	
	var vOriginal = eOriginal.value.trim() === '' ? '' : eOriginal.value;
	var vChanged = eChanged.value.trim() === '' ? '' : eChanged.value;
	var vDisplay = eDisplay ? eDisplay.value : null;
	var niElement = gel('ni.'+ elementName);
	if (niElement && niElement.type === 'checkbox') {
		if (vChanged === '')
			vChanged = "false";
	}
	if (isMappingField && !isFilterField(eChanged)) {
		eChanged.changed = (vDisplay != vOriginal);
	} else {
		if (!vChanged)
			eChanged.value = "";
		eChanged.changed = (vOriginal != vChanged);
	}
	if(!elementName.startsWith("IO:") && !elementName.startsWith("ni.VE") && !elementName.startsWith("ni.QS")) {
		onChangeLabelProcess(elementName);
	}
	setMandatoryExplained();
onSelChange(elementId, fromSetTemplateValue);
    
	clientScriptOnChange(elementName, eChanged, vOriginal, vChanged, g_form);
	fieldChanged(elementName, eChanged.changed, g_form);
 	if (eChanged.changed && typeof(g_form) != "undefined" && g_form.triggerOnUserChangeValue)
 		g_form.triggerOnUserChangeValue(elementName, vOriginal, vChanged);
	
	var onChangeData = {id : elementName, value : vChanged, modified : eChanged.changed};
	if(vDisplay)
		onChangeData.displayValue = vDisplay;
	var parentForm = $(elementName).up('form');
	parentForm && parentForm.fire('glideform:onchange', onChangeData);
	CustomEvent.fire("refFieldPreviewButtonChange", elementName, vChanged, vDisplay);
}
function isFilterField(element) {
	if (element && element.nextSibling)
		return element.nextSibling.getAttribute('gsft_template');
	return false;
}
function ifFieldHasElementMappingPrefix(fieldName) {
	if (fieldName === undefined) {
		return false;
	}
	
	return fieldName.indexOf('sys_mapping.') !== -1;
}
function removeMappingPrefix(fieldName) {
	return fieldName.replace("sys_mapping.", "");
}
function onChangeLabelProcess(elementName, value) {
	var el = gel(elementName);
	var statusNode = gel('status.' + elementName);
	onChangeLabelProcessByEl(el, statusNode, value);
}
function onChangeLabelProcessByEl(elementNode, statusLabel, value) {
	if (!elementNode || !statusLabel)
		return;
var mandatory = elementNode.getAttribute("mandatory") + "";
	var readonly = elementNode.disabled || hasClassName(elementNode,'disabled');
if (mandatory == null || mandatory == "null")
		mandatory = statusLabel.getAttribute("mandatory") + "";
	else {
		statusLabel.setAttribute("mandatory", mandatory);
	}
	elementNode.setAttribute("aria-required", mandatory === 'true');
	var displayNode = gel("sys_display." + elementNode.id);
if (displayNode)
		displayNode.setAttribute("aria-required", mandatory === 'true');
		
	var newClassName = statusLabel.getAttribute("oclass");
	var newFieldClassName = "";
var newTitle = statusLabel.getAttribute("title") || "";
	if (value == undefined)
		value = elementNode.value;
	if (mandatory == "true") {
		if (typeof value != 'undefined' && (value == "")) {
			newClassName = "mandatory";
			newFieldClassName = "is-required";
			newTitle = getMessage("Mandatory - must be populated before Submit");
		} else if (elementNode.changed) {
			newClassName = "mandatory changed";
			newFieldClassName = "is-filled";
			newTitle = getMessage("Field value has changed since last update");
		} else if (!readonly) {
			newClassName = "mandatory_populated";
			newFieldClassName = "is-prefilled";
			newTitle = getMessage("Mandatory - preloaded with saved data");
		} else {
			newClassName = "read_only";
			newTitle = getMessage("Read only - cannot be modified");
		}
	} else {
		if (elementNode.changed) {
			newClassName = "changed";
			newTitle = getMessage("Field value has changed since last update");
		} else if (readonly) {
			newClassName = "read_only";
if (newTitle == "" || newTitle == null)
				 newTitle = getMessage("Read only - cannot be modified");
		} else if (newClassName != "read_only" && newClassName != "changed") {
			newClassName = "";
			newTitle = "";
		}
	}
    var slm = gel("section508." + elementNode.id);
    if (slm) {
    	slm.setAttribute("title", statusLabel.getAttribute("title"));
    	slm.setAttribute("alt", statusLabel.getAttribute("title"));
    }
	newClassName += ' label_description';
	if (statusLabel.className == newClassName)
		return;
	var parentElement = gel("element." + elementNode.id);
	if (statusLabel.className.indexOf("required-marker") > -1)
		var previousMandatory = true;
	statusLabel.className = newClassName;
	if (previousMandatory && statusLabel.className.indexOf("required-marker") == -1 && parentElement && parentElement.className.indexOf("is-required") > -1)
		gel("element." + elementNode.id).className = parentElement.className.replace("is-required","");
	if (typeof handleAriaInvalidState === 'function')
	handleAriaInvalidState(elementNode.id, newFieldClassName === 'is-required');
	if (typeof $j !== 'undefined') {
	var tooltipButton = $j(statusLabel).siblings('.icon-help');
		if (tooltipButton && tooltipButton.length) {
		var baseTooltipMessage = tooltipButton.attr('label-title');
			var mandatoryTitle = getMessage("Mandatory - must be populated before Submit");
			if (baseTooltipMessage.indexOf(mandatoryTitle) !== -1) {
				baseTooltipMessage = baseTooltipMessage.replace(mandatoryTitle + '. ', '');
				tooltipButton.attr('label-title', baseTooltipMessage);
			}
		var fullTooltipLabel = (newTitle && baseTooltipMessage)
			? newTitle + '. ' + baseTooltipMessage
			: (newTitle || baseTooltipMessage);
			if (fullTooltipLabel) {
				tooltipButton
					.attr('alt', fullTooltipLabel)
					.attr('aria-label', fullTooltipLabel)
					.attr('data-dynamic-title', fullTooltipLabel)
					.show();
				if (mandatory === "true" && g_accessibility_tooltips)
					tooltipButton.attr('aria-hidden', 'false');
			} else
			tooltipButton.hide();
	} else 
		statusLabel.setAttribute("data-dynamic-title", newTitle);
	}
	if (document.documentElement.getAttribute('data-doctype') == 'true') {
		if (mandatory == 'true') {
			statusLabel.className = "required-marker label_description";
		}
		if (newFieldClassName) {
			var formGroup = elementNode.up('.form-group');
			formGroup.removeClassName('is-prefilled');
			formGroup.removeClassName('is-required');
			formGroup.removeClassName('is-filled');
			formGroup.addClassName(newFieldClassName);
		}
		statusLabel.setAttribute('aria-label', newTitle);
	}
    CustomEvent.fire("mandatory.changed", elementNode.id, newClassName);
}
function  clientScriptOnChange(elementName, eChanged, vOriginal, vChanged, gForm) {
   var splitMe = elementName.split('.');
   var tableName = splitMe[0];
   var fieldName = splitMe.slice(1).join('.');
   callChangeHandlers(tableName, fieldName, eChanged, vOriginal, vChanged, gForm);
}
function callChangeHandlers(tableName, fieldName, eChanged, vOriginal, vChanged, gForm) {
	var g_form = typeof gForm != "undefined" ? gForm : this.g_form;
	var widgetName = tableName + "." + fieldName;
	if (typeof (g_form) != "undefined") 
		g_form.hideFieldMsg(fieldName, true);
 	
	var template = eChanged.templateValue == 'true';
		   
	eChanged.templateValue = 'false';
    for (var i = 0; i < g_event_handlers.length; i++) {
        var handler = g_event_handlers[i];
		if (handler.fieldName != widgetName && handler.fieldName != fieldName)
		  continue;
		callChangeHandler(handler, this, eChanged, vOriginal, vChanged, false, template, g_form);
    }
    CustomEvent.fire("change.handlers.run", tableName, fieldName); 
}
function fireAllChangeHandlers() {
    for (var x = 0; x < g_event_handlers.length; x++) {
        var handler = g_event_handlers[x];  
        var elementName = handler.fieldName;
        var theWidget = gel(elementName);
        if (!theWidget)
            continue;
			
        var original = gel("sys_original." + elementName);
		var oldVal = 'unknown';
		if (original)
		    oldVal = original.value;
		var newVal;
		if ($(theWidget).getAttribute("type") == "radio") {
			newVal = oldVal;
			var elems = $$('#'+$(theWidget).getAttribute("id")).each(function(el){
				var checkedValue = el.getAttribute("checked");
				if (checkedValue != null && checkedValue.length > 0)
					newVal = el.value;
			});
		} else
			newVal = theWidget.value;
		callChangeHandler(handler, this, theWidget, oldVal, newVal, true, false);
    }
    CustomEvent.fire("change.handlers.run.all");
}
function callChangeHandler(handler, control, theWidget, oldVal, newVal, loading, template, gForm) {
	var g_form = typeof gForm != "undefined" ? gForm : this.g_form;
	try {
		callChangeHandler0(handler, control, theWidget, oldVal, newVal, loading, template);
	} catch (ex) {
		if (g_user.hasRole('client_script_admin')) {
			g_form.showFieldMsg(theWidget, "onChange script error: " + ex.toString() + "\n" +
				handler.handler.toString(), "error", false);
		} else {
			g_form.showFieldMsg(theWidget,
				"Script error encountered when changing this field - please contact your System Administrator",
				"error", false);
		}
		CustomEvent.fire('glideform:script_error', "onChange script error: " + ex.toString() + "\n" + handler.handler.toString());
	}
}
function callChangeHandler0(handler, control, theWidget, oldVal, newVal, loading, template) {
	CustomEvent.fire('glide_optics_inspect_put_cs_context', handler.handlerName, 'change');
    var startTimer = new Date();
	handler.handler.call(control, theWidget, oldVal, newVal, loading, template);
	var n = g_event_handlers_onChange[handler.handlerName];
	if (n)
	    CustomEvent.fire('page_timing', { name: 'CSOC', child: { description: n, sys_id: g_event_handler_ids[handler.handlerName], source_table: 'sys_script_client'}, startTime: startTimer, win: window });
	CustomEvent.fire('glide_optics_inspect_pop_cs_context', handler.handlerName, 'change');
}
function multiKeyDown(me, gForm) {
	var g_form  = typeof  gForm != "undefined" ? gForm : this.g_form;
	if ($(me.id).getAttribute("isquestionhtml") == "true")
        return;
	
var eOriginal = 'g_' + me.id.replace(/\./g, '_');
	var eOriginalSet = eval("typeof " + eOriginal + " != 'undefined'") && eOriginal !== 'g_slush';
	if (eOriginalSet)
		return;
    var oValue = escape(me.value);
    if (typeof(g_form) != "undefined" && eOriginal !== 'g_slush')
		var oValue = escape(g_form.getValue(me.name));
	eval(eOriginal + '="' + oValue + '";');
}
function multiModified(me, type, currentValue) {
	if ($(me.id).getAttribute("isquestionhtml") == "true") {
		$(me.id).onchange();
        return;
	}
	multiKeyDown(me);
	var form = findParentByTag(me, "form");
	var changeFlag = true;
	if (me.id && form) {
		var elementName = me.id;
var vOriginal = unescape(eval('g_' + me.id.replace(/\./g, '_')));
		if (currentValue === undefined) {
			currentValue = me.value;
			if (!currentValue.trim()) {
				me.value = "";
				currentValue = "";
			}
		}
		if (type == undefined)
			type = 'htmlarea';
		if (currentValue == vOriginal)
			changeFlag = false;
		
	    me.changed = changeFlag;
		onChangeLabelProcess(elementName, currentValue);
		if (type == 'tinymce' || (type.baseURL && type.baseURL.indexOf('tinymce') > -1)){
			clientScriptOnChange(elementName, me, 'unknown', currentValue);
		}else{
if ((typeof me.isFocused) == "boolean")
if (me.isFocused == false)
					clientScriptOnChange(elementName, me, 'unknown', currentValue);
		}
	}
	fieldChanged(elementName, changeFlag);
	var onChangeData = {id : me.id, value : me.value, modified: me.changed};
	$(me.up('form')).fire('glideform:onchange', onChangeData);
}
function formChangeKeepAlive() {
	var AJAX_KEEPALIVE_TIMEOUT = 900;
var nowsecs = parseInt((new Date()).getTime() / 1000);
var secs = parseInt(lastActivity.getTime() / 1000);
	var difference = nowsecs - secs;
	if (difference > AJAX_KEEPALIVE_TIMEOUT) {
		var aj = new GlideAjax("GlideSystemAjax");
		aj.addParam("sysparm_name", "isLoggedIn");
		aj.getXML(doNothing);
		
		lastActivity = new Date();
	}
}
function fieldChanged(elementName, changeFlag, gForm) {
	var g_form = typeof gForm !== "undefined" ? gForm : this.g_form;
	formChangeKeepAlive();
	if (typeof(g_form) != "undefined")
	   g_form.fieldChanged(elementName, changeFlag);
}
function addOnChangeEvent(fields, tableName, callfunc) {
	for (var i = 0; i < fields.length; i++) {
		var field = fields[i];
		
		if (typeof field == "string") {
			if (tableName)
				field = tableName + "." + field;
			field = gel(field);
		}
		
		if (field && field.tagName)
			Event.observe(field, 'change', callfunc);
	}
}
function setColorSwatch(fieldName, gForm) {
	var g_form = typeof gForm !== "undefined" ? gForm : this.g_form;
	var colorValue = $(fieldName).value;
	var colorDisplay = $("color_swatch." + fieldName);
	
	try {
		colorDisplay.style.backgroundColor = colorValue;
	} catch (ex) {
		g_form.showErrorBox(fieldName, getMessage("Invalid color") + ":" + colorValue);
		$(fieldName).value = "";
		colorDisplay.style.backgroundColor = "";
	}
}
;
/*! RESOURCE: /scripts/functions_fontsizer.js */
function setPreferredFontSize(increment) {
	var ruleStart = "BODY, TABLE, INPUT, SELECT, BUTTON, INPUT.TEXT, TEXTAREA, INPUT.button {font-size: "
	var ruleEnd = "}";
			
	var t = g_fontSize;
	if (g_fontSizePreference) 
	  t = g_fontSizePreference;
	
	var  t = t.split('p')[0];
	t = parseInt(t) + increment; 
	if (6 > t || t > 18)
		return;
	t += "pt";
	if (g_fontSizePreference != t) {
		g_fontSizePreference = t;
		setPreference('font-size', g_fontSizePreference);  
	    var al = getFontWindowList();
	    for (var i =0; i != al.length; i++) {
	       var w = al[i];
	       if (typeof w.deleteStyleSheet == 'function') {
	    	   w.deleteStyleSheet("font_size");
	    	   w.createStyleSheet(ruleStart + t + ruleEnd, "font_size");
	       }
		}
	}	
   	
	deleteStyleSheet("font_size");	
	createStyleSheet(ruleStart + t + ruleEnd, "font_size");
if (increment) {
	  var e = $("font_pref_text");
	  if (e)
		  e.innerHTML = "(" + g_fontSizePreference + ")";
	}
	
	CustomEvent.fireAll("fontsize.change");
}
		
function getFontWindowList() {
	var answer = new Array();
	var m = getMainWindow();
	if (m)
		answer.push(m);
	
	var m = getMainFormWindow();
	if (m)
		answer.push(m);
	
	var m = getNavWindow();
	if (m)
		answer.push(m);
	
	return answer;
}
				
function deleteStyleSheet(id) {
	var sheet = document.getElementById(id);
	if (sheet) {
		var head = document.getElementsByTagName("head")[0];
		head.removeChild(sheet);
	}
}			
		
function createStyleSheet(cssText, id) {
   var head = document.getElementsByTagName("head")[0];
   var rules = document.createElement("style");
rules.setAttribute("type", "text/css");
   if(id)
       rules.setAttribute("id", id);
   if (navigator.userAgent.toLowerCase().indexOf("msie") >= 0) {
           head.appendChild(rules);
           var ss = rules.styleSheet;
           ss.cssText = cssText;
       } else {
           try{
                rules.appendChild(document.createTextNode(cssText));
           }catch(e){
               rules.cssText = cssText; 
           }
           head.appendChild(rules);
      }
}		
		
function setPreferredFont() { 
  var t = getPreference('font-size');
  if (!t) 
	return; 
  g_fontSizePreference = t;
  setPreferredFontSize(0); 
}		
;
/*! RESOURCE: /scripts/functions_attachments.js */
function addEllipsisStyle(fileNameAnchor) {
	fileNameAnchor.style.display = 'inline-block';
	fileNameAnchor.style.textOverflow = 'ellipsis';
	fileNameAnchor.style.whiteSpace = 'nowrap';
	fileNameAnchor.style.overflow = 'hidden';
	fileNameAnchor.style.verticalAlign = 'middle';
	fileNameAnchor.setAttribute('data-use-ellipsis',"true")
}
function addAttachmentNameToForm(sysid, name, hoverText, image, showRename, showView, showPopup) {
	name = convertDoubleQuoteToUTF8(name);
	var modified = $("attachments_modified");
	if (modified)
		modified.value = "true";
	showObjectInline($("header_attachment_list_label"));
	var line = $("header_attachment_line");
	if (line)
		line.setStyle({visibility: 'visible', display: ''});
	var span = $(cel('span'));
	span.id = "attachment_" + sysid;
	var thisURL = getCurrentPageURL();
span.innerHTML = '<a href="sys_attachment.do?sys_id=' + sysid  + '&sysparm_this_url=' + thisURL + '" title="' + hoverText + '" style="margin-right:4px;" tabindex="-1"><img src="' + image + '" alt="" /></a>';
	var txt = $(cel('a'));
	if ('innerText' in txt)
		txt.innerText = name;
	else
		txt.textContent = name;
	txt.href='#';
	txt.onkeydown = function(event){return allowInPlaceEditModification(txt, event);};
	getMessage("Download {0}", function(msg) {
		txt.setAttribute("aria-label", new GwtMessage().format(msg, name));
	});
	txt.href='sys_attachment.do?sys_id=' + sysid + '&sysparm_this_url=' + thisURL;
	txt.setAttribute('data-id', sysid);
	txt.style.display = 'inline';
	txt.inPlaceEdit({
		selectOnStart: true,
		turnClickEditingOff: true,
		onBeforeEdit: function() {
			txt.lastAriaLabel = txt.getAttribute("aria-label");
			txt.removeAttribute("aria-label");
			txt.setAttribute("role", "textbox");
		},
		onEditCancelled: function() {
			txt.removeAttribute("role");
			if (txt.lastAriaLabel) {
				txt.setAttribute("aria-label", txt.lastAriaLabel);
			}
		},
		onAfterEdit: function(newName) {
			var oldName = this.oldValue;
            var ga = new GlideAjax('AttachmentAjax');
            ga.addParam('sysparm_type', 'initialRename');
            ga.addParam('sysparm_value', sysid);
            ga.addParam('sysparm_name', newName);
            ga.getXML(function(response) {
                var answer = response.responseXML.documentElement.getAttribute("answer");
     	         if (answer !== '0')
                    alert(new GwtMessage().getMessage("Renaming attachment {0} to new name {1} is not allowed", oldName, newName));
     	        $$('a[data-id="' + sysid + '"]').each(function(elem){
     	        	if ('innerText' in elem)
     	        		elem.innerText = (answer === '0') ? newName : oldName;
     	        	else
     	        		elem.textContent = (answer === '0') ? newName : oldName;
                });
				updateAriaLabels(sysid, newName);
            });
            txt.removeAttribute("role");
		}
	});
	txt.style.marginRight = "5px";
	var attachList = $("header_attachment_list");
	if (attachList && attachList.hasClassName("with-ellipsis"))
		addEllipsisStyle(txt);
	span.appendChild(txt);
	if (showRename == 'true') {
		var renameAttachment = $(cel('a'));
		renameAttachment.className = 'attachment rename_' + sysid;
		renameAttachment.href="#";
		renameAttachment.setAttribute("role", "button");
		getMessage("Rename {0}", function(msg) {
			renameAttachment.setAttribute("aria-label", new GwtMessage().format(msg, name));
		});
		renameAttachment.onclick = function() {
	        txt.beginEdit();
	    };
		renameAttachment.innerHTML = getMessage('[rename]');
		renameAttachment.setAttribute('data-now-ux-metrics-event', "Apply Attachment Action");
		renameAttachment.setAttribute('data-now-ux-metrics-fileName', name);
		renameAttachment.setAttribute('data-now-ux-metrics-attachmentId', sysid);
		renameAttachment.setAttribute('data-now-ux-metrics-action', 'Rename');
		span.appendChild(renameAttachment);
	}
	if (showView == "true") {
        var blank = document.createTextNode(" ");
        span.appendChild(blank);
        var view = cel("a");
        view.href="#";
		var setAriaLabel = function(msg) {
			view.setAttribute("aria-label", new GwtMessage().format(msg, name));
		};
		var downloadAttachment = NOW && NOW.g_forceDownloadAttachments;
		if (downloadAttachment)
			getMessage("Download {0}", setAriaLabel);
		else
			getMessage("View {0}", setAriaLabel);
		var newText = document.createTextNode(downloadAttachment ? getMessage("[download]") : getMessage("[view]"));
		view.setAttribute('data-now-ux-metrics-event', "Apply Attachment Action");
		view.setAttribute('data-now-ux-metrics-fileName', name);
		view.setAttribute('data-now-ux-metrics-attachmentId', sysid);
		view.setAttribute('data-now-ux-metrics-action', downloadAttachment ? 'Download' : 'View');
        view.appendChild(newText);
        view.className = "attachment view_" + sysid;
        if (showPopup == "false")
            view.href = "sys_attachment.do?sys_id=" + sysid + "&view=true";
        else
            view.onclick = function() {
                tearOffAttachment(sysid)
            };
        span.appendChild(view);
        span.appendChild(blank);
	}
	var storage = cel('li');
	storage.className = 'attachment_list_items';
	storage.appendChild(span);
	if (attachList)
		attachList.appendChild(storage);
    var header_attachment = $('header_attachment');
    if (header_attachment) {
    	_frameChanged();
    }
    var ga = new GlideAjax('AttachmentAjax');
    ga.addParam('sysparm_type', 'attachmentParentSysId');
    ga.addParam('sysparm_value', sysid);
    ga.getXMLAnswer(changeCount, null, 'increase');
	addEllipsesToAttachments();
	adjustAttachmentsVisibility();
}
function getCurrentPageURL() {
	return encodeURIComponent(window.location.pathname.substr(1) + window.location.search);
}
function updateAriaLabels(sysid, newName) {
	getMessage(["Download {0}", "View {0}", "Rename {0}"], function(msg) {
		var newDownloadText = new GwtMessage().format(msg["Download {0}"], newName);
		var newViewText = new GwtMessage().format(msg["View {0}"], newName);
		var newRenameText = new GwtMessage().format(msg["Rename {0}"], newName);
		$$('a[data-id="' + sysid + '"]').each(function(elem) {
			elem.setAttribute("aria-label", newDownloadText);
		})
		$$('.view_' + sysid).each(function(elem) {
			elem.setAttribute("aria-label", newViewText);
		})
		$$('.rename_' + sysid).each(function(elem) {
			elem.setAttribute("aria-label", newRenameText);
		})
	});
}
function addEllipsesToAttachments() {
	var list = document.getElementById('header_attachment_list');
	if (!list)
		return;
	var more = document.getElementById('more_attachments');
	if (more) {
		if (list.scrollHeight > list.clientHeight * 2)
			setElementStyle(more, 'display:block');
		else
			setElementStyle(more, 'display:none');
	}
}
function setElementStyle(elm, rules) {
	window.requestAnimationFrame(function() {
		elm.style.cssText = rules;
	});
}
function addAttachmentNameToDialog(id, fileName, canDelete, createdBy, createdOn, contentType, iconPath) {
	if ($('attachment') == null)
		return;
	var encryptCheck = gel("encrypt_checkbox");
	if (encryptCheck) {
		encryptCheck.checked = false;
		$('sysparm_encryption_context').value = "";
	}
	gel("please_wait").style.display = "none";
	if (typeof id == "undefined")
		return;
	var noAttachments = gel("no_attachments");
	if (noAttachments.style.display == "block")
		noAttachments.style.display = "none";
	  var table = gel("attachment_table_body");
	  var tr = cel("tr");
	  var td = cel("td");
	  td.style.whiteSpace = "nowrap";
	  td.colspan = "2";
	  if (canDelete) {
	     var input = cel("input");
	     var checkId = "sys_id_" + id;
	     input.name = checkId;
	     input.id = checkId;
	     input.type = "checkbox";
	     input.onclick = function() {setRemoveButton(gel(checkId));};
	     td.appendChild(input);
	     gel("delete_button_span").style.display = "inline";
	     var text = document.createTextNode(" ");
	     td.appendChild(text);
	     input = cel("input");
	     input.type = "hidden";
	     input.name = "Name";
	     input.value = "false";
	     td.appendChild(input);
	  }
	  var anchor = cel("a");
	  anchor.style.marginRight = "4px";
	  var thisURL = getCurrentPageURL();
	  anchor.href = "sys_attachment.do?sys_id=" + id + "&sysparm_this_url=" + thisURL;
	  anchor.title = " " + createdBy + "  " + createdOn;
	  var imgSrc = iconPath;
	  var img = cel("img");
	  img.src = imgSrc;
	  img.alt = anchor.title;
	  anchor.appendChild(img);
	  var text = $(cel('a'));
	  text.style.display = "inline";
	  getMessage("Download {0}", function(msg) {
		  text.setAttribute("aria-label", new GwtMessage().format(msg, fileName));
	  });
	  text.href='#';
	  text.href = "sys_attachment.do?sys_id=" + id + "&sysparm_this_url=" + thisURL;
	  text.onkeydown = function(event){return allowInPlaceEditModification(text, event);};
	  text.style.marginRight = "5px";
	  text.style.maxWidth = "75%";
	  text.style.display = "inline-block";
	  text.style.overflow = "hidden";
	  text.style.verticalAlign = "middle";
	  if ('innerText' in text)
	      text.innerText = fileName;
	  else
	      text.textContent = fileName;
	  text.setAttribute("data-id", id);
	  text.inPlaceEdit({
	      selectOnStart: true,
	      turnClickEditingOff: true,
		  onBeforeEdit: function() {
			  text.lastAriaLabel = text.getAttribute("aria-label");
			  text.removeAttribute("aria-label");
			  text.setAttribute("role", "textbox");
		  },
		  onEditCancelled: function() {
			  text.removeAttribute("role");
			  if (text.lastAriaLabel) {
				  text.setAttribute("aria-label", txt.lastAriaLabel);
			  }
		  },
		  onAfterEdit: function(newName) {
	          var ga = new GlideAjax('AttachmentAjax');
	          ga.addParam('sysparm_type', 'rename');
	          ga.addParam('sysparm_value', id);
	          ga.addParam('sysparm_name', newName);
	          ga.getXML();
	          $$('a[data-id="' + id + '"]').each(function(elem){
	              if ('innerText' in elem)
	                  elem.innerText = newName;
	              else
	                  elem.textContent = newName;
	          });
	          $$('span[data-id="' + id + '"]').each(function(el){
	              if ('innerText' in el)
	                  el.innerText = newName;
	              else
	                  el.textContent = newName;
	          });
	          updateAriaLabels(id, newName);
			  text.removeAttribute("role");
	      }
	  });
if (contentType == "text/html")
	     anchor.target = "_blank";
	  td.appendChild(anchor);
	  td.appendChild(text);
	  if ($('ni.show_rename_link').value) {
		  var renameAttachment = $(cel('a'));
		  renameAttachment.className = 'attachment';
		  renameAttachment.href = '#';
		  renameAttachment.setAttribute("role", "button");
		  getMessage("Rename {0}", function(msg) {
			  renameAttachment.setAttribute("aria-label", new GwtMessage().format(msg, fileName));
		  });
		  renameAttachment.onclick = function() {
		    text.beginEdit();
		  };
		  renameAttachment.innerHTML = getMessage('[rename]');
		  td.appendChild(renameAttachment);
	  }
	  var showView = gel("ni.show_attachment_view").value;
	  if (showView == "true") {
	      var blank = document.createTextNode(" ");
	      tr.appendChild(blank);
	      var view = cel("a");
	      href="#";
	      var setAriaLabel = function(msg) {
	    	  	view.setAttribute("aria-label", new GwtMessage().format(msg, name));
	      };
		  var downloadAttachment = NOW && NOW.g_forceDownloadAttachments;
		  if (downloadAttachment)
			getMessage("Download {0}", setAriaLabel);
	      else
			getMessage("View {0}", setAriaLabel);
		  var newText = document.createTextNode(downloadAttachment ? getMessage("[download]") : getMessage("[view]"));
	      view.appendChild(newText);
	      view.className = "attachment";
	      if (showPopup == "false")
	          view.href = "sys_attachment.do?sys_id=" + id + "&view=true";
	      else
	          view.onclick = function() {
	              tearOffAttachment(id)
	          };
	      td.appendChild(blank);
	      td.appendChild(view);
	  }
	  var showPopup = gel("ni.show_attachment_popup").value;
	  tr.appendChild(td);
	  table.appendChild(tr);
	  var alert508 = "$[GlideAccessibility.isEnabled()]";
	  if (alert508 == 'true')
	    alert(fileName + " " + anchor.title);
}
function computeAttachmentWidth() {
	var temp = $('header_attachment_list').select('li');
	var totalWidth = 0;
	for (var i = 0; i < temp.length; i++) {
		totalWidth += temp[i].getWidth();
	}
	return totalWidth;
}
function updateAttachmentCount(sysid) {
	var ga = new GlideAjax('AttachmentAjax');
    ga.addParam('sysparm_type', 'attachmentCount');
    ga.addParam('sysparm_value', sysid);
ga.getXMLAnswer(numberOfAttachments, null, sysid);
}
function numberOfAttachments(answer, sysid) {
	var number = parseInt(answer);
	var buttons = $$('.attachmentNumber_' + sysid);
	if (buttons[0] == undefined)
		$('header_attachment_list_label').down().innerHTML = number;
	else {
		for (var i = 0; i < buttons.length; i++) {
			buttons[i].innerHTML = number;
		}
	}
}
function getCurrentAttachmentNumber(sysid) {
	if ($$('.attachmentNumber_' + sysid)[0] == undefined) {
		if ($('header_attachment_list_label') == undefined)
			return undefined;
		else
			return $('header_attachment_list_label').down().innerHTML;
	}
	return $$('.attachmentNumber_' + sysid)[0].innerHTML;
}
function updateAttachmentCount2(number, sysid) {
	var buttons = $$('.attachmentNumber_' + sysid);
	if (buttons[0] == undefined)
		$('header_attachment_list_label').down().innerHTML = number;
	else {
		for (var i = 0; i < buttons.length; i++) {
			buttons[i].innerHTML = number;
		}
	}
	showHidePlusMore(number);
}
function getVisibleAttachmentsLimit() {
	return window.NOW.attachment.overflow_limit || 3;
}
function getPlusMoreAttachmentList() {
	var attachList = $("header_attachment_list");
	return !attachList || !attachList.hasClassName("with-plus-more") ? false : attachList;
}
function showHidePlusMore(number) {
	var header_attachment = $('header_attachment');
	if (!header_attachment)
		return;
	var plusMore = header_attachment.down('.plus_more');
	var limit = getVisibleAttachmentsLimit();
	plusMore.down('.badge').innerHTML = "+" + (number - limit);
	if (number <= limit)
		plusMore.addClassName("hidden");
	else
		plusMore.removeClassName("hidden");
	adjustAttachmentsVisibility();
}
function adjustAttachmentsVisibility() {
	var attachList = getPlusMoreAttachmentList();
	if (!attachList)
		return;
	var attachmentsFound = 0;
	var limit = getVisibleAttachmentsLimit();
	attachList.select('.attachment_list_items').each(function(elem) {
		var attachment = elem.down('span');
		if (attachment && attachment.innerHTML)
			attachmentsFound++;
		if (attachmentsFound <= limit)
			elem.removeClassName('hidden');
		else
			elem.addClassName('hidden');
	});
}
function changeCount(sysid, type) {
	var number = getCurrentAttachmentNumber(sysid);
	if (number != undefined) {
		if (type == 'increase')
			number++;
		else
			number--;
		updateAttachmentCount2(number, sysid);
	}
}
function deleteAttachment(sysid) {
	var gr = new GlideRecord('sys_attachment');
	var parentRecord = recordAttachmentBelongsTo(sysid);
	gr.addQuery('sys_id', sysid);
	gr.query();
	if (gr.next()) {
		if (confirmDeletion(gr.file_name, sysid)) {
			var ol = GlideOverlay.get('attachment_manager_overlay');
			alert(ol._box.select('div[data-id="' + sysid + '"]')[0].up().up().inspect());
			ol._box.select('div[data-id="' + sysid + '"]')[0].up().up().remove();
			ol.autoDimension();
			$("attachment_" + sysid).remove();
			if (numberOfAttachments(gr.table_sys_id) == 1) {
			    hideObject($("header_attachment_list_label"));
			    var line = $("header_attachment_line");
			    if (line) {
			    	line.setStyle({
			    		visibility: "hidden",
			    		display: "none"
			    	});
			    }
			    $("header_attachment").style.height = "auto";
			   ol.close();
			}
			gr.deleteRecord();
			updateAttachmentCount(parentRecord);
		}
	}
}
function saveAttachment(tableName, sys_id, allowAttachment) {
	var g_dialog = new GlideModal('attachment', false, 500);
    g_dialog.setTitle(getMessage('Attachments'));
	g_dialog.setPreference('target_table', tableName);
	g_dialog.setPreference('target_sys_id', sys_id);
	g_dialog.setPreference('focusTrap', true);
	if (allowAttachment)
		g_dialog.setPreference('sc_override', 'true');
	g_dialog.setPreference('attachment_disabled',
			(window["AttachmentUploader"] ?  AttachmentUploader.isAttachmentDisabled() : "false"));
	g_dialog.setPreference('focusTrap', true);
	g_dialog.on("closeconfirm", _saveAttachmentConfirm);
    g_dialog.render();
}
function _saveAttachmentConfirm(dialog) {
	var attachmentRows = $$('.attachmentRow');
	var value = '';
	for (var i = 0; i < attachmentRows.length; i++) {
		if (isMSIE) {
			var files = attachmentRows[i].select('input')[0].getValue();
			if (!files.empty())
				value += files + "\n";
		} else {
			var files = attachmentRows[i].select('input')[0].files;
			for (var j = 0; j < files.length; j++) {
				if (files[j] != null) {
					value += files[j].name + "\n";
				}
			}
		}
	}
	if (!value.empty())
		if (!confirm(getMessage("Close before uploading attachments?") + "\n" + value.substring(0, value.length - 1)))
			return false;
	_saveAttachmentClose();
	return true;
}
function _saveAttachmentClose() {
	var modified = $("attachments_modified");
	if (modified) {
		var attachmentsModified = modified.value;
		if (attachmentsModified != "true")
			return;
	}
if (typeof g_form == "undefined")
		return;
	if (g_form.newRecord) {
g_form.modified = true;
		CustomEvent.fireAll('form.isModified', {uniqueValue: g_form.getUniqueValue(), isModified: g_form.modified, iframeElId: window.frameElement ? window.frameElement.id : null});
	}
	if (typeof GlideLists2 == "undefined")
		return;
    for (var id in GlideLists2) {
        var list = GlideLists2[id];
        if (list.getTableName() === 'sys_attachment')
            list.refresh();
    }
}
function allowInPlaceEditModification(elem, event) {
	var length = (elem.textContent != null) ? elem.textContent.length : elem.innerText.length;
	var max_length = maximumCharacterLimit();
	if (length >= max_length) {
		var keyCode = (event) ? event.keyCode : window.event.keyCode;
		switch (keyCode) {
		 case Event.KEY_LEFT:
		 case Event.KEY_RIGHT:
		 case Event.KEY_UP:
		 case Event.KEY_DOWN:
		 case Event.KEY_BACKSPACE:
		 case Event.KEY_DELETE:
			return true;
		 default:
			var key = "Filename has reached the character limit of {0}";
			var gMessage = new GwtMessage();
			gMessage.fetch([key], function(msgs) {
				var msg = gMessage.format(msgs[key], max_length);
				alert(msg);
			});
			return false;
		}
	}
	return true;
}
function maximumCharacterLimit() {
	   var f = $('header_attachment_list');
	   if (f)
		   return f.getAttribute('data-max-filename-length');
	   return 100;
}
function confirmDeletion(file_name, sysid) {
	var r = confirm("Are you sure you want to delete "
			+ file_name
			+ "?");
	return r;
}
function saveFileAttachment(tableName, gotourl) {
	var form = document.forms[tableName+'.do'];
	var viewwidget = form['sysparm_view'];
	if (viewwidget)
		gotourl += '&sysparm_view=' + viewwidget.value;
	form.sys_action.value = 'sysverb_check_save';
	addInput(form, 'HIDDEN', 'sysparm_goto_url', gotourl);
	var okToSubmit = true;
	var mandatoryAttachmentElements = g_form.elements.filter(function(element) {
		return element.getType() === 'file_attachment' && element.isMandatory();
	});
	mandatoryAttachmentElements.forEach(function(element) {
		element.setMandatory(false);
	});
	if (typeof form.onsubmit == "function")
		okToSubmit = form.onsubmit();
	mandatoryAttachmentElements.forEach(function(element) {
		element.setMandatory(true);
	});
	if (okToSubmit) {
		CustomEvent.fireTop("glide:form_submitted");
		form.submit();
	}
	return false;
}
function deleteFileAttachment(attachment_id, table_name, source_field, source_id) {
	var field_input_id = table_name.concat('.',source_field);
    var ajax = new GlideAjax("AttachmentAjax");
	ajax.addParam("sysparm_value", attachment_id);
	ajax.addParam("sysparm_table_name", table_name);
	ajax.addParam("sysparm_source_field", source_field);
	ajax.addParam("sysparm_source_id", source_id);
	ajax.addParam("sysparm_type", "delete");
	ajax.getXML(doNothing);
	var attachmentspan = $(attachment_id + "_attachment");
	if (attachmentspan)
		attachmentspan.parentNode.removeChild(attachmentspan);
	if (field_input_id) {
		var editdiv = gel('edit.' + field_input_id);
		if (editdiv)
			editdiv.parentNode.removeChild(editdiv);
		var noattachmentspan = $(field_input_id + "_noattachment");
		if (noattachmentspan)
			noattachmentspan.style.visibility = "visible";
		var input = gel(field_input_id);
		if (input && input.value) {
			input.value = '';
			onChangeLabelProcess(field_input_id);
		}
	}
	return false;
}
function pushNotAvailableMessage(attachmentName) {
g_form.addErrorMessage(new GwtMessage().getMessage("The file <b> {0} </b> did not pass security scan and cannot be downloaded", attachmentName.escapeHTML()));
}
function validateSizeAndExt(field) {
	var form = $('attach_new_file');
	var maxSize = (form.max_size && form.max_size.value) ? form.max_size.value : 0;
	var fileTypes = (form.file_types && form.file_types.value) ? form.file_types.value : "";
	var file = field.files[0];
	var gMessage = new GwtMessage();
	var allowedSize = maxSize * 1048576;
	var warningMessages = [];
	if (file.size === 0)
		warningMessages.push(gMessage.getMessage("Attachment is empty."));
	if (file.size > allowedSize && allowedSize !== 0)
		warningMessages.push(gMessage.getMessage("{0} is {1}. The maximum file size is {2}.", file.name, getDisplaySize(file.size), getDisplaySize(allowedSize)));
	var fileExtension = file.name.split(".").length > 1 ? file.name.split(".").pop() : "";
	var allowedExtensions = fileTypes.length === 0 ? [] : fileTypes.split(",");
	var allowedExtensionsLength = allowedExtensions.length;
	var validExtension = allowedExtensionsLength === 0;
	for (var i=0; i < allowedExtensionsLength; i++) {
		if (fileExtension.toLowerCase() === allowedExtensions[i].trim().toLowerCase()) {
			validExtension = true;
			break;
		}
	}
	if (!validExtension)
		warningMessages.push(gMessage.getMessage("{0} has a prohibited file extension.", file.name));
	if (warningMessages.length > 0) {
		alert(warningMessages.join("\n"));
		field.clear();
	}
}
;
/*! RESOURCE: /scripts/functions_calendar.js */
function nextCalendarAction(duration, year, month, day, calendarID, styleField, event) {
  	var form = document.getElementsByName('dash_form')[0];
  	if (form) {
	  	var name = form.dashboard_name.value;
	  	var url = "sys_dashboard_template.do?";
	  	url += "sysparm_query=name=" + name;
	  	url += "&sysparm_calview="+duration;
	  	url += "&sysparm_year="+year;
	  	url += "&sysparm_month="+month;
	  	url += "&sysparm_day="+day;
		var viewwidget = form['sysparm_view'];
		if (viewwidget)
			url += '&sysparm_view=' + viewwidget.value;
	  	window.location = url; 
  	} else {
	  	form = document.getElementsByName('calendarform')[0];
	  	if (form == null) {
	  		if (typeof $j != "undefined" && calendarID != null && calendarID.length) {
		  		var element = event.srcElement;
				if (!element)
					element = event.target;
				var content = $j(element).closest(".report_content");
				if (content.length) {
					var cstyle = null;
	                media = document.getElementsByName('sysparm_calstyle_choice');
	                if (media != null) {
	                    for (var i = 0; i < media.length; i++) {
	                        var r = media[i];
	                        if (r.checked) {
	                            cstyle = r.value;
	                            break;
	                        }
	                    }
	                }
	                if (!cstyle) {
	                	media = $("sysparm_calstyle" + calendarID);
	                	if (media != null)
	                		cstyle = media.value;
	                }
					
					var params = "sysparm_calview=" + duration;
					params += "&sysparm_year=" + year;
					params += "&sysparm_month=" + month;
					params += "&sysparm_day=" + day;
					params += "&sysparm_calstyle=" + cstyle;
	           		drillReport(content.parent(), calendarID, "", params);
					return;
				}
		  	}
	  	    form = document.getElementsByName('reportform_control')[0];
	  	}
	  	if (form == null) {	  	    
	  	    form = document.getElementsByName('history')[0];
	  	    if (form != null) {	      
		    	addInput(form, 'HIDDEN', 'sysparm_stack', "no");
		    }
	  	}
	  	
	  	if (form != null) {
		  	addInput(form, 'HIDDEN', 'sysparm_calview', duration);
		  	addInput(form, 'HIDDEN', 'sysparm_year', year);
		  	addInput(form, 'HIDDEN', 'sysparm_month', month);
		  	addInput(form, 'HIDDEN', 'sysparm_day', day);
		  	var media = $('sysparm_media');
		  	if (media != null) {
		     	addInput(form, 'HIDDEN', 'sysparm_media', media.value);
		  	}
		  	media = $('sysparm_view');
		  	if (media != null) {
		     	addInput(form, 'HIDDEN', 'sysparm_view', media.value);
		  	}
		    media = document.getElementsByName('sysparm_calstyle_choice');
		    if (media != null) {
		       for (var i = 0; i < media.length; i++) {
		          var r = media[i];
		          if (r.checked) {
		             addInput(form, 'HIDDEN', 'sysparm_calstyle', r.value);
		             break;
		          }
		  	   }
		  	}
		  	media = $('sysparm_calstyle');
		  	if (media != null) {
		     	addInput(form, 'HIDDEN', 'sysparm_calstyle', media.value);
		  	}
	  	    if (typeof form.onsubmit == "function")
		  	   form.onsubmit();
	  		form.submit();
	  	} else {
	  	    var url = "calendar_view.do?";
	    	url += "sysparm_calview="+duration;
	    	url += "&sysparm_year="+year;
	    	url += "&sysparm_month="+month;
	    	url += "&sysparm_day="+day;
	    	if (styleField)
	    	   url += "&sysparm_calstyle="+styleField;
	  		window.location = url; 
	  	}
    }
}
;
/*! RESOURCE: /scripts/functions_email.js */
function sendEmail() {
    var form = document.forms['emailclient'];
	addInput(form, 'HIDDEN', 'EMAIL-CLIENT', 'send');
    if (typeof form.onsubmit == "function") {
      form.onsubmit();  
    }
    form.submit();
}
function mailTo(field) {
	var nameField = $(field);
	
	if (nameField && nameField.value) {
		window.top.location = "mailto:" + nameField.value;
	}
}
function setCannedText(selectBox) {
	var theOption = selectBox.options[selectBox.selectedIndex];
	var messageText = theOption.value;
	var body = $('message.text');
	if (tiny_html_editor && typeof tinymce != "undefined") {
		tinymce.EditorManager.activeEditor.setContent(messageText);
	} else {
		body.value = messageText;
		if (body.htmlArea)
			body.htmlArea._doc.body.innerHTML = messageText;
	}
}
function appendCannedText(selectBox) {
	var theOption = selectBox.options[selectBox.selectedIndex];
	var messageText = theOption.value;
	if (!tiny_html_editor || typeof tinymce == "undefined") {
		return;
	}
	tinymce.EditorManager.activeEditor.execCommand('mceInsertContent', false, messageText);
	jQuery(selectBox).select2("val",'');
}
function isEmailValid(value){
	var problemMsg = isEmailValidWithReason(value);
	if (problemMsg != "") {
		jslog("isEmailValid: " + problemMsg);
		return false;
	}
	return true;
}
function isEmailValidWithReason(value) {
var localPartChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%*/?|^{}`~&'+-=_.";
	var domainChars =    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.";
	
	if (value.indexOf("@") == -1)
		return "missing @ sign";
	var s = value.split("@");
	if (s.length != 2)
		return "too many at signs";
			
	if (!containsOnlyChars(localPartChars, s[0]))
		return "invalid character before the at sign";
	if (s[0].length < 1)
		return "at least one character must be before the at sign";
	if (s[0].substr(0,1) == ".")
		return "period cannot be the first character";
	if (s[0].substr(s[0].length-1,1) == ".")
		return "period cannot be the last character before the at sign";
	var localPeriods = s[0].split(".");
	for(var i=0;i<localPeriods.length;i++){
		if(!localPeriods[i].length>0){
			return "local address contains dot-dot";
		}
	}	
		
	if (!containsOnlyChars(domainChars, s[1]))
		return "invalid character after the at sign";
	var periodIndex = s[1].indexOf(".");
	if (periodIndex == -1)
		return "missing period after the at sign";
	if (periodIndex == 0)
		 return "period cannot be the first character after the at sign";
	var periods = s[1].split(".");
	for(var i=0;i<periods.length;i++){
		if(!periods[i].length>0){
			return "domain contains dot-dot";
		}
	}
	var lastPeriod = periods[periods.length-1];
	if (lastPeriod.length < 1)
		return "must be at least 1 character after the last period";
	if (!isAlphaNum(s[1].substr(0,1)))
		return "the first character after the at sign must be alphanumeric";
	if (!isAlphaNum(s[1].substr(s[1].length-1,1)))
		return "the last character must be alphanumeric";
return "";
}
;
/*! RESOURCE: /scripts/functions_user_image.js */
function saveUserImage(tableName, gotourl) {
	var sysparmRecordScope = g_form.getValue("sysparm_record_scope");
	gotourl = gotourl.replace("$sysparm_record_scope", sysparmRecordScope);
	var sysparmTransactionUpdateset = g_form.getValue("sysparm_transaction_update_set");
	gotourl = gotourl.replace("$sysparm_transaction_update_set", sysparmTransactionUpdateset);
	var form = document.forms[tableName+'.do'];
	var viewwidget = form['sysparm_view'];
	if (viewwidget)
		gotourl += '&sysparm_view=' + viewwidget.value;
	form.sys_action.value = 'sysverb_check_save';
	addInput(form, 'HIDDEN', 'sysparm_goto_url', gotourl);
	var okToSubmit = true;
	if (typeof form.onsubmit == "function") 
	  okToSubmit = form.onsubmit();
	  
	if (okToSubmit)
		form.submit();
	return false;
}
function validateVideoFile(fileExtensions) {
	var file = getAttachedFile();
	var isValid = validateWithExtensions(file.value, fileExtensions);
	if (!isValid) {
		alert(file.value + " isn't a recognized video format");
		file.clear();
		return false;
	}
	isValid = validateSize(file);
	return isValid;
}
function validateAudioFile(fileExtensions) {
	var file = getAttachedFile();
	var isValid = validateWithExtensions(file.value, fileExtensions);
	if (!isValid) {
		alert(file.value + " isn't a recognized audio format");
		file.clear();
		return false;
	}
	isValid = validateSize(file);
	return isValid;
}
function getAttachedFile() {
	var widget = $("attachFile");
	if (!widget)
		return false;
	return widget;
}
function validateWithExtensions(fileName, fileExtensions) {
	var action = $('sys_action');
	if ('sysverb_cancel' == action.value)
		return true;
	return endsWithVideoExtension(fileName, fileExtensions);
}
function endsWithVideoExtension(fileName, fileExtensions) {
	var extensionArray = fileExtensions.split(",");
	var dot = fileName.lastIndexOf('.')+1;
	var suffix = fileName.substring(dot);
	suffix = suffix.toLowerCase();
	for (var i = 0; i < extensionArray.length; i++) {
	  var element = extensionArray[i];
	  if (element == suffix)
	  	return true;
	}
	return false;	
}
function validateImageFile() {
	var action = $('sys_action');
	if ('sysverb_cancel' == action.value)
		return true;
	var file = getAttachedFile();
	var isValid = endsWithImageExtension(file.value);
	if (!isValid) {
		alert(file.value + " isn't a recognized image file format");
		file.clear();
		return false;
	}
	var hasValidSize = validateSize(file);
	$('fileNamePlaceholder').innerText = getFileName(file.value);
	return hasValidSize;
}
var VALID_IMAGE_SUFFIX = ["jpg", "jpeg", "png", "bmp", "gif", "ico", "svg"];
function endsWithImageExtension(filename) {
	var dot = filename.lastIndexOf('.')+1;
	var suffix = filename.substring(dot);
	suffix = suffix.toLowerCase();
	for (var i = 0; i < VALID_IMAGE_SUFFIX.length; i++) {
	  var element = VALID_IMAGE_SUFFIX[i];
	  element = element.toLowerCase();
	  if (element == suffix)
	  	return true;
	}
	return false;	
}
function getFileName(filePath) {
return filePath.replace(/^.*[\\\/]/, '');
}
function getDisplaySize(sizeInBytes) {
var kilobytes = Math.round(sizeInBytes / 1024);
	if (kilobytes < 1)
		kilobytes = 1;
	var reportSize = kilobytes + "K";
	if (kilobytes > 1024)
reportSize = Math.round(kilobytes / 1024) + "MB";
	return reportSize;
}
function validateSize(input){
	var form = $('attach_new_file');
	var maxSize = (form.max_size && form.max_size.value) ? form.max_size.value : 1024;
	var file = input.files[0];
	var allowedSize = maxSize * 1048576;
	var warningString = "";
	if (file.size == 0){
		warningString += "Attachment is empty";
	}
	if (file.size > allowedSize){
		warningString += file.name + " is " + getDisplaySize(file.size) + ". The maximum file size is " + getDisplaySize(allowedSize) + ".\n";
	}
	if (warningString != "") {
		alert(warningString);
		input.clear();
		return false;
	}
	return true;
}
function deleteUserImage(image_id, table_name, source_field, source_id) {
    var ajax = new GlideAjax("AttachmentAjax");
	ajax.addParam("sysparm_value", image_id);
	ajax.addParam("sysparm_table_name", table_name);
	ajax.addParam("sysparm_source_field", source_field);
	ajax.addParam("sysparm_source_id", source_id);
	ajax.addParam("sysparm_type", "delete");
	ajax.getXML(doNothing);
		
	var image = $(image_id);	
	if (image) {
image.src = "images/s.gif";
		image.alt = "";
	}
	var delspan = $(image_id+"_delete");
	if (delspan)
		delspan.innerHTML = '';	
	
	var addanchor = $(image_id+"_update");
	if (addanchor)
		addanchor.innerHTML = "";
	
	var imagespan = $(image_id+"_image");
	if (imagespan)
		imagespan.style.visibiity = "hidden";
	
	var noimagespan = $(image_id+"_noimage");
	if (noimagespan)
		noimagespan.style.visibility = "";
	
	return false;
}
;
/*! RESOURCE: /scripts/formatting.js */
function formatPhone(field) {
	field.value = trim(field.value);
	var ov = field.value;
	var v = "";
	var x = -1;
if (0 < ov.length && '+' != ov.charAt(0)) {
		var n = 0;
		if ('1' == ov.charAt(0))
ov = ov.substring(1, ov.length);
		for (var i = 0; i < ov.length; i++) {
			var ch = ov.charAt(i);
			if (ch >= '0' && ch <= '9') {
				if (n == 0)
					v += "(";
				else if (n == 3)
					v += ") ";
				else if (n == 6)
					v += "-";
				v += ch;
				n++;
			}
			if (! (ch >= '0' && ch <= '9') && ch != ' ' && ch != '-' && ch != '.' && ch != '(' && ch != ')') {
				x = i;
				break;
			}
		}
		if (x >= 0)
			v += " " + ov.substring(x, ov.length);
		if (n == 10 && v.length <= 40)
			field.value = v;
	}
	return true;
}
function formatClean(num) {
	var sVal = '';
	var nVal = num.length;
	var sChar = '';
	var nChar = '';
	try {
		for (var i = 0; i < nVal; i++) {
			sChar = num.charAt(i);
			nChar = sChar.charCodeAt(0);
			if (sChar == '-' || sChar == getDecimalSeparator() || ((nChar >= 48) && (nChar <= 57)))
				sVal += num.charAt(i);
		}
	}
	catch (exception) {
		alertError("formatClean", exception);
	}
	return sVal;
}
function formatCurrency(num) {
	var sVal = '';
	var minus = '';
	if (num.lastIndexOf("-") == 0)
		minus = '-';
	if (num.lastIndexOf(".") < 0)
		num = num + '00';
	num = formatClean(num);
	sVal = minus + formatDollar(num, getGroupingSeparator()) + getDecimalSeparator() + formatCents(num);
	return sVal;
}
function formatNumber(num) {
	if (num.length == 0)
		return num;
	num = num + "";
	var sVal = '';
	var minus = '';
	var samount = '';
	try {
		if (num.lastIndexOf("-") == 0)
			minus = '-';
		num = formatClean(num);
		if (num.indexOf("-") == 0)
num = num.substring(1);
		num = "0" + num;
		var fraction = parseFraction(num + "");
		num = parseInt(num, 10);
		samount = num + "";
for (var i = 0; i < Math.floor((samount.length - (1 + i)) / 3); i++)
			samount = samount.substring(0, samount.length - (4 * i + 3)) + getGroupingSeparator() + samount.substring(samount.length - (4 * i + 3));
		if (fraction.length > 0) {
			fraction = getDecimalSeparator() + fraction;
			samount += fraction;
		}
	} catch (exception) {
		alertError("Format Number", exception);
	}
return minus + samount;
}
function parseFraction(num) {
	var index = num.indexOf(getDecimalSeparator());
	if (index == -1)
		return "";
	return num.substring(index + 1);
}
function formatCents(amount) {
	var cents = '';
	try {
		amount = parseInt(amount, 10);
		var samount = amount + "";
		if (samount.length == 0)
			return '00';
		if (samount.length == 1)
			return '0' + samount;
		if (samount.length == 2)
			return samount;
		cents = samount.substring(samount.length - 2, samount.length);
	}
	catch (exception) {
		alertError("Format Cents", e);
	}
	return cents;
}
function formatDollar(amount) {
	var samount = "";
	try {
		amount = parseInt(amount, 10);
		samount = amount + "";
		if (samount.length < 3)
			return 0;
		samount = samount.substring(0, samount.length - 2);
for (var i = 0; i < Math.floor((samount.length - (1 + i)) / 3); i++)
			samount = samount.substring(0, samount.length - (4 * i + 3)) + getGroupingSeparator() + samount.substring(samount.length - (4 * i + 3));
	}
	catch (exception) {
		alertError("Format Dollar", e);
	}
	return samount;
}
function padLeft(value, width, fill) {
	value = value + '';
	while (value.length < width)
		value = fill + value;
	return value;
}
function getDecimalSeparator() {
	if (g_user_decimal_separator)
		return g_user_decimal_separator;
	return ".";
}
function getGroupingSeparator() {
	if (g_user_grouping_separator)
		return g_user_grouping_separator;
	return ",";
}
function alertError(MethodName, e) {
	let gwt = new GwtMessage();
	if (e.description == null)
		alert(gwt.getMessage("{0} Exception: {1}", MethodName, e.message));
	else
		alert(gwt.getMessage("{0} Exception: {1}", MethodName, e.description));
}
function getFraction(num) {
	if (!num) return num;
num = formatClean(num);
	return parseFraction(num);
}
function getWholePart(num) {
	if (!num) return num;
	num = formatClean(num);
	let index = num.indexOf(getDecimalSeparator());
	if (index > -1)
		num = num.substring(0, index);
	return !num || num === '-' ? '0' : num;
}
;
/*! RESOURCE: /scripts/doctype/utils14.js */
function doNothing() {
}
function valueExistsInArray(val, array) {
	for (var i = 0; i < array.length; i++) {
		if (val == array[i])
			return true;
	}
	return false;
}
function doubleDigitFormat(num) {
	return padLeft(num, 2, "0");
}
function tripleDigitFormat(num) {
	return padLeft(num, 3, "0");
}
function sGetHours(totalSecs) {
return parseInt(totalSecs / (60 * 60), 10);
}
function sGetMinutes(totalSecs) {
	totalSecs -= (60*60)*sGetHours(totalSecs);
return parseInt(totalSecs / 60, 10);
}
function sGetSeconds(totalSecs) {
	totalSecs -= (60*60)*sGetHours(totalSecs);
	totalSecs -= (60)*sGetMinutes(totalSecs);
	return parseInt(totalSecs, 10);
}
function isNumber(test) {
	if (!test)
		return false;
	
	test = new String(test);
	var _numer = test.search("[^0-9]");
	return _numer == -1;
}
function isAlphaNum(thchar) {
	return isAlpha(thchar) || isDigit(thchar);
}
function isAlpha(thchar){
	return (thchar >= 'a' && thchar <= 'z\uffff')
			|| (thchar >= 'A' && thchar <= 'Z\uffff') || thchar == '_';
}
function isDigit(thchar) {
	return (thchar >= '0' && thchar <= '9');
}
function containsOnlyChars(validChars, sText) {
	if (!sText)
		return true;
	for (var i = 0; i < sText.length; i++) {
		var c = sText.charAt(i);
if (validChars.indexOf(c) == -1)
			return false;
	}
	return true;
}
function getAttributeValue(element, attrName) {
	return element.getAttribute(attrName);
}
function setAttributeValue(element, attrName, value) {
	element.setAttribute(attrName, value);
}
function toggleDivDisplayAndReturn(divName) {
	if (!divName) 
		return;
	
	var div = $(divName);
	if (!div)
		return;
	
	if (div.style.display == "none")
		showObject(div);
	else
		hideObject(div);
	
	return div;
}
function toggleDivDisplay(divName) {
	toggleDivDisplayAndReturn(divName);
}
function toggleDivDisplayClass(id) {
	if (!id)
		return;
	var div = $(id);
	if (!div)
		return;
	if (div.classList.contains("hide")) {
		div.classList.remove("hide", "invisible");
		div.classList.add("visibility", "show");
	} else {
		div.classList.remove("show", "visibility");
		div.classList.add("hide", "invisible");
	}
	_frameChanged();
	return div;
}
function toggleAttributeValue(element, attribute) {
	if (element) {
		var value = (element.getAttribute(attribute) === 'true');
		element.setAttribute(attribute, (!value).toString());
	}
}
function findParentByTag(element, tag) {
	var ret;
	while (element && element.parentNode && element.parentNode.tagName) {
		element = element.parentNode;
		if (element.tagName.toLowerCase() == tag.toLowerCase())
			return element;
	}
	
	return ret;
}
function replaceAll(str, from, to) {
  var idx = str.indexOf( from );
  while ( idx > -1 ) {
   str = str.replace( from, to ); 
   idx = str.indexOf( from );
  }
  
  return str;    
}
function useAnimation() {
	if (isTouchDevice)
		return false;
	
	return true;
} 
function expandEffect(el, duration, steps, stepCallback, completionCallback) {
	if (!useAnimation()) {
		showObject(el);
		if (completionCallback)
			completionCallback(el);
			
		return;
	}
	
	var h;
	if (el.originalHeight) 
		h = el.originalHeight;
	else {
		h = getHeight(el);
if (h == 0) {
			showObject(el);
			return;
		}
		el.originalHeight = h;
	}
	if (!duration)
		duration = 70;
	if (!steps)
		steps = 14;
		
	el.style.overflow = "hidden";
	el.style.height = "1px";
	el.style.display = "block";
	el.style.visibility = "visible";
	expandAnimationEffect(el, h, duration, steps, stepCallback,
			completionCallback);
	return h;
}
function expandAnimationEffect(el, height, duration, steps, stepCallback,
		completionCallback) {
	new Rico.Effect.Size( el.id, null, height, duration, steps, {
		step: function() {
			if (stepCallback)
				stepCallback(el);
		},
		complete: function() {
			_expandComplete(el, completionCallback);
		}
	});
}
function _expandComplete(el, completionCallback) {
	el.style.overflow = "";
	el.style.height = "auto";
	
	if (completionCallback)
		completionCallback(el);
				
	_frameChanged();
}
function collapseEffect(el, duration, steps) {
	if (!useAnimation()) {
		hideObject(el);
		return;
	}
	var h;
	if (el.originalHeight) 
		h = el.originalHeight;
	else {
		h = el.offsetHeight;
		el.originalHeight = h;
	}
	if (!duration)
		duration = 70;
	if (!steps)
		steps = 14;
	
	if (!h)
		h = el.offsetHeight;
		
	el.style.overflow = "hidden";
	collapseAnimationEffect(el, h, duration, steps);
}
function collapseAnimationEffect(el, height, duration, steps) {
	new Rico.Effect.Size( el.id, null, 1, duration, steps, {
		complete: function() {
			_collapseComplete(el, height);
		}
	});
}
function _collapseComplete(el, height) {
	el.style.display = "none";
	el.style.overflow = "";
	el.style.height = height;
	_frameChanged();
}
function getHeight(el) {
	var item;
	try {
item = el.cloneNode(true);
	} catch (e) {
		jslog("getHeight blew up... we caught the error and returned 0")
		return 0;
	}
	var height = 0;
	item.style.visibility = "hidden";
	item.style.display = "block";
	item.style.position = "absolute";
	item.style.top = 0;
	item.style.left = 0;
	document.body.appendChild(item);
	height = item.offsetHeight;
	document.body.removeChild(item);
	
	return height;
}
function getWidth(el) {
	var item = el.cloneNode(true);
	var width = 0;
	item.style.visibility = "hidden";
	item.style.display = "block";
	item.style.position = "absolute";
	item.style.top = 0;
	item.style.left = 0;
	document.body.appendChild(item);
	width = item.offsetWidth;
	document.body.removeChild(item);
	
	return width;
}
function grabOffsetLeft(item) {
	return getOffset(item,"offsetLeft")
}
function grabOffsetTop(item) {
	return getOffset(item, "offsetTop")
}
function getOffset(item, attr) {
	var parentElement = getFormContentParent();
	var wb=0;
	while(item) {
		wb += item[attr];
		item = item.offsetParent;
		if (item == parentElement)
			break;
	}
	
	return wb;
}
function grabScrollLeft(item) {
	return getScrollOffset(item, "scrollLeft")
}
function grabScrollTop(item) {
	return getScrollOffset(item, "scrollTop")
}
function getScrollOffset(item, attr) {
	var parentElement = getFormContentParent();
		
	var wb=0;
	while (item && item.tagName && item != parentElement) {
		wb += item[attr];
		if (isMSIE)
			item = item.offsetParent;
		else
			item = item.parentNode;
	}
	return wb;
}
function getValue(evt) {
	var elem = evt.target;
	if (!elem)
		return null;
	try {
		return elem.options[elem.selectedIndex].value;
	} catch (e) {
		var msg = (typeof e == "string") ? e : ((e.message) ? e.message
				: "Unknown Error");
		alert("Unable to get data:\n" + msg);
	}
	return null;
}
function getEvent(event) {
	return event;
}
function getEventCoords(e) {
	var fudge = getFormContentParent();
	var answer = Event.pointer(e);
	answer = new Point(answer.x, answer.y);
	if (fudge == document.body)
		return answer;
	answer.x += fudge.scrollLeft;
	answer.y += fudge.scrollTop;
	var fudgeTop = fudge.getStyle('top');
	var fudgePos = fudge.getStyle('position');
	if (fudgePos == 'absolute' && fudgeTop && fudgeTop.indexOf('px'))
		answer.y -= parseInt(fudgeTop.replace('px',''));
	
	return answer;
}
function getRelativeTop() {
	var port = document.viewport;
	var topLeft = new Point(port.getScrollOffsets().left, port
			.getScrollOffsets().top)
	var fudge = getFormContentParent();
	if (fudge != document.body) {
		topLeft.x += fudge.scrollLeft;
		topLeft.y += fudge.scrollTop;
	}
	return topLeft;
}
function getRealEvent(e) {
	if (isTouchDevice && isTouchEvent(e)) {
		e = e.changedTouches[0];
	}
	
	return e;
}
function isTouchEvent(e) {
	if (typeof e == 'undefined' || typeof e.changedTouches == 'undefined')
		return false;
	return true;
}
function isTouchRightClick(e) {
	if (!isTouchEvent(e))
		return false;
	var hasTwoFingers = e.changedTouches.length > 1;
	return hasTwoFingers;
}
function getTextValue(node) {
	if (node.textContent)
		return node.textContent;
	var firstNode = node.childNodes[0];
	if (!firstNode)
		return null;
	if (firstNode.data)
		return firstNode.data;
	return firstNode.nodeValue;
}
function getScrollX() {
	return window.pageXOffset;
}
function getScrollY() {
	return window.pageYOffset;
}
function getSrcElement(evt) {
	return evt.target;
}
function addForm() {
	var form = cel('form');
	document.body.appendChild(form);
	if (window.g_ck)
		addHidden(form, "sysparm_ck", g_ck);
	return form;
}
function addHidden(form, name, value) {
	addInput(form, 'HIDDEN', name, value);
}
function addInput(form, type, name, value) {
	var inputs = Form.getInputs(form, '', name);
	if (inputs.length > 0) {
		inputs[0].value = value;
		return;
	}
	var opt = document.createElement('input');
	opt.type = type;
	opt.name = name;
	opt.id = name;
	opt.value = value;
	form.appendChild(opt);
}
function getHiddenInputValuesMap(parent) {
	var valuesMap = {}
	var inputs = parent.getElementsByTagName('input');
	for (var i = 0; i < inputs.length; i++) {
		var input = inputs[i];
		if (input.type.toLowerCase() != "hidden")
			continue;
		valuesMap[input.id] = input.value;
	}
	return valuesMap;
}
function appendSelectOption(select, value, label, index) {
	var opt = document.createElement("option");
	opt.value = value;
	opt.appendChild(label);
	if (index >= 0 && index != select.length)
		select.insertBefore(opt, select.children[index]);
	else
		select.appendChild(opt);
	return opt;
}
function copySelectOptionToIndex(select, opt, index) {
	var label = opt.text;
opt.innerHTML = "";
	opt.appendChild(document.createTextNode(label));
	if (index >= 0 && index != select.length)
		select.insertBefore(opt, select.children[index]);
	else
		select.appendChild(opt);
	return opt;
}
function selectMenuItem(id, selectName) {
	var selectMenu = document.getElementById(selectName);
	if (!selectMenu)
		return -1;
	var options = selectMenu.options;
	var selectItem = selectMenu.selectedIndex;
	if (id) {
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			
			if (option.value == id) {
				selectItem = i;
				break;
			}
		}
	}
	
	if (selectItem > 0) {
		selectMenu.selectedIndex = selectItem;
		if (selectMenu["onchange"]) {
			selectMenu.onchange();
		}
	}
	return selectItem;
}
function menuIsEmpty(selectName) {
	var selectMenu = document.getElementById(selectName);
	if (!selectMenu || selectMenu.selectedIndex <= 0)
		return true;
		
	return false;
}
        
function getBounds(obj, addScroll) {
	var x = grabOffsetLeft(obj);
	var y = grabOffsetTop(obj);
	if (addScroll) {
		x += getScrollX();
		y += getScrollY();
	}
	this.absoluteRect = {
		top : y,
		left : x,
		bottom : y + obj.offsetHeight,
		right : x + obj.offsetWidth,
		height : obj.offsetHeight,
		width : obj.offsetWidth,
middleX : x + (obj.offsetWidth / 2),
middleY : y + (obj.offsetHeight / 2),
		cbottom : y + obj.clientHeight,
		cright : x + obj.clientWidth
	};
	return this.absoluteRect;
}
function guid(l) {
  var l = l || 32, strResult = '';
  while (strResult.length < l)
		strResult += (((1 + Math.random() + new Date().getTime()) * 0x10000) | 0)
				.toString(16).substring(1);
  return strResult.substr(0, l);
}
function stopSelection(e) {
	e.onselectstart = function() {
		return false;
};
e.style.MozUserSelect = "none";
}
function restoreSelection(e) {
	e.onselectstart = null;
	e.style.MozUserSelect = "";
}
function getAttributeValue(element, name) {
	if (!element.attributes)
		return null;
	var v = element.attributes.getNamedItem(name);
	if (v == null)
		return null;
	return v.nodeValue;
}
function createImage(src, title, object, onClick) {
	var img = cel('input');
	img.type = 'image';
	img.src = src;
	img.title = title;
	img.alt = title;
	if (arguments.length == 4)
		img.onclick = onClick.bindAsEventListener(object);
	return img;
}
function createIcon(cls, title, object, onClick) {
	var icn = cel('a');
	icn.addClassName(cls);
	icn.setAttribute('title', title);
	icn.setAttribute('aria-label', title);
	if (arguments.length == 4)
		icn.onclick = onClick.bindAsEventListener(object);
	return icn;
}
function getXMLString(node) {
	var xml = "???";
	if (node.xml) {
		xml = node.xml;
	} else if (window.XMLSerializer) {
		xml = (new XMLSerializer()).serializeToString(node);
	}
	return xml;
}
function isLeftClick(e) {
	return e.button == 0;
}
function formatMessage() {
	if (arguments.length == 1)
		return arguments[0];
			
	var str = arguments[0];
	var args = arguments;
	if (arguments.length == 2 && typeof arguments[1] == 'object'
			&& arguments[1] instanceof Array) {
		args = [''].concat(arguments[1]);
	}
    var i = 0;
	while (++i < args.length) {
		str = str.replace( new RegExp( '\\{'+(i-1)+'\\}', 'g' ), args[i] );
	}
		
	return str;
}
function getFormattedDateAndTime(date) {
	return getFormattedDate(date) + " " + getFormattedTime(date);
}
function getFormattedDate(date) {
	var d = (date? date : new Date());
	var curr_mon = d.getMonth() + 1;
	var curr_day = d.getDate();
	var curr_year = d.getYear() - 100;
return doubleDigitFormat(curr_mon) + "/" + doubleDigitFormat(curr_day)
+ "/" + doubleDigitFormat(curr_year)
}
function getFormattedTime(date) {
	var d = (date? date : new Date());
	var curr_hour = d.getHours();
	var curr_min = d.getMinutes();
	var curr_sec = d.getSeconds();
	var curr_msec = d.getMilliseconds();
	return doubleDigitFormat(curr_hour) + ":" + doubleDigitFormat(curr_min)
			+ ":" + doubleDigitFormat(curr_sec) + " ("
			+ tripleDigitFormat(curr_msec) + ")"
}
function showGoToLine(textAreaID) {
	var e = gel("go_to_" + textAreaID)
	if (e) {
		showObjectInline(e);
		gel("go_to_input_" + textAreaID).focus();
	}
}
function gotoLineKeyPress(evt, textAreaObject, input) {
	if (evt.keyCode == 13) {
		Event.stop(evt);
		gotoLinePopup(textAreaObject, input.value);
		input.value = "";
		hideObject(input.parentNode);
	}
}
function gotoLinePopup(textAreaObject, lineText) {
	if (lineText) {
		lineText = trim(lineText);
		if (lineText) {
			var line = parseInt(lineText, 10);
			g_form._setCaretPositionLineColumn(textAreaObject, line, 1);
		}
	}
}
function getBrowserWindowHeight() {
	return window.innerHeight;
}
function getBrowserWindowWidth() {
	return window.innerWidth;
}
var WindowSize = function() {
	return {
		width: getBrowserWindowWidth(),
		height: getBrowserWindowHeight()
	}
}
function getScrollBarWidthPx() {
	var inner = cel("p");
	inner.style.width = "100%";
	inner.style.height = "200px";
	
	var outer = cel("div");
	outer.style.position = "absolute";
	outer.style.top = "0px";
	outer.style.left = "0px";
	outer.style.visibility = "hidden";
	outer.style.width = "200px";
	outer.style.height = "150px";
	outer.style.overflow = "hidden";
	outer.appendChild(inner);
	document.body.appendChild(outer);
	var w1 = inner.offsetWidth;
	outer.style.overflow = "scroll";
	var w2 = inner.offsetWidth;
	if (w1 == w2)
		w2 = outer.clientWidth;
	document.body.removeChild(outer);
	return (w1 - w2);
}
function showOpticsDebugger() {
	var mainWindow = getMainWindow();
	if (mainWindow)
		mainWindow.CustomEvent.fire('glide_optics_inspect_window_open');
}
function opticsLog(tablename, fieldname, message, oldvalue, newvalue) {
	if (tablename === "ni") {
		tablename = g_form.getUniqueValue();
		fieldname = g_form.resolveNameMap(fieldname) || fieldname;
	}
	var info = {};
	info.table = tablename;
	info.field = fieldname;
	info.message = message;
	info.message_type = "static";
	if (oldvalue && newvalue) {
		info.oldvalue = oldvalue;
		info.newvalue = newvalue;
		info.message_type = "change";
	}
	info.type = 'log';
	info.startTime = new Date();
	if (g_form._pushAction)
		g_form._pushAction(info);
	CustomEvent.fire('glide_optics_inspect_log_message', info);
}
function handleAriaInvalidState(fieldId, fieldIsEmpty) {
	if (!g_form || !fieldId) {
		return;
	}
	var isFormSubmitAttempted = g_form.submitAttemptsCount > 0;
	var visibleControls = g_form._getVisibleControls(fieldId);
	var handleStateUpdate = true;
	var displayNode = gel("sys_display." + fieldId);
	if (displayNode && displayNode.classList.contains('element_reference_input')) {
		var isList = displayNode.getAttribute('islist');
		handleStateUpdate = (isList && isList === 'true');
	}
	if (visibleControls.length > 0 && isFormSubmitAttempted && handleStateUpdate) {
		var ariaInvalid = fieldIsEmpty || false;
		for (var i = 0; i < visibleControls.length; i++) {
			visibleControls[i].setAttribute('aria-invalid', ariaInvalid);
		}
	}
}
;
/*! RESOURCE: /scripts/accessibility_tabindex.js */
addLoadEvent(function() {
	$(document).on('keydown', '*[tabindex]:not(.multiLinePill), .glide_ref_item_link', function(event) {
		if (event.keyCode != Event.KEY_RETURN)
			return;
		var element = event.element();
		if (!element.hasAttribute('tabindex'))
			return;
		if (element instanceof HTMLTextAreaElement)
			return;
		if (element.click) {
			element.click();
			var $parent = $j(element).parent();
			if ($parent.hasClass('open')) {
		    	  var $items = $parent.find('.dropdown-menu li:visible a');
		    	  if ($items.length)
		    		  $items.eq(0).trigger('focus');
		      }
		}
		
		event.stop();
	});
	if (typeof jQuery != 'undefined') {
		var KEY_SPACE = 32;
		var KEY_ENTER = 13;
		jQuery('[click-on-enter],[click-on-space]').on('keydown', function(event) {
			var keyCode = event.keyCode || event.which;
			var $this = jQuery(this);
			if (!((keyCode === KEY_ENTER && $this.is('[click-on-enter]')) || (keyCode === KEY_SPACE && $this.is('[click-on-space]'))))
				return;
			setTimeout(function() {
				$this.trigger('click');
			},200);
			if (keyCode === KEY_SPACE) {
				event.stopPropagation();
				event.preventDefault();
			}
		});
	}
	if (typeof jQuery !== 'undefined') {
		jQuery('[data-native-btn-click="true"]').on('keydown', function (event) {
			var KEY_SPACE = 32;
			var KEY_ENTER = 13;
			var keyCode = event.keyCode || event.which;
			if (keyCode === KEY_ENTER || keyCode === KEY_SPACE) {
				event.stopPropagation();
				event.preventDefault();
				if (this.click)
					this.click();
			}
		})
	}
});
;
/*! RESOURCE: /scripts/accessibility_readonly.js */
addLateLoadEvent(function() {
	document.body.on('click', 'input.disabled', blockValueChange);
	function blockValueChange(evt, element) {
		var type = element.type;
		if (type.match('radio|checkbox')) {
			element.checked = !element.checked;
			evt.stop();
			return false;
		}
	}
});
;
/*! RESOURCE: /scripts/doctype/accessibility/ariaLiveService.js */
(function (window, document) {
    window.NOW = window.NOW || {};
    function ariaLivePolite(text, delay) {
        setTimeout(_ariaLiveMessage, delay || 0, text, false);
    }
    function ariaLiveAssertive(text, delay) {
        setTimeout(_ariaLiveMessage, delay || 0, text, true);
    }
    function _ariaLiveMessage(text, assertive) {
        var ariaLiveId = !!assertive
            ? 'html_page_aria_live_assertive'
            : 'html_page_aria_live_polite';
        var ariaLive = document.getElementById(ariaLiveId);
        if (!ariaLive)
            return;
        if (window.NOW.ariaLiveDisabled)
            return;
        if (ariaLive.children.length > 50 || (ariaLive.children.length > 0 && ariaLive.textContent.length > 10000))
            ariaLive.children[0].remove();
        var newMessage = document.createElement('div');
        newMessage.innerText = text;
        ariaLive.insertAdjacentElement('beforeend', newMessage);
    }
    CustomEvent.observe('global_aria_live_polite', ariaLivePolite);
    CustomEvent.observe('global_aria_live_assertive', ariaLiveAssertive);
    window.NOW.accessibility = window.NOW.accessibility || {};
    window.NOW.accessibility['ariaLivePolite'] = ariaLivePolite;
    window.NOW.accessibility['ariaLiveAssertive'] = ariaLiveAssertive;
})(window, document);
;
/*! RESOURCE: /scripts/doctype/accessibility/focusOutlineUtility.js */
(function (window, document) {
    window.NOW = window.NOW || {};
    function addClassById(target, className) {
        modifyFocusOutline(target, className, true);
    }
    function removeClassById(target, className) {
        modifyFocusOutline(target, className, false);
    }
    function onFocusAddMSHCOutline(target) {
        addClassById(target, 'ms-high-contrast-outline');
    }
    function onBlurRemoveMSHCOutline(target) {
        removeClassById(target, 'ms-high-contrast-outline');
    }
    function modifyFocusOutline(el, className, add) {
        if (typeof el === "string") {
            el = document.getElementById(el);
        }
        if (el) {
            if (add) {
                el.classList.add(className);
            } else {
                el.classList.remove(className);
            }
        }
    }
    function luminance(r, g, b) {
        var a = [r, g, b].map(function (v) {
v /= 255;
            return v <= 0.03928
? v / 12.92
: Math.pow( (v + 0.055) / 1.055, 2.4 );
        });
        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;
    }
    function calculateContrastRatio(rgb1, rgb2) {
        var lum1 = luminance(rgb1[0], rgb1[1], rgb1[2]) + 0.05;
        var lum2 = luminance(rgb2[0], rgb2[1], rgb2[2]) + 0.05;
        return (lum1 > lum2)
? (lum1 / lum2)
: (lum2 / lum1);
    }
    function extractRGB(rgb) {
var re = RegExp(/\d{1,3}/, 'g');
        var match;
        var values = [];
        while ((match = re.exec(rgb)) !== null && values.length < 3) {
            values.push(match[0]);
        }
        return values;
    }
    function getContrastRatio(el) {
        var computedStyle = getComputedStyle(el);
        var color = computedStyle['color'];
        var backgroundColor = computedStyle['background-color'];
        var colorRGB = extractRGB(color);
        var backgroundColorRGB = extractRGB(backgroundColor);
        return calculateContrastRatio(backgroundColorRGB, colorRGB);
    }
    window.NOW.accessibility = window.NOW.accessibility || {};
    window.NOW.accessibility['onFocusAddMSHCOutline'] = onFocusAddMSHCOutline;
    window.NOW.accessibility['onBlurRemoveMSHCOutline'] = onBlurRemoveMSHCOutline;
})(window, document);
;
/*! RESOURCE: /scripts/doctype/accessibility/forms/cleanLabels.js */
(function (document) {
	jQuery(function($j) {
		var doc = $j(document);
		doc.find('label[for]').each(function() {
			var label = $j(this);
			var forId = label.attr('for') || '';
			if (forId === '')
				return;
			var inputElement = document.getElementById(forId);
			if (
				!inputElement ||
				inputElement.hasAttribute('aria-label') ||
				inputElement.hasAttribute('aria-labelledby') ||
				((inputElement.type || '').toLowerCase() === 'hidden')
			)
				return;
			var textElement = label.find('.label-text');
			var text = textElement.length > 0 ? textElement.text() : '';
			if (text !== '')
				inputElement.setAttribute('aria-label', text);
		})
	});
})(document);
;
;
/*! RESOURCE: /scripts/doctype/accessibility/js_includes_doctype_accessibility.js */
/*! RESOURCE: /scripts/classes/ajax/GlideURL.js */
var GlideURL = Class.create({
	
	initialize: function(contextPath) {
		this.contextPath = '';
	    this.params = new Object();
		this.encodedString = '';
		this.encode = true;
		this.setFromString(contextPath ? contextPath : '');
		if(typeof GlideTransactionScope != 'undefined')
			GlideTransactionScope.appendTransactionScope(this.addParam.bind(this));
	},
	
	setFromCurrent: function(decodeParams) {
		this.setFromString(window.location.href, decodeParams);
	},
	_decodeParam: function(value) {
value = value ? value.replace(/\+/g, '%20') : value;
		return decodeURIComponent(value);
	},
	setFromString: function(href, decodeParams) {
		var pos = href.indexOf('?');
		if (pos < 0) {
			this.contextPath = href;
			return;
		}
		this.contextPath = href.slice(0, pos);
		var hashes = href.slice(pos + 1).split('&');
		var i = hashes.length;
		while (i--) {
			var pos = hashes[i].indexOf('=');
			var name = hashes[i].substring(0, pos);
			var value = hashes[i].substring(++pos);
			if (decodeParams) {
				name = this._decodeParam(name);
				value = this._decodeParam(value);
			}
			this.params[name] = value;
	    }
	},
	
	getContexPath: function() {
	    return this.contextPath;
	},
	
	getContextPath: function() {
		return this.contextPath;
	},
	
	setContextPath: function(c) {
	    this.contextPath = c;
	},
	
	getParam: function(p) {
		return this.params[p];
	},
	
	getParams: function() {
	    return this.params;
	},
	addParam: function(name, value) {
	    this.params[name] = value;
		return this;
	},
	
	addToken: function() {
		if (typeof g_ck != 'undefined' && g_ck != "")
			this.addParam('sysparm_ck', g_ck);
		return this;
	},
    deleteParam: function(name) {
        delete this.params[name];
    },
	
	addEncodedString: function(s) {
		if (!s)
			return;
			
		if (s.substr(0, 1) != "&")
			this.encodedString += "&";
			
		this.encodedString += s;
		return this;
	},
    
    getQueryString: function(additionalParams) {
        qs = this._getParamsForURL(this.params);
        qs += this._getParamsForURL(additionalParams);
		qs += this.encodedString;	
		if (qs.length == 0)
			return "";
		return qs.substring(1);
    },
    
    _getParamsForURL: function(params) {
    	if (!params)
    		return '';
    		
        var url = '';
        for (var n in params) {
        	var p = params[n] || '';
        	url += '&' + n + '=' + (this.encode ? this._encodeUriQuery(p + '') : p);
        }
        return url;
    },
	_encodeUriQuery : function(val) {
		return encodeURIComponent(val).
replace(/%40/gi, '@').
replace(/%3A/gi, ':');
	},
    
    getURL: function(additionalParams) {
        var url = this.contextPath;
		var qs = this.getQueryString(additionalParams);
		if (qs)
			url += "?" + qs;
			
        return url || "";
    },
	getRelativeURL: function() {
		var url = this.getURL();
return url.replace(window.location.origin, '').substring(1);
	},
    
    setEncode: function(b) {
        this.encode = b;
    },
    
    toString: function() { return 'GlideURL'; }
});
GlideURL.refresh = function() {
	window.location.replace( window.location.href );
};
;
/*! RESOURCE: /scripts/ga_batch/batchedGlideAjax.js */
window.NOW.batchedGlideAjax = function batchedGlideAjax(toProcess) {
	var batchGA = new GlideAjax("AJAXXMLHttpAggregator");
	batchGA.disableRunInBatch();
	function batchErrorHandler(onCompletionFn) {
		return function(error) {
			console.log("BatchedGlideAjax: Got error", error);
			toProcess.forEach(function(ga) {
				handleChildResponseError({
					status : 500,
					glideAjax : ga,
					error : "Batch failed"
				});
			});
			if (onCompletionFn)
				onCompletionFn([]);
		}
	}
	function batchResponseHandler(onCompletionFn) {
		return function (response) {
			console.log("BatchedGlideAjax: Got response", response);
			if (!response || !response.responseXML) {
				batchErrorHandler(onCompletionFn)(response);
				return;
			}
			var doc = response.responseXML.documentElement;
			if (!doc || !doc.childNodes) {
				batchErrorHandler(onCompletionFn)(response);
				return;
			}
			var unprocessedGas = processIndividualResponses(Array.prototype.slice.apply(doc.childNodes));
			if (onCompletionFn)
				onCompletionFn(unprocessedGas);
		}
	}
	function processIndividualResponses(nodes) {
		var processedIndicies = [];
		nodes.forEach(function (node) {
			var response = responseNode(node);
			try {
				if (response.succeeded)
					handleChildResponseSuccess(response);
				else
					handleChildResponseError(response);
			}
			catch (e) {
				console.warn("BatchedGlideAjax: Error processing child response", response, ":", e);
			}
			finally {
				processedIndicies.push(response.queueIndex);
			}
		});
		return toProcess.filter(function(ga, idx) {
return processedIndicies.indexOf(idx) < 0;
		});
	}
	function responseNode(node) {
		var processorIdx = ~~node.getAttribute("sysparm_processor_index");
		if (processorIdx < 0 || processorIdx >= toProcess.length) {
			console.error("BatchedGlideAjax: Processor index " + processorIdx + " out of bounds for batch queue", toProcess);
			return null;
		}
		var ga = toProcess[processorIdx];
		var status = ~~node.getAttribute("status");
		var error = node.getAttribute("error");
		var answer = node.getAttribute("answer");
		var responseDocument = null;
		return {
			queueIndex : processorIdx,
			status : status,
			error: error,
			answer: answer,
			glideAjax : ga,
			succeeded : status >= 200 && status < 300,
			get responseDocument() {
				if (responseDocument == null) {
					responseDocument = document.implementation.createDocument("", "", null);
					var clonedNode = responseDocument.importNode(node, true);
					responseDocument.appendChild(clonedNode);
				}
				return responseDocument;
			}
		};
	}
	function handleChildResponseError(response) {
		var errorObject = {
			status: response.status,
			statusText: response.error,
			error: response.error,
			description: response.error,
			responseText: response.error
		};
		var ga = response.glideAjax;
		if (ga.errorCallbackFunction)
			setTimeout(function() {
				ga.errorCallbackFunction(errorObject, ga.callbackArgs)
			}, 0);
	}
	function handleChildResponseSuccess(response) {
		var ga = response.glideAjax;
		if (!ga.callbackFunction)
			return;
		if (ga.wantAnswer) {
			var answer = response.answer;
			setTimeout(function () {
				ga.callbackFunction(answer, ga.callbackArgs);
			}, 0);
		} else {
			var requestObject = {
				responseXML: response.responseDocument,
				status: status
			};
			setTimeout(function() {
				ga.callbackFunction(requestObject, ga.callbackArgs)
			}, 0);
		}
	}
	function addParamsToBatch(params, index) {
		var param;
		if (!params)
			return;
		for (param in params) {
			if (!params.hasOwnProperty(param))
				continue;
			batchGA.addParam(index + '.' + param, params[param]);
		}
	}
	function decodeFormURI(value) {
value = value ? value.replace(/\+/g, '%20') : value;
		return decodeURIComponent(value);
	}
	function addCustomQueryStringToBatch(qs, index) {
		if (!qs)
			return;
		if (qs.startsWith('?'))
			qs = qs.substring(1);
		var params = qs.split('&');
		params.forEach(function(param) {
			var i = param.indexOf('=');
			var name = param, value;
			if (i > -1) {
				name = param.substring(0, i);
				value = param.substring(i + 1);
			}
			var decodedName = decodeFormURI(name);
			var decodedValue = decodeFormURI(value);
			batchGA.addParam(index + '.' + decodedName, decodedValue);
		});
	}
	return {
		execute : function(unprocessedCallback) {
			var aggregation_size = 0;
			toProcess.forEach(function(ga, idx) {
				addParamsToBatch(ga.params, idx);
				addParamsToBatch(ga.additionalProcessorParams, idx);
				addCustomQueryStringToBatch(ga.postString, idx);
				aggregation_size++;
			});
			batchGA.addParam("sysparm_aggregation_size", aggregation_size);
			batchGA.setErrorCallback(batchErrorHandler(unprocessedCallback));
			batchGA.getXML(batchResponseHandler(unprocessedCallback));
		}
	}
};
;
/*! RESOURCE: /scripts/ga_batch/glideAjaxBatchQueue.js */
window.NOW.GlideAjaxBatchRequestQueue = (function() {
	var queue = [];
	var startProcessingTimeout;
	var MAX_TIME_IN_QUEUE = window.NOW.batch_glide_ajax_requests_max_time_in_queue || 50;
	if (MAX_TIME_IN_QUEUE < 0)
MAX_TIME_IN_QUEUE = 50;
	function processQueue() {
		clearProcessingTimeout();
		var toProcess = [];
		queue.forEach(function(ga, idx){
			if (!ga.params) {
				console.warn('glideAjaxBatchQueue: GA' + idx + ' has no parameters.');
				return;
			}
			if (!ga.params.sysparm_processor) {
				console.warn('glideAjaxBatchQueue: GA' + idx + ' is missing a processor.');
				return;
			}
			toProcess.push(ga);
		});
		if (toProcess.length == 0)
			return;
		var batchGa = window.NOW.batchedGlideAjax(toProcess);
		batchGa.execute(function requeueUnprocessed(unprocessedGas) {
				queue = unprocessedGas.concat(queue);
				processQueue();
			}
		);
		queue.length = 0;
	}
	function clearProcessingTimeout() {
		if (startProcessingTimeout) {
			clearTimeout(startProcessingTimeout);
			startProcessingTimeout = undefined;
		}
	}
	return {
		enqueue : function(glideAjax) {
			if (!glideAjax.params) {
				console.warn('glideAjaxBatchQueue: GA has no parameters.');
				return;
			}
			if (!glideAjax.params.sysparm_processor) {
				console.warn('glideAjaxBatchQueue: GA is missing processor.');
				return;
			}
			queue.push(glideAjax);
			if (!startProcessingTimeout)
				startProcessingTimeout = setTimeout(processQueue, MAX_TIME_IN_QUEUE);
		},
		processQueue : processQueue
	}
})();
;
;
/*! RESOURCE: /scripts/ga_batch/js_includes_batchedga.js */
/*! RESOURCE: /scripts/classes/ajax/GlideAjax.js */
var GlideAjax = Class.create(GlideURL, {
	URL: "xmlhttp.do",
	initialize: function initialize($super, processor, url) {
		var u = this.URL;
		if (url)
			u = url;
			
		$super(u);
	    this.setProcessor(processor);
		this.callbackFunction;
		this.callbackArgs;
		this.additionalProcessorParams;
		this.errorCallbackFunction;
		this.wantRequestObject = false;
		this.setScope("global");
		this.setWantSessionMessages(true);
		if(typeof GlideTransactionScope != 'undefined')
			GlideTransactionScope.appendTransactionScope(this.addParam.bind(this), true, true);
		this.runRequestInBatch = window.NOW.batch_glide_ajax_requests;
	},
	disableRunInBatch: function() {
		this.runRequestInBatch = false;
	},
	
	getProcessor: function() {
	    return this.processor;
	},
	
	getAnswer: function() {
		if (!(this.requestObject && this.requestObject.responseXML))
			return null;
			
		return this.requestObject.responseXML.documentElement.getAttribute("answer");
	},
	
	setProcessor: function(p) {
	    this.processor = p;
		this.addParam("sysparm_processor", p);
	},
	setQueryString: function(qs) {
		this.queryString = qs;
	},
	
	preventLoadingIcon: function() {
		this._preventLoadingIcon = true;
	},
	
	preventCancelNotification: function() {
		this._suppressCancelNotification = true;
	},
	
    getXMLWait: function(additionalParams) {
    	this.addParam("sysparm_synch", "true");
		this.additionalProcessorParams = additionalParams;
		this.async = false;
		var sw = new StopWatch();
		this._makeRequest();
		var m = "*** WARNING *** GlideAjax.getXMLWait - synchronous function - processor: " + this.processor
		sw.jslog(m);
		if (window.console && window.console.log) 
			console.log("%c " + m, 'background: darkred; color: white;');
		
        if (this.requestObject.status != 200)
        	this._handleError();
        
		return this._responseReceived();
    },
    
    getXML: function(callback, additionalParams, responseParams) {
		this.wantAnswer = false;
		this._getXML0(callback, additionalParams, responseParams);
	},
	getXMLAnswer:function(callback, additionalParams, responseParams) {
		this.wantAnswer = true;
		this._getXML0(callback, additionalParams, responseParams);
	},
	
	_getXML0: function(callback, additionalParams, responseParams) {
		this.callbackFunction = callback;
		this.callbackArgs = responseParams;
		this.additionalProcessorParams = additionalParams;
		
		this.async = true;
		setTimeout(function() {this._makeRequest();}.bind(this), 0); 
	},
	
    _makeRequest: function() {
    	this.requestObject = this._getRequestObject();
    	
    	if (this.requestObject == null) 
    	    return null;
		if (!GlideAjax.want_session_messages)
			this.setWantSessionMessages(false);
    	    
    	var refUrl = this._buildReferringURL();
if (refUrl != "") {
    		this.addParam('ni.nolog.x_referer', 'ignore');
    		this.addParam('x_referer', refUrl);
    	}
    	
    	if (typeof g_autoRequest != 'undefined' && 'true' == g_autoRequest)
    		this.addParam('sysparm_auto_request', g_autoRequest);
    	
    	this.postString = this.getQueryString(this.additionalProcessorParams);
    	if (this.queryString) {
    		if (this.postString)
    			this.postString += "&";
    		this.postString += this.queryString;
		}
		if (this._isEligibleForBatching())
    		this._enqueueBatchRequest();
    	else
    		this._sendRequest();
    	
    	return this.requestObject;
    },
	_isEligibleForBatching : function() {
		return this.async &&
			this.runRequestInBatch &&
			window.NOW.batch_glide_ajax_requests &&
			this.contextPath === this.URL;
 	},
	_enqueueBatchRequest : function() {
		if (window.NOW && window.NOW.GlideAjaxBatchRequestQueue)
			window.NOW.GlideAjaxBatchRequestQueue.enqueue(this);
		else {
			console.warn("GlideAjaxBatchRequestQueue not available, falling back to immediate dispatch");
console.debug("Add scripts/ga_batch/js_includes_batchga.js to your page to enable batching");
			this._sendRequest();
		}
	},
    
    _sendRequest: function() {
    	this._showLoading();
    	if (this.async)
    		this.requestObject.onreadystatechange = this._processReqChange.bind(this);
    	
    	CustomEvent.fireTop("request_start", document);
    			
    	this.requestObject.open("POST", this.contextPath, this.async);
this.requestObject.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
		if (window.transaction_source)
			this.requestObject.setRequestHeader("X-Transaction-Source", window.transaction_source);
    	if (typeof g_ck != 'undefined' && g_ck != "")
        	this.requestObject.setRequestHeader('X-UserToken', g_ck);
    	try {
	    	this.requestObject.send(this.postString);
    	} catch (e) {}
	    	
    	if (!this.async || (this.callbackFunction == null))
    		this._hideLoading();
    },
    
    _processReqChange: function() {
        if (this.requestObject.readyState != 4)
        	return;
        	
    	this.requestObject.onreadystatechange = function() { };
        this._hideLoading();
        if (!this._errorCheck()) {
        	this._responseReceived();
        	return;
        }
        
	 	try { 
	 		this._handleError();
		} catch (e) { 
			jslog("GlideAjax error: " + e);
		}
    },
    
    _errorCheck: function() {
    	this._cancelErrorXML = this._getCancelError();
    	
    	return this._getResponseCode() != 200 || this._wasCanceled();
    },
    
    _handle401Error: function() {
    	if (getTopWindow().loggingOut)
    		return false;
    		
   		var sessionLoggedIn =  this.requestObject.getResponseHeader("X-SessionLoggedIn");
		if ( "true"!=sessionLoggedIn ) {
			if (window.confirm(new GwtMessage().getMessage("ajax_session_timeout_goto_login_confirm"))) {
getTopWindow().location.href = "/navpage.do";
			    return true;
			}
		} else {
	    	var allowResubmit = this.requestObject.getResponseHeader("X-UserToken-AllowResubmit");
	    	if ("true"==allowResubmit) {
	    		var autoResubmit = this.requestObject.getResponseHeader("X-AutoResubmit");
	    		if ("true" == autoResubmit) {
	    			this._sendRequest();
	    		    return true;
	    		}
	    			
                if (window.confirm(new GwtMessage().getMessage("ajax_session_timeout_resubmit_request_confirm"))) {
                	this._sendRequest();
	    		    return true;
                }
	    	} else {
	    	    if ("true" == sessionLoggedIn)
	    	        return false;
	    	    
                var msg = new GwtMessage().getMessage("ajax_session_timeout_refresh_screen");
                if (!msg)
                    msg = "Your session has expired. Click OK to continue.";
                if (window.confirm(msg)) {
getTopWindow().location.href = "/navpage.do";
                    return true;
                }
	    	}
		}    	
		
		return false;
    },
    
    _handleError: function() {
    	var responseCode = this._getResponseCode();
    	if (responseCode == 401) {
	    	var requestedToken = this.requestObject.getResponseHeader("X-UserToken-Request");
	    	var respondedToken = this.requestObject.getResponseHeader("X-UserToken-Response");
	    	
	    	if (requestedToken && respondedToken && requestedToken != respondedToken)
	    		CustomEvent.fireAll("ck_updated", respondedToken);
	    	
 			var handleTimeOut = this.requestObject.getResponseHeader("X-HandleTimeOut");
			if ("true"==handleTimeOut) 
                if (this._handle401Error())
                	return;
			
    	}
    	else if (responseCode == 404 && this._outOfScope()) {
    		var err_options = {
    	    		text: "Access to Script Include " + this.processor +" blocked from scope: " + (this.getParam("sysparm_scope") ? this.getParam("sysparm_scope") : "global"),
    	    		type: "system",
    	    		attributes: { type: "error" }
    	    };
    		
    	    if (typeof GlideUI != 'undefined')
    	        GlideUI.get().fire(new GlideUINotification(err_options));
    	}
    
    	else if (this._wasCanceled() && this.callbackFunction && !this._getSuppressCancelNotification()) {
    		var err_options = {
    				text: this._getCancelErrorText(),
    				type: "system",
    				attributes: { type: "error" }
    		};		
    		
    		if (typeof GlideUI != 'undefined')
    		    GlideUI.get().fire(new GlideUINotification(err_options));
    	}
    	
		if (this.errorCallbackFunction)
			this.errorCallbackFunction(this.requestObject, this.callbackArgs);
    },
    
    _getRequestObject: function() {
        var req = null;
        
        if (window.XMLHttpRequest)
            req = new XMLHttpRequest();
        else if (window.ActiveXObject)
            req = new ActiveXObject("Microsoft.XMLHTTP");
        
    	return req;
    },
    
    _getResponseCode: function() {    	
    	return this.requestObject.status;
    },
    
    _wasCanceled: function() {
    	if (!this._cancelErrorXML)
    		return false;
    	
		var answer = this._cancelErrorXML.getAttribute('transaction_canceled'); 
		return answer == 'true';
    },
    
    _getSuppressCancelNotification: function() {
    	if (this._suppressCancelNotification)
    		return true;
    	
    	if (this._cancelErrorXML) {
    		var suppress = this._cancelErrorXML.getAttribute("suppress_notification"); 
			if (suppress && suppress == 'true')
				return true;
    	}
    	return false;
    },
    
    _getCancelErrorText: function() {
    	if (this._cancelErrorXML) {
    		var cancelMessage = this._cancelErrorXML.getAttribute('cancel_message'); 
			if (cancelMessage)
				return cancelMessage;
    	}
    	
    	return "Information could not be downloaded from the server because the transaction was canceled.";
    },
    
    _getCancelError: function() {
    	var xml = this.requestObject.responseXML;
    	if (!xml) {
	    	var responseText = this.requestObject.responseText;
var errorPattern = /<xml?[^>]*id="transaction_canceled_island"?[^>]*>/;
	    	var matches = responseText.match(errorPattern);
	    	if (!matches)
	    		return false;
	    	xml = loadXML(matches[0]);
    	}
    	return xml.documentElement;
    },
    
    _outOfScope: function() {
    	var callerScope = this.getParam("sysparm_scope") ? this.getParam("sysparm_scope") : "global";
    	var isAppScope = callerScope != "global";
    	return isAppScope && this.requestObject.responseXML.documentElement.getAttribute("error").indexOf("HTTP Processor class not found") == 0;
    },
    
	_responseReceived: function() {
    	lastActivity = new Date();
    	
    	CustomEvent.fireTop("request_complete", document);
    	
    	this._fireUINotifications();
    	this._showSessionNotifications();
    	if (this.callbackFunction) {
    		if (this.wantAnswer)
		    	this.callbackFunction(this.getAnswer(), this.callbackArgs);
		    else
		    	this.callbackFunction(this.requestObject, this.callbackArgs);
    	}
    	if (this.wantRequestObject)
    		return this.requestObject;
		return this.requestObject? this.requestObject.responseXML : null;
	},
    
	_showLoading: function() {
		if (!this._preventLoadingIcon)
			CustomEvent.fireAll("ajax.loading.start", this);
	},
	_hideLoading: function() {
		if (!this._preventLoadingIcon && window.CustomEvent)
			CustomEvent.fireAll("ajax.loading.end", this);
	},
	
	_buildReferringURL: function() {
		var path = location.pathname;
		var args = location.search;
if (path.substring(path.length-1) == '/') {
			if (args)
				return args;
			
			return "";
		}
			
return path.substring(path.lastIndexOf('/') + 1) + args;
	},
	
	_fireUINotifications: function() {
	    if (!this.requestObject || !this.requestObject.responseXML)
	        return;
	    
        var notifications = this.requestObject.responseXML.getElementsByTagName('ui_notifications');
        if (!notifications || notifications.length == 0)
            return;
        
        var spans = notifications[0].childNodes;
        for (var i = 0; i < spans.length; i++) {
            var span = spans[i];
            if (typeof GlideUI != 'undefined')
                GlideUI.get().fire(new GlideUINotification({xml: span}));
        }
        $(document).fire('glide-notification:clear', {spans : spans});	
	},
	
	_showSessionNotifications: function() {
	    if (!this.requestObject || !this.requestObject.responseXML)
	        return;
	    
        var notifications = this.requestObject.responseXML.getElementsByTagName('session_notifications');
        if (!notifications || notifications.length == 0)
            return;
        
        var spans = notifications[0].childNodes;
        for (var i = 0; i < spans.length; i++) {
            var span = spans[i];
            var type = span.getAttribute("data-type");
            if (typeof GlideUI != 'undefined') {
            	if(type !== 'nav')
            		GlideUI.get().addOutputMessage({msg:span.getAttribute("data-text"), type:type});
            }
        }
	},
	
	setScope: function(scope) {
		if(scope) {
			this.addParam('sysparm_scope', scope);			
		}
		return this;
	},
	
	setErrorCallback: function(callback) {
		this.errorCallbackFunction = callback;
	},
	
	setWantRequestObject: function(want) {
		this.wantRequestObject = want;
	},
	
	setWantSessionMessages: function(want) {
		this.addParam('sysparm_want_session_messages', want);
	},
    toString: function() { return "GlideAjax"; }
});
GlideAjax.disableSessionMessages = function() {
	GlideAjax.want_session_messages = false;
};
GlideAjax.enableSessionMessages = function() {
	GlideAjax.want_session_messages = true;
};
GlideAjax.enableSessionMessages();
;
/*! RESOURCE: /scripts/classes/ajax/GlideAjaxForm.js */
var GlideAjaxForm = Class.create(GlideAjax, {
	
	PROCESSOR: 'RenderInfo',
	initialize: function($super, templateName) {
		$super(this.PROCESSOR);
		this._formPreferences = {};
		this._templateName = templateName;
	  
    	this.setPreference('renderer', 'RenderForm');
		this.setPreference('type', 'direct');
		this.setPreference('table', templateName);
		
		this.addParam('sysparm_name', templateName);
		this.addParam('sysparm_value', this.getSysparmValue());
    },
    
    getRenderedBodyText: function(callback) {
    	this._renderedBodyCallback = callback;
    	this.getXML(this._parseTemplate.bind(this));
    },
    
    _parseTemplate: function(response) {
		s = response.responseText;
		
		s = s.substring(s.indexOf('<rendered_body>') + 15);
s = s.substring(0, s.indexOf('</rendered_body>'));
		
s = s.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&").replace(/&apos;/g, "'");
		this._renderedBodyCallback(s);
    },
    
    
    setPreference: function(k, v) {
    	this._formPreferences[k] = v;
    },
    
    getPreferences: function() {
    	return this._formPreferences;
    },
    
    getSysparmValue: function() {
    	var gxml = document.createElement('gxml');
    	var sec = document.createElement('section');
    	sec.setAttribute('name', this._templateName);
    	gxml.appendChild(sec);
    	for (var i in this._formPreferences) {
    		var e = document.createElement('preference');
    		e.setAttribute('name', i);
    		e.setAttribute('value', this._formPreferences[i]);
    		sec.appendChild(e);
    	}
    	return gxml.innerHTML;
    },
    
    
    toString: function() { return 'GlideAjaxForm'; }
});
;
/*! RESOURCE: /scripts/calendar.js */
var MONTH_NAMES = new Array('January','February','March','April','May','June','July','August','September','October','November','December','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
var DAY_NAMES = new Array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sun','Mon','Tue','Wed','Thu','Fri','Sat');
function LZ(x) {return(x<0||x>9?"":"0")+x}
function isDate(val,format) {
	var date=getDateFromFormat(val,format);
	if (date==0) { return false; }
	return true;
}
function compareDates(date1,dateformat1,date2,dateformat2) {
	var d1=getDateFromFormat(date1,dateformat1);
	var d2=getDateFromFormat(date2,dateformat2);
	if (d1==0 || d2==0) {
		return -1;
		}
	else if (d1 > d2) {
		return 1;
		}
	return 0;
}
function formatDateServer(date, format) {
	var ga = new GlideAjax("DateTimeUtils");
	ga.addParam("sysparm_name", "formatCalendarDate");
	var browserOffset = date.getTimezoneOffset() * 60000;
	 var utcTime = date.getTime() - browserOffset;
	 var userDateTime = utcTime - g_tz_offset;
	ga.addParam("sysparm_value", userDateTime);
	ga.getXMLWait();
	return ga.getAnswer();
}
function formatDate(date,format) {
	if (format.indexOf("z") > 0) 
		return formatDateServer(date, format);
		
	format=format+"";
	var result="";
	var i_format=0;
	var c="";
	var token="";
	var y=date.getFullYear()+"";
	var M=date.getMonth()+1;
	var d=date.getDate();
	var E=date.getDay();
	var H=date.getHours();
	var m=date.getMinutes();
	var s=date.getSeconds();
	var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
	var value=new Object();
	
	value["M"]=M;
	value["MM"]=LZ(M);
	value["MMM"]=MONTH_NAMES[M+11];
	value["NNN"]=MONTH_NAMES[M+11];
	value["MMMM"]=MONTH_NAMES[M-1];
	value["d"]=d;
	value["dd"]=LZ(d);
	value["E"]=DAY_NAMES[E+7];
	value["EE"]=DAY_NAMES[E];
	value["H"]=H;
	value["HH"]=LZ(H);
	
	if (format.indexOf('w') != -1) {
		var wk = date.getWeek();
		if (wk >= 52 && M == 1) {
			y = date.getFullYear();
			y--;
			y = y + "";
		}
		if (wk == 1 && M == 12) {
			y = date.getFullYear();
			y++;
			y = y + "";
		}
		value["w"] = wk;
		value["ww"] = LZ(wk);
	}
	var dayOfWeek = (7 + (E + 1) - (g_first_day_of_week - 1)) % 7;
	if (dayOfWeek == 0)
		dayOfWeek = 7;
	
	value["D"] = dayOfWeek;
	
	if (y.length < 4) {
		y=""+(y-0+1900);
	}
	value["y"]=""+y;
	value["yyyy"]=y;
	value["yy"]=y.substring(2,4);
	
	if (H==0) {
		value["h"]=12;
	} else if (H>12){
		value["h"]=H-12;
	} else {
		value["h"]=H;
	}
	value["hh"]=LZ(value["h"]);
	
	if (H>11) {
		value["K"]=H-12;
	} else {
		
		value["K"]=H;
	}
	value["k"]=H+1;
	value["KK"]=LZ(value["K"]);
	value["kk"]=LZ(value["k"]);
	
	if (H > 11) { 
		value["a"]="PM"; 
	} else { 
		value["a"]="AM"; 
	}
	value["m"]=m;
	value["mm"]=LZ(m);
	value["s"]=s;
	value["ss"]=LZ(s);
	
	while (i_format < format.length) {
		c=format.charAt(i_format);
		token="";
		while ((format.charAt(i_format)==c) && (i_format < format.length)) {
			token += format.charAt(i_format++);
			}
		if (value[token] != null) { result=result + value[token]; }
		else { result=result + token; }
		}
	return result;
}
function _isInteger(val) {
var digits="1234567890";
for (var i=0; i < val.length; i++) {
	if (digits.indexOf(val.charAt(i))==-1) { return false; }
	}
return true;
}
function _getInt(str,i,minlength,maxlength) {
for (var x=maxlength; x>=minlength; x--) {
	var token=str.substring(i,i+x);
	if (token.length < minlength) { return null; }
	if (_isInteger(token)) { return token; }
	}
return null;
}
Date.prototype.getWeek = function() {
var newYear = new Date(this.getFullYear(),0,1);
var day = newYear.getDay() - (g_first_day_of_week - 1);
day = (day >= 0 ? day : day + 7);
var dayNum = Math.floor((this.getTime() - newYear.getTime() - (this.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000) + 1;
var weekNum;
if (day < 4) {
weekNum = Math.floor((dayNum+day-1)/7) +1;
	if (weekNum > 52)
		weekNum = this._checkNextYear(weekNum);
	
	return weekNum;
}
weekNum = Math.floor((dayNum+day-1)/7);
if (weekNum < 1)
	weekNum = this._lastWeekOfYear();
else if (weekNum > 52) 
	weekNum = this._checkNextYear(weekNum);
return weekNum;	
}
Date.prototype._lastWeekOfYear = function() {
var newYear = new Date(this.getFullYear() - 1,0,1);
var endOfYear = new Date(this.getFullYear() - 1,11,31);
var day = newYear.getDay() - (g_first_day_of_week - 1);
var dayNum = Math.floor((endOfYear.getTime() - newYear.getTime() - (endOfYear.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000) + 1;
return day < 4 ? Math.floor((dayNum+day-1)/7) + 1 : Math.floor((dayNum+day-1)/7);
}
Date.prototype._checkNextYear = function() {
var nYear = new Date(this.getFullYear() + 1,0,1);
var nDay = nYear.getDay() - (g_first_day_of_week-1);
nDay = nDay >= 0 ? nDay : nDay + 7;
return nDay < 4 ? 1 : 53;
}
Date.prototype.setWeek = function(weekNum) {
weekNum--;
var startOfYear = new Date(this.getFullYear(), 0, 1);
var day = startOfYear.getDay() - (g_first_day_of_week - 1);
if (day > 0 && day < 4) { 
	this.setFullYear(startOfYear.getFullYear() - 1);
	this.setDate(31 - day + 1);
	this.setMonth(11);
} else if (day > 3)
this.setDate(startOfYear.getDate() + (7-day));
this.setDate(this.getDate() + (7 * weekNum));
}
function getDateFromFormat(val,format) {
val=val+"";
format=format+"";
var i_val=0;
var i_format=0;
var c="";
var token="";
var token2="";
var x,y;
var now=new Date();
var year=now.getYear();
var month=now.getMonth()+1;
var date=0;
var hh=now.getHours();
var mm=now.getMinutes();
var ss=now.getSeconds();
var ampm="";
var week = false;
while (i_format < format.length) {
	c=format.charAt(i_format);
	token="";
	while ((format.charAt(i_format)==c) && (i_format < format.length)) {
		token += format.charAt(i_format++);
		}
	if (token=="yyyy" || token=="yy" || token=="y") {
		if (token=="yyyy") { x=4;y=4; }
		if (token=="yy")   { x=2;y=2; }
		if (token=="y")    { x=2;y=4; }
		year=_getInt(val,i_val,x,y);
		if (year==null) { return 0; }
		i_val += year.length;
		if (year.length==2) {
			if (year > 70) { year=1900+(year-0); }
			else { year=2000+(year-0); }
			}
		}
	else if (token=="MMM"||token=="NNN"){
		month=0;
		for (var i=0; i<MONTH_NAMES.length; i++) {
			var month_name=MONTH_NAMES[i];
			if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
				if (token=="MMM"||(token=="NNN"&&i>11)) {
					month=i+1;
					if (month>12) { month -= 12; }
					i_val += month_name.length;
					break;
					}
				}
			}
		if ((month < 1)||(month>12)){return 0;}
		}
	else if (token=="EE"||token=="E") {
		for (var i=0; i<DAY_NAMES.length; i++) {
			var day_name=DAY_NAMES[i];
			if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
				if (week) {
if (i==0 || i == 7)
						date+=6;
else if (i== 2 || i == 9)
						date+=1;
else if (i== 3 || i == 10)
						date+=2;
else if (i == 4 || i == 11)
						date+=3;
else if (i == 5 || i == 12)
						date +=4;
else if (i == 6 || i== 13)
						date+=5;
				}					
				i_val += day_name.length;
				break;
				}
			}
		}
	else if (token=="MM"||token=="M") {
		month=_getInt(val,i_val,token.length,2);
		if(month==null||(month<1)||(month>12)){return 0;}
		i_val+=month.length;}
	else if (token=="dd"||token=="d") {
		date=_getInt(val,i_val,token.length,2);
		if(date==null||(date<1)||(date>31)){return 0;}
		i_val+=date.length;}
	else if (token=="hh"||token=="h") {
		hh=_getInt(val,i_val,token.length,2);
		if(hh==null||(hh<1)||(hh>12)){return 0;}
		i_val+=hh.length;}
	else if (token=="HH"||token=="H") {
		hh=_getInt(val,i_val,token.length,2);
		if(hh==null||(hh<0)||(hh>23)){return 0;}
		i_val+=hh.length;}
	else if (token=="KK"||token=="K") {
		hh=_getInt(val,i_val,token.length,2);
		if(hh==null||(hh<0)||(hh>11)){return 0;}
		i_val+=hh.length;}
	else if (token=="kk"||token=="k") {
		hh=_getInt(val,i_val,token.length,2);
		if(hh==null||(hh<1)||(hh>24)){return 0;}
		i_val+=hh.length;hh--;}
	else if (token=="mm"||token=="m") {
		mm=_getInt(val,i_val,token.length,2);
		if(mm==null||(mm<0)||(mm>59)){return 0;}
		i_val+=mm.length;}
	else if (token=="ss"||token=="s") {
		ss=_getInt(val,i_val,token.length,2);
		if(ss==null||(ss<0)||(ss>59)){return 0;}
		i_val+=ss.length;}
	else if (token=="a") {
		if (val.substring(i_val,i_val+2).toLowerCase()=="am") {ampm="AM";}
		else if (val.substring(i_val,i_val+2).toLowerCase()=="pm") {ampm="PM";}
		else {return 0;}
		i_val+=2;}		
else if (token == "w" || token == "ww") {
		var weekNum = _getInt(val,i_val,token.length, 2);		
		week = true;
		if (weekNum != null) {
			var temp = new Date(year, 0, 1, 0, 0, 0);
		    temp.setWeek(parseInt(weekNum, 10));
			year = temp.getFullYear();
			month = temp.getMonth()+1;				
			date = temp.getDate();	
		}
		weekNum += "";
		i_val += weekNum.length;
	}
	else if (token=="D") {
		if (week) {
			var day = _getInt(val,i_val,token.length, 1);
			if ((day == null) || (day <= 0) || (day > 7))
				return 0;
			var temp = new Date(year, month-1, date, hh, mm, ss);
			var dayOfWeek = temp.getDay();
			
			day = parseInt(day, 10);
			day = (day + g_first_day_of_week - 1) % 7;
			if (day == 0)
				day = 7;
			day--;
			
			if (day < dayOfWeek)
				day = 7 - (dayOfWeek - day);
			else
				day -= dayOfWeek;
			if (day > 0) {
				temp.setDate(temp.getDate() + day);
				
				year = temp.getFullYear();
				month = temp.getMonth() + 1;
				date = temp.getDate();
			}
			i_val++;
		}	
	} else if (token =="z")
		i_val+=3;
	else {
		if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
		else {i_val+=token.length;}
		}
	}
if (val.length < i_val || val.length > i_val+2){ return 0; }
if (month==2) {
if ( ( (year%4==0)&&(year%100 != 0) ) || (year%400==0) ) {
		if (date > 29){ return 0; }
		}
	else { if (date > 28) { return 0; } }
	}
if ((month==4)||(month==6)||(month==9)||(month==11)) {
	if (date > 30) { return 0; }
	}
if (hh<12 && ampm=="PM") { hh=hh-0+12; }
else if (hh>11 && ampm=="AM") { hh-=12; }	
var newdate=new Date(year,month-1,date,hh,mm,ss);	
return newdate.getTime();
}
function parseDate(val) {
	var preferEuro=(arguments.length==2)?arguments[1]:false;
	generalFormats=new Array('y-M-d','MMM d, y','MMM d,y','y-MMM-d','d-MMM-y','MMM d');
monthFirst=new Array('M/d/y','M-d-y','M.d.y','MMM-d','M/d','M-d');
dateFirst =new Array('d/M/y','d-M-y','d.M.y','d-MMM','d/M','d-M');
	yearFirst =new Array( 'yyyyw.F', 'yyw.F');
	var checkList=new Array('generalFormats',preferEuro?'dateFirst':'monthFirst',preferEuro?'monthFirst':'dateFirst', 'yearFirst');
	var d=null;
	for (var i=0; i<checkList.length; i++) {
		var l=window[checkList[i]];		
		for (var j=0; j<l.length; j++) {
			d=getDateFromFormat(val,l[j]);
			if (d!=0) { return new Date(d); }
			}
		}
	return null;
}
function getDurationString(ms) {
var sec = Math.floor(ms / 1000), s = '', days = Math.floor(sec/86400);
	if (days >= 1) {
	s += days + ' day' + (days > 1 ? 's' : '');
	 sec -= days * 86400;
	}
	
var hours = Math.floor(sec/3600);
	if (hours >= 1) {
		s += (days > 0 ? ' ' : '') + hours + ' hour' + (hours > 1 ? 's' : '');
		sec -= hours * 3600;
	}
	
var min = Math.floor(sec/60);
	if (days == 0) {
	if (min >= 1) {
	 s += (hours > 0 ? ' ' : '') + min + ' minute' + (min > 1 ? 's' : '');
	 if (hours < 1) {
		sec -= min * 60;
		if (sec > 0 && min <= 10)
		  s += ' ' + sec + ' second' + (sec > 1 ? 's' : ''); 
	 }
	} else if (hours == 0 && sec > 0)
	 s += sec + ' second' + (sec > 1 ? 's' : '');
	}
	return s;
}
function getUserDateTime() {
	var browserDate = new Date();
	var browserOffset = browserDate.getTimezoneOffset() * 60000;
	var utcTime = browserDate.getTime() + browserOffset;
	var userDateTime = utcTime + g_tz_offset;
	return new Date(userDateTime);
}
function convertUtcTimeToUserTimeMs(utcTimeMs) {
	var d = new Date();
	return parseInt(utcTimeMs) + (d.getTimezoneOffset() * 60000) + g_tz_offset;
}
function convertUserTimeToUtcTimeMs(userTimeMs) {
	var d = new Date();	
	return parseInt(userTimeMs) - (d.getTimezoneOffset() * 60000) - g_tz_offset;
}
;
/*! RESOURCE: /scripts/functions_clipboard.js */
window.NOW = window.NOW || {};
window.NOW.g_clipboard = {};
(function(exports) {
	var browserReturnsErroneousStatus = navigator.userAgent.indexOf('MSIE 9') != -1
		|| navigator.userAgent.indexOf('MSIE 10') != -1
		|| navigator.userAgent.indexOf('rv:11') != -1;
	exports.copyToClipboardAsync = function(string, callback) {
		if (navigator.clipboard.writeText) {
			navigator.clipboard.writeText(string).then(() => {
				fireCopiedMessage();
				if (callback)
					callback();
			});
		} else {
			legacyClipboardCopy(string);
		}
	};
	exports.copyToClipboard = function(str, messageMethod) {
		if (document.execCommand && isCapableMessageMethod(messageMethod)) {
			var v = document.createElement('textarea');
			v.innerHTML = str;
			v.className = "sr-only";
			document.body.appendChild(v);
			v.select();
			var result = true;
			try {
				result = document.execCommand('copy');
				if (result && browserReturnsErroneousStatus) {
					var checkDiv = document.createElement('textarea');
					checkDiv.className = "sr-only";
					document.body.appendChild(checkDiv);
					checkDiv.select();
					try {
						document.execCommand('paste');
						result = checkDiv.value == str;
					} finally {
						document.body.removeChild(checkDiv);
					}
				}
			} catch (e) {
				result = false;
				if (window.jslog)
					jslog("Couldn't access clipboard " + e);
			} finally {
				document.body.removeChild(v);
			}
			if (result) {
				fireCopiedMessage(messageMethod);
				return true;
			}
		}
		legacyClipboardCopy(str);
		return false;
	}
	function isCapableMessageMethod(messageMethod) {
		if (messageMethod == 'custom')
			return true;
		return 'GlideUI' in window;
	}
	function fireCopiedMessage(messageMethod) {
		if (!messageMethod || messageMethod == 'GlideUI') {
			var options = {
				text: 'Copied to clipboard',
				type: 'info',
				closeDelay: '2500',
				styles: {
					position: 'fixed',
					width: '60%'
				}
			};
			GlideUIDefault.display(options);
		}
	}
	function legacyClipboardCopy(meintext) {
		prompt("Because of a browser limitation the URL can not be placed directly in the clipboard. " +
			"Please use Ctrl-C to copy the data and escape to dismiss this dialog", meintext);
	}
})(window.NOW.g_clipboard);
;
/*! RESOURCE: /scripts/context_actions.js */
function switchView(type, tableName, viewName) {
	
ScriptLoader.getScripts('scripts/classes/GlideViewManager.js', function() {
		if (type == 'list')
			new GlideViewManager(tableName, viewName).refreshList();
		else
			new GlideViewManager(tableName, viewName).refreshDetail();
	})
}
function copyRowToClipboard(base, ref, sysId, view) {
	var url = base + "nav_to.do?uri=" + ref + ".do?sys_id=" + sysId;
	if (view)
		url += "%26sysparm_view=" + view;
	copyToClipboard(url);
}
function doUpdate(scope) {
	var name = gActiveContext.getTableName();
	var temp = name + '_update.do';
	var form = getControlForm(name);
	var msg = [ 'There are no rows selected', 'Update the entire list?', 'records' ];
	var answer = getMessages(msg);
	if (scope == 'selected' && getChecked(form) == '') {
		alert(answer['There are no rows selected']);
		return;
	}
	form.action = temp;
	addInput(form, 'HIDDEN', 'sys_action', 'sysverb_multiple_update');
	addInput(form, 'HIDDEN', 'sysparm_multiple', 'true');
	addInput(form, 'HIDDEN', 'sysparm_nostack', 'yes');
	if (scope == 'selected')
		populateParmQuery(form, 'sys_idIN', 'NULL');
	else {
		if (!confirm(answer['Update the entire list?'] + " ("
				+ form.sysparm_total_rows.value + " " + answer['records'] + ")")) {
			return;
		}
	}
	form.submit();
}
function contextAction(tableName, actionName) {
	var form = getControlForm(tableName);
	addInput(form, 'HIDDEN', 'sys_action', actionName);
    form.submit();
}
function contextConfirm(tableName, actionName) {
    var sysparm_rows = gel('sysparm_total_rows').value;
    var num_rows = parseInt(sysparm_rows);
    var sysparm_query = gel('sysparm_query');    
    if (sysparm_query)
        sysparm_query = sysparm_query.value;
    else
        sysparm_query = '';
        
    var sysparm_view = getView(tableName);
        
    if (num_rows < g_export_warn_threshold) {
        var dialog = new GwtPollDialog(tableName, sysparm_query, sysparm_rows, sysparm_view, actionName);
        dialog.execute();	 	
        return;
    }
    var dialog = new GwtExportScheduleDialog(tableName, sysparm_query, sysparm_rows, sysparm_view, actionName);
    dialog.execute();	 	
}
function executeRecentSearch(searchTerm, url) {
	parent.document.getElementById('sysparm_search').value = decodeURIComponent(searchTerm);
	window.open(url,'gsft_main');
	CustomEvent.fire('adjustsearch');
}
function getView(tableName) {
	var sysparm_view = '';
	if (isReport()) {
		var form = getControlForm(tableName);
		if (form) {
			var temp = form['sysparm_view'];
			if (temp)
				sysparm_view = temp.value;
		}
	}
	if (sysparm_view != '')
		return sysparm_view;
	var sp = gel('sysparm_view');
	if (sp)
		sysparm_view = sp.value;
	return sysparm_view;
	function isReport() {
		var list = gel('reportform_control');
		if (list)
			return true;
		return false;
	}
}
var copyToClipboard = typeof window.NOW.g_clipboard !== 'undefined' ? window.NOW.g_clipboard.copyToClipboard : null;
var copyToClipboardAsync = typeof window.NOW.g_clipboard !== 'undefined' ? window.NOW.g_clipboard.copyToClipboardAsync : null;
function showQuickForm(id, action, width, height) {
	var form;
	var tableName;
	var srcElement;
	var keyset;
	
	if (window.lastEvent) {
		srcElement = getSrcElement(window.lastEvent);
		form = srcElement.form;
		
		if (srcElement.tagName == "SELECT") {
			var o = srcElement.options[srcElement.selectedIndex];
			tableName = o.getAttribute("table");
		} else  
			tableName = srcElement.getAttribute("table");
		
		if ((action == undefined || action == '') && srcElement.value)
	    	action = srcElement.value;
		if (!form)
			keyset = g_list.getChecked();
		else
			keyset = getChecked(form);
			
window.lastEvent = null;
	}	
	
	if (tableName == undefined) {
		
		if (typeof(gcm) == 'undefined')
			gcm = crumbMenu;
		tableName = gcm.getTableName();
		form = getFormForList(tableName);
		if (typeof(rowSysId) != 'undefined') 
keyset = rowSysId;
		else 
keyset = getChecked(form);
gcm.setFiringObject();
	}  
		
	if ( (!form && !tableName) || (!tableName && g_list))
		return;
	if (!keyset || keyset == '') {
		alert("No records selected");
		return;
	}
	
	var gForm = new GlideDialogForm("", tableName+"_update");
	
	if (width && height)
		gForm.setDialogSize(width, height);
	
    gForm.addParm('sysparm_view', id);
    gForm.setMultiple(form);
    gForm.addParm('sysparm_checked_items', "sys_idIN" + keyset);
	if (action && action != '')
	   gForm.addParm('sysparm_action_name', action);
    gForm.render();
}
function personalizeResponses(id) {
	var parts = id.split('.');
	var mytable = parts[0];
	var myfield = parts[1];	
	var myreferurl = document.getElementById('sysparm_this_url_enc');
	var url = "response_list.do?sysparm_name=" + mytable +
				"&sysparm_element=" + myfield +
				"&sysparm_target=" + id +
				"&sysparm_view=sys_response_tailor";
			  
	if (myreferurl)
		url += "&sysparm_referring_url=" + myreferurl.value;
			  	
	self.location = url;
}
function personalizeChoices(id) {
	var mytable = id.split('.')[0];
	var mydependent = document.getElementById('ni.dependent_reverse.' + id);
	
	var url = new GlideURL("slushbucket_choice.do");
	url.addParam('sysparm_ref', id);
	url.addParam('sysparm_form', 'sys_choice');
	url.addParam('sysparm_dependent', (mydependent? mydependent.value : ""));
	url.addParam('sysparm_stack', 'no');
			  
	if (mydependent != null) {
		var el = document.getElementsByName(mytable + "." + mydependent.value)[0];
		if (el != null) {
			var selectValue;
				if (el.options) 
					selectValue = el.options[el.selectedIndex].value;
				else
					selectValue = el.value;
				url.addParam('sysparm_dependent_value', selectValue);
		}
	}
	
	self.location = url.getURL();
}
function personalizeControl(strIdent, id, query) {
    var url = 'sys_ui_list_control.do?sys_id=' + id;
    if (query && query != '')
       url += "&sysparm_query=" + query;
    window.location = url;
}
function personalizer(strIdent, strForm, strSysId) {
	if (strIdent == 'auto' && window.$j) {
		strIdent = $j('[data-section-id]').first().attr('data-section-id');
	}
	var parentForm = getControlForm(strIdent);
    var form = document.forms['sys_personalize'];
   
	if (parentForm && parentForm['sysparm_collection_relationship'])
		addInput(form, 'HIDDEN', 'sysparm_collection_relationship', parentForm['sysparm_collection_relationship'].value);
	else
		addInput(form, 'HIDDEN', 'sysparm_collection_relationship', '');
	
    addInput(form, 'HIDDEN', 'sysparm_list', strIdent);
    addInput(form, 'HIDDEN', 'sysparm_form', strForm);
    addInput(form, 'HIDDEN', 'sysparm_sys_id', strSysId);
    
    if (parentForm && parentForm['sysparm_collection'])
		addInput(form, 'HIDDEN', 'sysparm_collection', parentForm['sysparm_collection'].value);
    var scopeElement = gel('sysparm_domain_scope');
    if (scopeElement && scopeElement.value) {
        addInput(form, 'HIDDEN', 'sysparm_domain_scope', scopeElement.value);
    }
    
	if(typeof GlideTransactionScope != 'undefined') {
		GlideTransactionScope.appendTransactionScope(function(name, value) {
			addInput(form, 'HIDDEN', name, value);
		});
	}
    
    form.submit();
}
function personalizeList(listId, tableName) {
	var parentForm = getFormForList(listId);
    var form = document.forms['sys_personalize'];
   
	if (parentForm && parentForm['sysparm_collection_relationship'])
		addInput(form, 'HIDDEN', 'sysparm_collection_relationship', parentForm['sysparm_collection_relationship'].value);
	else
		addInput(form, 'HIDDEN', 'sysparm_collection_relationship', '');
	
    addInput(form, 'HIDDEN', 'sysparm_list', tableName);
    addInput(form, 'HIDDEN', 'sysparm_form', 'list');
    
    if (parentForm && parentForm['sysparm_collection'])
		addInput(form, 'HIDDEN', 'sysparm_collection', parentForm['sysparm_collection'].value);
	else
		addInput(form, 'HIDDEN', 'sysparm_collection', '');
	if (typeof GlideTransactionScope !== 'undefined') {
		GlideTransactionScope.appendTransactionScope(function(name, value) {
			addInput(form, 'HIDDEN', name, value);
		});
	}
	form.submit();
}
function personalizeField(identifier, formName) {
    var form = document.forms['sys_personalize'];
    var fields = 'name.element.language';
    if (formName && formName.indexOf('sys_dictionary') == 0)
       fields = 'name.element';
       
    addQueryFilter(form, fields, identifier, '', formName);
   	form.action = formName;
    form.submit();
}
function personalizeFields(identifier, formName) {
    var form = document.forms['sys_personalize'];
    addQueryFilter(form, 'name', identifier);
   	form.action = formName;
    form.submit();
}
function personalizeSecurity(identifier, field_name) {
    var a = field_name.split('.');
    var g_dialog = new GlideDialogWindow('security_mechanic');
    g_dialog.setPreference('table_name', a[0]);
    g_dialog.setPreference('field_name', a[1]);
	g_dialog.setSize(600, '');
    g_dialog.setTitle('Security Mechanic');
    g_dialog.render();
}
function showDictionary(identifier, field_id) {
    var a = field_id.split('.');
    var g_dialog = new GlideDialogWindow('dictionary_viewer');
    g_dialog.setPreference('table_name', a[0]);
    g_dialog.setPreference('field_name', a[1]);
    g_dialog.setTitle('Dictionary Info: ' + field_id);
    g_dialog.render();
}
function listSecurity(identifier, field_name) {
	var form = document.forms['sys_personalize'];
	addQueryFilter(form, 'CALCULATED:SecurityQueryCalculator', field_name);
	form.action = "sys_security_acl_list.do";
    form.submit();
}
function listCollection(coll_table, coll_field, of_table, view_name) {
	var form = document.forms['sys_personalize'];
	addQueryFilter(form, 'CALCULATED:CollectionQueryCalculator', of_table + ',' + coll_field + ',' + view_name);
    addInput(form, 'HIDDEN', 'sysparm_domain_restore', 'false');
	form.action = coll_table + "_list.do";
    form.submit();
}
function exportToPDF(table, sys_id, isLandscape, sysparm_view, sysparm_domain){
	
	var relatedListFilters = "";
	if (window.g_tabs2List && g_tabs2List.tabIDs) {
		var relatedLists = g_tabs2List.tabIDs;
		var relatedListCount = relatedLists.length;
		if (relatedListCount > 0) {
			for (var i = 0; i < relatedListCount; i++) {
				var relatedListName = relatedLists[i].substring(0, relatedLists[i].lastIndexOf("_list"));
				var filter = getFilter(relatedListName);
				if(!filter) {
					filter = getFilterViaTableDiv(relatedListName+"_table")
				}
				if (filter && filter.length > 0) {
					if (i == relatedListCount - 1)
						relatedListFilters += relatedListName + "=" + encodeURIComponent(encodeURIComponent(filter));
					else
						relatedListFilters += relatedListName + "=" + encodeURIComponent(encodeURIComponent(filter)) + "^";
				}
			}
		}
	}
	
	var url = table + ".do?sys_id=" + sys_id + "&PDF" + "&sysparm_view=" + sysparm_view + "&related_list_filter=" + relatedListFilters + "&sysparm_domain=" + sysparm_domain;
	
	if (isLandscape)
		url += "&landscape=true";
	
	window.location = url;
	
}
function showList(tableName, fields, ids) {
	if (!ids)
		ids = gActiveContext.getTableName();
	
	self.location = tableName + "_list.do?sysparm_query=" + addQueryFilter('', fields, ids, tableName, null, true);	
}
function showItem(tableName, fields, ids, view) {
	if (!ids)
		ids = gActiveContext.getTableName();
    var url = tableName + ".do?sysparm_query=" + addQueryFilter('', fields, ids, tableName);
    if (typeof(view) != "undefined") {
    	url += "&sysparm_view=" + view;
    }
    self.location = url;
}
function addQueryFilter(form, names, values, table, formName, useBaseTable) {
	var tableName = table;
    if ((names == '' || names == null) || (values == '' || values == null))
        return;
    if (names.indexOf("CALCULATED") == 0) {
    	var ec = "";
    	if (names.indexOf("CollectionQueryCalculator") > 0)
    		ec = collectionQueryCalculator(values);
    	else
    	    ec = securityQueryCalculator(values);
    	addInput(form, "HIDDEN", "sysparm_query", ec);
    	addInput(form, "HIDDEN", "sysparm_query_encoced", ec);
        return;
    } 
    var vNames = names.split(".");
    var vValues = values.split(".");
    if (names.indexOf("name.element") == 0) {
        if (vValues.length > 2) {
            var tableElement = TableElement.get(values);
            if (tableElement.type == 'glide_var') {
                vValues[0] = vValues[2];
                vValues[1] = vValues[3];
            } else {
                vValues[0] = tableElement.getTableName();
                vValues[1] = tableElement.getName();
            }
        } else {
            var tableR = new Table(vValues[0]);
            var element = tableR.getElement(vValues[1]);
            var label = '';
            if (formName && formName.indexOf("sys_documentation") == 0)
                 label = getTableLabel(tableR.getName(), element.getName());
                 
            if (label == '' && element != null)
                vValues[0] = useBaseTable === true ? element.getBaseTableName() : element.getTableName();
        }
    } 
    
    if (names.indexOf("name.element.language") == 0) {   
    	vValues[2] = g_lang;
    }
    var query = new Array();
    for (var i = 0; i < vNames.length; i++) {
    	if ("sys_choice" == tableName && "name" == vNames[i]) {
    		query.push("nameINjavascript:getTableExtensions('" + vValues[i] +"')");
    	}
    	else if ("sys_ui_style" == tableName && "name" == vNames[i]) {
    		query.push(buildQueryClause(values.split(".")[0], "name"));
    	}
    	else
    		query.push(vNames[i] + "=" + vValues[i]);
    }
    
    if(tableName)
    	return query.join('^');
    
    addInput(form, "HIDDEN", "sysparm_query", query.join('^'));
    addInput(form, "HIDDEN", "sysparm_query_encoded", query.join('^'));
	setStack(form);
}
function getTableLabel(tabel, element) {
	var ajax = new GlideAjax('ContextActionsAjax');
	ajax.addParam("sysparm_name", "getLabel");
	ajax.addParam("sysparm_type", tabel);
	ajax.addParam("sysparm_value", element);
	ajax.getXMLWait();
	return ajax.getAnswer();
}
function collectionQueryCalculator(args) {
	var sa = args.split(",");
	var tableName = sa[0];
	var collField = sa[1];
	return buildQueryClause(tableName, collField);
}
function buildQueryClause(tableName, collField) {
	var tableDef = Table.get(tableName);
	var tables = tableDef.getTables();
	var result = new Array();
	
    result.push(collField);
	result.push("=");
	result.push(tableName);
	
	result.push("^OR");
    result.push(collField);
	result.push("IN");
	result.push(tables.join());
	return result.join("");
}
function securityQueryCalculator(values) {
    var sa = values.split(".");
    var fieldName = null;
    var element = null;
    var tableName = sa[0];
    if (sa.length > 1)
        fieldName = sa[1];
    var allTables = new Array();
    var table = new Table(tableName);
    if (fieldName == null)
        allTables = table.getTables();
    else {
        allTables.push(tableName);
        element = table.getElement(fieldName);
        if (element != null && element.getTableName() != tableName)
            allTables.push(element.getTableName());
        
        allTables.push("*");
    }
    var rc = getRules(allTables, fieldName);
    return rc;
}
function getRules(allTables, fieldName) {
    var rules = null;
    if (fieldName == null) {
        rules = "name=*^ORnameSTARTSWITH*.";
        for ( var i = 0; i < allTables.length; i++)
            rules += "^ORname=" + allTables[i] + "^ORnameSTARTSWITH" + allTables[i] + ".";
        return rules;
    }
    var rc = new Array();
    for ( var x = 0; x < allTables.length; x++) {
        var tableName = allTables[x];
        rc.push(tableName);
        rc.push(tableName + ".*");
        if (fieldName != null)
            rc.push(tableName + "." + fieldName);
    }
    rules = "nameIN" + rc.join();
    
    return rules;
}
function setWatchField(id) {
	var ajax = new GlideAjax('ContextActionsAjax');
	ajax.addParam("sysparm_name", "setWatchField");
	ajax.addParam("sysparm_id", id);
	ajax.getXML(function() {CustomEvent.fire('glide_optics_inspect_watchfield', id)});
}
function showWatchField(id) {
    var ajax = new GlideAjax('ContextActionsAjax');
    ajax.addParam("sysparm_name", "setWatchField");
    ajax.addParam("sysparm_id", id);
    ajax.getXML(function() {CustomEvent.fire('glide_optics_inspect_show_watchfield', id)});
}
function clearWatchField(id) {
	var ajax = new GlideAjax('ContextActionsAjax');
	ajax.addParam("sysparm_name", "clearWatchField");
	ajax.getXML();
	ajax.getXML(function() {CustomEvent.fire('glide_optics_inspect_clear_watchfield', id)});
}
function setStack(form) {
	var url = new GlideURL(window.location.href);
	var stack = url.getParam('sysparm_nameofstack');
	if (stack)
		addInput(form, 'HIDDEN', 'sysparm_nameofstack', stack);
}
;
/*! RESOURCE: /scripts/depends.js */
function getNameFromElement(elementName) {
	var names = elementName.split(".");
	names = names.slice(1);
	return names.join(".");
}
function loadFilterColumns(fname, dependent) {
	var value = resolveDependentValue(fname, dependent);
    var names = fname.split(".");	
	serverRequest("xmlhttp.do?sysparm_include_sysid=true&sysparm_processor=SysMeta&sysparm_table_name=false&sysparm_type=column&sysparm_nomax=true&sysparm_value=" + names[0], getFilterColumnsResponse, [fname, dependent]);
	CustomEvent.fire('conditions:dependent_change');
}
function getFilterColumnsResponse(evt, args) {
	var fname = args[0];
	var dep = args[1];
	var hinput = document.getElementById(fname);
 	filterExpanded = true;
	var table = resolveDependentValue(fname, dep);
	var xfilter = unescape(hinput.value);
	var form = findParentByTag(hinput, "FORM");
	if (table) {
		firstTable = table;
		createCondFilter(table + "." + fname, xfilter, fname);
	}
}	
function gotTemplateResponseWithRef(fn, name) {
	if(typeof name !== 'string' || name.length === 0)
		return fn;
	return function() {
		var args = Array.prototype.slice.call(arguments);
		args.push(name);
		fn.apply(null, args);
	}
}
function onSelChange(elementName, fromSetTemplateValue) {
	var elementId = elementName;
	var includesSysSelect = elementName.indexOf("sys_select.") === 0;
	if (includesSysSelect)
		elementId = elementName.replace("sys_select.", "");
	var df = new DerivedFields(elementId, gel(elementName).value);
	df.clearRelated();
	df.updateRelated();
	var vName = "ni.dependent." + getNameFromElement(elementId);
	var eDeps = document.getElementsByName(vName);
	jslog("*************---->" + eDeps.length);
	for (var i = 0; i < eDeps.length; i++) {
		var eDep = eDeps[i];
		if (eDep == null)
			continue;
	      
		var f = eDep.attributes.getNamedItem('onDependentChange');
		if (f) {
			eval(f.nodeValue);
			continue;
		}
		if (df.isDerivedWaitingClearValue() && eDep.hasAttribute('data-ref-qual'))
			continue;
		var name = eDep.value;
	
		var eChanged = gel(elementName);
		var value;
		if (eChanged.options) {
			var selected = eChanged.selectedIndex;
			value = eChanged.options[selected].value;
		} else
			value = eChanged.value;
		var retFunc = selResponseHelper(includesSysSelect || isReferenceType(name), fromSetTemplateValue);
		var ajax = new GlideAjax("set_from_attributes");
		var argCnt = 0;
		for (var ac = 0; ac < eDep.attributes.length; ac++) {
			var itemName = eDep.attributes[ac].name;
	
			if (itemName.substring(0, 7).toLowerCase() == "sysparm") {
				var pvalue = eDep.attributes[ac].value;
				ajax.addParam(itemName, pvalue);
				argCnt++;
			} else if (itemName == "function") {
				var fdef = eDep.attributes[ac].value;
				var index = fdef.indexOf("(");
				if (index == -1) {
					retFunc = eval(eDep.attributes[ac].value);
					retFunc = gotTemplateResponseWithRef(retFunc, eDep.dataset.ref);
				}
				else
					retFunc = fdef;
			}
		}
	
		if (argCnt == 0)
			continue;
		ajax.addParam("sysparm_value", value);
		ajax.addParam("sysparm_name", name);
		ajax.addParam("sysparm_chars", "*");
		ajax.addParam("sysparm_nomax", "true");
		if ('true' == eDep.getAttribute('data-ref-qual') && typeof g_form !== 'undefined') {
			if (g_form.isNewRecord() || _hasEmptyAncestor(g_form._removeTableName(name)))
				ajax.addEncodedString(g_form.serialize());
			else  {
				var encoded = g_form.serializeChangedAll();
if (!gel(elementId).changed)
					encoded += g_form._serializeElement(elementId);
				ajax.addEncodedString(encoded);
			}
		}
		
		var scopeElement = gel('sysparm_domain_scope');
		if (scopeElement && scopeElement.value) {
			ajax.addParam("sysparm_domain_scope", scopeElement.value);
		}
	    
		var domainElement = gel('sysparm_domain');
		if (domainElement && domainElement.value) {
			ajax.addParam("sysparm_domain", domainElement.value);
		}
		if ( fromSetTemplateValue ) {
			ajax.setWantRequestObject(true);
			var responseObject = ajax.getXMLWait();
			if (responseObject.responseXML)
				retFunc(responseObject, eChanged);
		} else {
			ajax.getXML(retFunc, null, eChanged);
		}
	}
}
function _hasEmptyAncestor(v) {
	var name = v.substring(0, v.lastIndexOf('.'));
	return !!name && (g_form.getValue(name) == '' || _hasEmptyAncestor(name));
}
function isReferenceType(name) {
	return getDataType(name) =='glide_element_reference_choice';
}
function getDataType(name) {
	var input = gel(name);
	return input && input.getAttribute('data-type') || '';
}
function getDefaultOption(name, e) {
	if (e.getAttribute("sysparm_processor") !== "PickList")
		return null;
	var defaultOption = e.getAttribute("default_option");
	if (defaultOption)
		return defaultOption;
	if ("glide_element_reference_choice_without_none" !== getDataType(name))
		return getMessage('-- None --');
	return null;
}
function selResponse(request, containsSysSelect, fromSetTemplateValue) {
	if (!request || !request.responseXML)
		return;
		
    var e = request.responseXML.documentElement;
	var elementName = e.getAttribute("sysparm_name");
	if (containsSysSelect && gel('sys_display.original.' + elementName))
		elementName = "sys_select." + elementName;
	var selectedItem = e.getAttribute("select_option");
	var select = gel(elementName);
	var currentValue = select.value;
	var isSelect2 = select.className.indexOf('select2') > -1;
	
	try {	
select.options.length = 0;
	} catch (e) {
	}
	var defaultOption = getDefaultOption(elementName, e);
	if (defaultOption)
		appendSelectOption(select, "", document.createTextNode(defaultOption));
	var items = request.responseXML.getElementsByTagName("item");
	for (var i = 0; i < items.length; i++) {
		var item = items[i];
		var t = item.getAttribute("value");
		var label = item.getAttribute("label");
		var hint = item.getAttribute("hint");
		if (defaultOption == null || label !== defaultOption) {
			if (isSelect2){
				var newOption = new Option(label, t);
				$j(select).append(newOption);
			} else 
				var opt = appendSelectOption(select, t, document.createTextNode(label));
			if (hint != '' && opt)
				opt.title = hint;
			if (selectedItem && label == selectedItem)
				if (isSelect2)
					$j(select).val(t);
				else
				opt.selected = true;
			else if (currentValue && t == currentValue) {
				if(isSelect2)
					$j(select).val(currentValue);
				else
					opt.selected = true;
				currentValue = '';
			}
		}
	}
	if (select['onchange'])
		select.onchange.call(select, null, fromSetTemplateValue);
	if (!select.value && typeof g_form != 'undefined')
		g_form._setEmptyMandatoryFieldsVisible(elementName);
	
}
function selResponseHelper(hasSysSelect, fromSetTemplateValue) {
	return function (request) {
		selResponse(request, hasSysSelect, fromSetTemplateValue);
	}
}
function hasDepends(elementName) {
    var vName = "ni.dependent." + getNameFromElement(elementName);
    var eDep = document.getElementsByName(vName)[0];
    return eDep;
}
function resolveDependentValue(id, depname, deptable) {
	var systable = id.split(".")[0];
 	var table = null;
 	var dep = document.getElementById(systable + '.' + depname);
 	if (dep != null) {
   		if (dep.tagName == 'SELECT')
	  		table = dep.options[dep.selectedIndex].value
   		else
      		table = dep.value;
   		table = table.split(".")[0];
 	} else {
   		table = deptable;
 	}
 	if (table == '*' || table == '' || table == 'null')
		table = null;
	return table;
}
function loadFields(fname, dependent, types, script_types, ref_types, script_ref_types, script_ref_types_dependent, field_choices_script, show_field_name_on_label, access_table) {
	var depValue = resolveDependentValue(fname, dependent, dependent);
	loadFieldsWithValue(fname, depValue, types, script_types, ref_types, script_ref_types, script_ref_types_dependent, field_choices_script, show_field_name_on_label, access_table, dependent);
}
function loadFieldsWithValue(fname, table, types, script_types, ref_types, script_ref_types, script_ref_types_dependent, field_choices_script, show_field_name_on_label, access_table, dependent) {
	var script_ref_types_dependent_value = "";
	if (script_ref_types_dependent) {
		var systable = fname.split(".")[0];
		var s_dep = gel(systable + '.' + script_ref_types_dependent);
		if (s_dep != null) {
			 if (s_dep.tagName == 'SELECT')
				 script_ref_types_dependent_value = s_dep.options[s_dep.selectedIndex].value;
			 else
				 script_ref_types_dependent_value = s_dep.value;
		}
	}
	if (table)
		getTableColumns(table, fname, types, script_types, ref_types, script_ref_types, script_ref_types_dependent_value, field_choices_script, show_field_name_on_label, access_table);
	else if(dependent)
		clearDropdownOptions(fname);
}
function clearDropdownOptions(fieldNameId) {
	var fieldNameElement = gel(fieldNameId);
	if (fieldNameElement) {
		fieldNameElement.innerHTML = '';
		fieldNameElement.options = [];
		fieldNameElement.options[0] = new Option(getMessage('-- None --'), '');
	}
}
function getTableColumns(table, ref, types, script_types, ref_types, script_ref_types, script_ref_types_dependent_value, field_choices_script, show_field_name_on_label, access_table) {
	
    if (!types)
  	   types = "";
    if (!script_types)
        script_types = "";
	if (!ref_types)
		ref_types = "";
	if (!script_ref_types)
		script_ref_types = "";
	if (!script_ref_types_dependent_value)
		script_ref_types_dependent_value = "";
	
	var serverRequestString = "xmlhttp.do?sysparm_include_sysid=true&sysparm_processor=SysMeta&sysparm_table_name=false&sysparm_type=column&sysparm_nomax=true" +
      "&sysparm_value=" + table + 
	  "&sysparm_types=" + types + 
	  "&sysparm_script_types=" + script_types +
	  "&sysparm_script_ref_types_dependent_value=" + script_ref_types_dependent_value +
	  "&sysparm_script_ref_types=" + script_ref_types +
	  "&sysparm_ref_types=" + ref_types + 
      "&sysparm_containing_table=" + $('sys_target').value;
	
  	if (field_choices_script && field_choices_script != "") 
		serverRequestString += "&sysparm_field_choices_script=" + field_choices_script;
	if (show_field_name_on_label && show_field_name_on_label != "") 
		serverRequestString += "&sysparm_show_field_name_on_label=" + show_field_name_on_label;
	if (access_table)
		serverRequestString += "&sysparm_access_table=" + access_table;
	serverRequestString += "&sysparm_ref_field=" + encodeURIComponent(ref);
	field_choices_script = field_choices_script ? field_choices_script : undefined;
	show_field_name_on_label = show_field_name_on_label ? show_field_name_on_label : undefined;
	access_table = access_table ? access_table : undefined;
	var cacheObjItem = getDependantCacheObj(table, types, script_types, ref_types, script_ref_types, script_ref_types_dependent_value, field_choices_script, show_field_name_on_label, access_table);
	var field_name = ref.split(".").pop();
	var field_has_server_value = !!g_form.getValue(field_name);
	if (!cacheObjItem || field_has_server_value) {
		var tmpObj = {};
		tmpObj.table = table;
		tmpObj.types = types;
		tmpObj.scriptTypes = script_types;
		tmpObj.refTypes = ref_types;
		tmpObj.scriptRefTypes = script_ref_types;
		tmpObj.scriptRefTypesDependentValue = script_ref_types_dependent_value;
		tmpObj.choicesScript = field_choices_script;
		tmpObj.nameOnLabel = show_field_name_on_label;
		tmpObj.accessTable = access_table;
		tmpObj.fields = [];
		tmpObj.fields.push(ref);
		tmpObj.data = "";
		dependantCacheObjArray.push(tmpObj);
		serverRequest(serverRequestString, getTableColumnsResponse, ref);
	} else if(cacheObjItem && cacheObjItem.data === "")
		cacheObjItem.fields.push(ref);
	else if (cacheObjItem && cacheObjItem.data !== "")
		getTableColumnsResponse(cacheObjItem.data, ref)
}
var dependantCacheObjArray = [];
function getDependantCacheObj(table, types, scriptTypes, refTypes, scriptRefTypes, scriptRefTypesDependentValue, choicesScript, nameOnLabel, accessTable) {
	return dependantCacheObjArray.filter(function(co) {
		return co.table === table && 
				co.types === types && 
				co.scriptTypes === scriptTypes && 
				co.refTypes === refTypes && 
				co.scriptRefTypes === scriptRefTypes && 
				co.scriptRefTypesDependentValue === scriptRefTypesDependentValue && 
				co.choicesScript === choicesScript && 
				co.nameOnLabel === nameOnLabel && 
				co.accessTable === accessTable;
	})[0];
}
function getTableColumnsResponse(request, ref) {
	var reqUrl = request.responseURL;
	if (reqUrl) {
		var params = reqUrl.split("?")[1].split("&");
		var table;
		var types;
		var script_types;
		var ref_types;
		var script_ref_types;
		var script_ref_types_dependent_value;
		var field_choices_script;
		var show_field_name_on_label;
		var access_table;
		for (var i = 0; i < params.length; i++) {
			var parts = params[i].split("=");
			switch(parts[0]) {
				case 'sysparm_value':
					table = parts[1];
					break;
				case 'sysparm_types':
					types = parts[1];
					break;
				case 'sysparm_script_types':
					script_types = parts[1];
					break;
				case 'sysparm_ref_types':
					ref_types = parts[1];
					break;
				case 'sysparm_script_ref_types':
					script_ref_types = parts[1];
					break;
				case 'sysparm_script_ref_types_dependent_value':
					script_ref_types_dependent_value = parts[1];
					break;
				case 'sysparm_field_choices_script':
					field_choices_script = parts[1];
					break;
				case 'sysparm_show_field_name_on_label':
					show_field_name_on_label = parts[1];
					break;
				case 'sysparm_access_table':
					access_table = parts[1];
					break;
			}
		}
		var cacheObjItem = getDependantCacheObj(table, types, script_types, ref_types, script_ref_types, script_ref_types_dependent_value, field_choices_script, show_field_name_on_label, access_table);
		if (cacheObjItem && cacheObjItem.data === "") {
			cacheObjItem.data = request;
			var fields = cacheObjItem.fields;
			for (var i = 0; i < fields.length; i++)
				getTableColumnsResponse(request, fields[i]);
		}
	}
    var fname = ref;
	var tcols = request.responseXML;
    var scols = gel(fname);
    var currentvis = scols.style.visibility;
    scols.style.visibility = "hidden";
	var cfield = gel('sys_original.' + fname);
	cValue = cfield.value;
	if (typeof g_form != 'undefined')
		cValue = g_form.getValue(fname);
	if (typeof scols.options === 'undefined')
		scols.options = [];
	else
		scols.options.length = 0;
var includeNone = scols.attributes.getNamedItem('include_none');
	if (includeNone && includeNone.nodeValue === 'true')
		scols.options[scols.options.length] = new Option(getMessage('-- None --'), '');
	else
		scols.options[0] = new Option(getMessage('-- None --'), '');
	var items = tcols.getElementsByTagName("item");
	var selectedIndex = 0;
	var defaultValue = tcols.documentElement.getAttribute('default_value');
	for (var i = 0; i != items.length; i++) {
		var item = items[i];
		var value = item.getAttribute("value");
		var label = item.getAttribute("label");
		scols.options[scols.options.length] = new Option(label, value);
		if (cValue == value || (access_table && defaultValue && defaultValue === value))
			selectedIndex = scols.options.length - 1;
	}
	scols.selectedIndex = selectedIndex;
    scols.style.visibility = currentvis;
	CustomEvent.fire('getTableColumnsResponse.received');
	fireSetValueEvent();
}
function fireSetValueEvent() {
    if(typeof g_form != 'undefined') {
		var form = g_form.getFormElement();
		if(typeof form != 'undefined')
			$(form).fire('glideform:setvalue');
	}
}
;
/*! RESOURCE: /scripts/email_activity.js */
function setEmailBody(id) {
	var iframeID = id + ".body";
	var iframe = gel(iframeID);
	if (iframe) 
		return;
	
	iframe = cel("iframe");
	iframe.id = iframeID;
	iframe.width="100%";
	iframe.frameBorder = "0";
	Event.observe(iframe, "load", emailResizeObserved.bind(iframe), true);
	iframe.src = "email_display.do?email_id=" + id;
	iframe.email_id = id;
	
	var cellID = id + ".mail_cell";
	var td = gel(cellID);
	if (!td) {
		alert("email_activity.js: TD missing for '" + cellID + "'");
		return;
	}
	
	td.appendChild(iframe);
}
function emailResizeObserved() {
	adjustEmailHeight(this);
}
function adjustEmailHeight(frame) {
	frame.style.height = frame.contentWindow.document.body.scrollHeight + 'px';
}
;
/*! RESOURCE: /scripts/doctype/condition_global_variables14.js */
var MAIN_LAYER = "filterdiv";
var TEXTQUERY = "123TEXTQUERY321";
var PLACEHOLDER = "123PLACEHOLDER321";
var PLACEHOLDERFIELD = '-- choose field --';
var DEFAULT_NAME = "report";
var DEFAULT_WIDTH = "10px";
var DEFAULT_BORDER = 0;
var JS_GS = 'javascript:gs.';
var useTextareas = false;
var noConditionals = false;
var noOps = false;
var noSort = false;
var gotShowRelated = false;
var gotoPart = false;
var calendars = 0;
var refcount = 0;
var sortIndex = 0;
var queryNumber = 0;
var calendarPopups = [];
var filter;
var orderBy;
var columns = null;
var currentTable = '';
var firstTable = '';
var oldStatus = '';
var showRelated = '';
var filterExpanded = false;
var queueTables = new Array();
var queueFilters = new Array();
var queueColumns = new Array();
var operators = [
	"BETWEEN",
	"!=",
	">=",
	"<=",
	"=",
	">",
	"<",
	"NOT IN",
	"IN",
	"NOT LIKE",
	"LIKE",
	"ON",
	"NOTON",
	"DATEPART",
	"RELATIVE",
	"STARTSWITH",
	"ENDSWITH",
	"EMPTYSTRING",
	"ISEMPTY",
	"ISNOTEMPTY",
	"INSTANCEOF",
	"ANYTHING",
	"VALCHANGES",
	"CHANGESFROM",
	"CHANGESTO",
	"MATCH_PAT",
	"MATCH_RGX",
	"SAMEAS",
	"NSAMEAS",
	"MORETHAN",
	"LESSTHAN",
	"DYNAMIC",
	"GT_FIELD",
	"LT_FIELD",
	"GT_OR_EQUALS_FIELD",
	"LT_OR_EQUALS_FIELD",
	"HASVARIABLE" ,
	"HASITEMVARIABLE",
	"HASQUESTION",
	"HASLABEL",
	"DISTANCE_SPHERE_WITHIN"
];
var fieldComparisonOperators = ["SAMEAS", "NSAMEAS", "MORETHAN","LESSTHAN", "GT_FIELD", "LT_FIELD", "GT_OR_EQUALS_FIELD", "LT_OR_EQUALS_FIELD" ];
var dateTypes = new Array();
	dateTypes['glide_date_time'] = 1;
	dateTypes['glide_date'] = 1;
	dateTypes['date'] = 1;
	dateTypes['datetime'] = 1;
	dateTypes['due_date'] = 1;
	
var dateOnlyTypes = new Object();
	dateOnlyTypes['glide_date'] = 1;
	dateOnlyTypes['date'] = 1;
	
var dateTimeTypes = new Object();
	dateTimeTypes['glide_date_time'] = 1;
	dateTimeTypes['datetime'] = 1;
	dateTimeTypes['due_date'] = 1;
	
var numericTypes = new Array();
    numericTypes['integer'] = 1;
    numericTypes['decimal'] = 1;
    numericTypes['numeric'] = 1;
    numericTypes['float'] = 1;
    numericTypes['domain_number'] = 1;
    numericTypes['auto_increment'] = 1;
    numericTypes['percent_complete'] = 1;
var opersNS = {};
opersNS.opdef = {
    'af'  : [ '>',          'after'              ],
    'ataf': [ '>=',         'at or after'        ],
    'any' : [ 'ANYTHING',   'is anything'        ],
    'are' : [ '=',          'are'                ],
    'asc' : [ 'ascending',  'a to z'             ],
    'avg' : [ 'avg',        'average'            ],
    'bf'  : [ '<',          'before'             ],
    'atbf': [ '<=',          'at or before'      ],
    'btw' : [ 'BETWEEN',    'between'            ],
    'dsc' : [ 'descending', 'z to a'             ],
    'dsw' : [ 'DISTANCE_SPHERE_WITHIN', 'distance within'],
    'dtpt': [ 'DATEPART',   'trend'              ],
    'em'  : [ 'ISEMPTY',    'is empty'           ],
    'es'  : [ 'EMPTYSTRING',   'is empty string' ],
    'enwt': [ 'ENDSWITH',   'ends with'          ],
    'eq'  : [ '=',          'is'                 ],
    'eqd' : [ 'DYNAMIC',    'is (dynamic)'       ],
    'fvc' : [ 'VALCHANGES', 'changes'            ],
    'fvf' : [ 'CHANGESFROM', 'changes from'      ],
    'fvt' : [ 'CHANGESTO',  'changes to'         ],
    'gt'  : [ '>',          'greater than'       ],
    'gteq': [ '>=',         'greater than or is' ],
    'inna': [ 'IN',         'is one of'          ],
    'inst': [ 'INSTANCEOF', 'is a'               ],
    'lk'  : [ 'LIKE',       'contains'           ],
    'lt'  : [ '<',          'less than'          ],
    'lteq': [ '<=',         'less than or is'    ],
    'max' : [ 'max',        'maximum'            ],
    'min' : [ 'min',        'minimum'            ],
    'mpat': [ 'MATCH_PAT',  'matches pattern'    ],
    'mreg': [ 'MATCH_RGX',  'matches regex'      ],
    'ntem': [ 'ISNOTEMPTY', 'is not empty'       ],
    'nteq': [ '!=',         'is not'             ],
    'ntin': [ 'NOT IN',     'is not one of'      ],
    'ntlk': [ 'NOT LIKE',   'does not contain'   ],
    'nton': [ 'NOTON',      'not on'             ],
    'on'  : [ 'ON',         'on'                 ],
    'oper': [ '-- oper --', '-- oper --'         ],
    'rltv': [ 'RELATIVE',   'relative'           ],
    'saas': [ 'SAMEAS',     'is same'            ],
    'nsas': [ 'NSAMEAS',    'is different'       ],
    'snc' : [ 'SINCE',      'since baseline'     ],
    'stwt': [ 'STARTSWITH', 'starts with'        ],
    'sum' : [ 'sum',        'Total'              ],
    'date_more': [ 'MORETHAN',   'is more than'  ],
    'date_less': [ 'LESSTHAN',   'is less than'  ],
	'gtfd': [ 'GT_FIELD',   'greater than field' ],
	'ltfd': [ 'LT_FIELD',   'less than field'    ],
	'gteqfd' : [ 'GT_OR_EQUALS_FIELD', 'greater than or is field' ],
	'lteqfd' : [ 'LT_OR_EQUALS_FIELD', 'less than or is field' ]
};
opersNS.opdef_template = {
	'eq'  : [ '=',          'To'                 ],
	'saas': [ 'SAMEAS',     'Same as'            ],
	'eqd' : [ 'DYNAMIC',    'To (dynamic)'       ]
}
opersNS.compile = function(ops_input, opsdef) {
    for (var fieldType in ops_input) {
        var proto = ops_input[fieldType];
        if (proto.charAt(0) == '=')
            continue;
        var opers = proto.split(",");
        var opArray = [];
        for (var i = 0; i < opers.length; i++) {
            var oper = opers[i];
            if (oper)
                opArray.push(opsdef[oper]);
        }
        ops_input[fieldType] = opArray;
    }
    
    for (var fieldType in ops_input) {
        var proto = ops_input[fieldType];
        if (typeof proto != 'string')
            continue;
        ops_input[fieldType] = ops_input[proto.substring(1)];
    }
}
var edge_order_Types = {
			'string'  : 'eq,nteq,em,ntem,lt,gt,lteq,gteq',
			'calendar': 'eq,nteq,em,ntem,bf,af,atbf,ataf'
};
var edge_equality_Types = {
			'string'  : 'eq,nteq,em,ntem',
			'calendar': 'eq,nteq,em,ntem'
};
var sysopers = {
	'auto_increment'	  : '=integer',
    'aggspec'             : 'sum,avg,min,max,any,fvc,fvf,fvt',
    'boolean'             : 'eq,nteq,em,ntem,any,fvc,fvf,fvt,saas,nsas',
    'calendar'            : 'on,nton,bf,atbf,af,ataf,btw,dtpt,rltv,snc,em,ntem,any,fvc,saas,nsas,date_more,date_less',
    'choice'              : 'eq,nteq,inna,ntin,lk,stwt,enwt,ntlk,any,fvc,fvf,fvt,saas,nsas',
    'referencechoice'     : 'eq,nteq,inna,ntin,lk,stwt,enwt,ntlk,any',
    'composite_field'     : 'stwt,lk,ntlk,any',
    'composite_name'      : '=string',
    'conditions'          : '=string',
    'condition_string'    : '=string',
    'css'				  : '=html',
    'decimal'             : '=integer',
    'currency'			  : 'eq,nteq,em,ntem,lt,gt,lteq,gteq,btw',
    'currency2'			  : 'eq,nteq,em,ntem,lt,gt,lteq,gteq,btw',
    'default'             : 'eq,nteq,any,fvc,fvf,fvt',
    'email'               : '=string',
    'email_script'        : '=string',
    'field_name'          : '=string',
    'geo_point'           : 'eq,nteq,dsw',
    'glide_duration'      : 'eq,nteq,em,ntem,lt,gt,lteq,gteq,btw,any,fvc',
    'glide_encrypted'     : 'eq,nteq,em,ntem',
    'glide_list'          : 'lk,ntlk,em,ntem,fvc,fvf,fvt,eqd',
    'GUID'                : '=string',
    'html'                : 'lk,ntlk,em,ntem,any,fvc,fvf,fvt',
    'html_script'         : '=string',
    'html_template'       : '=script',
    'ip_addr'             : '=string',
    'integer'             : 'eq,nteq,em,ntem,lt,gt,lteq,gteq,btw,any,fvc,fvf,fvt,saas,nsas,gtfd,ltfd,gteqfd,lteqfd',
    'integer_choice'      : 'eq,nteq,inna,ntin,em,ntem,lt,gt,lteq,gteq,btw,any,fvc,fvf,fvt,saas,nsas',
    'journal'             : 'fvc',
    'journal_input'       : '=journal',
    'keyword'             : 'are',
    'long'                : '=integer',
    'longint'             : '=integer',
    'multi_two_lines'     : '=string',
    'percent_complete'    : '=integer',
    'ph_number'           : '=string',
    'phone_number_e164'   : '=string',
    'placeholder'         : 'oper',
    'price'				  : 'eq,nteq,em,ntem,lt,gt,lteq,gteq,btw',
    'reference'           : 'eq,nteq,em,ntem,stwt,enwt,lk,ntlk,any,saas,nsas,es,eqd,fvc,fvf,fvt',
    'referencevariable'   : 'eq,nteq,em,ntem',
    'replication_payload' : '=string',
    'script'              : 'lk,ntlk,ntem,any,fvc,fvf,fvt',
    'script_plain'        : '=script',
    'script_server'       : '=script',
    'sortspec'            : 'asc,dsc,fvc,fvf,fvt',
    'string'              : 'stwt,enwt,lk,ntlk,eq,nteq,em,ntem,mpat,mreg,any,inna,es,fvc,fvf,fvt,lteq,gteq,btw,saas,nsas',
    'string_choice'       : '=choice',
    'string_clob'         : 'lk,ntlk,stwt,enwt,em,ntem,any,fvc,fvf,fvt',
    'string_full_utf8'    : '=string',
    'string_numeric'      : 'eq,nteq,lk,ntlk,stwt,enwt,btw,any,fvc,fvf,fvt,saas,nsas',
    'sys_class_name'      : 'eq,nteq,inst,any,fvc,fvf,fvt',
    'sysevent_name'       : '=string',
    'table_name'          : '=string',
    'timer'               : '=integer',
    'translated_field'    : '=string',
    'translated_html'     : '=html',
    'translated_text'     : '=string',
    'translated_basic'    : 'eq,nteq,em,ntem',
    'url'                 : '=string',
    'workflow'            : '=choice',
    'xml'                 : '=html',
	'domain_path'         : '=string',
	'tree_code'           : '=string',
	'tree_path'           : '=string',
	'source_id' 	      : '=string',
	'source_name'  	      : '=string',
	'source_table' 	      : '=string',
	'sc_attachment'       : 'em,ntem',
	'related_tags'        : 'eq,nteq,em,ntem,stwt,lk'
};
var sysopers_template = {
		'default'             : 'eq,saas,eqd'
}
opersNS.compile(sysopers, opersNS.opdef);
opersNS.compile(edge_order_Types, opersNS.opdef);
opersNS.compile(edge_equality_Types, opersNS.opdef);
opersNS.compile(sysopers_template, opersNS.opdef_template);
var extopers = {};
    extopers['MATCH_PAT'] = true;
    extopers['MATCH_RGX'] = true;
    extopers['VALCHANGES'] = true;
    extopers['CHANGESTO'] = true;
    extopers['CHANGESFROM'] = true;
var sysvalues = {};
	sysvalues['boolean']         = [[ "true", "true" ], [ "false",  "false" ]];
	sysvalues['catalog_boolean'] = [[ "Yes", "Yes" ], [ "No",  "No" ]];
	sysvalues['string_boolean']  = [[ "1", "true" ], [ "0",  "false" ]];
var MESSAGES_CONDITION_RELATED_FILES = ['lowercase_fields','Keywords','Show Related Fields','Remove Related Fields', '-- choose field --', '-- value --', '-- None --'];
var g_current_table = '';
var g_filter_extension_map = {};
var calendarPromise = $j.Deferred();
(function() {
	function populateCalendar(legacyModel) {
		var calendar = legacyModel.timeAgoDates;
		calendar.DATEPART = legacyModel.datePart;
		calendar.BETWEEN = legacyModel.between;
		calendar.RELATIVE = legacyModel.relative;
		calendar.TRENDVALUES = legacyModel.trendValues;
		calendar.WHEN = legacyModel.when;
		calendar.TRENDVALUES_WITH_FIELDS_PLURAL = legacyModel.trendValuesWithFieldsPlural;
		calendar.TRENDVALUES_WITH_FIELDS = legacyModel.trendValuesWithFields;
		calendar.WHEN_WITH_FIELDS = legacyModel.whenWithFields;
		sysvalues['calendar'] = calendar;
		calendarPromise.resolve(calendar);
	}
	if (typeof g_cached_legacy_calendar_model === "object") {
		populateCalendar(g_cached_legacy_calendar_model);
		return;
	}
	var req = new XMLHttpRequest();
req.open("GET", "/api/now/ui/date_time/legacy", true);
req.setRequestHeader('Accept', 'application/json');
	req.setRequestHeader('X-Transaction-Source', window.transaction_source);
	if (typeof g_ck != 'undefined' && g_ck != "") {
		req.setRequestHeader('X-UserToken', g_ck);
	}
	function responseFunction (request) {
		var result = JSON.parse(request.response).result;
        populateCalendar(result);
	}
	req.onreadystatechange = function() { processReqChange(req, responseFunction); };
	req.send(null);
}());
;
/*! RESOURCE: /scripts/doctype/GlidePopupInterface.js */
(function(exports) {
    function isApiLoaded(m) {
        return exports.nowapi && exports.nowapi.g_popup_manager && exports.nowapi.g_popup_manager[m];
    }
    function popListDiv(evt, target, sys_id, view, width, showOpenButton, trapFocus) {
        var onReady = function() {
            nowapi.g_popup_manager.popListDiv(
                evt,
                target,
                sys_id,
                view,
                width,
                showOpenButton,
                trapFocus
            );
        };
        if (isApiLoaded("popListDiv"))
            onReady();
        else
ScriptLoader.getScripts("scripts/classes/nowapi/ui/GlidePopup.js", onReady);
    }
    function popReferenceDiv(evt, inputId, view, form, refKey) {
        var onReady = function() {
            nowapi.g_popup_manager.popReferenceDiv(
                evt,
                inputId,
                view,
                form,
                refKey,
                true
            );
        };
        if (isApiLoaded("popReferenceDiv"))
            onReady();
        else
ScriptLoader.getScripts("scripts/classes/nowapi/ui/GlidePopup.js", onReady);
    }
    function popForm(evt, target, sys_id, view, width) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popForm(
                    evt,
                    target,
                    sys_id,
                    view,
                    width
                );
            }
        );
    }
    function popDiv(evt, catalogparams) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
            	var validSysId = "^[a-fA-F0-9]{32}$";
            	if (catalogparams.match(validSysId))
            		nowapi.g_popup_manager.popDiv(evt, catalogparams);
            	else {
            		var params;
            		try {
            			params = JSON.parse(catalogparams);
            			if (typeof params == "object")
            				nowapi.g_popup_manager.popDiv(evt, params);	
            		}
            		catch(err) {
            			console.log(err);
            		}
            	}
        	});
    }
    function popCatDiv(evt, sys_id) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popCatDiv(evt, sys_id);
            }
        );
    }
    function popKnowledgeDiv(evt, sys_id) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popKnowledgeDiv(evt, sys_id);
            }
        );
    }
    function popRecordDiv(evt, table, sys_id, view, width) {
        var onReady = function() {
            nowapi.g_popup_manager.popRecordDiv(
                evt,
                table,
                sys_id,
                view,
                width
            );
        };
        if (isApiLoaded("popRecordDiv"))
            onReady();
        else
ScriptLoader.getScripts("scripts/classes/nowapi/ui/GlidePopup.js", onReady);
    }
    function popLightWeightReferenceDiv(evt, inputid, hideOpenButton) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popLightWeightReferenceDiv(evt, inputid, hideOpenButton);
            }
        );
    }
    function popIssueDiv(evt, issues) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popIssueDiv(evt, issues);
            }
        );
    }
    function popReportInfoDiv(evt, sys_id) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popReportInfoDiv(evt, sys_id);
            }
        );
    }
    function popHistoryDiv(evt, table, sys_id, checkpoint, internalCP) {
        ScriptLoader.getScripts(
"scripts/classes/nowapi/ui/GlidePopup.js",
            function() {
                nowapi.g_popup_manager.popHistoryDiv(
                    evt,
                    table,
                    sys_id,
                    checkpoint,
                    internalCP
                );
            }
        );
    }
    function lockPopup(e) {
        nowapi.g_popup_manager.destroypopDiv(e);
    }
    function lockPopupID(e, sys_id) {}
    exports.popListDiv = popListDiv;
    exports.popReferenceDiv = popReferenceDiv;
    exports.popForm = popForm;
    exports.popHistoryDiv = popHistoryDiv;
    exports.lockPopup = lockPopup;
    exports.lockPopupID = lockPopupID;
    exports.popDiv = popDiv;
    exports.popCatDiv = popCatDiv;
    exports.popKnowledgeDiv = popKnowledgeDiv;
    exports.popReportInfoDiv = popReportInfoDiv;
    exports.popRecordDiv = popRecordDiv;
    exports.popIssueDiv = popIssueDiv;
    exports.popLightWeightReferenceDiv = popLightWeightReferenceDiv;
})(window);
;
/*! RESOURCE: /scripts/doctype/navigator_menu.js */
$j(function($) {
	$('#perspective_switcher').click(function(e) {
		if (gActiveContext) {
			contextHide();
			return;
		}
		
		var saveFavoriteLabel = function(){
			var label = getMessage('Automatically Add Favorites');
			if (window.autoSaveFavoritePreference)
label += ' <span class="icon-check" style="padding-left: 10px;"></span>';
			return label;
		}();
		var gcm = new GwtContextMenu("context_perspectives_menu");
		gcm.clear();
		$('a[parent_id=perspectives]').each(function (index, item) {
			var name = item.innerHTML;
			if (item.href.split("=")[1] == "All")
				gcm.addHref(name, "window.location = '" + item.href + "'");
			else
				gcm.addHref(name, "window.location = '" + item.href + "'");
		});
		gcm.addLine();
		gcm.addHref(saveFavoriteLabel, '$j(window).trigger("toggle_auto_favorite")');
		gcm.addHref(getMessage('Refresh Navigator Title'), 'window.location = "navigator_change.do"');
		gcm.addHref(getMessage('Collapse all applications'), '$j(window).trigger("collapse_all")');
		gcm.addHref(getMessage('Expand all applications'), '$j(window).trigger("expand_all")');
		contextShow(e, gcm.getID(), -1, 0, 0);
		e.stopPropagation();
	})
	if (document.hasBodyClickedTrigger !== 'true') {
		document.addEventListener('click', function (event) {
			CustomEvent.fireAll('body_clicked', event);
		});
	}
	CustomEvent.observe("body_clicked", contextMenuHide);
})
;
/*! RESOURCE: /scripts/scrollable.js */
var HOME_SCROLL_SPEED = 1;
var HOME_PAUSE_SPEED = 0;
var HOME_RESUME_SPEED = 1;
function scroller(divName) {            
	  var target = gel(divName);
	  if (!target)
	     return;
	     
	  var wrapper = gel(divName+"_wrap");
      var wrapperHeight = wrapper.offsetHeight;
      var containerHeight = target.offsetHeight;
      var actualheight = wrapperHeight
      if (wrapperHeight < containerHeight)
          actualheight = containerHeight;
      
      var currentScroll = parseInt(target.style.top) - HOME_SCROLL_SPEED;
      var bottom = actualheight + parseInt(target.style.top);
      
	  if (bottom < 20) 
         currentScroll = wrapperHeight;
      
	  target.style.top=currentScroll + "px";            
}
;
/*! RESOURCE: /scripts/classes/util/StopWatch.js */
var StopWatch = Class.create({
    MILLIS_IN_SECOND: 1000,
    MILLIS_IN_MINUTE: 60 * 1000,
    MILLIS_IN_HOUR: 60 * 60 * 1000,
		
    initialize: function(started) {
        this.started = started || new Date();
    },
    
	getTime: function() {
    	var now = new Date();
    	return now.getTime() - this.started.getTime();
	},
	
    restart: function() {
    	this.initialize();
    },
    
	jslog: function(msg, src, date) {
		if (window.jslog) {
			jslog('[' + this.toString() + '] ' + msg, src, date);
			return;
		}
		if (window.console && window.console.log)
			console.log('[' + this.toString() + '] ' + msg);
	},
	
    toString : function() {
		return this.formatISO(this.getTime());
    },
	
	formatISO: function(millis) {
		var hours = 0, minutes = 0, seconds = 0, milliseconds = 0;
		
		if (millis >= this.MILLIS_IN_HOUR) {
hours = parseInt(millis / this.MILLIS_IN_HOUR);
	        millis = millis - (hours * this.MILLIS_IN_HOUR);
		}
		
		if (millis >= this.MILLIS_IN_MINUTE) {
minutes = parseInt(millis / this.MILLIS_IN_MINUTE);
	        millis = millis - (minutes * this.MILLIS_IN_MINUTE);
		}
		
		if (millis >= this.MILLIS_IN_SECOND) {
seconds = parseInt(millis / this.MILLIS_IN_SECOND);
	        millis = millis - (seconds * this.MILLIS_IN_SECOND);
		}
		
        milliseconds = parseInt(millis);
        return doubleDigitFormat(hours) + ":" + doubleDigitFormat(minutes) + ":" + doubleDigitFormat(seconds) +
			"." + tripleDigitFormat(milliseconds);
    },
	
	type: "StopWatch"
});
;
/*! RESOURCE: /scripts/classes/Table.js */
var Table = Class.create({
	REF_ELEMENT_PREFIX: 'ref_',
	REFERENCE: "reference",
	
    initialize: function(tableName, parentTable, cols, callback, accessTable, isTemplate, loadExtensions, applyTemplateAcls, tableOptions) {
        this.tableName = tableName;
        this.parentTable = parentTable;
        this.label = tableName;
        this.callback = callback;
        this.accessTable = accessTable;
        this.columns = null;
        this.elements = {};
        this.elementsArray = [];
        this.extensions = {};
        this.extensionsArray = [];
        this.choiceExtensions = {};
        this.choiceExtensionsArray = [];
        this.tablesArray = [];
        this.sys_id = null;
        this.set_id = null;
        this.vars_id = null;
        this.glide_var = null;
		this.isTemplate = isTemplate;
		this.applyTemplateAcls = applyTemplateAcls;
		this.loadExtensions = loadExtensions;
		this.tableOptions = tableOptions || {};
		this.excludeTableOperators = ""
        Table.setCachable(this);
        if (cols && this.cacheable)
        	this.readResponse(cols);
        else
        	this.readColumns();	    
        this.textIndex = null;
    },
      
    readColumns: function() {
        var ajax = new GlideAjax("SysMeta");
        ajax.addParam("sysparm_type", "column");
        ajax.addParam("sysparm_include_sysid", "true");
        ajax.addParam("sysparm_table_name", "false");
		ajax.addParam("sysparm_is_template", this.isTemplate ? 'true' : 'false');
		ajax.addParam("sysparm_apply_template_acls", this.applyTemplateAcls ? 'true' : 'false');
        ajax.addParam("sysparm_value", this.tableName);
        ajax.addParam("sysparm_is_excluded_role", 'false');
        if (this.sys_id) 
             ajax.addParam("sysparm_sys_id", this.sys_id);
        if (this.set_id) 
            ajax.addParam("sysparm_set_id", this.set_id);
        
        if (this.vars_id) 
            ajax.addParam("sysparm_vars_id", this.vars_id);
             
        if (this.parentTable)
            ajax.addParam("sysparm_parent_table", this.parentTable);
        
        if (this.accessTable)
        	ajax.addParam("sysparm_access_table", this.accessTable);
		if (this.loadExtensions)
			ajax.addParam("sysparm_load_extended_fields", this.loadExtensions);
		if (typeof this.tableOptions.onBeforeReadColumns === 'function')
			this.tableOptions.onBeforeReadColumns.call(null, ajax);
        if (this.callback)
        	ajax.getXML(this.readColumnsResponse.bind(this));
        else {
        	var xml = ajax.getXMLWait();
            this.readResponse(xml);
        }
    },
    
    readColumnsResponse: function(response) {
    	if (!response || !response.responseXML)
    		return;
    	
    	var xml = response.responseXML;
    	this.readResponse(xml);
    	this.callback(this);
    },
	
   	readResponse: function(xml) {
   	    this.columns = xml;
		var root = this.columns.getElementsByTagName("xml");
		if (root == null || root.length == 0)
			root = this.columns;
		if (root != null && root.length == 1) {
	   		root = root[0];
	   		this.textIndex = root.getAttribute("textIndex");
	   		this.label = root.getAttribute("label");
	   	}
	   	if (root != null) {
        		var excludeTableOperatorsValue = root.getAttribute("excludeTableOperators");
        		this.setExcludeTableOperators(excludeTableOperatorsValue);
        	}
		var childNodes = root.childNodes;
      	this.elements = {};
      	this.elementsArray = [];
		for (var i = 0; i < childNodes.length; i++) {
			if (childNodes[i].tagName == 'extensions')
				this.setExtensions(childNodes[i]);
			if (childNodes[i].tagName == 'tables')
				this.setTables(childNodes[i]);
			if (childNodes[i].tagName == 'sys_choice_extensions')
				this.setChoiceExtensions(childNodes[i]);
			if (childNodes[i].tagName != 'item')
				continue;
	    	var item = childNodes[i];
	    	var t = item.getAttribute("value");
	    	var label = item.getAttribute("label");
	    	var e = new TableElement(t, label);
	    	e.setClearLabel(item.getAttribute("cl"));
	    	e.setType(item.getAttribute("type"));
	    	e.setReference(item.getAttribute("reference"));
			e.setDynamicCreation(item.getAttribute("dynamic_creation") == "true");
			e.setRefQual(item.getAttribute("reference_qual"));
			e.setRefKey(item.getAttribute("reference_key"));
	    	e.setArray(item.getAttribute("array"));
	    	e.setChoice(item.getAttribute("choice"));
	    	e.setMulti(item.getAttribute("multitext"));
	    	e.setDependent(item.getAttribute("dependent"));
			e.setMaxLength(item.getAttribute("max_length"));
			e.setDisplayChars(item.getAttribute("display_chars"));
			e.setNamedAttributes(item.getAttribute("attributes"));
			e.setTableName(item.getAttribute("table"));
	    	e.setTable(this);
	    	if (e.isReference()) {
	    	   	e.setRefLabel(item.getAttribute("reflabel"));
	    	   	e.setRefDisplay(item.getAttribute("refdisplay"));
		       	e.setRefRotated(item.getAttribute("reference_rotated"));
			}
	    	this.elements[t] = e;
	    	this.elementsArray[this.elementsArray.length] = e;
	    	
	    	var attrs = item.attributes;
	    	for (var x = 0; x < attrs.length; x++)
	    		e.addAttribute(attrs[x].nodeName,attrs[x].nodeValue);
		}
		this.setDependencies();
   	}, 
   	
   	setExtensions: function(extensions) {
   		var items = extensions.childNodes;
		if (this.loadExtensions) {
			Table.getCache().ensureMaxEntries(items.length);
		}
		this.extensionsArray = [];
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var t = item.getAttribute("name");
			var label = item.getAttribute("label");
			var e = new TableExtension(t, label);
			e.setTable(this);
			if (item.getElementsByTagName('item') && this.loadExtensions) {
				Table.setColumns(t, null, item);
			}
			this.extensions[t] = e;
			this.extensionsArray[this.extensionsArray.length] = e;
		}
   	},
   setExcludeTableOperators: function(excludeTableOperatorsValue) {
        this.excludeTableOperators = excludeTableOperatorsValue;
   },
   	setChoiceExtensions: function(choices) {
		items = choices.childNodes;
		this.choiceExtensionsArray = [];
		for (var i = 0; i < items.length; i++) {
			var item = items[i];
			var t = item.getAttribute("name");
			var label = item.getAttribute("label");
			var e = new TableExtension(t, label);
			e.setTable(this);
			this.choiceExtensions[t] = e;
			this.choiceExtensionsArray[this.choiceExtensionsArray.length] = e;
		}
   	},
	
	setDependencies: function() {
		for (var i = 0; i < this.elementsArray.length; i++) {
			var element = this.elementsArray[i];
			if (element.isDependent()) {
				var parent = this.getElement(element.getDependent());
				if (parent)
					parent.addDependentChild(element.getName())
			}
		}
	},
	setTables: function(tables) {
	 	var tableList = tables.getAttribute("table_list");
      	this.tablesArray = [];
      	this.tablesArray = tableList.split(',');
	},
   
   	getColumns: function() {
   		return this.columns;
   	},
   	
   	getElements: function() {
   		return this.elementsArray;
   	},
   	getExcludeTableOperators: function() {
   	    return this.excludeTableOperators;
   	},
   	
   	getTableElements: function(tableName) {
   	    jslog("Getting fields for table " + tableName);
  		   
  		var elements = [];
	    var items = this.getElements();
	    for (var i = 0; i < items.length; i++) {
           var item = items[i];
           if (item.getTableName() != tableName)
              continue;
          
           elements.push(item);
        }
        return elements;
   	},
   	
   	getElement: function(elementName) {
   	    if (this.elements[elementName])
   		    return this.elements[elementName];
   		    
   		if (this._nameIsExtension(elementName))
   		    return this._genExtensionElement(elementName);
   		    
   		return null;
   	},   
   	
   	_genExtensionElement: function(name) {
   	    name = name.substring(this.REF_ELEMENT_PREFIX.length);
   	    var ext = this.extensions[name];
	    var e = new TableElement(ext.getExtName(), ext.getLabel());
	    e.setType(this.REFERENCE);
	    e.setReference(ext.getName());
	    e.setRefLabel(ext.getLabel());
	    e.setExtensionElement(true);
	    return e;
   	},
   	
   	_nameIsExtension: function(name) {
   	    if (name.indexOf(this.REF_ELEMENT_PREFIX) != 0)
   	       return false;
   	       
   	    name = name.substring(this.REF_ELEMENT_PREFIX.length);
		return this.extensions[name];
	},
   	 	
   	getExtensions: function() {
   	    return this.extensionsArray;
   	},
   	
   	getChoiceExtensions: function() {
   	    return this.choiceExtensionsArray;
   	},
   	
   	getTables: function() {
   		return this.tablesArray;
   	},
   	
   	getName: function() {
   		return this.tableName;
   	},	
   	
   	getLabel: function() {
   		return this.label;
   	},
   	
   	getDisplayName: function(column) {
   		return this.getElement(column).getRefDisplay();
   	},
   	
   	getSysId: function() {
   	    return this.sys_id;
   	},
   	
   	setSysId: function() {
  	    return this.sys_id;
  	},	
   
   	type : function() {
		return "Table";
	}
});
Table.get = function(tableName, parentTable, isTemplate, loadExtensions, callback, applyTemplateAcls, tableOptions) {
	var topWindow = getTopWindow();
	return (topWindow.Table || Table).getInTopWindow(tableName, parentTable, isTemplate, loadExtensions, callback, applyTemplateAcls, tableOptions);
};
Table.setColumns = function(tableName, parentTable, xmlString) {
  		var cachedName = Table.getCacheKey(tableName, parentTable);
  		var parentCache = Table.getCache();
  		if (parentCache) {
			var table = parentCache.get(cachedName);
			if (table) 
				return table;
		}
		var xml = typeof xmlString == 'string' ? loadXML(xmlString) : xmlString;
		var answer = new Table(tableName, parentTable, xml);
  		if (parentCache && answer.cacheable)
			parentCache.put(cachedName, answer);
};
Table.isCached = function(tableName, parentTable, isTemplate) {
	var cachedName = Table.getCacheKey(tableName, parentTable, isTemplate);
  	var parentCache = Table.getCache();
  	if (parentCache) {
		var table = parentCache.get(cachedName);
		if (table) 
			return true;
	}
	return false;
};
Table.getInTopWindow = function(tableName, parentTable, isTemplate, loadExtensions, callback, applyTemplateAcls, tableOptions) {
	var t = {};
	Table.setCachable(t);
	if (t.cacheable) {
		var cachedName = Table.getCacheKey(tableName, parentTable, isTemplate, loadExtensions);
		var parentCache = Table.getCache();
		if (parentCache) {
			var table = parentCache.get(cachedName);
			if (table) {
				try {
					table.getName();
					if (callback)
						callback(table);
					return table;
				} catch (error) {
					console.warn("An error occurred with the Table object or the callback applied to the Table object. "
						+ "Due to limitations in IE11 this is expected when the form is inside the frameset and is "
						+ "refreshed (saved, updated,  etc) and should not affect functionality.", error);
				}
			}
		}
	}
	var answer = new Table(tableName, parentTable, null, callback, null, isTemplate, loadExtensions, applyTemplateAcls, tableOptions);
	if (parentCache && answer.cacheable)
		parentCache.put(cachedName, answer);
	return answer;
};
Table.setCachable = function(t) {
	t.cacheable = true;
	if (typeof g_table_sys_id != 'undefined') {
        t.sys_id = getTopWindow().g_table_sys_id;
        t.cacheable = false;
    }
    
    if (typeof g_table_set_id != 'undefined') {
        t.set_id = getTopWindow().g_table_set_id;
        t.cacheable = false;
    }
    
    if (typeof g_table_vars_id != 'undefined') {
        t.vars_id = getTopWindow().g_table_vars_id;
        t.cacheable = false;
    }
    
    if (typeof g_table_glide_var != 'undefined') {
        t.glide_var = getTopWindow().g_table_glide_var;
        t.cacheable = false;
    }
};
Table.getCacheKey = function(tableName, parentTable, isTemplate) {
	return (parentTable ? parentTable + "." : "") + tableName + "." + !!isTemplate;
};
Table.getCache = function() {
	var cache = getTopWindow().g_cache_td;
	if (cache)
		return cache;
	
	if (!window.g_cache_td)
		window.g_cache_td = new GlideClientCache(400);
	
	return window.g_cache_td;
};
;
/*! RESOURCE: /scripts/classes/TableElement.js */
var TableElement = Class.create({
	REF_ELEMENT_PREFIX: 'ref_',
    initialize: function(elementName, elementLabel) {
        this.name = elementName;
        this.label = elementLabel;
        this.clearLabel = ''; 
        this.tableName = '';
        this.type = 'string';
        this.isRef = false;
        this.refLabel = null;
        this.refDisplay = null;
        this.refQual = null;
        this.reference = null;
        this.refKey = null;
        this.refRotated = false;
        this.array = null;
        this.canread = 'unknown';
        this.canwrite = 'unknown';
        this.saveastemplate = 'unknown';
        this.choice = '';
        this.multi = false;
        this.active = 'unknown';
        this.table = null;
        this.dependent = null;
		this.maxLength = null;
		this.displayChars = "-1";
        this.attributes = {};
		this.dependentChildren = {};
		this.namedAttributes = {};
		this.extensionElement = false;
		this.dynamicCreation = false; 
    },   
  	
  	addAttribute: function(name, value) {
  		this.attributes[name] = value;
  	},
  	
  	getAttribute: function(name) {
  		return this.attributes[name];
  	},
  	
  	getBooleanAttribute: function(name, defaultValue) {
  		var v = this.getAttribute(name);
if (v == null)
  			return (typeof defaultValue !== 'undefined') ? defaultValue : true; 
  		
  		if (v == 'false' || v == 'no')
  			return false;
  			
  		return true;
  	},
	
  	isDependent: function() {
  		return this.dependent != null;
  	},
  	
	hasDependentChildren: function() {
		for (var key in this.dependentChildren)
			return true;
		
		return false;
	},
	
	getDependentChildren: function() {
		return this.dependentChildren;
	},
  	
  	setTable: function(t) {
  		this.table = t;
  	},
  	
  	setType: function(type) {
  		this.type = type;
  		if (type == 'glide_list')
  		   this.isRef = false;
  		
  		if (type == 'glide_var')
  			this.isRef = true;
  	},
  	
  	setReference: function(reference) {  		
  		if (reference && reference != '')
  			this.reference = reference;
		this.isRef = false;
		switch (this.type){
			case 'glide_list':
				if (this.reference)
					this.isRef = true;
				break;
			case 'reference':
			case 'domain_id':
			case 'glide_var':
			case 'currency2':
				this.isRef = true;
				break;
		}
  	},
  	
  	setRefRotated: function(rotated) {
  		if ('yes' == rotated)
  		   this.refRotated = true;
  		else
  		   this.refRotated = false;
  	},
  	
  	setCanWrite: function(ra) {
  	    if ('no' == ra)
  	       this.canwrite = false;
  	    else
  	       this.canwrite = true;
  	},
  	
  	setSaveAsTemplate: function(ra) {
  	    if ('no' == ra)
   	       this.saveastemplate = false;
   	    else
   	       this.saveastemplate = true;
  		
  	},
        
  	setCanRead: function(ra) {
  	    if ('no' == ra)
  	       this.canread = false;
  	    else
  	       this.canread = true;
  	},
  	
  	setActive: function(active) {
  	    if ('no' == active)
  	       this.active = false;
  	    else
  	       this.active = true;
  		
  	},
  	setRefQual: function(refQual) {
  		this.refQual = refQual;
  	},
	setRefKey: function(refKey) {
		this.refKey = refKey;
	},
	setRefLabel: function(label) {
  		this.refLabel = label;
  	},
  	
  	setRefDisplay: function(display) {
  		this.refDisplay = display;
  	},
  	
  	setArray: function(array) {
  		this.array = array;
  	},
  	
  	setClearLabel: function(cl) {
  	    this.clearLabel = cl;
  	},
  	
  	setChoice: function(choice) {
  		this.choice = choice;
  	},
  	
  	setMulti: function(multi) {
  		this.multi = multi;
  	},
  	
  	setExtensionElement: function(b) {
  	    this.extensionElement = b;
  	},
  	
  	setDependent: function(dep) {
  		if (dep && dep != '')
  			this.dependent = dep;
  	},
	
	addDependentChild: function(name) {
		if (name)
			this.dependentChildren[name] = true;
	},
	
	setMaxLength: function(maxLength) {
		this.maxLength = maxLength;
	},
  	
	setDisplayChars: function(displayChars) {
		this.displayChars = displayChars;
	},
  	
	setNamedAttributes: function(attrs) {
		if (!attrs)
			return;
			
		var pairs = attrs.split(',');
		for (var i = 0; i < pairs.length; i++) {
			var parts = pairs[i].split('=');
			if (parts.length == 2)
				this.namedAttributes[parts[0]] = parts[1];
		}
	},
	setDynamicCreation: function(dynamic) {
		this.dynamicCreation = dynamic;
	},
	
  	isReference: function() {
  		return this.isRef;
  	},  
  	
  	isRefRotated: function() {
  		return this.refRotated;
  	},
  	
  	isExtensionElement: function() {
  	    return this.extensionElement;
  	},	
    
    isDate: function() {
       return dateTypes[this.type];   
    }, 
	
    isDateOnly: function() {
		if (dateOnlyTypes[this.type])
			return true;
		else
			return false;  
    }, 
	
    isDateTime: function() {
		if (dateTimeTypes[this.type])
			return true;
		else
			return false;  
    },
  	
  	getName: function() {
  		return this.name;
  	},
  	
  	getLabel: function() {
  		return this.label;
  	},
  	
  	getClearLabel: function() {
  	    return this.clearLabel;
  	},
  	
  	getReference: function() {
  		return this.reference;
  	},
  	
  	getMulti: function() {
  		return this.multi;
  	},
  	
  	isMulti: function() {
  		return this.getMulti() == 'yes';
  	},
  	
  	getDependent: function() {
  		return this.dependent;
  	},
  	getRefQual: function() {
  		return this.refQual;
  	},
	getRefKey: function() {
		return this.refKey;
	},
	getRefLabel: function() {
  		return this.refLabel;
  	},
  	
  	getRefDisplay: function() {
  		return this.refDisplay;
  	},
  	
  	getType: function() {
  		return this.type;
  	},
  	
  	getChoice: function() {
  		return this.choice;
  	},
  	
  	getTable: function() {
  		return this.table;
  	},
  	
  	getTableName: function() {
  	    return this.tableName;
	},
	getBaseTableName: function() {
		var table = this.getTable();
		if (!table || !table.tablesArray)
			return "";
		if (table.tablesArray.length === 0)
			return this.getTableName();
		return table.tablesArray.slice().pop();
	},
  	
  	setTableName: function(t) {
  	    this.tableName = t;
  	}, 
  	
  	isChoice: function() {
  		  return (this.choice == 1 || 
  		          this.choice == 3 || 
  		          this.type == "day_of_week" ||
  				  this.type == "week_of_month" || 
  				  this.type == "month_of_year");
  	},
	
	getMaxLength: function() {
		return this.maxLength;
	},
  	
	getDisplayChars: function() {
		return this.displayChars;
	},
  	
  	canRead: function() {
  		if (this.canread == 'unknown')
  			return this.getBooleanAttribute("canread");
  			
  		return this.canread;
  	},
  	
  	canSaveAsTemplate: function() {
  		if (this.saveastemplate == 'unknown')
  			return this.getBooleanAttribute("save_as_template");
  			
  		return this.saveastemplate;
  		
  	},
    
    canWrite: function() {
    	if (this.canwrite == 'unknown')
  			return this.getBooleanAttribute("canwrite");
  			
  		return this.canwrite;
  	},
  	
  	canMatch: function() {
  			return this.getBooleanAttribute("canmatch");
  	},
  	
  	isEdgeEncrypted: function() {
  		    return this.getBooleanAttribute("edge_encrypted", false);
  	},
  	isAdpEncrypted: function() {
  		    return this.getBooleanAttribute("adp_encrypted", false);
  	},
  	
  	isActive: function() {
  		if (this.active == 'unknown')
  		    return this.getBooleanAttribute("active");
		return this.active;
  	},
  	
  	isNumber: function() {
  		return this.type == 'integer' ||
  		       this.type == 'decimal' ||
  		       this.type == 'numeric' ||
  		       this.type == 'float' ||
  		       this.type == 'percent_complete';
  	},
  	
  	isArray: function() {
  		if (this.array && this.array == 'yes')
  			return true;
  		return false;
  	},
  	
  	canSort: function() {
  		if (!this.getBooleanAttribute("cansort"))
  			return false;
  			
  		if (this.name.indexOf("password") > -1) 
    		return false;
    		
  		if (this.name == 'sys_id')
    		return false;
    		
  		if (this.type == "journal" || this.type == "journal_input") 
    		return false; 
    		
  		if (this.isArray()) 
    		return false; 
  		return true;
  	},
	canSortI18N: function() {
		return this.getBooleanAttribute("cansorti18n");
	},
  	
  	canGroup: function() {
  		if (this.getNamedAttribute("can_group") == "true")
  			return true;
  		
  		if (this.isEdgeEncrypted() && this.canMatch())
  			return true;
  		
  		if (!this.canSort())
  			return false;
  			
  		if (this.isMulti())
  			return false;
    
  		if (this.name.indexOf(".") > -1 && this.name.indexOf(this.REF_ELEMENT_PREFIX) > -1)
    		return false;  
    
  		if (this.type == "glide_duration") 
    		return true; 
    		
    	if (this.type == 'glide_date_time' ||
    	    this.type == 'glide_date' ||
    	    this.type == 'glide_time' ||
    	    this.type == 'due_date')
    		return false;
    
  		return true;
  		
  	},
  	getAttributes: function() {
  		return this.attributes['attributes'];
  	},
  	
	getNamedAttribute: function(name) {
		if (this.namedAttributes[name])
			return this.namedAttributes[name];
		else
			return null;	
	},
	
	type : function() {
		return "TableElement";
	},
	isDynamicCreation: function() {
		return this.dynamicCreation;
	},
	isEncrypted: function() {
		return this.getBooleanAttribute("glide_encrypted", false) || this.getType() == "glide_encrypted";
	}
});
TableElement.get = function(name) {
    var names = name.split('.');
    var table = names[0];
    var tableDef = Table.get(table);
    var e;
    for (var i = 1; i < names.length; i++) {
        e = tableDef.getElement(names[i]);
        if (i === names.length - 1)
            break;
        if (e.type === "glide_var" || !e.isReference())
            break;
        
        tableDef = Table.get(e.getReference());
    }
    return e;
}
;
/*! RESOURCE: /scripts/classes/TableExtension.js */
var TableExtension = Class.create({
	REF_ELEMENT_PREFIX: 'ref_',
	
    initialize: function(elementName, elementLabel) {
        this.name = elementName;
        this.label = elementLabel;
        this.table = null;
        this.fields = null;
    },   
  	
  	getName: function() {
  		return this.name;
  	},
  	
  	getExtName: function() {
  	    return this.REF_ELEMENT_PREFIX + this.getName();
  	},
  	
  	getLabel: function() {
  		return this.label;
  	},
  	
  	setTable: function(t) {
  		this.table = t;
  	},
  	
  	addOption: function(select, namePrefix, labelPrefix) {
        var t = this.getName();
        var ext = this.getExtName();
        if (namePrefix && namePrefix != '') {
           var idx = namePrefix.lastIndexOf(".");
           var s = namePrefix.substring(idx + 1);
           var previousIsExtension = true;
           if (s.indexOf(this.REF_ELEMENT_PREFIX) == 0)
	           ext = namePrefix.substring(0,idx + 1) + ext;
           else {
	           ext = namePrefix + "." + ext;
	           previousIsExtension = false;
           }
        }
        var label = this.getLabel();
        var reflabel = label;
        if (labelPrefix && labelPrefix != '')
           if (previousIsExtension)
           	  reflabel = labelPrefix.substring(0,labelPrefix.lastIndexOf(".")) + "." + reflabel;	
           else
              reflabel = labelPrefix + "." + reflabel;
        tlabel = label + " (+)";
        var opt = appendSelectOption(select, ext, document.createTextNode(tlabel));
        if (labelPrefix != '')
        	opt.innerHTML = "&nbsp;&nbsp;&nbsp;"+tlabel;   
        else
            opt.innerHTML = tlabel;  
     
        opt.cl = reflabel;
        opt.cv = ext;
        opt.tl = reflabel;
        opt.style.color = 'darkred';
        opt.style.cursor = 'pointer';
        opt.title = "Show extended fields from " + label + " table";
        opt.doNotDelete = 'true';
        opt.doNotMove = 'true'
        opt.reference =  t;
        opt.bt = this.table.getName();
        opt.btl = this.table.getLabel();
        opt.headerAttr = 'true';
        opt.tl = reflabel;
  	},
  	
	type : function() {
		return "TableExtension";
	}
});
;
/*! RESOURCE: /scripts/classes/GlideDecoration.js */
var GlideDecoration = Class.create({
EDIT_DECORATION : "images/editor_view_small.gifx",
    initialize: function (node) {
        this.type = node.getAttribute('type');
        this.iconSRC = node.getAttribute('iconSRC');
        var left = node.getAttribute('left');
        if (left == 'true')
            this.left = true;
        else
            this.left = false;
        if (this.type == 'popup') {
            this.onMouseMove = node.getAttribute('onMouseMove');
            this.onMouseExit = node.getAttribute('onMouseOut');
        } else if (this.type == 'expandCollapseDecoration') {
        	this.expandedIcon = node.getAttribute('expandedIcon');
        	this.collapsedIcon = node.getAttribute('collapsedIcon');
        	this.expandedIconAlt = node.getAttribute('expandedIconAlt');
        	this.collapsedIconAlt = node.getAttribute('collapsedIconAlt');
        	this.memory = node.getAttribute('memory');
        	this.expanded = node.getAttribute('expanded');
        	this.altText = node.getAttribute("collapsedText");
        } else if (this.type == 'editDecoration') {
        	this.editLink = node.getAttribute('editLink');
        }
    },
    
    attach: function (window) {
        if (this.type == 'image')
           this.attachImage(window);     
        else if (this.type == 'popup')
           this.attachPopup(window);
        else if (this.type == 'expandCollapseDecoration')
           this.attachExpandCollapse(window);
        else if (this.type == 'editDecoration')
           this.attachEdit(window);
    },
    
    attachImage: function (window) {
        var decoration = cel('img');
        decoration.setAttribute('src', this.iconSRC);
        decoration.setAttribute('alt', '');
        window.addDecoration(decoration, this.left);
    },
    
    attachEdit: function (window) {
    	var an = cel('a');
        var d = cel('img');
        d.src =  this.EDIT_DECORATION;
        d.alt = getMessage('Edit');
        if (this.editLink.indexOf('javascript:') == 0) {
        	var toEval = this.editLink.substring('javascript:'.length);
        	toEval = "var f = function(e) { if (!e) { e = event;}; " + toEval + "}";
        	eval(toEval);
        	an.onclick = f;
        } else
        	an.href = this.editLink;
        an.appendChild(d);
        window.addDecoration(an, this.left);
    },
    
    attachPopup: function (window) {
        var span = cel('span');       
        
        var toEval = this.onMouseMove;
        toEval = "var f = function(e) { if (!e) { e = event;}; " + toEval + "}";
   		eval(toEval);
        span.onmousemove = f;
        toEval = this.onMouseExit;
        toEval = "var f = function(e) { if (!e) { e = event;}; " + toEval + "}";
        eval(toEval);        
        span.onmouseout = f;
        var decoration = cel('img');
        decoration.setAttribute('src', this.iconSRC);
        decoration.setAttribute('alt', '');
        span.appendChild(decoration);
        window.addDecoration(span, this.left);
    },
    
     attachExpandCollapse: function (window) {      
        this.img = cel('img');
        this.img.onclick = this.toggleExpand.bind(this);
        this.img.setAttribute('src', this.iconSRC);
        this.img.setAttribute('alt', getMessage('Collapse'));
        this.img.style.verticalAlign = "top";
        this.gwtWindow = window;
        window.addDecoration(this.img, this.left);
        if (this.expanded == 'false') {
        	this.expanded = true;
        	this.toggleExpand();
        }
    },
    
    toggleExpand : function (e) {
    	this.expanded = !this.expanded;
    	var localExpanded;
    	if (this.expanded) {
    	    this.img.setAttribute('src', this.expandedIcon);
    	    this.img.setAttribute('alt', this.expandedIconAlt)
    	    var span = this.gwtWindow.body;
    	    var temp = span.innerHTML;
    	    span.innerHTML = this.altText;
    	    this.altText = temp;
    	    localExpanded = 'true';
    	} else {
    		this.img.setAttribute('src', this.collapsedIcon);
    		this.img.setAttribute('alt', this.collapsedIconAlt)
    		var span = this.gwtWindow.body;
    		var temp = span.innerHTML;
    		span.innerHTML = this.altText;
    		this.altText = temp;
    		localExpanded = 'false';
    	}
    	if (this.memory != null && this.memory != '')
    		setPreference('render_' + this.memory + '.expanded', localExpanded);
    }
});
;
/*! RESOURCE: /scripts/classes/GwtCellSelector.js */
var GwtCellSelector = Class.create({
	
	
	initialize: function(tableElement) {
		this.tableElement = tableElement;
		
		this.setDisable(false);
		this.setSelectColumnOnly(false);
		this.setSelectNonContiguous(false);
		this.setSelectColor("#DFDFDF");
		this.browserColor = null;
		this.setUnselectColor("#FAFAFA");
		this.setCursor("crosshair");	
		this.setBorderSize("2px solid black");
		this.onSelect = null;
		this.beforeSelect = null;
		this.selectMultipleColumns = false;
		this.selectMiscCells = false;
		this.isMouseDown = false;
				
		this.centerCellColVal = 0;
		this.centerCellRowVal = 0;
		this.atCol = 0;
		this.atRow = 0;
		this.colFrom = 0;
		this.colTo = 0;
		this.rowFrom = 0;
		this.rowTo = 0;
		this.maxCol = 0;
		this.maxRow = 0;
	    this.selectCount = 0;
		this.returnObjects = new Object();
		this.cellBackgroundXref = new Object();
		this.ignoreColumns = new Object();
		this.ignoreRows = new Object();
		this.getGridInfo()
			
		Event.observe(this.tableElement, "mousedown", this._dragStart.bind(this));
		this.mouseUpTableListener = this._dragEnd.bindAsEventListener(this);
		this.mouseOverTableListener = this._dragOver.bindAsEventListener(this);
		this.mouseUpDocListener = this._dragCheck.bindAsEventListener(this);
	},
	
	_draw: function() {
		this._drawSelection(this.colFrom, this.colTo, this.rowFrom, this.rowTo);
	},
	
	_dragStart: function(e) {
		if (Event.isRightClick(e))
			return;
		if ($("cell_edit_cancel") || $("cell_edit_ok"))
			return;
		
		if	(!this.disableGrid) {
			this.getGridInfo();
			if (this.selectNonContiguous) 
				this._contiguousCheck(e);
			if (this.ignoreColumns[Event.element(e).cellIndex] ||
				this.ignoreRows[this._getRowIndex(Event.element(e).parentNode)]) { 
				return;
			}
			if (this.beforeSelect) {
				if (!this.handleBeforeSelect(e)) 
					return;
			}
			if (!this.isSelectColumnOnly) 
				this.selectMultipleColumns = e.shiftKey;
			this.isMouseDown = true;
			document.body.style.cursor = this.cursor;
			stopSelection(document.body);
			this._setEpicenter(e);
			this._selectAndDrawCells(Event.element(e));
			Event.observe(this.tableElement, "mouseup", this.mouseUpTableListener);
			Event.observe(this.tableElement, "mouseover", this.mouseOverTableListener);
			Event.observe(document, "mouseup", this.mouseUpDocListener);
			e.preventDefault();
		}
	},
	
	_dragOver: function(e) {
		if	(this.isMouseDown) {
			this._selectAndDrawCells(Event.element(e)); 
		}
	},
	
	_dragEnd: function(e) {
		this.returnObjects = new Object();
		this.isMouseDown = false;
		document.body.style.cursor = "default";
		this._selectAndDrawCells(Event.element(e));
		if	(this.onSelect) {
			this.handleOnSelect(this.returnObjects);
		}
		restoreSelection(document.body);
		Event.stopObserving(this.tableElement, "mouseup", this.mouseUpTableListener);
		Event.stopObserving(this.tableElement, "mouseover", this.mouseOverTableListener);
		Event.stopObserving(document, "mouseup", this.mouseUpDocListener);
	},
	
	_dragCheck: function(e) {
		if	(this.isMouseDown) {
			try {
				this._dragEnd(e);
			}
			catch (err) {
			}			
		}
	},
	
	_contiguousCheck: function(e) {
		if (e.ctrlKey)
			this.selectMiscCells = e.ctrlKey;
		else if (e.metaKey)
			this.selectMiscCells = e.metaKey;
		else
			this.selectMiscCells = false;
	},
	
	getSelectedObjects: function() {
		return this.returnObjects;		
	},
	
	getColFrom: function() {
		return this.colFrom;
	},
	
	getColTo: function() {
		return this.colTo;		
	},
	
	getRowFrom: function() {
		return this.rowFrom;		
	},
	
	getRowTo: function() {
		return this.rowTo;		
	},
	
	setIgnoreColumn: function(column) {
		this.ignoreColumns[column] = column;	
	},
	
	setIgnoreRow: function(row) {
		this.ignoreRows[row] = row;	
	},
	
	setSelectColor: function(selectColor) {
		this.selectColor = selectColor;	
	},
	
	setUnselectColor: function(unselectColor) {
		this.unselectColor = unselectColor;	
	},
	
	setCursor: function(cursor) {
		this.cursor = cursor;	
	},
	
	setSelectColumnOnly: function(flag) {
		this.isSelectColumnOnly = flag;	
	},
	
	setDisable: function(flag) {
		this.disableGrid = flag;
	},
	
	setSelectNonContiguous: function(flag) {
		this.selectNonContiguous = flag;
	},
	
	setBorderSize: function(size) {
		this.borderSize = size;
	},
	
	_setSelectedCells: function(colFrom, colTo, rowFrom, rowTo) {
		this.colFrom = colFrom;
		this.colTo = colTo;
		this.rowFrom = rowFrom;
		this.rowTo = rowTo;
	},
	
	_selectAndDrawCells: function(e) {
		this._selectCells(e);
		this._drawSelection(this.colFrom, this.colTo, this.rowFrom, this.rowTo);	
	},
	
	_selectCells: function(e) {
		this.atColVal = e.cellIndex;
		this.atRowVal = this._getRowIndex(e.parentNode);
		
		if	(this.atColVal <= 0) 
			return;
		if	(this.atRowVal <= 0) 
			return;
		
		if (this.selectMultipleColumns) {
			if	(this.atColVal < this.centerCellColVal) {
				this.colFrom = this.atColVal;
				this.colTo = this.centerCellColVal;
				this._getRowSelection();
				return;
			}
			if	(this.atColVal > this.centerCellColVal) {
				this.colFrom = this.centerCellColVal;
				this.colTo = this.atColVal;
				this._getRowSelection();
				return;
			}
		}
		if	(this.atColVal == this.centerCellColVal) {
			this.colFrom = this.centerCellColVal;
			this.colTo = this.centerCellColVal;
			this._getRowSelection();
			return;
		}
		if (this.atRowVal < this.centerCellRowVal) {
			this.rowFrom = this.atRowVal;
			this.rowTo = this.centerCellRowVal;
			this._getColSelection();
			return;
		}
		if (this.atRowVal > this.centerCellRowVal) {
			this.rowFrom = this.centerCellRowVal;
			this.rowTo = this.atRowVal;
			this._getColSelection();
			return;
		}
		if	(this.atRowVal == this.centerCellRowVal) {
			this.rowFrom = this.centerCellRowVal;
			this.rowTo = this.centerCellRowVal;
			this._getColSelection();
			return;
		}
	},
	
	_getRowSelection: function() {
		if (this.atRowVal <= this.centerCellRowVal) {
			this.rowFrom = this.atRowVal;
			this.rowTo = this.centerCellRowVal;
		} else {
			this.rowFrom = this.centerCellRowVal;
			this.rowTo = this.atRowVal;
		}
	},
	
	_getColSelection: function() {
		if (this.selectMultipleColumns) {
			if	(this.atColVal < this.centerCellColVal) {
				this.colFrom = this.atColVal;
				this.colTo = this.centerCellColVal;
				return;
			}
			if	(this.atColVal > this.centerCellColVal) {
				this.colFrom = this.centerCellColVal;
				this.colTo = this.atColVal;
				return;
			}
		}
		if	(this.atColVal == this.centerCellColVal) {
			this.colFrom = this.centerCellColVal;
			this.colTo = this.centerCellColVal;
		}
	},
	
	_drawSelection: function(colFrom, colTo, rowFrom, rowTo) {
		this._highlightCells(colFrom, colTo, rowFrom, rowTo);
	},
	
	restoreCellColors: function() {
		for (var key in this.returnObjects) {
			var color = "";
			var cell = key.split(",");
			var e = this.getTableCell(parseInt(cell[1]) - 1, cell[0]);
			removeClassName(e,"list_edit_selected_cell");
		}
		this.returnObjects = new Object();
	},
	
	_highlightCells: function(colFrom, colTo, rowFrom, rowTo) {
		if (!this.selectMiscCells)
			this.restoreCellColors();
			
		for (var x=colFrom; x<=colTo; x++) {
			for (var y=rowFrom; y<=rowTo; y++) {
				try {
					var e = this.tableElement.rows[y].cells[x];
					addClassName(e,"list_edit_selected_cell");
					this.returnObjects[x + "," + y] = e.id;
				}
				catch (err) {
				}
			}
		}
	},
	
	_clearAllCells: function() {
		for (var x=1; x<=this.maxCol; x++) {
			for (var y=1; y<this.maxRow; y++) {
				try {
					var cell = this.getTableCell(y, x);
					cell.style.backgroundColor = "";
					cell.style.border = "0px";
				}
				catch (err) {
				}
			}
		}
	},
	
	clearRanges: function() {
		try{
			if (ie5)
				document.selection.empty();
			else 
				window.getSelection().removeAllRanges();
		}catch (e){
			
		}		
	},
	
	getGridInfo: function() {
		var rows = this.getTableRows();
		this.maxRow = rows.length;
		if (rows.length > 0)
			this.maxCol = rows[0].cells.length;
	},
	
	setMaxRow: function(max) {
		this.maxRow = max;
	},
	
	_setEpicenter: function(e) {
		var element = this.retrieveCellFromNestedDOMElement(Event.element(e), 'DIV');
		this.centerCellColVal = element.cellIndex;
		this.centerCellRowVal = this._getRowIndex(element.parentNode);
	},
	
	handleBeforeSelect: function(e) {
	},
	retrieveCellFromNestedDOMElement: function(element, tagName) {
		if (element.tagName == tagName && element.parentNode.tagName == 'TD')
			return element.parentNode;
		return element;
	},
	
	handleOnSelect: function(selectedCells) {
	},
	
	setBeforeSelect: function(flag) {
		this.beforeSelect = flag;
	},
	
	setOnSelect: function(flag) {
		this.onSelect = flag;
	},
	
	_getRowIndex: function(element) {
		return this.getTableRows().indexOf(element) + 1;
	},
	
	getTableRows: function() {
		var rows = this.tableElement.rows;
		listRows = [];
		for (var i = 0, n = rows.length; i < n; i++) {
			var row = rows[i];
			if (!hasClassName(row, 'list_row'))
				continue; 
			
			listRows.push(row);
		}
		return listRows;
	},
	getTableCell: function(rowNdx, colNdx) {
		var rows = this.getTableRows();
		if (!rows || !rows[rowNdx])
			return null;
		return rows[rowNdx].cells[colNdx];
	},
	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideRecord.js */
var GlideRecord = Class.create({
	AJAX_PROCESSOR : "AJAXGlideRecord",
	initialized : false,
  
	initialize: function(tableName) {
		this.currentRow = -1;
		this.rows = [];
		this.conditions = [];
		this.encodedQuery = "";
		this.orderByFields = [];
		this.orderByDescFields = [];
		this.displayFields = [];
		this.maxQuerySize = -1;
		this._wantSessionMessages = true;
		this._additionalParams = {};
		
		if (tableName)
		    this.setTableName(tableName);
		
		if (this.initialized == false) {
		  	this.ignoreNames = {};
			
			for(var xname in this) {
				this.ignoreNames[xname] = true;
			}
		} else {
			for(var xname in this) {
				if (this.ignoreNames[xname] && this.ignoreNames[xname] == true)
					continue;
					
				delete this[xname];
			}
		}
		
		this.initialized = true;
	},
	addQuery: function() {
		var fName;
		var fOper;
		var fValue;
	
		if (arguments.length == 2) {
			fName = arguments[0];
			fOper = '=';
			fValue = arguments[1];
		} else if (arguments.length == 3) {
			fName = arguments[0];
			fOper = arguments[1];
			fValue = arguments[2];
		}
	
		this.conditions.push({ 'name' : fName, 'oper' : fOper, 'value' : fValue});
	},
	setEncodedQuery: function(queryString) {
		this.encodedQuery = queryString;
	},
	getEncodedQuery: function() {
		var qc = [];
		if (this.encodedQuery) {
			qc.push(this.encodedQuery);
		}
		for (var i = 0; i < this.conditions.length; i++) {
			var q = this.conditions[i];
			qc.push(q.name + q.oper + q.value);
		}
		return qc.join('^');
	},
  
	deleteRecord: function(responseFunction) {
		var ajax = new GlideAjax(this.AJAX_PROCESSOR);
		ajax.addParam("sysparm_type", "delete");
		ajax.addParam("sysparm_name", this.getTableName());
		ajax.addParam("sysparm_chars", this._getXMLSerialized());
		ajax.addParam('sysparm_want_session_messages', this._wantSessionMessages);
		if(typeof responseFunction == 'undefined') {
			var sw = new StopWatch();
			sw.jslog("*** WARNING *** GlideRecord synchronous query for table: " + this.getTableName());
		}
		if (typeof responseFunction != 'function') {
			ajax.getXML();
			return;
		}
		
		ajax.getXML(this._deleteRecord0.bind(this), null, responseFunction);
	},
	
	_deleteRecord0 : function(response, responseFunction) {
		if (!response || !response.responseXML)
			return;
			
		responseFunction(this);
	},
	
	get: function(id) {
		this.initialize();
		this.addQuery('sys_id', id);
		this.query();
		return this.next();
	},
	
	getTableName: function() {
		return this.tableName;
	},
	hasNext: function() {
		return (this.currentRow + 1 < this.rows.length);
	},
	
	insert: function(responseFunction) {
		return this.update(responseFunction);
	},
	
	gotoTop : function() {
		this.currentRow = -1;
	},
	next: function() {
		return this._next();
	},
	_next: function() {
		if (!this.hasNext())
			return false;
	
		this.currentRow++;
		this.loadRow(this.rows[this.currentRow]);
		return true;
	},
	loadRow: function(r) {
		for (var i = 0; i < r.length; i++)  {
			var name = r[i].name;
		    var value = r[i].value;
		    
		    if (this.isDotWalkField(name)) {
		    	var start = this;
var parts = name.split(/-/);
		    	
		    	for(var p = 0; p < parts.length - 1; p++) {
		    		var part = parts[p];
		    		
		    		if (typeof start[part] != 'object')
		    			start[part] = new Object();
		    		
		    		start = start[part];
		    	}
		    	
		    	var fieldName = parts[parts.length - 1];
		    	start[fieldName] = value;
		    } else {
		    	this[name] = value;
		    }
		}
	},
	getValue: function(fieldName) {
		return this[fieldName];
	},
	setValue: function(fieldName, value) {
		this[fieldName] = value;
	},
	isDotWalkField: function(name) {
		for(var i = 0; i < this.displayFields.length; i++) {
			var fieldName = this.displayFields[i];
			if (fieldName.indexOf(".") == -1)
				continue;
			
var encodedFieldName = fieldName.replace(/\./g,"-");
			if (name == encodedFieldName)
				return true;
		}
		
		return false;
	},
	
	addOrderBy: function(f) {
		this.orderByFields.push(f);
	},
	
	orderBy: function(f) {
		this.orderByFields.push(f);
	},
	orderByDesc: function(f) {
		this.orderByDescFields.push(f);
	},
	
	setDisplayFields: function(fields) {
	  	this.displayFields = fields;
	},
  
	query: function() {
		var responseFunction = this._parseArgs(arguments);
		
		if (this._getBaseLine()) {
			var rxml = loadXML(g_filter_description.getBaseLine());
			this._queryResponse(rxml);
			return;
		}
		
		var ajax = new GlideAjax(this.AJAX_PROCESSOR);
		ajax.addParam("sysparm_type", "query");
		ajax.addParam("sysparm_name", this.getTableName());
		ajax.addParam("sysparm_chars", this.getEncodedQuery());
		ajax.addParam('sysparm_want_session_messages', this._wantSessionMessages);
		if(this.getLimit() != -1)
		    ajax.addParam("sysparm_max_query", this.getLimit());
		if (this.orderByFields.length > 0)
			ajax.addParam("sysparm_orderby", this.orderByFields.join(","));
		if (this.orderByDescFields.length > 0)
			ajax.addParam("sysparm_orderby_desc", this.orderByDescFields.join(","));
		if (this.displayFields.length > 0)
			ajax.addParam("sysparm_display_fields", this.displayFields.join(","));        
		for (var key in this._additionalParams) {
			if (typeof key === 'string')
				ajax.addParam(key, this._additionalParams[key]);
		}
		if (!responseFunction)	 {
            var sw = new StopWatch();
			var rxml = ajax.getXMLWait();
            sw.jslog("*** WARNING *** GlideRecord synchronous query for table: " + this.getTableName());
			this._queryResponse(rxml);
			return;
		}
		
		ajax.getXML(this._query0.bind(this), null, responseFunction);
	},
	
	_parseArgs: function(args) {
		var responseFunction = null;
		var i =0;
		while (i < args.length) {
			if (typeof args[i] == 'function') {
				responseFunction = args[i];
				i++;
				continue;
			}
			
			if (i+1 < args.length) {
				this.conditions.push({ 'name' : args[i], 'oper' : '=', 'value' : args[i+1]});
				i+=2;
			} else
				i++;
		}
		return responseFunction;
	},
	
	_query0: function(response, responseFunction) {
		if (!response || !response.responseXML)
			return;
		
		this._queryResponse(response.responseXML);
		responseFunction(this);
	},
	
	
	_queryResponse: function(rxml) {
		var rows = [];
		var items = rxml.getElementsByTagName("item");
		for (var i = 0; i < items.length; i++) {	
			if ((items[i].parentNode.parentNode == rxml)) {
				var grData = items[i];
				var cnodes = grData.childNodes;
				var fields = [];
				for (var z = 0; z < cnodes.length; z++) {
					var field = cnodes[z];
					var name = field.nodeName;
					var value = getTextValue(field);
					if (!value)
						value = "";
					fields.push({ 'name' : name, 'value' : value });
				}
				if (cnodes.length && cnodes.length > 0)
					rows.push(fields);
			}
		}
	
		this.setRows(rows);		
	},
	setRows: function(r) {
		this.rows = r;
	},
	
	setTableName: function(tableName) {
		this.tableName = tableName;
	},
	update: function(responseFunction) {
		var ajax = new GlideAjax(this.AJAX_PROCESSOR);
		ajax.addParam("sysparm_type", "save_list");
		ajax.addParam("sysparm_name", this.getTableName());
		ajax.addParam("sysparm_chars", this._getXMLSerialized());
		ajax.addParam('sysparm_want_session_messages', this._wantSessionMessages);
		if (typeof responseFunction == 'undefined') {
			var sw = new StopWatch();
			sw.jslog("*** WARNING *** GlideRecord synchronous update or insert for table: " + this.getTableName());
			var rxml = ajax.getXMLWait();
			return this._updateResponse(rxml);
		} 
		
		if (typeof responseFunction != 'function') 
			responseFunction = doNothing;
			
		ajax.getXML(this._update0.bind(this), null, responseFunction);
	},
	
   _update0: function(response, responseFunction) {
		if (!response || !response.responseXML)
			return;
		
		var answer = this._updateResponse(response.responseXML);
		responseFunction(this, answer);
	},
	
	_updateResponse: function(rxml) {
		var items = rxml.getElementsByTagName("item");
		if (items && items.length > 0)
			return getTextValue(items[0]);
	},
	
	setLimit: function(maxQuery) {
	    this.maxQuerySize = maxQuery;
	},
	
	getLimit: function() {
	    return this.maxQuerySize;
	},
  
   	_getXMLSerialized: function() {
var xml = loadXML("<record_update/>");
		
		var root = xml.documentElement;
		if(this.sys_id)
			root.setAttribute("id", this.sys_id);
		root.setAttribute('table', this.getTableName());
		var item = xml.createElement(this.getTableName());
		root.appendChild(item);
		
		for(var xname in this) {
			if (this.ignoreNames[xname])
		    	continue;
		
			var f = xml.createElement(xname);
			item.appendChild(f);
			
			var v = this[xname];
			if (!v)
				v = "NULL";
			
		    var t = xml.createTextNode(v);
			f.appendChild(t);
		}
		
		return getXMLString(xml);
	},
	_getBaseLine: function() {
		return window.g_filter_description
			&& typeof g_filter_description.getBaseLine() != 'undefined'
			&& this.getTableName() == 'cmdb_baseline'
			&& this.getEncodedQuery()
			&& this.orderByFields.length < 1
			&& this.displayFields.length < 1;
	},
	setWantSessionMessages: function(want) {
		this._wantSessionMessages = want;
	},
	
	addAdditionalParam: function(key, val) {
		this._additionalParams[key] = val;
	},
	
  	z: null
});
;
/*! RESOURCE: /scripts/classes/GlideWindow.js */
var GlideWindow = Class.create(GwtObservable, {
	
	FORWARD_EVENTS: {
		"mouseover" : true, 
		"mouseout" : true, 
		"mousemove" : true,
		"click" : true,
		"dblclick" : true,
		"keyup" : true,
		"mouseenter" : true,
		"mouseleave" : true
	},
	initialize: function(id, readOnly) {
		if (typeof this.DEFAULT_BODY == 'undefined')
this.DEFAULT_BODY = "<center> "+ getMessage("Loading...") +" <br/><img src='images/ajax-loader.gifx' alt='"+ getMessage("Loading...") +"' /></center>";
		this._dir = $$('html')[0].readAttribute('dir') === "rtl" ? "right" : "left"; 
		this.id = id;
		this.window = null;
		this.windowClass = "drag_section_picker";
		this.zIndex = 3;
		this.position = "absolute";
		this.padding = 3;
		this.container = null;
		this._readOnly = readOnly;
		this.preferences = new Object();
		this.titleHTML = null;
		this.elementToFocus = null;
		this.offsetHorizontal = 0;
		this.offsetTop = 0;
		this.gd = null;
		this.shim = null;
		this.valid = true;
		this.closeDecoration = null;
		this._draw(id);
		this.initDecorations();
		this.headerWrap = false;
		this.setScope("global");
		this.doctype = document.documentElement.getAttribute('data-doctype') == 'true';
		this.nologValue = false;
	},
	addDecoration: function(decorationElement, leftSide) {
		if (leftSide) {
			var ld = this.leftDecorations;
			ld.style.display = "block";
			
			if (ld.hasChildNodes()) {
				ld.insertBefore(decorationElement, ld.childNodes[0].nextSibling);
			} else {
				ld.appendChild(decorationElement);
			}
		} else {
			if	(this.rightDecorations) {
				var rd = this.rightDecorations;
				
				if (rd.hasChildNodes()) {
					rd.insertBefore(decorationElement, rd.childNodes[0]);
				} else {
					rd.appendChild(decorationElement);
				}
			}
			else {
			}
		}
	},
	addFunctionDecoration: function(imgSrc, label, clickHandler, side) {
		var keyPressHandler = function(ev) {
			if (ev.keyCode === 32 || ev.keyCode === 13) {
				ev.preventDefault();
				clickHandler(ev);
			}
		};
		var span = cel('span');
		span.onclick = clickHandler;
		span.onkeypress = keyPressHandler;
		span.gWindow = this;
		span.setAttribute('role', 'button');
		span.setAttribute('tabindex', 0);
		span.setAttribute('aria-label', getMessage(label));
		var img = cel('img', span);
		img.id = 'popup_close_image';
		img.height = '12';
		img.width = '13';
		img.src = imgSrc;
		img.setAttribute('aria-hidden', true);
		this.addDecoration(span, side);
		img = null;
		return span;
	},
	addHelpDecoration: function(func) {
this.addFunctionDecoration('images/help.gif', 'Help', func);
	},
	clearLeftDecorations: function() {
		clearNodes(this.leftDecorations);	
	},
	
	clearRightDecorations: function() {
		clearNodes(this.rightDecorations);	
	},
	
	dragging: function(me, x, y) {
		x = Math.max(x, 0);
		y = Math.max(y, 0);
		this.fireEvent("dragging", this);
		me.draggable.style.left = x + 'px';
		me.draggable.style.top = y + 'px';
		
		this._setShimBounds(x, y, "", "");
	},
	destroy: function() {
		this.fireEvent("beforeclose", this);
		if (this.container) {
			var parent = this.container.parentNode;
			if (parent)
				parent.removeChild(this.container);
		} else {
			var gWindow = this.getWindowDOM();
			var parent = gWindow.parentNode;
			if (parent)
				parent.removeChild(gWindow);
		}
		
		this.setShim(false);
		if (isMSIE)
		  this.container.outerHTML = '';
		this.release();
		this.valid = false;
		this.closeDecoration = null;
	},
	getAbsoluteRect: function(addScroll) {
		return getBounds(this.getWindowDOM(), addScroll);
	},
	getBody: function() {
		return this.body;
	},
	getContainer: function() {
		var obj;
		if (this.container) {
			obj = this.container;
		} else {
			obj = this.getWindowDOM();
		}
		
		return obj;
	},
	getClassName: function() {
		return this.getWindowDOM().className;
	},
	getDecorations: function(left) {
		if (left)
			return this.leftDecorations;
		return this.rightDecorations;
	},
	
	getDescribingXML : function() {
		var section = document.createElement("section");
		section.setAttribute("name", this.getID());
	
		var preferences = this.getPreferences();
		for(var name in preferences) {
			var p = document.createElement("preference");
			var v = preferences[name];
			p.setAttribute("name", name);
			
			if (v != null && typeof v == 'object') {
				if (typeof v.join == "function") {
					v = v.join(",");
				} else if (typeof v.toString == "function") {
					v = v.toString();
				}
			}
			if (v && typeof v.escapeHTML === "function")
				v = v.escapeHTML();
			if (v)
				p.setAttribute("value", v);
			section.appendChild(p);
		}
		
		return section;
	},
	getDescribingText : function() {
		var gxml = document.createElement("gxml");
		var x = this.getDescribingXML();
		gxml.appendChild(x);
		return gxml.innerHTML;
	},
	getHeader: function() {
		return this.header;
	},
	getID: function() {
		return this.id;
	},
	getPosition: function() {
		return this.position;
	},
	getPreferences : function() {
		return this.preferences;
	},
	getPreference : function(id) {
		return this.preferences[id];
	},
	
	getTitle: function() {
		return this.title;
	},
	
	locate: function(domElement) {
		while (domElement.parentNode) {
			domElement = domElement.parentNode;
			if (domElement.gWindow) 
				return domElement.gWindow;
			if (window.$j && $j(domElement).data('gWindow')) {
				return $j(domElement).data('gWindow');
			}
		}	
		alert('GlideWindow.locate: window not found');
		return null;
	}, 
	
	get: function(id) {
		if (!id || !gel('window.' + id))
			return this;
			
		return gel('window.' + id).gWindow;
	},
	
	getWindowDOM: function() {
		return this.window;
	},
	getZIndex: function() {
		return this.zIndex;
	},
	
	initDecorations: function() {
		if (!this.isReadOnly()) {
this.closeDecoration = this.addFunctionDecoration("images/x.gifx", 'Close', this._onCloseClicked.bind(this));
		}
	},
	removeCloseDecoration: function() {
		if (this.closeDecoration)
			this.closeDecoration.parentNode.removeChild(this.closeDecoration);
			
		this.closeDecoration = null;
	},
	
	showCloseOnMouseOver: function() {
		Event.observe(this.window, "mouseover", this.showCloseButton.bind(this));
		Event.observe(this.window, "mouseout", this.hideCloseButton.bind(this));
		this.hideCloseButton();
	},
	
	showCloseButton: function() {
		if (this.closeDecoration)
			this.closeDecoration.style.visibility="visible";
	},
	
	hideCloseButton: function() {
		if (this.closeDecoration)
			this.closeDecoration.style.visibility="hidden";
	},
	
	insert: function(element, beforeElement, invisible) {
		var id = this.getID();
        element = $(element);
		var div = $(id);
		if (!div) {		    
			var div = cel("div");
			div.name = div.id = id;
			div.gWindow = this;
			div.setAttribute("dragpart", id);
			div.setAttribute("aria-labelledby", id + "_header_contents")
			div.setAttribute("sn-atf-area", id);
			div.setAttribute("sn-atf-whitelist", "true");
			div.className += " drag_section_part";
			div.style.position = this.getPosition();
			div.style.zIndex = this.getZIndex();
		    div.style[this._dir] = this.offsetHorizontal + "px";
		    div.style.top = this.offsetTop + "px";
		    div.appendChild(this.getWindowDOM());
			if (invisible)
				div.style.visibility = "hidden";
				
		    if (beforeElement)
		    	element.insertBefore(div, beforeElement);
		    else
		    	element.appendChild(div);
		}
		this.container = div;
	    this._enableDragging(div);
	},
	isActive: function() {
		return this.active;
	},
	
	isReadOnly: function() {
		return this._readOnly;
	},
	
	isValid: function() {
		return this.valid;
	},
	moveTo: function(x, y) {
		var o = this.getContainer();
		
		o.style[this._dir] = x + 'px';
		o.style.top = y + 'px';
		this._setShimBounds(x, y, "", "");
	},
	release: function() {
		this.window.gWindow = null;
		this.window = null;
		this.container = null;
		this.body = null;
		if (this.gd)
			this.gd.destroy();
		this.title = null;
		this.titleContents = null;
		this.header = null;
		this.shim = null;
		this.rightDecorations = null;
		this.leftDecorations = null;
	},
	removePreference: function(name, value) {
		delete this.preferences[name];
	},
	render: function() {
		var id = this.getID();
		var description = this.getDescribingText();
		var ajax = new GlideAjax("RenderInfo");
		if (this.getPreference("sysparm_scope"))
			ajax.setScope(this.getPreference("sysparm_scope"))
		if (this.nologValue)
			ajax.addParam("ni.nolog.sysparm_value", true);
		ajax.addParam("sysparm_value", description);
		ajax.addParam("sysparm_name", id);
		ajax.getXML(this._bodyRendered.bind(this));
	},
	invisible: function() {
		var e = this.getContainer();
		e.style.visibility = "hidden";
	},
	
	visible: function() {
		var e = this.getContainer();
		e.style.visibility = "visible";
	},
	
	setAlt: function(alt) {
		this.window.title = alt;
	},
	
	setEscapedBody: function(body) {
		if (!body)
		   return;
		   
body = body.replace(/\t/g, "");
body = body.replace(/\r/g, "");
body = body.replace(/\n+/g, "\n");
body = body.replace(/%27/g, "'");
body = body.replace(/%3c/g, "<");
body = body.replace(/%3e/g, ">");
body = body.replace(/&amp;/g, "&");
		this.setBody(body, true);
	},
	setBody: function(html, noEvaluate, setAlt) {
		this.body.innerHTML = "";
		
		if (typeof html == 'string') {
            
            var showBody = true;
            if (html.length == 0)
              showBody = false;
            this.showBody(showBody);   
            
			html = this._substituteGet(html);
			html = this._fixBrowserTags(html);
			this.body.innerHTML = html;
	
			if (setAlt)
				this.setBodyAlt(html);
			
			if (!noEvaluate)
				this._evalScripts(html);
		} else {
			 this.body.appendChild(html);
		}
		var prefs = this.body.getElementsByTagName("renderpreference");
		if (prefs.length > 0) {
			for(var i = 0; i < prefs.length; i++) {
				var pref = prefs[i];
				var name = pref.getAttribute("name");
				var valu = pref.getAttribute("value");
				if (name == "render_time") {
					this.debugTD.innerHTML = valu;
					this.debugTD.style.display = "table-cell";
					continue;
				}
				
				this.setPreference(name, valu);
				if (name == "title") {
					this.setTitle(sanitizeHtml(valu));
					var titleChildren = this.title.children;
					if (titleChildren.length > 0) {
						var titleNode = titleChildren[0];
						var titlePref = this.getPreference('title')  || '';
						if (titleNode.tagName === 'A' && this.getPreference('fromHome') &&
							titlePref.indexOf('onmousedown') !== -1 && !titleNode.hasAttribute('onmousedown')
						   ) {
							titleNode.onmousedown=function(event){Event.stop(event); return false;}
						}
					}
				}
				if (name == "render_title" && valu == "false")
					this.header.style.display = "none";
				if (name == "hide_close_decoration" && valu == "true")
					this.removeCloseDecoration();
			}
		}
		
		var decorations = this.body.getElementsByTagName("decoration");
		if (decorations.length > 0) {
			for (var x = 0; x < decorations.length; x++) {
			    var thisDecoration = new GlideDecoration(decorations[x]);
			    thisDecoration.attach(this);
			}
		}
		
		if (this.elementToFocus) {
			if (gel(this.elementToFocus)) {
				self.focus();
			    gel(this.elementToFocus).focus();
			}
		}
		
		this._shimResize();
	},
    
    showBody: function(show) {
    	if (this.divMode)
    		var tr = this.body;
    	else
        	var tr = this.body.parentNode.parentNode;
        	
        if (show)
			tr.style.display = "";
		else
			tr.style.display = "none";
    },
	setBodyAlt: function(alt) {
		this.body.title = alt;
	},
	
	setClassName: function(className) {
		this.windowClass = className;
		
		if (this.getWindowDOM())
			this.getWindowDOM().className = className;
	},
	setColor: function(color) {
		this.windowBackground = color;
		
		if (this.getBody())
			this.getBody().parentNode.style.backgroundColor = color;
	},
	setFocus: function(id) {
		this.elementToFocus = id;
	},
	
	setFont: function(family, size, fontUnit, weight) {
        this.setFontSize(size, fontUnit);
        this.setStyle("fontFamily", family);
        this.setFontWeight(weight);
	},
    
    setFontSize: function(size, fontUnit) {
		if (!fontUnit)
			fontUnit = "pt";
        this.setStyle("fontSize", size + fontUnit);
   },
   
   setFontWeight: function(weight) {
        this.setStyle("fontWeight", weight);      
   },
   
   setStyle: function(name, value) {
       if (!value)
         return; 
         
       this.getTitle().style[name] = value;    
       this.getBody().style[name] = value;        
   },
    
	setHeaderClassName: function(className) {
		this.getHeader().className = className;
	},
	
	setHeaderColor: function(background) {
		this.header.style.backgroundColor = background;
	},
	
	setHeaderColors: function(color, background) {
		this.setHeaderColor(background);
		this.title.style.color = color;
	},
	
    setOpacity: function(opacity) {
    	if (this.divMode) {
			var element = this.getBody().parentNode; 
	        element.style.filter = "alpha(opacity=" + (opacity * 100) + ")";
	       	element.style.MozOpacity = opacity + "";
	        element.style.opacity = opacity + "";
	        element.style.opacity = opacity;
    	}
    },
    
	setPreferences : function(preferences) {
		this.preferences = preferences;
	},
	setPreference: function(name, value) {
		this.preferences[name] = value;
	},
	setPosition: function (name) {
		if (this.getContainer() != this.getWindowDOM())
			this.getContainer().style.position = name;
		this.position = name;
	},
	setReadOnly: function(r) {
		this._readOnly = r;
	},
    
    setWidth: function(width) {
      this.setSize(width, "");  
    },
	
	getWidth: function() {
		if (this.window)
			return this.window.clientWidth;
		else 
			return;
	},
	
	setHeight: function(height) {
		this.definedHeight = height;
		this.setSize("", height);  
	},
	
	removeHeight: function() {
		this.definedHeight = null;
		var obj = this.getContainer();
		obj.style.height = "";
		this.window.style.height = "";
		var bo = this.getBody();
		bo.style.height = "";
	},
 	getHeight: function() {
		if (this.window)
			return this.window.clientHeight;
	},
	setSize: function(w, h) {
		var obj = this.getContainer();
		var bo = this.getBody();
		
		var setWidth = w;
		if (setWidth && !isNaN(setWidth)) 
			setWidth = setWidth + 'px';
		bo.style.width = setWidth;
		obj.style.width = setWidth;
		
		if (obj != this.window)
			this.window.style.width = setWidth;
		
        var setHeight = h;
        if (h && !isNaN(setHeight)) {
            setHeight = setHeight + 'px';
            obj.style.height = setHeight;
        }
       
		this._setShimBounds("", "", w, h);
	},
	adjustBodySize: function() {
		var obj = this.getContainer();
		var bo = this.getBody();
		var h = obj.clientHeight;
		if ((h - this.header.clientHeight) > 0) {
			var headerClientHeight = h - this.header.clientHeight;
			bo.style.height = headerClientHeight + 'px';
		} else if (!(isMSIE9 && getTopWindow().document.doctype))
			bo.style.height = 0;
		this.window.style.height = obj.style.height;
	},
	
    removeBody: function() {
        var element = this.getBody();
element = element.parentNode;
element = element.parentNode;
        var tbody = element.parentNode;
        tbody.removeChild(element);
    },
	clearSpacing: function() {
		this.window.style.padding = "0px";
		this.body.style.padding = "0px";
		if (!this.divMode) {
			this.window.cellSpacing = 0;
			this.window.cellPadding = 0;
		}
	},
	
	setWindowActive: function() {
		this.setHeaderClassName("drag_section_header_active");
		this.active = true;
		addClassName(this.getContainer(), "selected");
	},
	
	setWindowInactive: function() {
		this.setHeaderClassName("drag_section_header");
		this.active = false;
		removeClassName(this.getContainer(), "selected");
	},
	
	toggleActive: function() {
		if (this.active)
			this.setWindowInactive();
		else
			this.setWindowActive();	
	},
	
	setHeaderWrap: function(wrap) {
		this.headerWrap = wrap;
		if (wrap)
			this.title.style.whiteSpace = "normal";
		else
			this.title.style.whiteSpace = "nowrap";
	},
	
	isHeaderWrap: function() {
		return this.headerWrap;
	},
	setShim: function(b) {
		if (!ie5)
			return;
		if (b == false) {
			if (this.shim) {
				var parent = this.shim.parentNode;
				parent.removeChild(this.shim);
			}
		} else { 
			var iframeShim = cel("iframe");
			iframeShim.id = iframeShim.name = "iframeDragShim_" + this.id;
			iframeShim.src = "blank.do";
			iframeShim.style.position = "absolute";
			iframeShim.style.top = 0;
			iframeShim.style.left = 0;
			iframeShim.style.width = 0;
			iframeShim.style.height = 0;
			iframeShim.frameBorder = 0;
			this.container.parentNode.appendChild(iframeShim);
			this.shim = iframeShim;
			
			var win = this.getWindowDOM();
			Event.observe(win, 'resize', this._shimResize.bind(this));
		}
	},
	setAriaModal: function(isModal) {
		var container = this.getContainer();
		container.setAttribute('aria-modal', isModal);
	},
	setTitle: function(html) {
		this.titleValue = html;
		var titleNode = this.titleContents && !this.divMode ? 'titleContents' : 'title';
		if (typeof html == 'string'){
			var scrollToMsg = gel("ni.escape_gwindow_message");
			if (scrollToMsg && scrollToMsg.value === 'true')
				this[titleNode].innerHTML = sanitizeHtml(html);
			else
				this[titleNode].innerHTML = html;
		} else {
			this[titleNode].innerHTML = "";
			this[titleNode].appendChild(html || "");
		}
	},
	
	setTitleAlign: function(align) {
		this.title.style.textAlign = align;
		var children = this.title.children;
		for (var i = 0; i < children.length; i++) {
			children[0].style.textAlign = align;
		}
	},
	
	setTitleSize: function(size) {
		this.title.style.fontSize = size;
		var children = this.title.children;
		for (var i = 0; i < children.length; i++) {
			children[0].style.fontSize = size;
		}
	},
	
	setTitleFont: function(font) {
		this.title.style.fontFamily = font;
		var children = this.title.children;
		for (var i = 0; i < children.length; i++) {
			children[0].style.fontFamily = font;
		}
	},
	
	setTitleColor: function(color) {
		this.title.style.color = color;
		var children = this.title.children;
		for (var i = 0; i < children.length; i++) {
			children[0].style.color = color;
		}
	},
	
	setBorderVisibility: function(visible) {
		var window = this.getWindowDOM();
		if (visible !== "false" && visible) {
			window.style.border = "";
			window.style.boxShadow = "";
		} else {
			window.style.border = "none";
			window.style.boxShadow = "none";
		}
	},
	
	setBorderWidth: function(width) {
		this.getWindowDOM().style.borderWidth = width;
	},
	
	setBorderColor: function(color) {
		this.getWindowDOM().style.borderColor = color;
	},
	
	setHeaderBorderVisibility: function(visible) {
		if (visible !== "false" && visible)
			this.header.style.border = "solid";
		else
			this.header.style.border = "none";
	},
	
	setHeaderBorderWidth: function(width) {
		this.header.style.borderWidth = width;
	},
	
	setHeaderBorderColor: function(color) {
		this.header.style.borderColor = color;
	},
	
	setHeaderBackgroundColor: function(color) {
		this.header.style.backgroundColor = color;
	},
	
	setTitleVisibility: function(visible) {
		if (visible !== "false" && visible)
			this.setTitle(this.titleValue);
		else
			this.title.innerHTML = "";
	},
	
	setZIndex: function(i) {
		if (this.getContainer() != this.getWindowDOM())
			this.getContainer().style.zIndex = i;
		this.zIndex = i;
	},
	setNologValue: function(nolog) {
		this.nologValue = !!nolog;
	},
	on: function(name, func) {
		if (this.FORWARD_EVENTS[name])
			this.forward(name, this.window, func);
		else
			GwtObservable.prototype.on.call(this, name, func);
			
		if (name == "dblclick") {
    		if (isMSIE)
			  this.window.style.cursor = "hand";
			else
			  this.window.style.cursor = "pointer";
		}
	},
	
	_bodyRendered: function(request) {
	    var xml = request.responseXML;
		var uid = xml.documentElement.getAttribute("sysparm_name");
		var newBody = xml.getElementsByTagName("html")[0];
		if (!this.body)
			return;
		if (newBody.xml) {
			xml = newBody.xml;
		} else if (window.XMLSerializer) {
			xml = (new XMLSerializer()).serializeToString(newBody);
		}
		if (!xml) 
		  return;
		  
		this.setEscapedBody(xml);
		this._evalScripts(xml);
		this.fireEvent("bodyrendered", this);
		_frameChanged();
	},
	_centerOnScreen: function(width, height) {
		var bounds = this.getAbsoluteRect();
		var viewport = new WindowSize();
		var w = viewport.width;
		var h = viewport.height;
		var windowWidth = (width? width : bounds.width);
		var windowHeight = (height? height: bounds.height);
		var scrollX = getScrollX();
		if (typeof scrollX == "undefined")
			scrollX = 0;
		var scrollY = this._getScrollTop();
		
var leftX = parseInt((w / 2) - (windowWidth / 2)) + scrollX;
var topY = parseInt((h / 2) - (windowHeight / 2)) + scrollY;
		var topWindow = getTopWindow();
		var browserHeight = topWindow.innerHeight || topWindow.document.documentElement.clientHeight || topWindow.document.body.clientHeight;
		var topWindowBody = $(topWindow.document.body);
		if (topWindowBody && topWindowBody.select && topWindowBody.select('table.navpage').length == 0) {
			var currentIframe = this._findCurrentIframe(window);
			if (currentIframe && currentIframe.getBoundingClientRect) {
				var rectTop = parseInt(currentIframe.getBoundingClientRect().top);
				var d = h + rectTop;
				topY = scrollY;
				if (rectTop < 0) {
					if (d > browserHeight)
topY += parseInt((browserHeight - windowHeight) / 2) - rectTop;
					else
topY += parseInt((d - windowHeight) / 2) - rectTop;
				} else {
					if (d > browserHeight)
topY += parseInt((browserHeight - rectTop - windowHeight) / 2);
					else {
topY += parseInt((h - windowHeight) / 2);
						if (scrollY == 0 && (isMSIE6 || isMSIE7 || isMSIE8))
							topY += window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;
					}
				}
			} else {
				if (this.container) {
					var containerParentHeight = this.container.parentNode.scrollHeight;
					if (containerParentHeight < browserHeight)
topY = parseInt((containerParentHeight - windowHeight) / 2);
					else {
						if (scrollY == 0 && (isMSIE6 || isMSIE7 || isMSIE8))
							topY += topWindow.pageYOffset || topWindow.document.documentElement.scrollTop || topWindow.document.body.scrollTop;							
					}
				}
			}
		}
		
		if (topY < 0)
			topY = 0;
			
		if (leftX < 0)
			leftX = 0;
		
		if (this.container) {
			var headerSpacer = $(this.container.parentNode).select(".section_header_spacer");
			if (headerSpacer.length > 0) {
				headerSpacer = headerSpacer[0];
				if (topY < headerSpacer.offsetHeight)
					topY = headerSpacer.offsetHeight;
			}
		}
			
		this.moveTo(leftX, topY);
	},
	_findCurrentIframe: function(win) {
		try {
			if (win && win.parent) {
				var e = win.parent.document.getElementsByTagName('iframe');
				for (var i =0; i < e.length; i++) {
					if (e[i].contentWindow == win)
						return e[i];
				}
			}
		} catch(e) {}
		
		return null;
	},
	
	_getScrollTop: function() {
		if (this.container.parentNode != document.body)
			return this.container.parentNode.scrollTop;
			
		return getScrollY();
	},
	_draw: function(id) {
		var e;
		if (this.divMode) {
			e = cel("DIV");
			e.style.overflow = "hidden";
			e.appendChild(this._drawTitle(id));
			e.appendChild(this._drawBody(id));
		} else {
			e = cel("TABLE");
			e.setAttribute('role', 'presentation');
			var dragTableBody = cel("TBODY");
			dragTableBody.appendChild(this._drawTitle(id));
			dragTableBody.appendChild(this._drawBody(id));
			e.appendChild(dragTableBody);
		}
		
		e.id = "window." + id;
		this.window = e;
		this.window.className = this.windowClass;
		this.window.gWindow = this;
	},
	_drawTitle: function(id) {
		if (!this.divMode) { 
			var baseTR = cel("TR");
			baseTR.style.verticalAlign = "top";
			var baseTD = cel("TD");
		}
	
		var dragTableHeader = cel("TABLE");
		var dragTableHeaderBody = cel("TBODY");
		dragTableHeader.className = "drag_section_header";
		dragTableHeader.setAttribute('role', 'presentation');
		dragTableHeader.style.width = "100%";
		this.header = dragTableHeader;
		var dragTableHeaderTR = cel("TR");
		
		var leftDecorations = cel("TD");
		leftDecorations.style.display = "none";
		leftDecorations.style.top = "0px";
		leftDecorations.style.left = "0px";
		leftDecorations.style.verticalAlign = "top";	
		leftDecorations.style.whiteSpace = "nowrap";
		this.leftDecorations = leftDecorations;
		dragTableHeaderTR.appendChild(leftDecorations);
		var dragTableHeaderTD = cel("TD");
		dragTableHeaderTD.className = "drag_section_movearea";
		dragTableHeaderTD.style.verticalAlign = "top";
		dragTableHeaderTD.id = id + "_header";
		this.title = dragTableHeaderTD;
		dragTableHeaderTR.appendChild(dragTableHeaderTD);
		var titleContents = cel("h1");
		titleContents.id = id + "_header_contents";
		if (id == 'GwtDateTimePicker')
			titleContents.setAttribute('role', 'presentation')
		this.titleContents = titleContents;
		dragTableHeaderTD.appendChild(titleContents);
		var headerDebugTD = cel("TD");
		headerDebugTD.className = "drag_section_debug";
		headerDebugTD.id = id + "_debug";
		this.debugTD = headerDebugTD;
		dragTableHeaderTR.appendChild(headerDebugTD);
		
		var rightDecorations = cel("TD");
		rightDecorations.style.top = "0px";
		rightDecorations.style.right = "0px";
		rightDecorations.style.verticalAlign = "top";	
		rightDecorations.style.whiteSpace = "nowrap";	
		rightDecorations.style.textAlign = "right";	
		this.rightDecorations = rightDecorations;
		dragTableHeaderTR.appendChild(rightDecorations);
		
		dragTableHeaderBody.appendChild(dragTableHeaderTR);
		dragTableHeader.appendChild(dragTableHeaderBody);
		
		if (!this.divMode) {
			baseTD.appendChild(dragTableHeader);
			baseTR.appendChild(baseTD);
		}
		
		dragTableHeaderTD = null;
		dragTableHeaderTR = null;
		dragTableHeaderBody = null;
		dragTableHeader = null;
		leftDecorations = null;
		rightDecorations = null;
		
		if (!this.divMode)
			return baseTR;
		else		
			return this.header;
	},
	
	_drawBody: function(id) {
		var e;
		if (this.divMode) {
			e = cel("DIV");
			this.body = e;
		} else {
			e = cel("TR");
			e.style.height = "100%";
			e.style.verticalAlign = "top";
			var dragTableTD = cel("TD");
			this.body = cel("SPAN");
			dragTableTD.appendChild(this.body);
			e.appendChild(dragTableTD);
		}
		
		this.body.id = "body_" + id;
		this.body.className = "widget_body";
		this.body.style.overflow = "auto";
		this.body.innerHTML = this.DEFAULT_BODY;
		this.body.gWindow = this;
		return e;
	},
	
	_drawIndicator: function(classNames,id,altText) {
		
			var dragTableTD = cel("TD");
		dragTableTD.className = 'widget-indicator';
		dragTableTD.style.display = 'none';
		
		this.filterIndicator = cel("SPAN");
		this.filterIndicator.className = classNames;
		
		if (altText)
			this.filterIndicator.title = getMessage(altText);
		
		dragTableTD.id = id;
		dragTableTD.gWindow = this;
		dragTableTD.appendChild(this.filterIndicator);
		
		return dragTableTD;
	},
	_toggleIndicator : function (indicator){
		var $parentEl;
		var preference;
		
		if (indicator === 'real-time')
			preference = 'real_time';
		if (indicator === 'filter')		
			preference = 'filter_indicator';
		
		$parentEl = $(indicator+'-indicator-'+this.id);
		if ($parentEl) {
			if (this.preferences[preference] === 'true')
				$parentEl.addClassName('active');
			else
				$parentEl.removeClassName('active');
		}
	},
	_enableDragging: function(element) {
		var id = element.getAttribute("dragpart");
		if (!id || this.isReadOnly() || this.getPreference('pinned'))
			return;
			
		var titlebar = gel(id + "_header");
		
		this.gd = new GwtDraggable(titlebar, element);
		if (typeof this.dragStart == "function")
			this.gd.setStart(this.dragStart.bind(this));
		if (typeof this.dragEnd == "function")
			this.gd.setEnd(this.dragEnd.bind(this));
		if (typeof this.dragging == "function")
			this.gd.setDrag(this.dragging.bind(this));
			
		titlebar = null;
	},
	_evalScripts: function(html) {
		
		
		html = this._substituteGet(html);
		
var x = loadXML("<xml>" + html + "</xml>");
		if (x) {
			var scripts = x.getElementsByTagName("script");
		    for(var i = 0; i < scripts.length; i++)	{
		        var script = scripts[i];
				var s = "";
				
if (script.getAttribute("type") == "application/xml")
					continue;
if (script.getAttribute("type") == "text/ng-template")
					continue;
				
				if (script.getAttribute("src")) {
					var url = script.getAttribute("src");
					var req = serverRequestWait(url);
					s = req.responseText;
				} else {
			        s = getTextValue(script);
			        if (!s)
			        	s = script.innerHTML;
		        }
				
				if (s)
					evalScript(s, true);
		     }
		}
		if (!window.G_vmlCanvasManager)
			return;
		
		window.G_vmlCanvasManager.init_(document)
	},
	_fixBrowserTags: function(html) {
	    if (!html)
	      return html;
		 
	    var tags = [ "script", "a ", "div", "span", "select", "button", "i" ];
	    
	    for(var i = 0; i < tags.length; i++) {
	    	var tag = tags[i];
html = html.replace(new RegExp('<' + tag + '([^>]*?)/>', 'img'), '<' + tag + '$1></' + tag + '>');
	    }
	    
		return html;
	},
	
	_onCloseClicked: function() {
		if (!this.fireEvent("closeconfirm", this))
			return false;
		if (this.window){
			var gWindow = $(this.window.gWindow);
			if (gWindow)
				gWindow.destroy();
		}
	},
	
	_setShimBounds: function(x, y, w, h) {
		if (x !== "")
			this.cacheX = parseInt(x);
		if (y !== "")
			this.cacheY = parseInt(y);
		if (w != "" && !isNaN(w))
			this.cacheWidth = parseInt(w);
		if (h != "" && !isNaN(h))
			this.cacheHeight = parseInt(h);
		
		if (!this.shim)
			return;
			
		if (x !== "")
			this.shim.style.left = x + 'px';
		if (y !== "")
			this.shim.style.top = y + 'px';
		
		if (w != "") {
			if (!isNaN(w))
			this.shim.style.width = w + 'px';
			else
				this.shim.style.width = w;
		}
		if (h != "") {
			if (!isNaN(h))
			this.shim.style.height = h + 'px';
			else
				this.shim.style.height = h;
		}
	},
	_shimResize: function() {
		if (!this.shim)
			return;
			
		var bounds = this.getAbsoluteRect();
		this._setShimBounds(bounds.left, bounds.top, bounds.width, bounds.height);
	},
	_substituteGet: function(html) {
		if (!html)
			return html;
			
		var substitutions = [this.type(), 'GlideDialogWindow', 'GlideDialogForm'];
		for (var i = 0; i < substitutions.length; i++) {
			var reg = new RegExp(substitutions[i] + ".get\\(", "g");
			html = html.replace(reg, this.type() + ".prototype.get('" + this.getID() + "'");
		}
		return html;
	},
	getLowerSpacing : function() {
		return "6px";
	},
	
	type : function() {
		return "GlideWindow";
	},
	addClass: function(className) {
		var domEl = this.getWindowDOM();
		if (domEl) {
			var classes = domEl.className;
			if (classes.indexOf(className) < 0) {
				domEl.className += " " + className;
			}
		}
	},
	removeClass: function(className) {
		var domEl = this.getWindowDOM();
		if (domEl) {
			var classes = domEl.className;
			domEl.className = classes.replace(className, "");
		}
	},
	
	setScope: function(scope) {
		if(scope) {
			this.setPreference('sysparm_scope', scope);			
		}
		return this;
	}
});
;
/*! RESOURCE: /scripts/classes/GlideDialogWindow.js */
var GlideDialogWindow = Class.create(GlideWindow, {
	BACKGROUND_COLOR: "#DDDDDD",
	DEFAULT_RENDERER: "RenderForm",
	WINDOW_INVISIBLE: 1,
ZINDEX: 1050,
	
	initialize: function(id, readOnly, width, height) {
		GlideWindow.prototype.initialize.call(this, id, readOnly);
        if (width) {
           this.setSize(width, height);
           this.adjustBodySize();
        }
		this.grayBackground = null;
		this.setTitle("Dialog");
    	this.setDialog(id);
		this.parentElement = getFormContentParent();
    	this.insert(this.parentElement);
    	this._initDefaults();
    	this.setShim(true);
		this.focusTrap = null;
	},
	destroy: function() {
		var self = this;
		this.disableFocusTrap();
		window.setTimeout(function(){
			Event.stopObserving(self.getWindowDOM(), 'resize', self.resizeFunc);
			self._hideBackground();
			self.parentElement = null;
			GlideWindow.prototype.destroy.call(self);
			if (isMSIE10 || isMSIE11)
				document.body.focus();
		}, 0);
	},
	insert: function(element) {
		this.setZIndex(this._determineZIndex());
		this._showBackground();
		GlideWindow.prototype.insert.call(this, element, '', this.WINDOW_INVISIBLE);
		this.container.setAttribute('role', 'dialog');
		this.container.setAttribute('tabindex', -1);
		this.onResize();
		this.visible();
	},
	enableFocusTrap : function () {
		if (window.focusTrap && this.container)
			this.focusTrap = window.focusTrap(this.container, {escapeDeactivates: false});
		if (this.focusTrap)
			this.focusTrap.activate();
	},
	disableFocusTrap : function () {
		if (!this.focusTrap)
			return;
		this.focusTrap.deactivate({returnFocus: true});
		this.focusTrap = null;
	},
	setBody: function(html, noEvaluate, setAlt) {
		GlideWindow.prototype.setBody.call(this, html, noEvaluate, setAlt);
		if (typeof this.elementToFocus != 'undefined' && !this.elementToFocus) {
		    self.focus();
            this.getWindowDOM().focus();
		}
		if (this.getPreference('focusTrap'))
			this.enableFocusTrap();
		this.onResize();
	},
	
	setDialog: function(dialogName) {
		this.setPreference('table', dialogName);
	},
	setAriaLabel: function(label) {
		if (this.container) {
			this.container.setAttribute('aria-label', label);
		}
	},
	setAriaLabelledBy: function(labelId) {
		if (this.container) {
			this.container.setAttribute('aria-labelledby', labelId);
		}
	},
    onResize: function() {
	  this._centerOnScreen();	
	},
	
	_eventKeyUp: function(e) {
		e = getEvent(e);
		
		if (e.keyCode == 27)
			this.destroy();
	},
	
	hideBackground: function() {
		return this._hideBackground();
	},
	
	_hideBackground: function() {
		if (this.grayBackground)
			this.parentElement.removeChild(this.grayBackground);
			
		this.grayBackground = null;
	},
	_initDefaults: function() {
    	this.setPreference('renderer', this.DEFAULT_RENDERER);
		this.setPreference('type', 'direct');
		
		if (!this.isReadOnly())
			Event.observe(this.getWindowDOM(), 'keyup', this._eventKeyUp.bind(this));
		
		this.resizeFunc = this.onResize.bind(this);
		Event.observe(this.getWindowDOM(), 'resize', this.resizeFunc);
	},
	_showBackground: function() {		
		var parent = document.viewport;
		if (document.compatMode == 'BackCompat' && this.parentElement != document.body)
			parent = this.parentElement;
		
		if (!gel('grayBackground')) {
			var gb = cel("div");
			gb.id = gb.name = "grayBackground";
			gb.style.top = gb.style.left = 0;
			gb.style.width = "100%";
			var hgt = this._getOverlayHeight();
			gb.style.height =  hgt + "px";
		    gb.style.position = "absolute";
			gb.style.display = "block";
			gb.style.zIndex = this.ZINDEX - 1;
			gb.style.zIndex = this.getZIndex() - 1;
			gb.style.backgroundColor = this.BACKGROUND_COLOR;
			gb.style.opacity = 0.33;
			gb.style.filter = "alpha(opacity=33)";
			this.parentElement.appendChild(gb);			
			this.grayBackground = gb;
		}
	},
	
	_getOverlayHeight: function() {
		var elements = $$('body > div.section_header_content_no_scroll'); 
	    if (elements && elements.length > 0)
	    	return elements[0].scrollHeight;
	    elements = $$('body div.form_document');
	    if (elements && elements.length > 0) 
	        return elements[0].scrollHeight;
	    
	    if (document.body.scrollHeight)
	        return document.body.scrollHeight;
	    return document.body.offsetHeight;
	},
	_determineZIndex: function() {
		if (!window.$j)
			return this.ZINDEX;
		var zIndex = this.ZINDEX;
		$j('.modal:visible').each(function(index, el) {
			var elZindex = $j(el).css("z-index");
			if (elZindex >= zIndex)
				zIndex = elZindex + 2;
		})
		return zIndex;
	},
	type : function() {
		return "GlideDialogWindow";
	}
});
;
/*! RESOURCE: /scripts/classes/GlideDialogForm.js */
var GlideDialogForm = Class.create(GlideDialogWindow, {
	REFRESH_ID: "refresh_frame",
	CALLBACK_TARGET_FIELD: "glide_dialog_form_target",
	DIALOG_FORM: "glide_dialog_form",
	DELETE_FROM_CONF_DLG: "delete_from_confirm_dialog_ui_page",
	ZINDEX: 1001,
	
	initialize: function(title, tableName, onCompletionCallback, readOnly) {
        this.parms = {};
        this.fieldIDSet = false;
		this.positionSet = false;
		this.dialogWidth = "";
		this.dialogHeight = "";
		this.additionalWidth = 17;
		this.additionalHeight = 17;
		this.centerOnResize = true;
				
		GlideDialogWindow.prototype.initialize.call(this, "FormDialog", readOnly);
		if (title) 
			this.setTitle(title);
			
        this.setPreference('renderer', 'RenderForm');
        this.setPreference('table', this.DIALOG_FORM);
this.setPreference('sysparm_nameofstack', 'formDialog');
        this.on("bodyrendered", this._onLoaded.bind(this));
        this.tableName = tableName;
        
        if (onCompletionCallback)
        	this.setCompletionCallback(onCompletionCallback);
	},
	
	destroy: function() {
		this.un("bodyrendered");
		
		if (this.callbackField) {
            this.callbackField.onchange = null;
    		rel(this.CALLBACK_TARGET_FIELD + "_" + this.tableName);
		}
	
	    if (this.refreshField) {
			this.refreshField.onchange = null; 
			rel(this.REFRESH_ID);
		}	
			
		GlideDialogWindow.prototype.destroy.call(this);
		this.fireEvent("dialogclosed");
	},
	
	_onLoaded: function() {
		var f = gel("dialog_form_poster");
		f.action = this.tableName + '.do';
		addHidden(f, 'sysparm_nameofstack', 'formDialog');
		addHidden(f, 'sysparm_titleless', 'true');
		addHidden(f, 'sysparm_is_dialog_form', 'true');
		var sysId = this.getPreference('sys_id');
		if (!sysId)
			sysId = '';
		var targetField = '';
		if (this.fieldIDSet)
			targetField = this.getPreference('sysparm_target_field');
			
		addHidden(f, 'sys_id', sysId);
		addHidden(f, 'sysparm_sys_id', sysId);
		addHidden(f, 'sysparm_goto_url', this.DIALOG_FORM + '.do?sysparm_pass2=true&sysparm_skipmsgs=true&sysparm_nameofstack=formDialog&sysparm_returned_sysid=$action:$sys_id:$display_value&sysparm_target_field=' + targetField);
        this.isLoaded = true; 
		for (id in this.parms)
			addHidden(f, id, this.parms[id]);
		f.submit();
	},
	
	setLoadCallback: function(func) {
		this.loadCallback = func;
	},
	setX: function(x) {
		this.x = x;
		this.positionSet = true;
	},
	
	setY: function(y) {
		this.y = y;
		this.positionSet = true;
	},
	
	onResize: function() {
		this._centerOrPosition();
	},
	
	setDialogTitle: function(title) {
	    this.setTitle(title);
	},
	
	setSysID: function(id) {
		this.setPreference('sys_id', id);
	},
	
	setFieldID: function(fid) {
		this.fieldIDSet = true;
        this.setPreference('sysparm_target_field', fid);
	},
	
	setType: function(type) {
		this.setPreference('type', type);
	},
	
	setMultiple: function(form) {
		this.setPreference('sys_id', '-2');
		this.addParm('sysparm_multiple_update', 'true');
		this.addParm('sys_action', 'sysverb_multiple_update')
		this.form = form;
	},
	
	setDialogSize: function(w, h) {
		this.setDialogWidth(w);
		this.setDialogHeight(h);
	},
	
	setDialogWidth: function(w) {
		this.dialogWidth = w;
	},
	
	setDialogHeight: function(h) {
		this.dialogHeight = h;
	},
	
	setDialogHeightMax: function(h) {
		this.dialogHeightMax = h;
	},
	
	setCenterOnResize: function(flag) {
		this.centerOnResize = flag;
	},
	
	addParm: function(parm, value) {
		this.parms[parm] = value;
	},
	
	render: function() {
		if (this.fieldIDSet == false)
			this.setRefresh();
			
		GlideDialogWindow.prototype.render.call(this);
	},
	
	setRefresh: function() {
		var r = gel(this.REFRESH_ID)
		if (r == null)
			this.initRefresh();
			
        this.setFieldID(this.REFRESH_ID);
	},
	
	setForm: function(form) {
		this.form = form
	},
	
	initRefresh: function() {
        this.refreshField = cel("input");
        this.refreshField.type = "hidden";
        this.refreshField.id = this.REFRESH_ID;
        this.refreshField.onchange = this.doRefresh.bind(this);
        document.body.appendChild(this.refreshField);
        return this.refreshField;
	},
	
	doRefresh: function() {
		var search = self.location.href;
		if (search.indexOf("sysparm_refresh") == -1) {
		    if (search.indexOf("?") == -1)
			   search += "?";
			else
			   search += "&";
			
			search += "sysparm_refresh=refresh";
		}
		self.location.href = search;
	},
	
	setCompletionCallback: function(func) {
		this.onCompletionFunc = func;
        this.callbackField = cel("input");
        this.callbackField.type = "hidden";
        this.callbackField.id = this.CALLBACK_TARGET_FIELD + "_" + this.tableName;
        this.callbackField.onchange = this._completionCallback.bind(this);
        document.body.appendChild(this.callbackField);
        this.setFieldID(this.callbackField.id);
	},
	
	frameLoaded: function() {
		this._hideLoading();		
		
		if (!this.isLoaded)
		  return;
		  
    	this._resizeDialog();
		if (this.loadCallback)
			this.loadCallback(this._getIframeDocument());
	},
	_centerOrPosition: function() {
		if (!this.positionSet) {
			this._centerOnScreen();
			return; 
		}
		
		this.moveTo(this.x, this.y);
	},
		
	_completionCallback: function() {
		var e = gel(this.CALLBACK_TARGET_FIELD + "_" + this.tableName);
		if (e) {
			var sysId;
			var action;
			var displayValue;
			var info = e.value.split(":");
			
			var action = info[0];
			if (info.length > 1)
				sysId = info[1];
			
			if (info.length > 2) {
					displayValue = info[2].unescapeHTML();
			}
					
			this.onCompletionFunc(info[0], info[1], this.tableName, displayValue);
		}
	},
	_resizeDialog: function() {
		var doc = this._getIframeDocument();
		if (!doc)
			return;
		
		var scrollable = this._getScrollable(doc.body);
		
		if (!this.dialogWidth)
			this.dialogWidth = scrollable.scrollWidth + this.additionalWidth;
		if (!this.dialogHeight)
			this.dialogHeight = scrollable.scrollHeight + this.additionalHeight;
		if (this.dialogHeightMax)
			this.dialogHeight = Math.min(this.dialogHeightMax, this.dialogHeight);
		var e = gel('dialog_frame');
		e.style.height = this.dialogHeight + "px";
	    e.style.width = this.dialogWidth + "px";
	    
		this._centerOrPosition();
	},
	
	_getScrollable: function(body) {
		var elements = $(body).select('.section_header_content_no_scroll');
		if (elements && elements.length > 0 ) {
			return elements[0];
		}
		
		return body;
	},
	_hideLoading: function() {
	    var l = gel('loadingSpan');
	    if (l)
	        l.style.display = 'none';
	},
	
	_getIframeDocument: function() {
		var e = gel('dialog_frame');
		if (e) 
			if (e.contentDocument)
				return e.contentDocument;
        return document.frames['dialog_frame'].document;
	},
	type : function() {
		return "GlideDialogForm";
	}
});
function closeDialogForm(id) {
	var w = parent.	gel('window.FormDialog');
	if (w) {
		w.gWindow.destroy();
		return;
	}
	if (!id)
		return;
	w = parent.$j('#' + id).data('gWindow');
	if (w)
		w.destroy();
}
;
/*! RESOURCE: /scripts/classes/GlidePaneForm.js */
var GlidePaneForm = Class.create(GlideDialogForm, {
WINDOW_BORDER: 2,
INSET_SPACING : 20,
	DIALOG_FORM: "glide_pane_form",
	initialize: function(title, tableName, element, onCompletionCallback) {
		this.divMode = true;
		GlideDialogForm.prototype.initialize.call(this, title, tableName, onCompletionCallback, true);
		this.setClassName("glide_pane");
		this.setHeaderClassName("glide_pane_header");
		this.setColor("white");
		this.paneSize = this._getPaneSize();
		this.setSize(this.paneSize.width, this.paneSize.height);
		this.adjustBodySize();
		this.moveTo(this.paneSize.left, this.paneSize.top);
		this._createCloseButton();
		this.getBody().style.overflow = "hidden";
	},
	onResize: function() {
		return;
	},
	
	_getPaneSize: function(e) {
		var o = new WindowSize();
		var paneSize = {};
		paneSize.height = o.height - ((this.WINDOW_BORDER + this.INSET_SPACING) * 2);
		paneSize.width = o.width - ((this.WINDOW_BORDER + this.INSET_SPACING) * 2);
		if (paneSize.height < this.INSET_SPACING) {
			paneSize.height = o.height;
			paneSize.top = 0;
		} else {
			paneSize.top = this.INSET_SPACING + document.body.scrollTop; 
		}
		
		if (paneSize.width < 0) {
			paneSize.width = o.width;
			paneSize.left = 0;
		} else {
			paneSize.left = this.INSET_SPACING + document.body.scrollLeft; 
		}
		
		paneSize.headerHeight = this.getHeader().clientHeight;
		return paneSize;
	},
	_createCloseButton: function() {
		var img = cel("img");
img.src = "images/x.gifx";
		img.alt = getMessage("Close");
		img.style.height = "12px";
		img.style.width = "13px";
		img.style.cursor = 'pointer';
		img.setAttribute("tabindex", "0");
		img.setAttribute("role", "button");
		img.setAttribute("aria-label", getMessage("Close"));
		var destroy = this.destroy.bind(this);
		Event.observe(img, "click", destroy);
		Event.observe(img, "keypress", function(event) {
			var keyCode = event.which || event.keyCode;
			if (keyCode === $j.ui.keyCode.SPACE)
				destroy();
		});
		this.addDecoration(img);
	},
	_resizeDialog: function() {
		var h = this.paneSize.height - this.paneSize.headerHeight;
		var w =  this.paneSize.width;
   		if (isMSIE) {
			h -= (this.WINDOW_BORDER * 2);
			w -= (this.WINDOW_BORDER * 2);
		}
   		var e = $('dialog_frame');
		e.style.height = h + "px";
		e.style.width = w + "px";
	},
		
	type : function() {
		return "GlidePaneForm";
	}
});
;
/*! RESOURCE: /scripts/classes/GlidePane.js */
var GlidePane = Class.create(GlidePaneForm, {
	DIALOG_FORM: "glide_pane",
	initialize: function(title, tableName, element, onCompletionCallback) {
		GlidePaneForm.prototype.initialize.call(this, title, tableName, element, onCompletionCallback);
	},
	
	_onLoaded: function() {
		var f = gel("dialog_form_poster");
		f.action = this.tableName + '.do';
		addHidden(f, 'sysparm_clear_stack', 'true');
		addHidden(f, 'sysparm_nameofstack', 'formDialog');
		addHidden(f, 'sysparm_titleless', 'true');
		addHidden(f, 'sysparm_is_dialog_form', 'true');
		var sysId = this.getPreference('sys_id');
		if (!sysId)
			sysId = '';
		addHidden(f, 'sys_id', sysId);
		addHidden(f, 'sysparm_sys_id', sysId);
        this.isLoaded = true; 
		for (id in this.parms)
			addHidden(f, id, this.parms[id]);
		f.submit();
	},
	
	
	type : function() {
		return "GlidePane";
	}
});
;
/*! RESOURCE: /scripts/classes/GwtDraggable.js */
var GwtDraggable = Class.create(GwtObservable, {
	
    initialize : function(header, itemDragged) {
    	this.header = $(header);
		if (!itemDragged)
			itemDragged = this.header;
			
		this.parentElement = getFormContentParent();
    	this.setDraggable($(itemDragged));
		this.setCursor("move");
    	this.setStart(this.genericStart.bind(this));
    	this.setDrag(this.genericDrag.bind(this));
    	this.setEnd(this.genericEnd.bind(this));
		this.scroll = false;
		this.differenceX = 0;
		this.differenceY = 0;
		this.shiftKey = false;
		this.fDrag = this.drag.bind(this);
		this.fEnd = this.end.bind(this);
		
		this.enable();
    },
    
    enable: function() {
		this.header.onmousedown = this.start.bind(this);
		this.header.ontouchstart = this.start.bind(this);
    },
    
    disable: function() {
    	this.header.onmousedown = null;
		this.header.ontouchstart = null;
    },
    start: function(e) {
        e = getRealEvent(e);
        
        var ex, ey;
		if (e.type == 'touchstart') {
			ex = e.touches[0].pageX;
			ey = e.touches[0].pageY;
		} else {
			ex = e.clientX;
			ey = e.clientY;
		}
		if (this.getScroll()) {
			ex += getScrollX();
			ey += getScrollY();
		}
		this.differenceX = ex - grabOffsetLeft(this.draggable) + grabScrollLeft(this.draggable);
		this.differenceY = ey - grabOffsetTop(this.draggable) + grabScrollTop(this.draggable);
		this.shiftKey = e.shiftKey;
		Event.observe(this.parentElement, "mousemove", this.fDrag);
		Event.observe(this.parentElement, "mouseup", this.fEnd);
		Event.observe(this.parentElement, "touchmove", this.fDrag);
		Event.observe(this.parentElement, "touchend", this.fEnd);
		
		this.active = false;
		this._stopSelection(e);
		this.draggable.dragging_active = true;
        var ret = this.onDragStart(this, ex, ey, e);
        this.fireEvent("beforedrag", this, ex, ey, e);
        return ret;
    },
    destroy: function() {
		if (this.header) {
    		this.header.onmousedown = null;
    		this.header.ontouchstart = null;
		}
		
    	this.header = null;
    	this.draggable = null;
    	this.parentElement = null;
    },
	drag : function(e) {
		if (!this.active) {
			createPageShim(this.parentElement);
			this.active = true;
		}
		
		this._stopSelection(e);
		e = getRealEvent(e);
		
		var ex, ey;
		if (e.type == 'touchmove') {
			ex = e.touches[0].pageX;
			ey = e.touches[0].pageY;
		} else {
			ex = e.clientX;
			ey = e.clientY;
		}
		if (this.getScroll()) {
			ex += getScrollX();
			ey += getScrollY();
		}
		var posX = parseInt(ex - this.differenceX);
		var posY = parseInt(ey - this.differenceY);
		var ret = this.onDrag(this, posX, posY, e);
		this.fireEvent("dragging", this, posX, posY, e);
		return ret;
	},
	end : function(e) {
		e = getRealEvent(e);
		Event.stopObserving(this.parentElement, "mousemove", this.fDrag);
		Event.stopObserving(this.parentElement, "mouseup", this.fEnd);
		
		Event.stopObserving(this.parentElement, "touchmove", this.fDrag);
		Event.stopObserving(this.parentElement, "touchend", this.fEnd);
		this.shiftKey = e.shiftKey;
		removePageShim(this.parentElement);
		this._restoreSelection();
		this.draggable.dragging_active = false;
		var ret = this.onDragEnd(this, e);
		if (!this.active)
			return;
			
		this.active = false;
		this.fireEvent("dragged", this, e);
		this.resetDraggable();
		return ret;
	},
	getDraggable: function() {
		return this.draggable;
	},
	getYDifference: function() {
		return this.differenceY;
	},
	getXDifference: function() {
		return this.differenceX;
	},
	getScroll: function() {
		return this.scroll;
	},
	setDraggable: function(e) {
		this.draggable = e;
	},
	setStart: function(f) {
        this.onDragStart = f;
	},
	setDrag: function(f) {
		this.onDrag = f;
	},
	setEnd: function(f) {
		this.onDragEnd = f;
	},
	setCursor: function(c) {
		if (this.header.style) {
    		this.header.style.cursor = c;
		}
	},
	setScroll: function(s) {
		this.scroll = s;
	},
	saveAndSetDraggable: function(e) {
		this.origDraggable = this.draggable;
		this.setDraggable(e);
	},
	
	resetDraggable: function() {
		if (this.origDraggable) {
			this.draggable = this.origDraggable;
			this.origDraggable = null;
		}
	},
	
	genericStart: function(x, y) {
		return true;
	},
	genericEnd: function() {
		return true;
	},
	genericDrag: function(me, x, y) {
		me.draggable.style.left = x;
		me.draggable.style.top = y;
		return true;
	},
	_stopSelection: function(ev) {
		stopSelection(this.parentElement);
		if (ie5) {
			ev.cancelBubble = true;
			ev.returnValue = false;
		} else {
			if (typeof ev.preventDefault != 'undefined')
				ev.preventDefault();
			
			if (typeof ev.stopPropagation != 'undefined')
				ev.stopPropagation();
		}
	},
	_restoreSelection: function() {
		if (this.parentElement)
			restoreSelection(this.parentElement);
	},
    z: function() {
    }
});
function createPageShim(parentElement) {
	if (!parentElement)
		return;
	var w = (parentElement.scrollWidth? parentElement.scrollWidth : parentElement.clientWidth);
	var h = (parentElement.scrollHeight? parentElement.scrollHeight : parentElement.clientHeight);
	var pageShim = cel("div");
	pageShim.id = pageShim.name = "pageshim";
	pageShim.style.top = 0;
	pageShim.style.left = 0;
	pageShim.style.width = w + "px";
	pageShim.style.height = h + "px";
	pageShim.style.position = "absolute";
	pageShim.style.display = "block";
	pageShim.style.zIndex = "500";
	pageShim.style.backgroundColor = "red";
	pageShim.style.opacity=0;
	pageShim.style.filter="alpha(opacity=0)";
	parentElement.appendChild(pageShim);
}
function removePageShim(parentElement) {
	var pageShim = gel("pageshim");
	if (pageShim)
		parentElement.removeChild(pageShim);
}
;
/*! RESOURCE: /scripts/classes/ui/GlideDraggable.js */
var GlideDraggable = Class.create({
	
	V_SCROLL_REFRESH_FREQ_MS: 70,
	H_SCROLL_REFRESH_FREQ_MS: 50,
	IGNORED_DRAG_ELEMENTS: ['A', 'BUTTON', 'INPUT'],
		
    initialize: function(hoverElem, dragElem) {
    	this.setHoverElem(hoverElem);	 	
		if (this.hoverElem == null)
			return;
		
		this.setDragElm(dragElem || this.hoverElem);
		this.boundElem = document.body;
		this.setDragFunction(this.genericDrag);
		this.onScroll = {};
		this.allowedClasses = [];
	},
	
	destroy: function() {
		this.reset();
		
		this.hoverElem = null;
		this.dragElem = null;
		this.boundElem = null;
		
		this.onStart = null;
		this.onDrag = null;
		this.onScroll = null;
		this.onEnd = null;
	},
	
	reset: function() {
		clearInterval(this.leftScrollId);
		clearInterval(this.rightScrollId);
		clearInterval(this.topScrollId);
		clearInterval(this.bottomScrollId);
		this.leftScrollId = null;
		this.rightScrollId = null;
		this.topScrollId = null;
		this.bottomScrollId = null;
		
		delete this._origDragElmCoords;
		delete this._origPageCoords;
		delete this._shift;
		delete this._pageCoords;
		delete this._dragElmCoords;
	},
	
	genericDrag: function(e, dragElem, pageCoords, shift, dragCoords) {
		dragElem.style.left = dragCoords.x + 'px';
		dragElem.style.top = dragCoords.y + 'px';
	},
	
	
	setHoverCursor: function(c) {
		this.hoverCursor = c;
		this.hoverElem.style.cursor = c;
	},
	
	setHoverElem: function(obj) {
		this.hoverElem = $(obj);
		if (this.hoverElem) {
this.hoverElem.style.MozUserSelect = '-moz-none';
this.hoverElem.onselectstart = function() { return false; };
		}
	},
	
	getHoverElem: function() {
		return this.hoverElem;
	},
	
	setDragCursor: function(c) {
		this.dragCursor = c;
		if (this.pageShim)
			this.pageShim.style.cursor = this.dragCursor;
	},
	
	setDragElm: function(obj) {
		this.dragElem = $(obj);
this.dragElem.style.MozUserSelect = '-moz-none';
	},
	
	setStartFunction: function(f) {
		if (this._fDraggableStart)
			document.stopObserving('mousedown', this._fDraggableStart);
		
		this._fDraggableStart = this._draggableStart.bind(this);
		this.hoverElem.observe('mousedown', this._fDraggableStart);
		this.onStart = f;
	},
	
	setDragFunction: function(f) {
		this.onDrag = f;	
	},
	
	setEndFunction: function(f) {
		this.onEnd = f;
	},
	
	setAutoScrollLeft: function(f, x) {
		this.onScroll.LEFT = f;
this.onScroll.LEFTX = x;
	},
	
	setAutoScrollRight: function(f, x) {
		this.onScroll.RIGHT = f;
this.onScroll.RIGHTX = x;
	},
	
	setAutoScrollTop: function(f, y) {
		this.onScroll.TOP = f;
this.onScroll.TOPX = y;
	},
	
	setAutoScrollBottom: function(f, y) {
		this.onScroll.BOTTOM = f;
this.onScroll.BOTTOMX = y;
	},
	
	addAllowedTargetClass: function(className) {
		this.allowedClasses.push(className);
	}, 
	
	start: function(event) {
		this._getCoords(event);
		
		if (window.GlideContextMenu && typeof GlideContextMenu.closeAllMenus == 'function' && event.target && !$(event.target).up('.cm_menuwrapper')) {
			GlideContextMenu.closeAllMenus();
		}
			
		this._fDraggableMove = this._draggableMove.bind(this);
		this._fdraggableEnd = this._draggableEnd.bind(this);
		
		document.observe('mousemove', this._fDraggableMove);
		document.observe('mouseup', this._fdraggableEnd);
		if (this.dragCursor)
			this.dragElem.style.cursor = this.dragCursor;
		
		document.body.focus();
		document.onselectstart = function () { return false; };
	},
	
	
	_createPageShim: function() {
		this.pageShim = document.createElement('div');
		this.boundElem.appendChild(this.pageShim);
		this.pageShim.style.top = 0;
		this.pageShim.style.left = 0;
		this.pageShim.style.width = '100%';
		this.pageShim.style.height = '100%';
		this.pageShim.style.position = 'absolute';
		this.pageShim.style.display = 'block';
		this.pageShim.style.zIndex = '9999';
		this.pageShim.style.backgroundColor = Prototype.Browser.IE ? '#ccc' : 'transparent';
		this.pageShim.style.opacity = '0';
		this.pageShim.style.filter = 'alpha(opacity=0)';
		if (this.dragCursor) {
			this.pageShim.style.cursor = this.dragCursor;
			this.dragElem.style.cursor = this.dragCursor;
		}
	},
	_removePageShim: function() {
		if (this.pageShim)
			this.pageShim.parentNode.removeChild(this.pageShim);
		this.pageShim = null;
	},
	
	_getCoords: function(event) {
		event = event || window.event;
		if (!event.pageX) {
			event.pageX = event.clientX;
			event.pageY = event.clientY;	
		}
		
		if (!this._origPageCoords)
			this._origPageCoords = {x:event.pageX, y:event.pageY};
		if (!this._origDragElmCoords) {
			var cumulativeOffset = this.dragElem.cumulativeOffset();
			if (this.dragElem.style.right) {
				this.dragElem.style.left = (this.dragElem.up().getWidth() - this.dragElem.getWidth() - parseInt(this.dragElem.style.right, 10)) + 'px';
				this.dragElem.setStyle({right: ''});
			}
			this._origDragElmCoords = {
				x: parseInt(this.dragElem.style.left, 10) || cumulativeOffset.left,
				y: parseInt(this.dragElem.style.top, 10) || cumulativeOffset.top
			};
		}
		this._shift = !this._pageCoords ? {x:0,y:0} : {x:(event.pageX - this._pageCoords.x), y:(event.pageY - this._pageCoords.y)};
		this._pageCoords = {x:event.pageX, y:event.pageY};
		this._dragElmCoords = {x:this._origDragElmCoords.x + (this._pageCoords.x - this._origPageCoords.x),
						       y:this._origDragElmCoords.y + (this._pageCoords.y - this._origPageCoords.y)};
	},
	
	_draggableStart: function(event) {
		var node = event.target;
		while(node && !node.classList.contains('glide_box')){
			if(this.IGNORED_DRAG_ELEMENTS.indexOf(node.nodeName) !== -1) return;
			node = node.parentElement;
		}
		var l = this.allowedClasses.length;
		if (l > 0) {
			var boolCanStart = false;
			for (var i = 0; i < l; i++) {
				if (event.target.className == this.allowedClasses[i]) {
					boolCanStart = true;
					break;
				}
			}
			if (!boolCanStart)
				return true;
		}
		this.start(event);
		return this.onStart(event, this.dragElem, this._pageCoords, this._shift, this._dragElmCoords, this); 
	},
	
	_draggableMove: function(event) {
		this._getCoords(event);
		if (!this.pageShim) {
			this._createPageShim();
			
			if (Prototype.Browser.IE)
				this.dragElem.up().onselectstart = function() { return false; };
		}
			
		if (this._shift.x == 0 && this._shift.y == 0)
			return;
		if (this.onScroll.LEFT && this._pageCoords.x < this.onScroll.LEFTX) {
			if (!this.leftScrollId)
				this.leftScrollId = setInterval(this._autoXScrollerInterceptor.bind(this, this.onScroll.LEFT, this.onScroll.LEFTX), this.H_SCROLL_REFRESH_FREQ_MS);
			if (this._shift.y == 0)
				return;
		} else if (this.onScroll.LEFT && this.leftScrollId && this._pageCoords.x >= this.onScroll.LEFTX) {
			clearInterval(this.leftScrollId);
			this.leftScrollId = null;
		}
		
		if (this.onScroll.RIGHT && this._pageCoords.x > this.onScroll.RIGHTX) {
			if (!this.rightScrollId)
				this.rightScrollId = setInterval(this._autoXScrollerInterceptor.bind(this, this.onScroll.RIGHT, this.onScroll.RIGHTX), this.H_SCROLL_REFRESH_FREQ_MS);
			if (this._shift.y == 0)
				return;
		} else if (this.onScroll.RIGHT && this.rightScrollId && this._pageCoords.x <= this.onScroll.RIGHTX) {
			clearInterval(this.rightScrollId);
			this.rightScrollId = null;
		}
		if (this.onScroll.TOP && this._pageCoords.y < this.onScroll.TOPX) {
			if (!this.topScrollId)
				this.topScrollId = setInterval(this._autoYScrollerInterceptor.bind(this, this.onScroll.TOP, this.onScroll.TOPX), this.V_SCROLL_REFRESH_FREQ_MS);
			if (this._shift.x == 0)
				return;
		} else if (this.onScroll.TOP && this.topScrollId && this._pageCoords.y >= this.onScroll.TOPX) {
			clearInterval(this.topScrollId);
			this.topScrollId = null;
		}
		if (this.onScroll.BOTTOM && this._pageCoords.y > this.onScroll.BOTTOMX) {
			if (!this.bottomScrollId)
				this.bottomScrollId = setInterval(this._autoYScrollerInterceptor.bind(this, this.onScroll.BOTTOM, this.onScroll.BOTTOMX), this.V_SCROLL_REFRESH_FREQ_MS);
			if (this._shift.x == 0)
				return;
		} else if (this.onScroll.BOTTOM && this.bottomScrollId && this._pageCoords.y <= this.onScroll.BOTTOMX) {
			clearInterval(this.bottomScrollId);
			this.bottomScrollId = null;
		}
		
		this.onDrag(event, this.dragElem, this._pageCoords, this._shift, this._dragElmCoords, this);
return false;
	},
	
	_autoXScrollerInterceptor: function(f, boundaryX) {
		f(this.dragElem, this._pageCoords.x - boundaryX, this._pageCoords);
	},
	
	_autoYScrollerInterceptor: function(f, boundaryY) {
		f(this.dragElem, this._pageCoords.y - boundaryY, this._pageCoords);
	},
	
	_draggableEnd: function(event) {
		this._removePageShim();
		
		document.onselectstart = null;
		if (Prototype.Browser.IE)
			this.dragElem.up().onselectstart = null;
		
		if (this.hoverCursor)
			this.hoverElem.style.cursor = this.hoverCursor;
		
		document.stopObserving('mousemove', this._fDraggableMove);
		document.stopObserving('mouseup', this._fdraggableEnd);
		event.stopPropagation();
		
		this._getCoords(event);
		var boolReturn = this.onEnd ? this.onEnd(event, this.dragElem, this._pageCoords, this._shift, this._dragElmCoords, this) : true;
		
		this.reset();
		return boolReturn;
	},
	
	toString: function() { return 'GlideDraggable'; }
});
;
/*! RESOURCE: /scripts/classes/GwtDraggableSnap.js */
var debugId = 0;
var GwtDraggableSnap = Class.create(GwtDraggable, {
	
    initialize : function(header, itemDragged) {
    	GwtDraggable.prototype.initialize.call(this, header, itemDragged);
		this.snapTable = null;
		this.dropZoneList = [];
		this.initDropZones = null;
		this.boundDirection = null;
		this.boundElement = null;
    	this.setStart(this.snapStart.bind(this));
    	this.setDrag(this.snapDrag.bind(this));
    	this.setEnd(this.snapEnd.bind(this));
    	this.setCreateFloat(this._createFloat.bind(this));
    	this.setFloatClassName("drag_float_visible");
    },
    destroy: function() {
    	this.snapTable = null;
    	this.dropZoneList = null;
    	this.onInitDropZones = null;
    	this.boundElement = null;
    	GwtDraggable.prototype.destroy.call(this);
    },
	setCreateFloat: function(f) {
		this.onCreateFloat = f;
		if (!f)
			this.onCreateFloat = this._createFloat.bind(this);
	},
	
	setFloatClassName: function(n) {
		this.floatClassName = n;
	},
	setSnapTable: function(table) {
		this.snapTable = table;
		this.dropZoneList = [];
	},
	
	setInitDropZones: function(f) {
		this.onInitDropZones = f;
		this.snapTable = null;
		this.dropZoneList = [];
	},
	setBoundLeftRight: function() {
		this.boundDirection = "l-r";
	},
	
	setBoundUpDown: function() {
		this.boundDirection = "u-d";
	},
	
	setBoundElement: function(element) {
		this.boundElement = element;
	},
	
	addDropZone: function(element) {
		this.dropZoneList.push(element);	
	},
	
	removeDropZone: function(element) {
		for (var i = 0; i < this.dropZoneList.length; i++) {
			if (element.id == this.dropZoneList[i].id) {
				this.dropZoneList.remove(i);
				break;
			}
		}
	},
	
	clearDropZones: function() {
		this.dropZoneList = [];
	},
	
	
	snapStart: function(dragObj, x, y, e) {
		x -= this.differenceX;
		y -= this.differenceY;
		
		if (dragObj.draggable.style.position == "absolute")
			this.snapMode = "absolute";
		else
			this.snapMode = "relative";
		this.currentDropZone = null;
		this.snapElement = null;
		this.dragFloat = null;
		this._initDropZones(dragObj, x, y);
		
		this._initDragBounds(x, y);
		return true;
	},
	snapDrag: function(dragObj, x, y, e) {
		var pos = this._boundDragging(x, y);	
		x = pos[0];
		y = pos[1];
		
		if (!this.dragFloat)
			this.dragFloat = this.onCreateFloat(dragObj, x, y);
		if (this.dragFloat) {
			this.dragFloat.style.left = x;
			this.dragFloat.style.top = y;
		}
		this._findDropZoneAndMove(dragObj, x + this.differenceX, y + this.differenceY);
		return true;		
	},
	snapEnd: function(dragObj, x, y, e) {
		this.dropZones = [];
		if (this.dragFloat)
			this.floatIntv = this._floatBackAndDelete(this, 150, 15);
			
		return true;
	},
	
	hasSnapMoved: function() {
		return this.originalDropZone != this.currentDropZone;
	},
	_createFloat: function(dragObj, x, y) {
		var dfloat = cel("div");
		dfloat.id = "floater";
		dfloat.className = this.floatClassName;		
		dfloat.style.position = "absolute";
		dfloat.style.width = dragObj.draggable.offsetWidth - (!isMSIE ? 2 : 0);
		dfloat.style.height = dragObj.draggable.offsetHeight - (!isMSIE ? 2 : 0);
		
		document.body.appendChild(dfloat);
		return dfloat;
	},
	
	_boundDragging: function(x, y) {
		if (this.boundDirection == "l-r")
			y = this.origY;
		else if (this.boundDirection == "u-d")
			x = this.origX;
		if (this.boundElement) {
			if (y < this.boundTop)
				y = this.boundTop;
				
			if (y > this.boundBottom)
				y = this.boundBottom;
				
			if (x < this.boundLeft)
				x = this.boundLeft;
				
			if (x > this.boundRight)
				x = this.boundRight;
		}
		return [x, y];
	},
	_findDropZoneAndMove: function(dragObj, x, y) {
		if (this.snapMode == "absolute") {
			if (this.currentDropZone && this._overlaps(this.currentDropZone, x, y))
				return false;
				
			var dz = this._findDropZoneAbsolute(dragObj, x, y);
			if (dz && dz != this.currentDropZone) {
				this.currentDropZone = dz;
				this.snapElement = dz.element;
				
				if (!this.fireEvent("beforedrop", dragObj, dz.element, dz.element, x, y))
					return false;
				dragObj.draggable.style.left = this.currentDropZone.left;
				dragObj.draggable.style.top = this.currentDropZone.top;
				return true;
			}
		} else {
			var dz = this._findDropZoneRelative(dragObj, x, y);
			if (dz && dragObj.draggable.nextSibling != dz.element) {
				this.currentDropZone = dz;
				this.snapElement = dz.element.parentNode;
				if (!this.fireEvent("beforedrop", dragObj, dz.element.parentNode, dz.element, x, y))
					return false;
				
				dz.element.parentNode.insertBefore(dragObj.draggable, dz.element);
				dragObj.draggable.parentNode.style.display = "none";
				dragObj.draggable.parentNode.style.display = "";
				return true;
			}
		}
		return false;
	},
	
	_findDropZoneAbsolute: function(dragObj, x, y) {
		var dz = null;
		for (var i = 0; i < this.dropZones.length; i++) {
			if (this._overlaps(this.dropZones[i], x, y)) {
				dz = this.dropZones[i];
				break;
			}
		}
		return dz;
	},
	_findDropZoneRelative: function(dragObj, x, y) {
		var draggable = dragObj.getDraggable();
		var cCell = null;
		var aLargeNumber = 100000000;
		for (var z = 0; z < this.dropZones.length; z++) {
			var dz = this.dropZones[z];
				
			if (draggable == dz) 
				continue;
			
			var ai = Math.sqrt(Math.pow(x - dz.left, 2) + Math.pow(y - dz.top, 2));
			if (isNaN(ai))
				continue;
			if (ai < aLargeNumber){
				aLargeNumber = ai;
				cCell = dz;
			}
		}
		return cCell;
	},
	_initDragBounds: function(x, y) {
		this.origX = x;
		this.origY = y;
		if (this.boundElement) {
			this.boundLeft = grabOffsetLeft(this.boundElement) - grabScrollLeft(this.boundElement);
			this.boundTop = grabOffsetTop(this.boundElement) - grabScrollTop(this.boundElement);
			this.boundRight = this.boundLeft + this.boundElement.offsetWidth - this.draggable.offsetWidth;
			this.boundBottom = this.boundTop + this.boundElement.offsetHeight - this.draggable.offsetHeight;
			
			this.boundLeft -= 4;
			this.boundTop -= 4;
			this.boundRight += 4;
			this.boundBottom += 4;
		}
	},
	
	_initDropZones: function(dragObj, x, y) {
		this.dropZones = [];
		var zones = [];
		if (this.onInitDropZones) {
			zones = this.onInitDropZones(this, x, y);
		} else if (this.snapTable) {
			zones = this._initDropZonesFromTable(this.snapTable);
		} else {
			for (var i = 0; i < this.dropZoneList.length; i++)
				zones.push(this.dropZoneList[i]);
		}
			
		for (var i = 0; i < zones.length; i++) {
			var zone = zones[i];
			if (this.snapMode == "absolute") {
				this._addDropZone(zone);
			} else {
				this._initDropZonesRelative(dragObj, zone);
			}
		}
		
		if (this.snapMode == "absolute") {
			this.originalDropZone = this._findDropZoneAbsolute(dragObj, x, y);
		} else {
			var nextSibling = dragObj.draggable.nextSibling;
			for (var i = 0; i < this.dropZones.length; i++) {
				if (this.dropZones[i].element == nextSibling) {
					this.originalDropZone = this.dropZones[i];
					break;
				}
			}
		}
	},
	_initDropZonesFromTable: function(t) {
		var zones = [];
		var rowCnt = t.rows.length;
		var colCnt = t.rows[0].cells.length;
		for (var row = 0; row < rowCnt; row++) {
			for (var col = 0; col < colCnt; col++) {
				var cell = t.rows[row].cells[col];
				if (getAttributeValue(cell, "dropzone") == "true" || cell.dropzone == "true")
					zones.push(cell);
			}
		}
		return zones;
	},
	
	_initDropZonesRelative: function(dragObj, zone) {	
		var myHeight = 0;
		var lastDivExists = false;
		for (var i = 0; i < zone.childNodes.length; i++) {
			var node = zone.childNodes[i];
			if (getAttributeValue(node, "dragpart") 
					|| node.dragpart == "true"
					|| getAttributeValue(node, "dropzone")
					|| node.dropzone == "true") {
				if ((node.id == "lastdiv") || (node.name == "lastdiv"))
					lastDivExists = true;
					
				if (node == dragObj.draggable) {
					myHeight = dragObj.draggable.offsetHeight;
				}
				
				if (this._isInScrollRegion(node, zone)) {
					this._addDropZone(node, myHeight);
				}
			}
		}
		
		if (!lastDivExists) {
			var lastDiv = cel("DIV");
			lastDiv.name = "lastdiv";
			lastDiv.dropzone = "true";
			lastDiv.style.width = "100%";
			lastDiv.style.height = "0";
			zone.appendChild(lastDiv);							
			this._addDropZone(lastDiv, myHeight);
		}
	},
	_addDropZone: function(element, topOffset) {
		if (!topOffset)
			topOffset = 0;
			
		var dropZone = {};
		dropZone.element = element;
		dropZone.left = grabOffsetLeft(element) - grabScrollLeft(element);
		dropZone.top = grabOffsetTop(element) - topOffset - grabScrollTop(element);
		dropZone.right = dropZone.left + element.offsetWidth;
		dropZone.bottom = dropZone.top + element.offsetHeight;
		this.dropZones.push(dropZone);
	},
	
	_isInScrollRegion: function(element, region) {
		var left = element.offsetLeft;
		var top = element.offsetTop;
		if (left < 0)
			left = 0;
			
		if (top < 0)
			top = 0;
			
		return (left >= region.scrollLeft) 
			&& (top  >= region.scrollTop)
			&& (left <= (region.scrollLeft + region.offsetWidth))
			&& (top  <= (region.scrollTop + region.offsetHeight));
	},
	
	_overlaps: function(dz, x, y) {
		return ((dz.left < x) && (x < dz.right) && (dz.top < y) && (y < dz.bottom));
	},
	_floatBackAndDelete: function(gd, tTime, tMoves) {
		var baseObj = gd.getDraggable();
		var movenObj = gd.dragFloat;
		var currentX = parseInt(movenObj.style.left);
		var currentY = parseInt(movenObj.style.top);
var backX = (currentX - grabOffsetLeft(baseObj) - grabScrollLeft(baseObj)) / tMoves;
var backY = (currentY - grabOffsetTop(baseObj) - grabScrollTop(baseObj)) / tMoves;
		return setInterval(
			function(){
				if (tMoves < 1) {
					clearInterval(gd.floatIntv);
					gd.dragFloat.parentNode.removeChild(gd.dragFloat);
					gd.dragFloat = null;
					return;
				}
				tMoves--;
				currentX -= backX;
				currentY -= backY;
				movenObj.style.left = parseInt(currentX) + "px";
				movenObj.style.top = parseInt(currentY) + "px"
}, tTime / tMoves)
	},
	
    z: null
});
;
/*! RESOURCE: /scripts/classes/GwtExportOnCancelDialog.js */
var GwtExportOnCancelDialog = Class.create(GlideDialogWindow, {
	initialize: function (tableName, query, view, query_no_domain) {
		GlideDialogWindow.prototype.initialize.call(this, 'export_on_cancel_dialog');
		this.exportConfigs = [
			{
				"value": "excel",
				"sysparm_export": "unload_excel_xlsx",
"processor_name": "/sys_confirm_excel.do"
			},
			{
				"value" : "csv",
				"sysparm_export": "unload_csv",
"processor_name": "/sys_confirm_csv.do"
			},
			{
				"value" : "json",
				"sysparm_export": "unload_json",
"processor_name": "/sys_confirm_json.do"
			},
			{
				"value" : "pdf",
				"secondary_choice" : {
					"name" : "orientation",
					"values" : [
						{
							"value" : "landscape",
							"sysparm_export": "unload_pdflandscape",
"processor_name": "/sys_confirm_pdflandscape.do"
						},
						{
							"value" : "portrait",
							"sysparm_export": "unload_pdf",
"processor_name": "/sys_confirm_pdf.do"
						}
					]
				}
			}
		];
		var keys = ["Please Confirm", "Please specify an address", "Export will be emailed to"];
		this.msgs = getMessages(keys);
		this.tableName = tableName;
		this.query = query;
		this.view = view;
		this.query_no_domain = query_no_domain;
		this.setPreference('table', 'export_on_cancel');
		this.setPreference('sysparm_query', this.query);
		this.setPreference('sysparm_target', this.tableName);
		this.setPreference('sys_action', 'email');
		this.setPreference('sysparm_view', this.view);
		this.setPreference('sysparm_query_no_domain', this.query_no_domain);
		this.setTitle(this.msgs["Please Confirm"]);
		g_export_on_cancel_dialog = this;
	},
	changeFileType: function() {
		var fileTypeOption = gel('file_type');
		for (var i = 0; i < this.exportConfigs.length; ++i) {
			var config = this.exportConfigs[i];
			if (fileTypeOption.value != config.value)
				continue;
			if (!config.secondary_choice) {
				gel('row_orientation').style.display = 'none';
				return;
			}
			var secondaryOption = gel('row_' + config.secondary_choice.name);
			secondaryOption.style.display = null;
		}
	},
	execute : function() {
		this.render();
	},
	close : function() {
		g_export_on_cancel_dialog = null;
		this.destroy();		
	},
	doExport : function() {
		var addressInput = gel('display_email_address');
		if (!addressInput)
			return;
		if (addressInput.value  == '') {
			alert(this.msgs["Please specify an address"]);
			return;
		}
		var emailAddress = gel('email_address');
		emailAddress.value = addressInput.value;
		var exportConfig = this._searchExportConfig();
		if (!exportConfig)
			return;
		var exportType = gel('sysparm_export');
		exportType.value = exportConfig.sysparm_export;
		var form = gel('sys_confirm.do');
		form.setAttribute('action', exportConfig.processor_name);
		var serial = Form.serialize(form);
		var args = this.msgs["Export will be emailed to"] + ' ' + emailAddress.value;
		serverRequestPost(exportConfig.processor_name,  serial, this.ack, args);
		this.close();
	},
	ack : function(request, message) {
		alert(message);
	},
	_searchExportConfig: function() {
		var fileTypeOption = gel('file_type');
		for (var i = 0; i < this.exportConfigs.length; ++i) {
			var config = this.exportConfigs[i];
			if (fileTypeOption.value != config.value)
				continue;
			if (!config.secondary_choice)
				return config;
			var secondaryOption = gel(config.secondary_choice.name);
			for (var j = 0 ; j < config.secondary_choice.values.length; ++j) {
				var secondaryConfig = config.secondary_choice.values[j];
				if (secondaryOption.value == secondaryConfig.value)
					return secondaryConfig;
			}
			return null;
		}
		return null;
	}
});
;
/*! RESOURCE: /scripts/classes/AutoComplete.js */
var AutoComplete = Class.create({ 
   
    initialize: function() {
    	this.processor = "AutoComplete";
    	this.table = null;
    	this.column = null;
    	this.query = null;
    	this.typedChars = "";
    	this.input = null;
    	this.select = null;
		this.timeout = null;
		this.keyDelay = 500;
    },
    
    setTable: function(name) {
    	this.table = name; 
    },      
    
    setColumn: function(name) {
    	this.column = name; 
    },  
        
    setQuery: function(query) {
    	this.query = query;
    },
    
    setSelect: function(o) {
this.select = gel(o);
    },    
    
    setInput: function(o) {
    	this.input = gel(o); 
    },
    
    onKeyUp: function(event) {
		if (this.timeout)
			clearTimeout(this.timeout);
			
		this.timeout = setTimeout(this._onKeyUp.bind(this), this.keyDelay);
	},
	
	_onKeyUp: function() {
		this.timeout = null;
    	this.typedChars = this.input.value;
    	this.ajaxRequest();
    },
    
    ajaxRequest: function(urlParameters) {
    	var ajax = new GlideAjax(this.processor);
    	ajax.addParam("sysparm_chars", this.typedChars);
    	ajax.addParam("sysparm_name", this.table + "." + this.column);
    	if (this.query)
    		ajax.addParam("sysparm_query", this.query);
        ajax.getXML(this.ajaxResponse.bind(this));    	
    },
    ajaxResponse: function(request) {
      if (!request.responseXML.documentElement)
        return; 
        
      this.populateSelect(request.responseXML.documentElement);
    },
    
    populateSelect: function(xml) {
      this.select.options.length = 0;
	  var items = xml.getElementsByTagName("item");
	  for (var i = 0; i < items.length; i++ ) {
		var item = items[i];
		var o = new Option(item.getAttribute('label'), item.getAttribute('sys_id'));
		this.select.options[this.select.options.length] = o;
	  }
    }
});
;
/*! RESOURCE: /scripts/classes/SlushBucket.js */
var SlushBucket = Class.create({
	initialize: function(id) {
		this.id = id;
		this.leftSelectJustify = "";
		this.rightSelectJustify = "";
		this.rightValues = "";
		this.evenOddColoring = false;
		this.isTemplating = false;
		this.ignoreDuplicates = false;
	},
    getLeftSelectJustify: function() {
        return this.leftSelectJustify;
    },
    setLeftSelectJustify: function(justify) {
        this.leftSelectJustify = justify;
        this.getLeftSelect().style.textAlign = justify;
    },
    
    getRightSelectJustify: function() {
        return this.rightSelectJustify;
    },
    
    setRightSelectJustify: function(justify) {
        this.rightSelectJustify = justify;
        this.getRightSelect().style.textAlign = justify;
    },
    
    getEvenOddColoring: function() {
        return this.evenOddColoring;
    },
    setEvenOddColoring: function(evenOdd) {
        this.evenOddColoring = evenOdd;
    },
    
	addLeftChoice: function(value, text) {
	   var opt = cel("option");
	   opt.value = value;
	   opt.text = text;
	   this.getLeftSelect().options.add(opt);
    },
    
    addRightChoice: function(value, text) {
 	   var opt = cel("option");
 	   opt.value = value;
 	   opt.text = text;
 	   this.getRightSelect().options.add(opt);
     },
    
    clear: function() {
    	this.clearSelect(this.getLeftSelect());
    	this.clearSelect(this.getRightSelect());
    },
    
    clearSelect: function(selectBox) {
    	selectBox.options.length = 0;
    },
    
    getValues: function(selectBox) {
		var values = new Array();
	    var options = selectBox.options;
	    for (var i = 0; i < options.length; i++) {
	    	values[i] = options[i].value;
	    }
		return values;    	
    },
    
    saveRightValues: function(values) {
       this.rightValues = values;
    },
    
    getRightValues: function() {
    	return this.rightValues;
    },
    
	getSelected : function(selectBox) {
		var selectedIds = [];
		var sourceOptions = selectBox.options;
		for (var i = 0; i < sourceOptions.length; i++) {
			option = sourceOptions[i];
			if (!option.selected) 
				continue;
			
			selectedIds.push(i);
		}
		return selectedIds;
	},
    
    getRightSelect: function() {
    	return gel(this.id + "_right");
    },    
    
    getLeftSelect: function() {
    	return gel(this.id + "_left");
    },
	onKeyMoveLeftToRight: function(evt) {
		var desiredKeyCode = this._isRTL() ? 37 : 39;
		if (evt.keyCode != desiredKeyCode)
			return;
		this.moveOptions(this.getLeftSelect(), this.getRightSelect());
	},
	onKeyMoveRightToLeft: function(evt) {
		var desiredKeyCode = this._isRTL() ? 39 : 37;
		if (evt.keyCode != desiredKeyCode)
			return;
		this.moveOptions(this.getRightSelect(), this.getLeftSelect());
	},
	onKeyUpMoveUpDown: function(evt, select) {
		for (var i = 0; i < select.options.length; i++) {
			select.options[i].setAttribute('aria-selected', select.options[i].selected);
		}
	},
	onKeyMoveUpDown: function(evt, select) {
		if (evt.keyCode !== 38 && evt.keyCode !== 40)
			return;
		var selectedOption;
		var options = select.options;
		for (var i = 0; i < options.length; i++) {
			var option = options[i];
			if (!option.selected || (typeof selectedOption != 'undefined' && option.value === selectedOption.value))
				continue;
			option.selected = false;
			option.setAttribute("aria-selected", false);
			if (option.value !== lastFocusedOption)
				continue;
			if (evt.keyCode === 38)
				selectedOption = options[i - 1];
			if (evt.keyCode === 40)
				selectedOption = options[i + 1];
			selectedOption.selected = true;
			selectedOption.setAttribute("aria-selected", true);
			lastFocusedOption = selectedOption.value;
		}
	},
	onOptionSelected: function(evt, select) {
		lastFocusedOption = evt.target.value;
		var sourceOptions = select.options;
		for (var i = 0; i < select.length; i++) {
			var option = sourceOptions[i];
			option.setAttribute("aria-selected", option.selected);
		}
	},
    
    moveLeftToRight: function() {
    	this.moveOptions(this.getLeftSelect(), this.getRightSelect());
    },
	keydownMoveLeftToRight: function(evt) {
		if (evt.keyCode === 13 || evt.keyCode === 32) {
			evt.preventDefault();
			this.moveLeftToRight();
		}
	},
    
    moveRightToLeft: function() {
		this.moveOptions(this.getRightSelect(), this.getLeftSelect());    	
    },
	keydownMoveRightToLeft: function(evt) {
		if (evt.keyCode === 13 || evt.keyCode === 32) {
			evt.preventDefault();
			this.moveRightToLeft();
		}
	},
	
    copyLeftToRight: function() {
    	this.moveOptions(this.getLeftSelect(), this.getRightSelect(), true);
    },
	_isRTL: function() {
		return document.documentElement.getAttribute('dir') == 'rtl';
	},
	moveOptions : function(sourceSelect, targetSelect, copyFlag) {
		var selectedIds = this.getSelected(sourceSelect);
		if (selectedIds.length < 1)
			return;
		var sourceOptions = sourceSelect.options;
		var targetOptions = targetSelect.options;
		targetSelect.selectedIndex = -1;
		for (var i = 0; i < selectedIds.length; i++) {
			var soption = sourceOptions[selectedIds[i]];
			var label = soption.text;
			if ((this.ignoreDuplicates) && (this._isDuplicate(targetOptions, soption.value)))
				continue;
			option = new Option(label, sourceOptions[selectedIds[i]].value);
			option.cl = label;
			option.className = sourceOptions[selectedIds[i]].className;
			targetOptions[targetOptions.length] = option;
			targetOptions[targetOptions.length - 1].selected = true;
		}
		if (!copyFlag) {
		   for (var i = selectedIds.length - 1; i > -1; i--)
			  sourceSelect.remove(selectedIds[i]);
		}
		this.evenOddColorize();
		if (targetSelect["onchange"])
			targetSelect.onchange();
		if (sourceSelect["onchange"])
			sourceSelect.onchange();
			sourceSelect.disabled = true;
			sourceSelect.disabled = false;
			if (selectedIds.length > 0 && !this.isTemplating){
				targetSelect.focus();
			}
		var rightElem = [gel(this.id + "_right").options];
		if(rightElem[0].length > 0){
			var e = gel(this.id);
			var newVal = new Array;
			var rightElementOptions = rightElem[0];
			for(var i = 0 ; i < rightElementOptions.length; i++) 
			    newVal[i] = rightElementOptions[i].value;
			var newVal = newVal.join(',');
			var oldValue = e.value;
			if (oldValue != newVal) {
				e.value = newVal;
				multiModified(e);
			}
		} else{
			gel(this.id).value = "";
		}
	},
	moveUp : function() {
		sourceSelect = this.getRightSelect();
		var selectedIds = this.getSelected(sourceSelect);
		var options = sourceSelect.options;
		for (var i = 0; i < selectedIds.length; i++) {
			var selId = selectedIds[i];
			if (selId == 0)
				break;
			
if (window['privateMoveUp'])
				privateMoveUp(options, selId);
			else
				this.swap(options[selId], options[selId - 1]);
			options[selId].selected = false;
			options[selId - 1].selected = true;
		}
		this.evenOddColorize();
		sourceSelect.focus();
		if (sourceSelect["onLocalMoveUp"])
			sourceSelect.onLocalMoveUp();
		function resetFields(){
			sourceSelect.removeAttribute("multiple");
			setTimeout(function(){sourceSelect.setAttribute("multiple", "multiple"); $(sourceSelect).stopObserving('click', resetFields);});
		}
		
		if (isMSIE8 || isMSIE9 || isMSIE10 || isMSIE11)
			$(sourceSelect).observe('click', resetFields);
	},
	moveDown : function() {
		var sourceSelect = this.getRightSelect();
		var selectedIds = this.getSelected(sourceSelect);
		selectedIds.reverse();
		var options = sourceSelect.options;
		for (var i = 0; i < selectedIds.length; i++) {
			var selId = selectedIds[i];
			if (selId + 1 == options.length)
				break; 
			
if (window['privateMoveDown'])
				privateMoveDown(options, selId);
			else
				this.swap(options[selId], options[selId + 1]);
			options[selId].selected = false;
			options[selId + 1].selected = true;
		}
		this.evenOddColorize();
		sourceSelect.focus();
		if (sourceSelect["onLocalMoveDown"])
			sourceSelect.onLocalMoveDown();
		function resetFields(){
			sourceSelect.removeAttribute("multiple");
			setTimeout(function(){sourceSelect.setAttribute("multiple", "multiple"); $(sourceSelect).stopObserving('click', resetFields);});
		}
		
		if (isMSIE8 || isMSIE9 || isMSIE10 || isMSIE11)
			$(sourceSelect).observe('click', resetFields);
		
	},
	swap: function(option1, option2) {
		if (!option2)
			return; 
		
		var t = $j(option1).clone();
		t = t[0];
t.text = option1.text;
		option1.value = option2.value;
		option1.text = option2.text;
		option2.value = t.value;
		option2.text = t.text;
	},
	evenOddColorize: function() {
		if (!this.evenOddColoring)
			return;
		rightSelect = this.getRightSelect();
		if (rightSelect.length < 1)
			return;
		var options = rightSelect.options;
		for (var i = 0; i < rightSelect.length; i++) {
			if ((i % 2) == 0)
				rightSelect.options[i].style.background = "white";
			else
				rightSelect.options[i].style.background = "#dddddd";
		}
	},
	
	_isDuplicate : function(options, value) {
		for (var i = 0; i < options.length; i++) {
			if (options[i].value == value)
				return true;
		}
		return false;
	},
	
	getClassName : function() {
		return "SlushBucket";
	},
	type: "Slushbucket"
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXCompleter.js */
var AJAXCompleter = Class.create({ 
  KEY_BACKSPACE: 8,
  KEY_TAB:       9,
  KEY_RETURN:   13,
  KEY_ESC:      27,
  KEY_LEFT:     37,
  KEY_UP:       38,
  KEY_RIGHT:    39,
  KEY_DOWN:     40,
  KEY_DELETE:   46,
  KEY_HOME:     36,
  KEY_END:      35,
  KEY_PAGEUP:   33,
  KEY_PAGEDOWN: 34,
   
    initialize: function(name, elementName) {
    	this.guid = guid();
    	this.className = "AJAXCompleter";
		this.name = name;
		this.elementName = elementName;
		this.field = null;
		this.menuBorderSize = 1;
	    this.resetSelected();
		this.ieIFrameAdjust = 4;
		this.initDropDown();
		this.initIFrame();
    },
	
	initDropDown: function() {
		var dd = gel(this.name);
		if (!dd) {
			dd = cel("div");
			dd.id = this.name;
			dd.className = "ac_dropdown";
			dd.setAttribute('aria-live', 'polite');
			dd.setAttribute('role', 'listbox');
			var style = dd.style;
			if (window.NOW && window.NOW.isUsingPolaris) {
				style.borderWidth = this.menuBorderSize;
			} else {
				style.border = "black " + this.menuBorderSize + "px solid";
				style.backgroundColor = "white";
				style.zIndex = 20000;
			}
			this._setCommonStyles(style);
		}
		this.dropDown = $(dd);
		addChild(dd);
		this.clearDropDown();
		this.currentMenuItems = [];
		this.currentMenuCount = this.currentMenuItems.length;
	},
	
	initIFrame: function() {
		var iFrame = gel(this.name + "_shim");
		if (!iFrame) {
var title = this.name.replace(/\./g, ' ');
			iFrame = cel("iframe");
			iFrame.name = this.name + "_shim";
			iFrame.scrolling = "no";
			iFrame.frameborder = "no";
			iFrame.src = "javascript:false;";
			iFrame.id = this.name + "_shim";
			iFrame.title = new GwtMessage().getMessage(title);
			var style = iFrame.style;
			style.height = 0;
			this._setCommonStyles(style);
			style.zIndex = this.dropDown.style.zIndex - 1;
			addChild(iFrame);
		}
		this.iFrame = $(iFrame);
	},
	
	_setCommonStyles: function(style) {
		style.padding = 1;
		style.visibility = "hidden";
		style.display = "none";
		style.position = "absolute";		
	},
	 
	setWidth: function(w) {
		this.dropDown.style.width = w + "px";
		this.iFrame.style.width = w + "px";	
	},
	
	setHeight: function(height) {
		this.dropDown.height = height;
		if (g_isInternetExplorer)
height += this.ieIFrameAdjust;
			
		this._setIframeHeight(height);
	},
	
	_setIframeHeight: function(height) {
		this.iFrame.style.height = height;
	},
	
	resetSelected: function() {
		this.selectedItemObj = null;
		this.selectedItemNum = -1;		
	},
		
	clearDropDown: function() {
		this.hideDropDown();
		var dropDown = this.dropDown;
	    while(dropDown.childNodes.length > 0)
		  dropDown.removeChild(dropDown.childNodes[0]);
	   this.currentMenuItems = [];
	   this.currentMenuCount = this.currentMenuItems.length;
	   this._setInactive();
	},
	
	_setActive: function() {
		window.g_active_ac = this;
	},
	
	_setInactive: function() {
		window.g_active_ac = null;
	},
			
	hideDropDown: function() {
		if (this.dropDown.style.visibility == "hidden")
		  return;	
		  
		this._showHide("hidden", "none");
		this.element.removeAttribute('aria-activedescendant');
		this.element.setAttribute('aria-expanded', 'false');
		this.resetSelected();
	},	
	
	onDisplayDropDown: function() {
	},
	
	showDropDown: function() {
		if (this.dropDown.style.visibility == "visible")
		  return;
		
		this._showHide("visible", "inline");
		this.element.setAttribute('aria-expanded', 'true');
		this.onDisplayDropDown();
	},
	
	_showHide: function(type, display) {
		this.dropDown.style.visibility = type;
		this.iFrame.style.visibility = type;		
		this.dropDown.style.display = display;
		this.iFrame.style.display = display;
	},
	
	isVisible: function() {
		return this.dropDown.style.visibility == "visible";
	},
	
	appendElement: function(element) {
		this.getDropDown().appendChild(element);
	},
		
	appendItem: function(item) {
		this.appendElement(item);
		if (this.currentMenuItems == null)
		  this.currentMenuItems = [];
		  
		item.acItemNumber = this.currentMenuItems.length;
		this.currentMenuItems.push(item);
	    this.currentMenuCount = this.currentMenuItems.length;
	},
	
	selectNext: function() {
		var itemNumber = this.selectedItemNum;
		if (this.selectedItemNum < this.getMenuCount() - 1)
			itemNumber++;
			
		this.setSelection(itemNumber);
	},
	
	selectPrevious: function() {
		var itemNumber = this.selectedItemNum;
		if (this.selectedItemNum <= 0)
		  return false; 
		  
		itemNumber--;
		this.setSelection(itemNumber);
		return true; 
	},
	
	unsetSelection: function()  {
		if (this.selectedItemNum == -1)
		   return;
		   
	    this.setNonSelectedStyle(this.selectedItemObj);
		this.resetSelected();
	},
	
	setSelection: function(itemNumber) {
        this.unsetSelection();
		this.selectItem(itemNumber);
		this.setSelectedStyle(this.selectedItemObj);
	},
	
	selectItem: function(itemNumber) {
		this.selectedItemNum = itemNumber;
		this.selectedItemObj = this.currentMenuItems[itemNumber];
	},
	
	getMenuItems: function() {
		return this.currentMenuItems;
	},
	
	getObject: function(itemNumber) {
		return this.currentMenuItems[itemNumber];
	},
	
	getSelectedObject: function() {
		return this.getObject(this.selectedItemNum);
	},
	
	setSelectedStyle: function(element) {
		$(element).addClassName("ac_highlight");
		element.setAttribute('aria-selected', 'true');
		
		if (typeof element.displaySpan != "undefined") {
			alert("element.displaySpan.style.color");
			element.displaySpan.style.color = "white";
		}		
	},
	 
	setNonSelectedStyle: function(element) {
		$(element).removeClassName("ac_highlight");
		element.removeAttribute('aria-selected');
		if (element.displaySpan)
			element.displaySpan.style.color = "green";
	},
	
	setTargetTable: function(targetTable) {
		this.targetTable = targetTable;
	},
	
	getTargetTable: function() {
		return this.targetTable;
	},
	
	isPopulated: function() {
		return this.getMenuCount() > 0;
	},
	log: function(msg) {
		jslog(this.className + ": " + msg);
	},
	
	getIFrame: function() { return this.iFrame; },	
    getField: function() { return this.field; },
    getDropDown: function() { return this.dropDown; },
	getMenuCount: function() { return this.currentMenuCount; }
	
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXReferenceControls.js */
var AJAXReferenceControls = Class.create({
	initialize:function (tableElement, id, parentElement, refSysId, rowSysId, refQualTag) {
		this.refName = id;
		this.id = "LIST_EDIT_" + id;
		this.tableElement = tableElement;
		this.dependent = null;
		this.refQual = "";
		this.refImageFocused = false;
		this.refSysId = refSysId;
		this.rowSysId = rowSysId;
		this.createAdditionalValues(refQualTag);
		this.createInput(parentElement);
		this.createLookup(parentElement);
		this.createInputGroup(parentElement);
		this.createDependent(parentElement);
	},
	clearDropDown:function () {
		if (this.ac)
			this.ac.clearDropDown();
	},
	createAdditionalValues:function (refQualTag) {
		this.additionalValues = {};
		this.additionalValues.sys_uniqueValue = this.rowSysId;
		this.additionalValues.sys_target = this.tableElement.getTable().getName();
		this.additionalValues.sysparm_list_edit_ref_qual_tag = refQualTag;
	},
	createInput:function (parentElement) {
		var doctype = document.documentElement.getAttribute('data-doctype');
		this._createHidden(parentElement, this.id, '');
		this.input = cel("input", parentElement);
		input = this.input;
		if (doctype)
			input.className = 'form-control list-edit-input';
		input.id = "sys_display." + this.id;
		input.onfocus = this._onFocus.bind(this);
		input.onkeydown = this._onKeyDown.bindAsEventListener(this);
		input.onkeypress = this._onKeyPress.bindAsEventListener(this);
		input.onkeyup = this._onKeyUp.bindAsEventListener(this);
		input.autocomplete = "off";
		input.ac_columns = "";
		input.ac_order_by = "";
		input.setAttribute("data-ref-dynamic", this.tableElement.isDynamicCreation());
	},
	resolveReference:function () {
		if (this.ac)
			this.ac.onBlur();
	},
	setDisplayValue:function (value) {
		this.input.value = value;
	},
	getInput:function () {
		return this.input;
	},
	getValue:function () {
		return gel(this.id).value;
	},
	getDisplayValue:function () {
		return this.input.value;
	},
	isResolving:function () {
		return (this.ac && this.ac.isResolving());
	},
	isReferenceValid:function () {
		if (this.ac) {
			return this.ac.isReferenceValid();
		}
		return true;
	},
	setResolveCallback:function (f) {
		if (!this.ac)
			return;
		this.ac.setResolveCallback(f);
	},
	setReferenceQual:function (refQual) {
		this.refQual = refQual;
	},
	createLookup:function (parent) {
		var doctype = document.documentElement.getAttribute('data-doctype');
		var title = getMessage("Lookup using list");
var image = $(createImage("images/reference_list.gifx", title));
		if(doctype)
			image = $(createIcon("icon-search", title));
image.width = 18;
		image.height = 16;
		image.id = "ref_list." + this.id;
		image.observe("click", this._refListOpen.bind(this));
		if (window.g_accessibility) {
			image.observe("keydown", function(evt) {
				if (evt && evt.keyCode == Event.KEY_RETURN) {
					evt.stop();
					return this._refListOpen(evt);
				}
			}.bind(this));
		}
		image.style.marginLeft = "5px";
		image.setAttribute("tabindex", 0);
		image.setAttribute("role", "button");
		if(doctype)
			image = image.wrap('span', {'class' : 'input-group-addon', 'id' : 'list-edit-span'});
		parent.appendChild(image);
	},
	createDependent:function (parent) {
        if (!this.tableElement.isDependent())
			return;
		var input = cel("input");
		input.type = "hidden";
		this.dependent = "sys_dependent";
		input.id = this.tableElement.getTable().getName() + "." + this.dependent;
		input.name = input.id;
		parent.appendChild(input);
		this.dependentInput = input;
	},
	createInputGroup:function (parent) {
		if (document.documentElement.getAttribute('data-doctype') != 'true')
			return;
		var divInputGroup = $('sys_display.' + this.id).wrap('div', {'class' : 'input-group', 'style' : 'border-spacing:0'});
		var referenceIcon = $('list-edit-span')
		$('list-edit-span').remove();
		divInputGroup.appendChild(referenceIcon);
	},
	setRecord:function (record) {
		this.record = record;
	},
	_createHidden:function (parent, id, value) {
		var input = cel("input");
		input.type = "hidden";
		input.id = id;
		input.value = value;
		parent.appendChild(input);
		return input;
	},
	_setDependent:function () {
        if (this.dependent == null)
			return;
		var value = this.record.getValue(this.tableElement.getDependent());
        if ('NULL' === value)
			this.dependentInput.value = '';
        else
			this.dependentInput.value = value;
	},
	_onFocus:function (evt) {
        if (this.ac)
			return;
		this._setDependent();
		var dep = '';
		if (this.dependentInput)
			dep = "sys_dependent";
		var referenceValid = true;
		if (this.record && this.record.isReferenceValid)
			referenceValid = this.record.isReferenceValid();
		this.ac = new AJAXTableCompleter(this.input, this.id, dep, null, null, referenceValid);
		this.ac.elementName = this.refName;
		this.ac.setRefQual(this.refQual);
		this.ac.referenceSelect(this.refSysId, this.input.value, !referenceValid);
		this.ac.clearDerivedFields = false;
		for (var n in this.additionalValues)
			this.ac.setAdditionalValue(n, this.additionalValues[n]);
	},
	_onKeyDown:function (evt) {
		acReferenceKeyDown(this.input, evt);
	},
	_onKeyPress:function (evt) {
		acReferenceKeyPress(this.input, evt);
	},
	_onKeyUp:function (evt) {
		acReferenceKeyUp(this.input, evt);
	},
	_refListOpen:function (evt) {
		var te = this.tableElement;
		this._setDependent();
		var url = reflistOpenUrl(this.refName, this.id, te.getName(), te.getReference());
		for (var n in this.additionalValues)
			url += "&" + n + "=" + encodeText(this.additionalValues[n]);
		if (this.dependentInput)
			url += "&sysparm_dependent=" + escape(this.dependentInput.value);
		popupOpenStandard(url, "lookup");
		return false;
	},
	type:function () {
		return "AJAXReferenceControls";
	}
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXOtherCompleter.js */
var AJAXOtherCompleter = Class.create(AJAXCompleter, { 
   
    initialize: function(element, reference) {
		AJAXCompleter.prototype.initialize.call(this, 'AC.' + reference, reference);
		this.className = "AJAXReferenceCompleter";
		this.dirty = false;
		this.matched = false;
		this.fieldChanged = false;
	    this.ignoreAJAX = false;
		this.type = null;
		this.refField = null;		
		this.textValue = "";
		this.invisibleTextValue = "";
		this.savedTextValue = "";
		this.savedInvisibleTextValue = "";
		this.previousTextValue = ""; 
		this.resultsStorage = new Object();
		this.emptyResults = new Object();	
		this.oldFunctionJunk();
	},
		
	setInvisibleField: function(f) {
		this.iField = f;
		this._setAC(f);
	},
	setField: function(f) {
		this.field = f;	
	    this.field.autocomplete = "off";	
		this._setAC(f);
	},
	
	setUpdateField: function(f) {
		this.updateField = f;
		this._setAC(f);
	},
	
	_setAC: function(field) {
		if (field)
		  field.ac = this;			
	},	
	
	setType: function(type) {
		this.type = type;
	}, 
	
	setSavedText: function(textArray) {
	  if (textArray[0] != null)
		this.savedInvisibleTextValue = textArray[0];
	  this.savedTextValue = textArray[1];		
	},
	
	getMenu: function() { return this.getDropDown(); },
		
	getUpdateField: function() {
		return this.updateField;
	},
		
	oldFunctionJunk: function() {
		this.isOTM = function() { return this.type == ONE_TO_MANY; };
		this.getInvisibleField = function() { return this.iField; };		
	}		
	
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXReferenceCompleter.js */
function acReferenceKeyDown(element, evt) {
	if (!element.ac || element.getAttribute('readonly'))
	  return true;
    return element.ac.keyDown(evt);
}
function acReferenceKeyPress(element, evt) {
	if (!element.ac || element.getAttribute('readonly'))
	  return true;
	var rv =  element.ac.keyPress(evt);
	if (rv == false)
	  evt.cancelBubble = true;
   	return rv;
}
function acReferenceKeyUp(element, evt) {
	if (!element.ac || element.getAttribute('readonly'))
	  return true;
   return element.ac.keyUp(evt);
}
addRenderEvent(function() {
	var statusEl = document.getElementById('ac.status');
	if (!statusEl) {
		statusEl = document.createElement('span');
		statusEl.id = 'ac.status';
		statusEl.setAttribute('role', 'status');
		statusEl.setAttribute('aria-live', 'polite');
		statusEl.classList.add('sr-only');
		document.body.appendChild(statusEl);
	}
})
var AJAXReferenceCompleter = Class.create(AJAXCompleter, {
	PROCESSOR: "Reference",
    initialize: function(element, reference, dependentReference, refQualElements, targetTable, referenceValid) {
		AJAXCompleter.prototype.initialize.call(this, 'AC.' + reference, reference);
		this.className = "AJAXReferenceCompleter";
	    this.element = $(element);
	    this.keyElement = gel(reference);
		this.setDependent(dependentReference);
		this.setRefQualElements(refQualElements);
		this.setTargetTable(targetTable);
		this.additionalValues = {};
		CustomEvent.observe('domain_scope_changed', this.cacheClear.bind(this));
		
		this._commonSetup();
		this.oneMatchSelects = true;
		this.clearDerivedFields = true;
		this.allowInvalid = this.element.readAttribute('allow_invalid') == 'true';
		this.dynamicCreate = this.element.readAttribute('data-ref-dynamic') == 'true';
		this.isList = this.element.readAttribute('islist') == 'true';
		if (!this.simpleQualifier)
			this.refQual = "";
		this.isFilterUsingContains = this.element.readAttribute('is_filter_using_contains') == 'true';
		this.referenceValid = referenceValid;
    },
	_commonSetup: function() {
		this.element.ac = this;
		Event.observe(this.element, 'blur', this.onBlurEvent.bind(this));
		Event.observe(this.element, 'focus', this.onFocus.bind(this));
		this.saveKeyValue = this.getKeyValue();
		this.currentDisplayValue = this.getDisplayValue();
		this.currentRefValue = this.getKeyValue();
		this.searchChars = "";
		this.rowCount = 0;
		this.ignoreFocusEvent = false;
		this.max = 0;
		this.cacheClear();
		this.hasFocus = true;
		this.isResolvingFlag = false;
		var f = this.element.readAttribute("function");
		if (f)
	        this.selectionCallBack = f;
		addUnloadEvent(this.destroy.bind(this));
		this._setupAccessibility();
		this._setUpDocMouseDown();
	},
	isResolving: function() {
		return this.isResolvingFlag;
	},
	destroy: function() {
		this.element = null;
		this.keyElement = null;
	},
	keyDown: function(evt) {
		var typedChar = getKeyCode(evt);
		if (typedChar == KEY_ARROWUP) {
		  if( !this.selectPrevious())
			this.hideDropDown();
		}  else if (typedChar == KEY_ARROWDOWN) {
			if (!this.isVisible()) {
				if (!this.isPopulated())
					return;
				this.showDropDown();
			}
			this.selectNext();
		} else if (typedChar == KEY_TAB && !window.g_accessibility) {
			if (this.hasDropDown() && this.select())
				this.clearTimeout();
			else
				this.onBlur();
		} else if (typedChar == KEY_TAB && window.g_accessibility) {
			if (this.searchChars && this.searchChars != this.currentDisplayValue)
				this.element.value = '';
			this.clearDropDown();
		} else if (typedChar == KEY_ESC) {
			this.element.value = '';
			this.clearDropDown();
		}
	},
	keyUp: function(evt) {
		var typedChar = getKeyCode(evt);
		if (!this.isDeleteKey(typedChar))
			return;
		this.clearTimeout();
		this.timer = setTimeout(this.ajaxRequest.bind(this), g_acWaitTime || 50);
	},
	setSelection: function(itemNumber) {
		AJAXCompleter.prototype.setSelection.call(this, itemNumber);
		this.element.setAttribute('aria-activedescendant', this.selectedItemObj.id);
		this.setStatus(this.selectedItemObj.innerText);
		this.selectedItemObj.setAttribute('aria-selected', 'true');
	},
	_handleDeleteKey: function() {
	},
	clearTimeout: function() {
		if (this.timer != null)
		  clearTimeout(this.timer);
         this.timer = null;
	},
	keyPress: function(eventArg) {
		var evt = getEvent(eventArg);
		var typedChar = getKeyCode(evt);
		if (typedChar != KEY_ENTER && typedChar != KEY_RETURN)
			this.clearTimeout();
		if (this.isNavigation(typedChar))
		  return true;
		if (this.isDeleteKey(typedChar))
			return true;
		if (typedChar == KEY_ENTER || typedChar == KEY_RETURN) {
			if (this.hasDropDown() && this.select())
				this.clearTimeout();
			else
				this.onBlur();
			if (this.enterSubmits) {
				this.element.setValue(trim(this.element.getValue()));
				return true;
			}
			return false;
	    }
		if (typedChar == this.KEY_ESC) {
			this.clearDropDown();
			return false;
		}
		this.resetSelected();
		this.timer = setTimeout(this.ajaxRequest.bind(this), g_acWaitTime || 50);
		return true;
	},
	isNavigation: function(typedChar) {
		if (typedChar == this.KEY_TAB)
		  return true;
		if (typedChar == this.KEY_LEFT)
		  return true;
		if (typedChar == this.KEY_RIGHT)
		  return true;
	},
	isDeleteKey: function(typedChar) {
		if (typedChar == this.KEY_BACKSPACE || typedChar == this.KEY_DELETE)
			return true;
	},
	_getSearchChars: function() {
		if (this._checkDoubleByteEncodedCharacter(this.getDisplayValue()))
			return this._translateDoubleByteIntoSingleByte(this.getDisplayValue());
		else
			return this.getDisplayValue();
	},
	_checkDoubleByteEncodedCharacter: function(s) {
		if (typeof s === 'undefined' || s.length === 0)
			return false;
		var char = s.charCodeAt(0);
		return char === 12288 || (65280 < char && char < 65375);
	},
	_translateDoubleByteIntoSingleByte: function (s) {
		var str = '';
		for (var i = 0, l = s.length, char; i < l; i++) {
			char = s.charCodeAt(i);
			if (char == 12288)
				str += String.fromCharCode(32);
			else if (65280 < char && char < 65375)
				str += String.fromCharCode(char - 65248);
			else
				str += s[i];
		}
		return str;
	},
	ajaxRequest: function() {
		var s = this._getSearchChars();
		if (s.length == 0 && !this.isDoctype()) {
			this.clearDropDown();
			this.searchChars = null;
			return;
		}
		if (s == "*")
			return;
		this.searchChars = s;
		var xml = this.cacheGet(s);
		if (xml) {
			this.processXML(xml);
			return;
		}
		if (this.cacheEmpty()) {
			this.clearDropDown();
			this.hideDropDown();
			return;
		}
        var url = "";
		url += this.addSysParms();
		url += this.addDependentValue();
		url += this.addRefQualValues();
		url += this.addTargetTable();
		url += this.addAdditionalValues();
		url += this.addAttributes("ac_");
		this.callAjax(url);
	},
	callAjax: function(url) {
		this.isResolvingFlag = true;
		var ga = new GlideAjax(this.PROCESSOR);
		ga.setQueryString(url);
		ga.setErrorCallback(this.errorResponse.bind(this));
		ga.getXML(this.ajaxResponse.bind(this), null, null);
	},
	ajaxResponse: function(response) {
        if (!response.responseXML || !response.responseXML.documentElement) {
			this.isResolvingFlag = false;
			return;
		}
		var xml = response.responseXML;
		var e = xml.documentElement;
		var timer = e.getAttribute("sysparm_timer");
		if (timer != this.timer)
			return;
		this.timer = null;
		this.clearDropDown();
		this.cachePut(this.searchChars, xml);
		this.processXML(xml);
		this.isResolvingFlag = false;
		if (this.onResolveCallback)
			this.onResolveCallback();
	},
	errorResponse: function() {
		this.isResolvingFlag = false;
	},
	processXML: function(xml) {
		var e = xml.documentElement;
		this._processDoc(e);
		var values = this._processItems(xml);
		var recents = this._processRecents(xml);
		if (!this.hasFocus) {
			this._processBlurValue(values, recents);
			return;
		}
		this.createDropDown(values, recents);
	},
	_processItems: function(xml) {
		var items = xml.getElementsByTagName("item");
		var values = [];
		for(var i = 0; i < items.length; i++) {
			var item = items[i];
			var array = this.copyAttributes(item);
			array['XML'] = item;
			values[values.length] = array;
		}
		return values;
	},
	_processRecents: function(xml) {
		var recents = [];
		var items = xml.getElementsByTagName("recent");
		for (var i = 0; i < items.length; i++) {
			var rec = this.copyAttributes(items[i]);
			rec.XML = items[i];
			recents.push(rec);
		}
		return recents;
	},
	_processBlurValue: function(values, recents) {
		this.ignoreFocusEvent = false;
		values = values || [];
		recents = recents || [];
		if (values.length + recents.length === 0 && this.searchChars.length > 0) {
			this.setInvalid();
			return;
		}
		if (!this.oneMatchSelects || this.getDisplayValue() === '')
			return;
		var targetLabel, targetValue;
		if (values.length + recents.length == 1) {
			var target = recents.length == 1 ? recents[0] : values[0];
			targetLabel = target.label;
			targetValue = target.name;
		}
		if (recents[0] && recents[0].label == this.getDisplayValue()) {
			var matchesRecent = recents[1] && recents[0].label == recents[1].label;
			var matchesValue = values[0] && recents[0].label == values[0].label;
			if (!matchesRecent && !matchesValue) {
				targetLabel = recents[0].label;
				targetValue = recents[0].name;
			}
		} else if (values[0] && values[0].label == this.getDisplayValue()) {
			var matchesSecondValue = values[1] && values[0].label == values[1].label;
			if (!matchesSecondValue) {
				targetLabel = values[0].label;
				targetValue = values[0].name;
			}
		}
		if (targetLabel)
			this.referenceSelect(targetValue, targetLabel);
	},
	_processDoc: function(doc) {
this.rowCount = doc.getAttribute('row_count');
	    this.max = doc.getAttribute('sysparm_max');
	},
	addSysParms: function() {
		var name = this.elementName;
		if (this.elementName.indexOf('IO:') > -1)
			name = this.elementName.substring(this.elementName.indexOf("IO:"), this.elementName.length);
		var sp = "sysparm_name=" + name +
		    "&sysparm_timer=" + this.timer +
		    "&sysparm_max=" + this.max +
		    "&sysparm_chars=" + encodeText(this.searchChars);
		if (this.guid)
			sp += "&sysparm_completer_id=" + this.guid;
		if (this.ignoreRefQual)
			sp += "&sysparm_ignore_ref_qual=true";
		else if (this.refQual != "" && typeof this.refQual != "undefined")
			sp += "&sysparm_ref_qual=" + this.refQual;
		
		var domain = gel("sysparm_domain");
		if (domain)
			sp += "&sysparm_domain=" + domain.value;
		
		return sp;
	},
	addTargetTable: function() {
		var answer = "";
		if (this.getTargetTable()) {
			answer = "&sysparm_reference_target=" + this.getTargetTable();
		}
		return answer;
	},
	addAdditionalValues: function() {
		var answer = "";
		for (var n in this.additionalValues)
			answer += "&" + n + "=" + encodeText(this.additionalValues[n]);
		return answer;
	},
	addAttributes: function(prefix) {
	  var answer = "";
	  var attributes = this.element.attributes;
	  for (var n = 0; n < attributes.length; n++) {
	  	var attr = attributes[n];
		var name = attr.nodeName;
		if (name.indexOf(prefix) != 0)
		  continue;
		var v = attr.nodeValue;
		answer += "&" + name + "=" + v;
	  }
	  return answer;
	},
	copyAttributes: function(node) {
	  var attributes = new Array();
	  for (var n = 0; n < node.attributes.length; n++) {
	  	var attr = node.attributes[n];
		var name = attr.nodeName;
		var v = attr.nodeValue;
		attributes[name] = v;
	  }
	  return attributes;
	},
    createDropDown: function(foundStrings, foundRecents) {
		this.clearDropDown();
		this.createInnerDropDown();
		if (foundRecents && foundRecents.length > 0) {
			this._showRecents();
			for (var i = 0; i < foundRecents.length; i++) {
				var rec = foundRecents[i];
				var recchild = this.createChild(rec);
				recchild.acItem = rec;
				this.appendItem(recchild);
				this.addMouseListeners(recchild);
			}
		}
		if (foundStrings && foundStrings.length > 0) {
			this._showMax(foundStrings, foundRecents);
			for (var c = 0; c < foundStrings.length; c++) {
				if (this.max > 0 && c >= this.max)
					break;
				
				var x = foundStrings[c];
				var child = this.createChild(x);
				child.acItem = x;
				this.appendItem(child);
				this.addMouseListeners(child);
			}
		}
		if (this.currentMenuCount) {
			this.setDropDownSize();
			this.showDropDown();
			if (isTextDirectionRTL()) {
				var diff = parseInt(this.dropDown.style.width) - this.getWidth();
				if(diff < 0)
					diff = 0;
				var w = 0;
				if (isMSIE8 || isMSIE7 || isMSIE6 || (isMSIE9 && (getPreference('glide.ui11.use') == "false"))) {
					if (typeof g_form != "undefined")
						w =  this.element.offsetParent ? this.element.offsetParent.clientWidth : 0;
				}
				this.dropDown.style.left = (parseInt(this.dropDown.style.left) - diff) + w + "px";
				this.iFrame.style.left = (parseInt(this.iFrame.style.left) - diff) + w + "px";
				if (parseInt(this.dropDown.style.left) < 0) {
					this.dropDown.style.left = 0 + "px";
					this.iFrame.style.left = 0 + "px";
				}
			}
			var height = this.dropDown.clientHeight;
			this.setHeight(height);
			this.firefoxBump();
			var msg = '{0} suggestions. Please use the up and down arrow keys to select a value';
			if (this.currentMenuCount == 1)
				msg = '1 suggestion. Please use the up and down arrow keys to select a value';
			var messageAPI = new GwtMessage();
			messageAPI.fetch([msg], function(msgs) {
				var msgWithValues = messageAPI.format(msgs[msg], this.currentMenuCount);
				this.setStatus(msgWithValues);
			}.bind(this))
		}
		this._setActive();
		_frameChanged();
   },
	createInnerDropDown: function() {
	},
	_showRecents: function() {
		this._addHeaderRow("Recent selections");
	},
	_showMax: function(foundStrings, foundRecents) {
		if (foundRecents && foundRecents.length > 0)
			this._addHeaderRow("Search");
	},
	_addHeaderRow: function(message) {
		var row = cel("div");
		row.className = "ac_header";
		row.setAttribute("width", "100%");
		row.innerHTML = new GwtMessage().getMessage(message);
		this.appendElement(row);
	},
   select: function() {
 		if (this.selectedItemNum < 0)
		  return false;
		var o = this.getSelectedObject().acItem;
		this.referenceSelect(o['name'], o['label']);
		this.clearDropDown();
		return true;
   },
    _setDisplayValue: function(v) {
        var e = this.getDisplayElement();
        if (e.value == v)
            return;
        e.value = v;
    },
    referenceSelectTimeout: function(sys_id, displayValue) {
   		this.selectedID = sys_id;
   		this.selectedDisplayValue = displayValue;
if (typeof reflistModalPick == "function")
   			this._referenceSelectTimeout();
   		else
   			setTimeout(this._referenceSelectTimeout.bind(this), 0);
    },
    _referenceSelectTimeout: function() {
   		this.referenceSelect(this.selectedID, this.selectedDisplayValue);
    },
   referenceSelect: function(sys_id, displayValue, referenceInvalid) {
        this._setDisplayValue(displayValue);
		var e = this.getKeyElement();
		var glideListHasItem = e && e.value && sys_id && 'glide-list' === e.getAttribute('data-type') ? !!e.value.match(new RegExp('(^|,)(' + sys_id + ')(,|$)', 'gm')) : false;
		if (e.value != sys_id && !glideListHasItem) {
			e.value = sys_id;
			callOnChange(e);
		}
		this.searchChars = displayValue;
		this.currentDisplayValue = displayValue;
        this.showViewImage();
		if (!referenceInvalid)
			this.clearInvalid();
        this._clearDerivedFields();
		if (this.selectionCallBack && sys_id) {
			if (!glideListHasItem)
			eval(this.selectionCallBack);
			else if (this.getDisplayElement())
				this.getDisplayElement().value = '';
		}
		if (e["filterCallBack"]) {
		   e.filterCallBack();
		}
   },
   setFilterCallBack: function(f) {
        var e = this.getKeyElement();
        e["filterCallBack"] = f
   },
   isEditingList: function () {
		return this.keyElement && this.keyElement.id && this.keyElement.id.indexOf("LIST_EDIT") === 0;
   },
   _clearDerivedFields: function() {
		if (this.clearDerivedFields && window['DerivedFields'] && !this.isEditingList()) {
			var df = new DerivedFields(this.keyElement.id);
			df.clearRelated();
			df.updateRelated(this.getKeyValue());
		}
   },
   showViewImage: function() {
   	  var element = gel("view." + this.keyElement.id);
   	  var elementR = gel("viewr." + this.keyElement.id);
   	  var noElement = gel("view." + this.keyElement.id + ".no");
	  var sys_id = this.getKeyValue();
	  if (sys_id == "") {
	  	hideObject(element);
	  	hideObject(elementR);
		showObjectInlineBlock(noElement);
	  } else {
	  	showObjectInlineBlock(element);
	  	showObjectInlineBlock(elementR);
		hideObject(noElement);
	  }
	},
	createChild: function(item) {
		return this._createChild(item, item['label']);
	},
	_createChild: function(item, text) {
		var div = cel(TAG_DIV);
		div.ac = this;
		div.acItem = item;
		div.id = 'ac_option_' + item.name;
		div.setAttribute('role', 'option');
		var itemInRow = cel(TAG_SPAN, div);
		itemInRow.innerHTML = (text + '').escapeHTML();
		return div;
	},
    addMouseListeners: function(element) {
  	  element.onmousedown = this.onMouseDown.bind(this, element);
   	  element.onmouseup = this.onMouseUp.bind(this, element);
	  element.onmouseover = this.onMouseOver.bind(this, element);
	  element.onmouseout = this.onMouseOut.bind(this, element);
    },
   onMouseUp: function(element) {
   	  this.select();
   },
   onMouseDown: function(element) {
   	  if (g_isInternetExplorer) {
   	    this.select();
   	    window.event.cancelBubble = true;
	    window.event.returnValue = false;
		setTimeout(this.focus.bind(this), 50);
	  }
   	  return false;
   },
   onMouseOut: function(element) {
   	  this.unsetSelection();
   },
   onMouseOver: function(element) {
   	  this.setSelection(element.acItemNumber);
   },
   focus: function() {
   	this.element.focus();
   },
   setDropDownSize: function() {
	   var e, mLeft, mTop;
	    if (window.$j) {
			e = $j(this.element);
			var offset = e.offset();
			var parent = $j(getFormContentParent());
			var parentOffset = {
					left: 0,
					top: 0
				};
			var parentIsBody = parent.get(0) == document.body;
			var parentScrolltop = (parentIsBody || parent.css('overflow') == 'visible') ? 0 : parent.scrollTop();
			if(!parentIsBody)
				parentOffset = parent.offset();
			mLeft = offset.left - parentOffset.left + 1 + 'px';
			mTop = offset.top - parentOffset.top + e.outerHeight() + parentScrolltop + 'px';
	    } else {
			e = this.element;
			mLeft = grabOffsetLeft(e) + "px";
			mTop =  grabOffsetTop(e) + (e.offsetHeight - 1) + "px";
	    }
		var mWidth = this.getWidth();
		var dd = this.dropDown;
		if (dd.offsetWidth > parseInt(mWidth))
			mWidth = dd.offsetWidth;
		this.setTopLeft(dd.style, mTop, mLeft);
		this.setTopLeft(this.iFrame.style, mTop, mLeft);
		this.setWidth(mWidth);
	},
	setTopLeft: function (style, top, left) {
		style.left = left;
		style.top = top;
	},
	getWidth: function () {
		var field = this.element;
		if (g_isInternetExplorer)
		  return field.offsetWidth - (this.menuBorderSize * 2);
	    return field.clientWidth;
	},
	onFocus: function() {
		if (this.ignoreFocusEvent || this.element.getAttribute('readonly'))
		   return;
		this.hasFocus = true;
		this.currentDisplayValue = this.getDisplayValue();
		this.currentRefValue = this.getKeyValue();
		this._setUpDocMouseDown();
		if (this.isDoctype() && this.currentDisplayValue == '')
			this.timer = setTimeout(this.ajaxRequest.bind(this), g_acWaitTime || 50);
	},
	isTablet: function() {
		return !(typeof isTablet == "undefined");
	},
	isDoctype: function() {
		return document.documentElement.getAttribute('data-doctype') == 'true';
	},
	_setupAccessibility: function() {
		this.element.setAttribute('role', 'combobox');
		this.element.setAttribute('aria-autocomplete', 'list');
		this.element.setAttribute('aria-owns', this.getDropDown().id);
		this.element.setAttribute('aria-expanded', 'false');
	},
	_setUpDocMouseDown: function() {
		if (this.isTablet()) {
			this.blurPause = true;
			this._boundOnDocMouseDown = this.onDocMouseDown.bind(this);
			Event.observe(document.body, 'mousedown', this._boundOnDocMouseDown);
		}
	},
	setStatus: function(text) {
		var statusEl = this._getStatusEl();
		if (!statusEl)
			return;
		statusEl.innerText = text;
	},
	_getStatusEl: function() {
		return document.getElementById('ac.status');
	},
	onDocMouseDown: function(evt) {
		if (evt.target == this.element)
			return;
		this.blurPause = false;
	},
	onBlurEvent: function(evt) {
		if (this.element.getAttribute('readonly'))
			return;
		if (this.isTablet() && this.blurPause == true)
			setTimeout(this.onBlur.bind(this), 4000);
		else
			this.onBlur();
	},
	compareRefDisplayValue: function() {
		var refDisplayValue = this.getDisplayValue();
return this.currentDisplayValue === refDisplayValue || (this.currentDisplayValue && this.currentDisplayValue.replace(/[\n\r]/g,'') === refDisplayValue);
	},
	onBlur: function() {
if (this._boundOnDocMousedown) {
			Event.stopObserving(document.body, 'mousedown', this._boundOnDocMouseDown);
			delete this._boundOnDocMouseDown;
		}
 		this.hasFocus = false;
		if (this.getDisplayValue().length == 0) {
			if (this.currentDisplayValue != "") {
if (!this.isList) {
					this.referenceSelect("", "");
				} else {
					this.clearInvalid();
				}
			} else {
				this.clearInvalid();
			}
		} else if (this.selectedItemNum > -1) {
			this.select();
		} else if ((this.getKeyValue() == "") || !this.compareRefDisplayValue()) {
			if (!this.isFilterUsingContains) {
				var refInvalid = true;
				if (this.isExactMatch()) {
					if (this.oneMatchSelects != false) {
						var o = this.getObject(0).acItem;
						this.referenceSelect(o['name'], o['label']);
						refInvalid = false;
					}
				} else if (this.keyElement && this.currentRefValue != this.keyElement.value) {
					if (this.searchChars == this.currentDisplayValue && (this.keyElement.id.indexOf("LIST_EDIT") == -1 || this.currentRefValue != ""))
						refInvalid = false;
				}
				if (refInvalid)
					this.setInvalid();
				if (refInvalid || !this.isPopulated()) {
				    this.clearTimeout();
				    this.searchChars = null;
				    this.ignoreFocusEvent = true;
					this.timer = setTimeout(this.ajaxRequest.bind(this), 0);
				}
			}
		}
		this.clearDropDown();
	},
	isExactMatch: function() {
		if (this.isPopulated()) {
			if (this.getMenuCount() == 1) {
			    var o0 = this.getObject(0).acItem;
			    if ((o0['label'].toUpperCase().startsWith(this.getDisplayValue().toUpperCase())))
					return true;
				return false;
		    }
			var o0 = this.getObject(0).acItem;
			var o1 = this.getObject(1).acItem;
			if ((o0['label'] == this.getDisplayValue()) && (o1['label'] != this.getDisplayValue()))
				return true;
		}
	},
	getDisplayValue: function() {
	    return this.getDisplayElement().value;
	},
	getKeyValue: function() {
		return this.getKeyElement().value;
	},
	clearKeyValue: function() {
		this.referenceSelect("", this.getDisplayValue());
	},
	getKeyElement: function() {
		return this.keyElement;
	},
	getDisplayElement: function() {
		return this.element;
	},
	setResolveCallback: function(f) {
		this.onResolveCallback = f;
	},
	setDependent: function(dependentReference) {
		this.dependentReference = dependentReference;
		var el = this.getDependentElement();
		if (!el)
		  return;
var n = dependentReference.replace(/\./, "_");
		n = this.getTableName() + "_" + n;
		var h = new GlideEventHandler('onChange_' + n, this.onDependentChange.bind(this), dependentReference);
		g_event_handlers.push(h);
	},
	onDependentChange: function() {
		this.cacheClear();
	},
	getDependentElement: function() {
		if (!this.dependentReference || 'null' == this.dependentReference)
		   return null;
		var table = this.getTableName();
		var dparts = this.dependentReference.split(",");
		return gel(table + "." + dparts[0]);
	},
	addDependentValue: function() {
		var el = this.getDependentElement();
		if (!el) {
			if (window.NOW.useHiddenDependent && this.element.hasAttribute('data-dependent-value')) {
				return "&sysparm_value=" + this.element.readAttribute('data-dependent-value');
			} else {
				return "";
			}
		}
		var depValue = "";
		if (el.tagName == "INPUT")
			depValue = el.value;
		else
			depValue = el.options[el.selectedIndex].value;
		return "&sysparm_value=" + depValue;
	},
	setRefQualElements: function(elements) {
		this.simpleQualifier = false;
		if (!elements)
			this.refQualElements = null;
		else {
			if (elements.startsWith("QUERY:")) {
				this.setRefQual(elements.substring(6));
				this.simpleQualifier = true;
				return;
			}
			var tableDot = g_form.getTableName() + '.';
			this.refQualElements = [];
		    var a = elements.split(';');
		    if (a == "*") {
				a = [];
        		var form = gel(tableDot + 'do');
				var elements = Form.getElements(form);
    			for (var i = 0; i < elements.length; i++) {
					if ((elements[i].id != this.keyElement.id) && (elements[i].id.startsWith(tableDot)))
      					a.push(elements[i].id);
    			}
		    }
		    for (var i = 0; i < a.length; i++) {
				var n = a[i];
				var el = gel(n);
				if (!el)
		  			continue;
		    	this.refQualElements.push(n);
var h = new GlideEventHandler('onChange_' + n.replace(/\./, "_"), this.onDependentChange.bind(this), a[i]);
				g_event_handlers.push(h);
		    }
		}
	},
	setRefQual: function(refQual) {
		this.refQual = refQual;
	},
	setIgnoreRefQual: function(ignoreRefQual) {
		this.ignoreRefQual = ignoreRefQual;
	},
	addRefQualValues: function() {
		if (this.refQualElements) {
			return "&" + g_form.serializeChanged();
		} else
			return "";
	},
	setAdditionalValue: function(name, value) {
		this.additionalValues[name] = value;
	},
	getTableName: function() {
		return this.elementName.split('.')[0];
	},
	setInvalid: function() {
		this.messages = new GwtMessage().getMessages(
				["A new record with this value will be created automatically", "Invalid reference"]);
		this.referenceValid = false;
		var message;
		if (this.dynamicCreate) {
			message = this.messages["A new record with this value will be created automatically"];
			this.getDisplayElement().title = message;
			addClassName(this.getDisplayElement(), "ref_dynamic");
		} else {
			message = this.messages["Invalid reference"];
			this.getDisplayElement().title = message;
			addClassName(this.getDisplayElement(), "ref_invalid");
		}
		if (typeof g_form != "undefined" && !this.isEditingList()) {
			var fieldName = this.elementName.substring(this.elementName.indexOf('.') + 1);
			var dynamicCreate = this.dynamicCreate;
			if (g_form.getGlideUIElement) {
				var el = g_form.getGlideUIElement(this.elementName);
				if (el)
					el.isInvalid = true;
			}
			setTimeout(function () {
				g_form.hideFieldMsg(fieldName, false, 'invalid_reference');
				g_form.showFieldMsg(fieldName, message, dynamicCreate ? 'info' : 'error', null, 'invalid_reference');
			});
		}
		if (this.getKeyValue() && !this.allowInvalid && !this.isList) {
			this.getKeyElement().value = "";
			callOnChange(this.getKeyElement());
		}
		this.showViewImage();
		var displayElement = this.getDisplayElement();
		if (displayElement) {
			displayElement.setAttribute('aria-invalid', 'true');
		}
	},
	clearInvalid: function() {
		this.referenceValid = true;
		if (this.dynamicCreate) {
			removeClassName(this.getDisplayElement(), "ref_dynamic");
		} else {
			removeClassName(this.getDisplayElement(), "ref_invalid");
		}
		this.getDisplayElement().title = "";
		this.getDisplayElement().removeAttribute("data-original-title");
		if (typeof g_form != "undefined") {
			if (g_form.getGlideUIElement) {
				var el = g_form.getGlideUIElement(this.elementName);
				if (el)
					el.isInvalid = false;
			}
		}
		var fieldName = this.elementName.substring(this.elementName.indexOf('.') + 1);
		if (typeof g_form != "undefined" && fieldName && !this.isEditingList()) {
			g_form.hideFieldMsg(fieldName, false, 'invalid_reference');
		}
		var displayElement = this.getDisplayElement();
		if (displayElement && typeof g_form !== 'undefined') {
			var isEmpty = !this.element.present();
			if (this.isList) {
				isEmpty = this.getKeyValue() === '';
			}
			if (g_form.isMandatory(fieldName) && g_form.submitAttemptsCount > 0 && isEmpty) {
				displayElement.setAttribute('aria-invalid', 'true');
			}
			else {
				displayElement.setAttribute('aria-invalid', 'false');
			}
		}
	},
	isReferenceValid: function() {
		return this.referenceValid;
	},
	firefoxBump: function() {
		var children = this.getMenuItems();
		for(var i = 0 ; i < children.length; i++) {
			if (children[i] && children[i].firstChild) {
				var dparentDivWidth = children[i].offsetWidth;
				var dchildSpanWidth = children[i].firstChild.offsetWidth + 2 + (2 * children[i].firstChild.offsetLeft);
				if (dchildSpanWidth > dparentDivWidth)
					this.setWidth(dchildSpanWidth);
			}
		}
	},
	_setIframeHeight: function(height) {
		this.iFrame.style.height = height - 2;
	},
	hasDropDown:function() {
		if (!this.dropDown)
			return false;
		return this.dropDown.childNodes.length > 0;
	},
	cachePut: function (name, value) {
		if (this.refQualElements)
			return;
		this.cache[name] = value;
	},
	cacheGet: function(name) {
		if (this.refQualElements)
			return;
		return this.cache[name];
	},
	cacheClear: function() {
		this.cache = new Object();
	},
	cacheEmpty: function() {
		var s = this.searchChars;
		if (!s)
		    return false;
		if (s.startsWith("%"))
return false;
		
		while (s.length > 2) {
			s = s.substring(0, s.length - 1);
			var xml = this.cacheGet(s);
			if (!xml)
			  continue;
			var e = xml.documentElement;
		    var rowCount = e.getAttribute('row_count');
			if (rowCount == 0 && e.childElementCount == 0)
			  return true;
break;
		}
		return false;
	}
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXReferenceCompleterMulti.js */
var AJAXReferenceCompleterMulti = Class.create(AJAXReferenceCompleter, {
	_hash: new Hash(),
	_SEPARATOR: ',',
	_handleDeleteKey: function() {
		this._rebuildFromInput();
	},
	
	_rebuildFromInput: function() {
		var s = this.getDisplayElement().value;
		var arr = s.split(this._SEPARATOR);
		var _hashNew = new Hash();
		for (var i = 0; i < arr.length; i++) {
			var hashKeys = this._hash.keys();
var a = arr[i].strip();
			var foundIt = false;
			for (var keyIter = 0; keyIter < hashKeys.length; keyIter++) {
				if (this._hash.get(hashKeys[keyIter]) == a) { 
					_hashNew.set(hashKeys[keyIter], this._hash.get(hashKeys[keyIter]).escapeHTML());
					this._hash.unset(hashKeys[keyIter]);
					foundIt = true;
					break;
				}
			}
			if (!foundIt) {
				if (this.allowInvalid) 
					_hashNew.set(a, a.escapeHTML());
			}
		}
		this._hash = _hashNew;
		this._setFormValues();
	},
	
	_arrayToString: function(array, useSpacer) {
		var s = '';
		for (var i=0; i<array.length; i++) {
			var a = array[i].strip();
			if (a.length==0)
				continue;
			if (i>0) {
				s += this._SEPARATOR;
				if(useSpacer) 
					s += " ";
			}
			s += a;
		}
		return s;
	},
	
	_setFormValues: function() {
		this.getDisplayElement().value = this.getDisplayValue();
		this.getKeyElement().value = this.getKeyValue();
		if (this.element.getAttribute("reference")== "sys_user"){
			var invalidContacts = false;
			var keyContacts = this.getKeyElement().value.split(",");
			var displayContacts = this.getDisplayElement().value.split(",");
			var matchedRef = false;
			if(!this.isBlur && this.currentDisplayValue) {
				keyContacts.splice((keyContacts.length - 1), 1);
				displayContacts.splice((keyContacts.length - 1), 1);
				this.getKeyElement().value = keyContacts;
				this.getDisplayElement().value = displayContacts;
				matchedRef = true;
			}
			for(i=0;i<keyContacts.length;i++) {
				if(!matchedRef && keyContacts[i] != "" && !isEmailValid(keyContacts[i]) && !this._isGEMValue(keyContacts[i])) {
var hexSysId = /^[0-9A-F]{32}$/i.test(keyContacts[i]);
					if (!hexSysId) {
						keyContacts.splice(i, 1);
						displayContacts.splice(i, 1);
						this.getKeyElement().value = keyContacts;
						this.getDisplayElement().value = displayContacts;
						g_form.hideFieldMsg(this.element.parentNode, true);
						g_form.showFieldMsg(this.element.parentNode, "Please enter a valid email address or User", "error");
						invalidContacts = true;
						this.isBlur = false;
						this.onFocus();
					}
				}
			}
			if(!invalidContacts){
				g_form.hideFieldMsg(this.element.parentNode, true);
			}
		}
	},
	
	_isGEMValue: function(value) {
		return value.indexOf("{{") == 0;
	},
	
	getDisplayValue: function() {
		return this._arrayToString(this._hash.values(), true);
	},
	
	getKeyValue: function() {
		return this._arrayToString(this._hash.keys(), false);
	},
		
    referenceSelect: function(sys_id, displayValue) {
   		this._rebuildFromInput();
   		
		this._resolveReference(sys_id, displayValue);	
	},
	
	_resolveReference: function(sys_id, displayValue) {
		var ajax = new GlideAjax("ResolveRefMulti");
		ajax.addParam("sysparm_name", this.elementName);
		ajax.addParam("sysparm_value", sys_id);
		ajax.getXML(this._resolveReferenceResponse.bind(this, sys_id, displayValue));
	},
	
	_resolveReferenceResponse: function(sys_id, displayValue, request) {
		if (!request)
			return;
		
		var xml = request.responseXML;
		if (!xml)
			return;
			
		if (xml) {
		    var item = xml.getElementsByTagName("item");
		    if (item && item.length == 1) {
				displayValue = item[0].getAttribute("label");
				sys_id = item[0].getAttribute("name");
		    }
		}
		this.setHash(sys_id.escapeHTML(), displayValue.strip());
    	this._setFormValues();
    	
        this.showViewImage();
		this.clearInvalid();
		
        this._clearDerivedFields();
		if (this.selectionCallBack && sys_id) {
			eval(this.selectionCallBack);
		}
	},
    
    setHash: function(key, value) {
this._hash.set(key, value.replace(/,/g, ''));
    },
    
    resetHash: function() {
    	this._hash = new Hash();
    },
   
	_getSearchChars: function() {
		var s = this.getDisplayElement().value;
		var sep_pos = s.lastIndexOf(this._SEPARATOR);
		if (sep_pos > 0) {
			s = s.substr(sep_pos+1);
		} 
this.searchChars = s.replace(/^\s+|\s+$/g, '') ;
		return this.searchChars;
	},
	
	setDropDownSize: function() {
		var e = this.element;
		var mLeft = grabOffsetLeft(e) + (this.getDisplayElement().value.length*5) + "px";
		var mTop =  grabOffsetTop(e) + (e.offsetHeight - 1) + "px";
		var mWidth = this.getWidth();
		this.log("width:" + mWidth);
		
		var dd = this.dropDown;
		if (dd.offsetWidth > parseInt(mWidth)) {
			mWidth = dd.offsetWidth;
		    this.log("width:" + mWidth);
		}
		
		this.setTopLeft(dd.style, mTop, mLeft);
		this.setTopLeft(this.iFrame.style, mTop, mLeft);
		this.setWidth(mWidth);
	}, 
	
	onBlur: function() {
		this.isBlur = true;
		this.log("blur event");
		this.hasFocus = false;
		this._rebuildFromInput();
		this.clearDropDown();
	} 
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXTableCompleter.js */
var AJAXTableCompleter = Class.create(AJAXReferenceCompleter, { 
	_processDoc: function(doc) {
		AJAXReferenceCompleter.prototype._processDoc.call(this, doc);
		this.showDisplayValue = doc.getAttribute('show_display_value');
		this.queryType = doc.getAttribute('query_type');
		this.queryText = doc.getAttribute('sysparm_chars');
		this.columnsSearch = doc.getAttribute('columns_search');
	},
	appendElement: function(element) {
		this.tbody.appendChild(element);
	},
	createInnerDropDown: function() {
		if (this.dropDown.childNodes.length > 0)
			return;
		this._createTable();
	},
   
    createChild: function(item) {
		if ( this.currentMenuCount == 0) {
			this.createInnerDropDown();
		}
		var tr = cel("tr");
		if (this.showDisplayValue != "false") {
			var displayValue = item['label'];
			this._createTD(tr, displayValue);
		}
		this._addColumns(tr, item);
	    tr.id = 'ac_option_' + item.name;
	    tr.setAttribute('role', 'option');
		return tr;  	
	},
   
   onDisplayDropDown: function() {
		var width = this.table.offsetWidth + 2;
		var height = this.table.offsetHeight + 2;
		
		this.getDropDown().style.width = width + "px";
		
		if (!g_isInternetExplorer) {
			width = width - 4;
			height = height - 4;
		}
			
		this.getIFrame().style.width = width + "px";
		this.getIFrame().style.height = height + "px";
   },
   
   _addColumns: function(tr, item) {
     var xml = item["XML"];
	 var fields = xml.getElementsByTagName("field");
		
	 for(var i = 0; i < fields.length; i++) {
		  var field = fields[i];
		  var value	 = field.getAttribute("value");
		  var td = $(this._createTD(tr, value));
	      if (this.prevText[i] == value) 
		    td.addClassName("ac_additional_repeat");
	      else 
		    this.prevText[i] = value;
			
		  td.addClassName("ac_additional");   
	  }	
   },
   
   _showMax: function(foundStrings, foundRecents) {
   		if (!this.rowCount)
			return;
	
		var max = 1 * this.max;
		var showing = Math.min(foundStrings.length, max);
		var recentsLength = foundRecents ? foundRecents.length : 0;
		var total = this.rowCount - recentsLength;
		var tr = cel("tr");
		$(tr).addClassName("ac_header");
		var td = cel("td", tr);
		td.setAttribute("colSpan", 99);
		td.setAttribute("width", "100%");
		var a = cel("a", td);		
		a.onmousedown = this._showAll.bindAsEventListener(this);
		if (this.rowCount >= 250) {
			a.innerHTML = new GwtMessage().getMessage("Showing 1 through {0} of more than {1}", showing, total);
		} else {
			a.innerHTML = new GwtMessage().getMessage("Showing 1 through {0} of {1}", showing, total);
		}
		this.appendElement(tr);	
   },
	_showRecents: function() {
		var tr = cel("tr");
		tr.className = "ac_header";
		var td = cel("td", tr);
		td.setAttribute('colspan', 99);
		td.setAttribute("width", "100%");
		td.innerHTML = new GwtMessage().getMessage("Recent selections");
		this.appendElement(tr);
	},
   
   _showAll: function() {
        this.clearTimeout();
		this.max = this.rowCount;
		this.timer = setTimeout(this.ajaxRequest.bind(this), g_key_delay);	
   },
   _createTD: function(tr, text) {
		var td = cel("td", tr);
		$(td).addClassName("ac_cell");
		td.innerHTML = text.escapeHTML(); 
		return td;  	
   },
   		
	_createTable: function() {
		this.table = cel("table");
		$(this.table).addClassName("ac_table_completer");
		
		this.tbody = cel("tbody", this.table);
		this.dropDown.appendChild(this.table);
		this.prevText = new Object();	
	}
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXEmailClientCompleter.js */
var g_key_delay = 250;
var AJAXEmailClientCompleter = Class.create(AJAXTableCompleter, { 
	PROCESSOR: "com.glide.email_client.EmailClient",
   
    initialize: function(element, reference, dependentReference, refQualElements, targetTable, inputSpan, options) {
		AJAXCompleter.prototype.initialize.call(this, 'AC.' + reference, reference);
		options = options || {};
		this.className = "AJAXEmailClientCompleter";
		this.inputSpan = inputSpan;
	    this.element = $(element);
	    this.keyElement = gel(reference);
		this.setTargetTable(targetTable);
		this.additionalValues = {};
		this.renderItemTemplate = null;
		if (options.renderItemTemplate) {
			this.renderItemTemplate = options.renderItemTemplate;
		}
		
		this._commonSetup();
		this.oneMatchSelects = true;
		this.clearDerivedFields = true;
		this.allowInvalid = this.element.readAttribute('allow_invalid')=='true';
    }, 
    
	_processDoc: function(doc) {
		AJAXTableCompleter._processDoc(doc);
	},
	
	keyDown: function(evt) {
		var typedChar = getKeyCode(evt);
		if (typedChar == KEY_ARROWUP) {
		  if( !this.selectPrevious()) 
            this.hideDropDown();		  	
		}  else if (typedChar == KEY_ARROWDOWN) {
			if (!this.isVisible()) {
				if (!this.isPopulated()) 
				  return; 
				  
				this.showDropDown();  
			}
			this.selectNext();
		}
	}, 
	
	keyUp: function(evt) {
		var typedChar = getKeyCode(evt);
		if (!this.isDeleteKey(typedChar)) 
			return; 
			
	    this.clearTimeout();
		this.timer = setTimeout(this.ajaxRequest.bind(this), g_acWaitTime || 50);
	},
	
	clearTimeout: function() {
		if (this.timer != null) 
		  clearTimeout(this.timer);
         this.timer = null;
	},
	
	keyPress: function(evtArg) {
		var evt = getEvent(evtArg);
		var typedChar = getKeyCode(evt);
				
		if (typedChar != KEY_ENTER && typedChar != KEY_RETURN)
			this.clearTimeout();  
		if (this.isNavigation(typedChar))
		  return true; 
	    if (!evt.shiftKey && (typedChar == KEY_ARROWDOWN || typedChar == KEY_ARROWUP))
	        return false;
			
		if (this.isDeleteKey(typedChar))
			return true; 			
			
		if (typedChar == KEY_ENTER || typedChar == KEY_RETURN || typedChar == KEY_TAB) {
			if (this.hasDropDown() && this.select()) 
				this.clearTimeout();
			else {
				this.onBlur();
				if (typedChar != KEY_TAB)
					this.hasFocus = true;
			}
				
			return false;
	    }
		
		if (typedChar == this.KEY_ESC) {
			this.clearDropDown();
			return false;
		}
	    this.timer = setTimeout(this.ajaxRequest.bind(this), g_key_delay);
		return true;
	}, 
	
	isNavigation: function(typedChar) {
		if (typedChar == this.KEY_LEFT)
		  return true;
		if (typedChar == this.KEY_RIGHT)
		  return true;
		if (typedChar == KEY_TAB && this.currentDisplayValue == "")
		  return true;
	},
	
	ajaxRequest: function() {
		var s = this.getDisplayValue();
		if (s.length == 0) {
			this.log("ajaxRequest returned no results");
			this.clearDropDown();
			this.searchChars = null;
			return;
		}
		
		if (s == "*")
		  return; 
		  
		if (s == this.searchChars) {
		  this.log("navigator key pressed");
		  return;
		}
		  
		this.searchChars = s;		
		this.clearKeyValue();
		
		this.log("searching for characters '" + this.searchChars + "'");
		var xml = this.cacheGet(s);  
		if (xml) {
			this.log("cached results found");
			this.processXML(xml);
			return;
		}
		
		if (this.cacheEmpty()) {
		  this.log("cache is empty");
		  this.clearDropDown();
		  this.hideDropDown();
		  return;
		}
        var url = "";
		url += this.addSysParms();  
		url += this.addTargetTable();
		url += this.addAdditionalValues();
		url += this.addAttributes("ac_");
		this.callAjax(url);
	},
	
	processXML: function(xml) {
		this.log("processing XML results");
		var e = xml.documentElement;
		this.rowCount = e.getAttribute('row_count');
	    this.max = e.getAttribute('sysparm_max');
	    
		var items = xml.getElementsByTagName("item");
		values = new Array();
	    for(var i = 0; i < items.length; i++) {
		  var item = items[i];
		  var array = this.copyAttributes(item);
		  array['XML'] = item;
		  values[values.length] = array;
	    }		
		
	    if (!this.hasFocus && this.currentDisplayValue == e.getAttribute("sysparm_chars")) {
    		this.log("checking value without focus");
    		this.ignoreFocusEvent = false;
	    	if ((values.length == 1) ||
	    		((values.length > 1) 
	    			&& (values[0]['label'] == this.getDisplayValue()) 
	    			&& (values[1]['label'] != this.getDisplayValue()))) {
	    		this.log("setting value without focus to " + values[0]['label'] + "->" + values[0]['name']);
	    		
	    		var selectionObj = {};
	    		selectionObj.sysId = values[0]['name'];
	    		selectionObj.label = values[0]['label'] || this.getEmailAddressFromACResultXML(values[0].XML);
	    		
	    		var addressFilterIds = this.getAddressFilterIds();
	    		if (addressFilterIds)
	    			this.proccessXmlResultAndValidateAgainstFilters(selectionObj, xml, addressFilterIds);
	    		else
	    			this.renderSelection(selectionObj.sysId, selectionObj.label);
	    	} else {
	    		if (e.getAttribute('allow_invalid') != 'true')
	    			this.setInvalid();
	    	}
	    	return;
	    }
		
		this.createDropDown(values);
	},
	
	addTargetTable: function() {
		var answer = "";
		if (this.getTargetTable()) {
			answer = "&sysparm_reference_target=" + this.getTargetTable();
		}
		return answer;
	},
	select: function() {
		if (this.selectedItemNum < 0) 
			return false;
		var acItem = this.getSelectedObject().acItem;
		var selectionObj = {};
		selectionObj.sysId = acItem['name'];
		selectionObj.label = acItem['label'] || this.getEmailAddressFromACResultXML(acItem.XML);
		var addressFilterIds = this.getAddressFilterIds();
		if (addressFilterIds)
			this.proccessXmlResultAndValidateAgainstFilters(selectionObj, acItem.XML, addressFilterIds);
		else
			this.renderSelection(selectionObj.sysId, selectionObj.label);
		return true;
	},
	
	renderSelection: function(sysId, label) {
		if (!sysId)
			return;
		var name = htmlEscape(sysId);
		var label = htmlEscape(label);
		this.referenceSelect(sysId, label);
		var s = gel(this.inputSpan);
		if (this.renderItemTemplate) {
			s.innerHTML = s.innerHTML + this.renderItemTemplate(sysId, label);
		} else {
s.innerHTML = s.innerHTML + '<span class="address" tabindex="-1" onclick="addressOnClick(event, this)" style="white-space:nowrap;" value="' + sysId + '" aria-label="' + label + '">' + label + ';</span> ';
		}
		this.resetInputField();
	},
	
	validateAgainstFilters: function(selectionObj, email, addressFilters) {
		var ga = new GlideAjax('EmailAddressValidator');
		ga.addParam("sysparm_name", "applyFilters");
		ga.addParam("sysparm_email_address", email);
		ga.addParam("sysparm_address_filters", addressFilters);
		ga.getXML(this.validateAgainstFiltersCallback.bind(this), null, selectionObj);
	},
	validateAgainstFiltersCallback: function(answer, requestParams) {
		var resultXml = answer.responseXML.documentElement.getElementsByTagName("result");
		if (resultXml && resultXml.length != 0) {
			var result = resultXml[0];
			var isValid = result.getAttribute('is_valid');
			if (isValid == 'true') {
				var sysId = requestParams.sysId;
				var label = requestParams.label;
				this.renderSelection(sysId, label);
			} else
				this.renderInvalidFromFilterResult(result);
		}
	},
	
	proccessXmlResultAndValidateAgainstFilters: function(selectionObj, resultXml, addressFilters) {
		var emailAddress = this.getEmailAddressFromACResultXML(resultXml);
		if (!emailAddress) {
			var table = this.getResultTableFromACResultXML(resultXml);
			if (table === 'sys_user_group') {
				this.renderSelection(selectionObj.sysId, selectionObj.label);
				return;
			}
		}
		this.validateAgainstFilters(selectionObj, emailAddress, addressFilters);
	},
	
	renderInvalidFromFilterResult: function(result) {
		if (!result)
			return;
		var invalidReason = result.getAttribute('invalid_reason');
		var emailAddress = result.getAttribute('email_address');
		this._setDisplayValue(emailAddress);
		if (resizeInput)
			resizeInput(this.element);
		this.invalidateInput(invalidReason);
	},
    _clearDisplayValue: function(v) {
        var e = this.getDisplayElement();
        e.value = "";
    },
   
   referenceSelect: function(sys_id, displayValue) {
		this.log("referenceSelect called with a display value of " + displayValue);
		this._setDisplayValue(displayValue);
		var e = this.getKeyElement(); 
		if (e.value != sys_id) {
			e.value = sys_id;
			callOnChange(e);
		}
		this.searchChars = displayValue;
		this.currentDisplayValue = displayValue;
		this.resetInvalidatedField();
		
		if (this.selectionCallBack && sys_id) {
			eval(this.selectionCallBack);
		}	
   },
	
	onBlur: function() {
		this.log("blur event");
		
 		this.hasFocus = false;
		
		if (this.getDisplayValue().length == 0) {
			if (this.currentDisplayValue != "")
				this.referenceSelect("","");
		} else if (this.selectedItemNum > -1) {
			this.select();
		} else if ((this.getKeyValue() == "") || (this.currentDisplayValue != this.getDisplayValue())) {
			var refInvalid = true;
			
			if (this.isExactMatch()) {
				var selectionObj = {};
				var o = this.getObject(0).acItem;
				selectionObj.sysId = o['name'];
				selectionObj.label = o['label'] || this.getEmailAddressFromACResultXML(o.XML);
				var addressFilterIds = this.getAddressFilterIds();
				if (addressFilterIds)
					this.proccessXmlResultAndValidateAgainstFilters(selectionObj, o.XML, addressFilterIds);
				else
					this.renderSelection(selectionObj.sysId, selectionObj.label);
				refInvalid = false;
			}
			
			if (refInvalid)
				this.setInvalid();
				
			if (refInvalid || !this.isPopulated()) {
				this.log("onBlur with no menu items requesting the reference for " + this.getDisplayValue());
			    this.clearTimeout();
			    this.searchChars = null;
			    this.ignoreFocusEvent = true;
				this.timer = setTimeout(this.ajaxRequest.bind(this), 0);
			}
		}
		
		this.clearDropDown();
	},
	
	isExactMatch: function() {
		if (this.isPopulated()) {
			if (this.getMenuCount() == 1) {
				var acItem = this.getObject(0).acItem;
				var label = acItem['label'];
				var displayValue = this.getDisplayValue();
				if (displayValue)
					displayValue = displayValue.toLocaleLowerCase();
				if (label)
					label = label.toLocaleLowerCase();
				if ((label == displayValue))
					return true;
				return false;
			}
				
			var o0 = this.getObject(0).acItem;
			var o1 = this.getObject(1).acItem;
			if ((o0['label'] == this.getDisplayValue()) && (o1['label'] != this.getDisplayValue()))
				return true;
		}
	},
	
	getAddressFilterIds: function() {
		return this.element.getAttribute('ac_email_address_filters');
	},
	
	getEmailAddressFromACResultXML: function(xml) {
		var email = '';
		var fields = xml.getElementsByTagName("field");
		if (fields && fields.length > 0) {
			var field = fields[0];
			if (field.getAttribute('name') === 'email')
				email = field.getAttribute('value');
		}
		return email;
	},
	
	getResultTableFromACResultXML: function(xml) {
		if (!xml)
			return "";
		return xml.getAttribute('sys_class_name');
	},
	hasDropDownWithResults: function() {
		var dropDown = this.getDropDown();
		if (!dropDown)
			return false;
		return dropDown.getElementsByTagName('tr').length > 0;
	},
	
	setTitle: function(message) {
		if (!message)
			this.getDisplayElement().removeAttribute('data-original-title');
		else
			this.getDisplayElement().setAttribute('data-original-title', message);
		this.getDisplayElement().title = message;
		var srInvalidMsg = document.getElementById('sr_invalid_msg');
		if (srInvalidMsg)
			srInvalidMsg.innerText = message;
	},
	
	invalidateInput: function(invalidReason) {
		this.setInvalid();
		this.setTitle(invalidReason);
		this.clearDropDown();
	},
	
	resetInputField: function() {
		this.element.value = "";
		this.currentDisplayValue = "";
		this.resetInvalidatedField();
		this.clearDropDown();
	},
	
	resetInvalidatedField: function() {
		this.clearInvalid();
		this.setTitle("");
	},
	cachePut: function (name, value) {
		this.cache[name] = value;
	},
	
	cacheGet: function(name) {
		return this.cache[name];
	}
});
;
/*! RESOURCE: /scripts/classes/ajax/AJAXReferenceChoice.js */
var AJAXReferenceChoice = Class.create(AJAXReferenceCompleter, { 
   
   addSysParms: function() {
		var sp = "sysparm_processor=PickList" +
		    "&sysparm_name=" + this.elementName + 
		    "&sysparm_timer=" + this.timer + 
		    "&sysparm_max=" + this.max + 
		    "&sysparm_chars=" + encodeText(this.searchChars);	
		return sp;	
	},
	
    ajaxRequest : function(onResponse) {
    	this.onResponse = onResponse;
        var url = "";
		url += this.addSysParms();  
		url += this.addDependentValue();
		url += this.addRefQualValues();
		url += this.addTargetTable();
		url += this.addAdditionalValues();
		url += this.addAttributes("ac_");
		url += "&sysparm_max=250";
		serverRequestPost("xmlhttp.do", url, this.ajaxResponse.bind(this));	
    },
    
    onBlur : function() {},
    onFocus : function() {},
    
	ajaxResponse: function(response) {
        if (!response.responseXML.documentElement) {
			this.isResolvingFlag = false;
			return;
		}
		
		var currentValue = this.element.value;
		this.element.options.length = 0;
		
		var items = response.responseXML.getElementsByTagName("item");
	    for (var i = 0; i < items.length; i++) {
		  var item = items[i];
		  var id = item.getAttribute('value');
		  var l = item.getAttribute('name');
		  var selected = id == currentValue;
		  addOption(this.element, id, l, selected) ;
	    }
	    if (typeof this.onResponse === "function") {
	      this.onResponse();
	    }
	}
   
});
;
/*! RESOURCE: /scripts/classes/ajax/DerivedFields.js */
var DerivedFields = Class.create({
	initialize : function(elementName, value) {
		this.elementName = elementName;
		this.value = value;
		this.isDerivedWaiting = typeof g_form !== 'undefined' && g_form._isDerivedWaiting(elementName);
		this.dfs = typeof g_form !== 'undefined' && g_form.getDerivedFields(elementName, true) || null;
	},
	clearRelated : function() {
		if (typeof g_form === 'undefined')
			return;
		
        var list = this.dfs;
        if (list == null)
           return;
           
        var prefix = this.elementName.split(".");
        var refFieldName = prefix.shift();
        prefix = prefix.join(".");
        for (var i = 0; i < list.length; i++) {
 		   var elname = prefix + "." + list[i];  
		   g_form._addDerivedWaiting(elname, refFieldName, g_form.isDisabled(elname));
		   var el = gel(refFieldName + '.' + elname);
		   if (el && el.getAttribute('choice') !== '3')
			   g_form.clearValue(elname);
        }
	},
	updateRelated : function(key) {
		if (typeof key === 'undefined')
			key = this.value;
		if (typeof key === 'undefined' || typeof g_form  === 'undefined')
			return;
		var list = this.dfs;
		if (list == null)
			return;
		if (key === '' && !this.isDerivedWaiting) {
			list.forEach(function(fn) {
				resetDerivedWaitingThenclearValue(this.elementName + '.' + fn);
			}, this);
			return;
		}
           
		list.forEach(function(fieldName) {
			var widgetName = 'sys_original.' + this.elementName + '.' + fieldName;
			var widget = gel(widgetName);
			if (widget)
				widget.value = '';
		}, this);
		if (key === '' && this.isDerivedWaiting)
			return;
		setDrivedFieldsValues(this.elementName, key, list);
	},
	isDerivedWaitingClearValue : function() {
		return this.value == '' && this.isDerivedWaiting;
	},
	
	toString: function() { return 'DerivedFields'; }
});
;
/*! RESOURCE: /scripts/classes/Select.js */
var Select = Class.create({
    initialize: function(select) {
        this.select = $(select);
    },
    addOption: function(value, label) {
        addOption(this.select, value, label);
    },
    
    addOptions: function(glideRecord, nameField, valueField) {
        if (!valueField) 
            valueField = 'sys_id';
        if (!nameField) 
            nameField = 'name';
        
        while (glideRecord.next()) 
            addOption(this.select, glideRecord[valueField], glideRecord[nameField]);
    },
    
    clear: function() {
        this.select.options.length = 0;
    },
    
    getSelect: function() {
        return this.select;
    },
    
    getValue: function() {
        return this.select.options[this.select.selectedIndex].value;
    },
    
    selectValue: function(value) {
        this.select.selectedIndex = -1;
        var options = this.select.options;
        for (oi = 0; oi < options.length; oi++) {
            var option = options[oi];
            var optval = option.value;
            if (optval != value) 
                continue;
            
            option.selected = true;
            this.select.selectedIndex = oi;
        }
    },
    
    contains: function(value) {
        var options = this.select.options;
        for (oi = 0; oi < options.length; oi++) {
            if (options[oi].value == value)
				return true;
        }
		return false;
    },
    
    getClassName: function() {
        return "SelectList";
    }
});
function addOption(select, value, label, selected, optionalTitle) {
	var o;
	if (select.multiple == true) 
		o = new Option(label, value, true, selected || false);
	else {
		if (label)
			label = label.unescapeHTML();
		o = new Option(label, value);
	}
	if (optionalTitle)
		o.title = optionalTitle;
	select.options[select.options.length] = o;
	if (select.multiple != true && selected)
		select.selectedIndex = select.options.length - 1;
	return o;
}
function addOptionAt(select, value, label, idx, optionalTitle) {
	for (var i = select.options.length; i > idx; i--) {
		var oldOption = select.options[i - 1];
		select.options[i] = new Option(oldOption.text, oldOption.value);
		if (oldOption.id)
			select.options[i].id = oldOption.id;
		if (oldOption.style.cssText)
			select.options[i].style.cssText = oldOption.style.cssText;
	}
	var o = new Option(label, value);
	if (optionalTitle)
		o.title = optionalTitle;
	select.options[idx] = o;
	return o;
}
function getSelectedOption(select) {
    if (typeof select == "undefined" || select.multiple == true || select.selectedIndex < 0) 
        return null;
    
    return select.options[select.selectedIndex];
}
;
/*! RESOURCE: /scripts/classes/GlideClientCache.js */
var GlideClientCacheEntry = Class.create({
	
	initialize: function(value) {
		this.value = value;
		this.bump();	
	},
	
	bump: function() {
		this.stamp = new Date().getTime();
	}
});
var GlideClientCache = Class.create({
	_DEFAULT_SIZE : 50,
	
	initialize: function(maxEntries) {
		if (maxEntries)
			this.maxEntries = maxEntries;
		else
			this.maxEntries = this._DEFAULT_SIZE;
			
		this._init('default');
	},
	
	_init : function(stamp) {
		this._cache = new Object();
		this._stamp = stamp;
	},
	
	put: function(key, value) {
		var entry = new GlideClientCacheEntry(value);
		this._cache[key] = entry;
		this._removeEldest();
	},
	
	get : function(key) {
		var entry = this._cache[key];
		if (!entry)
			return null;
		
		entry.bump();
		return entry.value;
	},
	
	stamp : function(stamp) {
		if (stamp == this._stamp)
			return;
			
		this._init(stamp);
	},
	ensureMaxEntries: function(max) {
		jslog("Cache resize to " + max);
		if (this.maxEntries < max)
			this.maxEntries = max;
	},
	
	_removeEldest : function() {
		var count = 0;
		var eldest = null;
		var eldestKey = null;
		for (key in this._cache) {
			count++;			
			var current = this._cache[key];
			if (eldest == null || eldest.stamp > current.stamp) {
				eldestKey = key;
				eldest = current;				
			}
		}
		if (count <= this.maxEntries)
				return;
				
		if (eldest != null)
			delete this._cache[key];
	}
});
;
/*! RESOURCE: /scripts/classes/GlideURLElement.js */
var GlideURLElement = Class.create({
	initialize: function(name, lockMessage, editMessage) {
		this.name = name;
		this.lockMessage = lockMessage;
		this.editMessage = editMessage;
		this.addonContainer = gel(name + "-addons");
		this.input = gel(name);
		this.currentButton = null;
if (this.addonContainer == null)
			return;
		if (this.input != null && this.input.type != 'hidden' && this.input.value == '' && "false" == "true") {
			this.unlock();
			this.renderButton(false);
			return;
		}
		this.lock();
		this.renderButton(true);
	},
    setReadOnly: function(isReadonly) {
		if (this.input)
			this.input.readOnly = isReadonly;
if (this.addonContainer == null)
			return;
		if (isReadonly) {
			this.removeButton();
this.lock();
		} else if (this.currentButton == null)
this.renderButton(true);
	},
    setValue: function(value) { 
    	var link = gel(this.name + "_link");
    	link.href = value;
		link.innerHTML = htmlEscape(value);
		this.input.value = value;
		onChange(this.name);
    },
    
    isDisabled: function() {
		return this.currentButton == null;
    },
	getTabIndex: function(){
		return g_accessibility ? 0 : -1;
	},
	removeButton: function(){
		if (this.currentButton) {
this.currentButton.blur().remove();
		}
		this.currentButton = null;
	},
	renderButton: function(isLocked) {
		this.removeButton();
		if (this.addonContainer == null)
			return;
		var newButton;
		if (isLocked) {
			var urlElement = this;
var srSpan = $j('<span class="sr-only"></span>').attr("id", this.name + "_title_text").text(this.editMessage);
newButton = $j('<button class="btn btn-default btn-ref" type="button"><span class="icon icon-locked" aria-hidden="true"/></button>');
			newButton.attr("aria-labelledby", this.name + "_title_text")
				.attr("title", this.editMessage)
				.attr("tabindex", this.getTabIndex())
				.attr("id", this.name + "_unlock")
				.attr("data-ref", this.name)
				.attr("data-omit-aria-describedby", "true")
				.click(function() {
					urlElement.unlock();
					urlElement.renderButton(false);
urlElement.input.focus();
				})
				.append(srSpan);
		} else {
			var urlElement = this;
var srSpan = $j('<span class="sr-only"></span>').attr("id", this.name + "_title_text_lock").text(this.lockMessage);
newButton = $j('<button class="btn btn-default btn-ref" type="button"><span class="icon icon-unlocked" aria-hidden="true"/></button>');
			newButton.attr("aria-labelledby", this.name + "_title_text_lock")
				.attr("title", this.lockMessage)
				.attr("tabindex", this.getTabIndex())
				.attr("id", this.name + "_lock")
				.attr("data-ref", this.name)
				.attr("data-omit-aria-describedby", "true")
				.click(function() {
					urlElement.lock();
					urlElement.renderButton(true);
urlElement.currentButton.focus();
				})
				.append(srSpan);
		}
		this.currentButton = newButton;
		$j(this.addonContainer).prepend(newButton);
	},
	lock: function() {
		this.input.style.display = "none";
		var link = gel(this.name + "_link");
		link.href = this.input.value;
		link.tabIndex = !this.input.value ? "-1" : "0";
		link.style.removeProperty('display');
link.innerHTML = htmlEscape(this.input.value);
	},
	unlock: function() {
		this.input.style.removeProperty("display");
		var link = gel(this.name + "_link");
		link.style.display = "none";
	},
	type: "GlideURLElement",
	z: null
	
});
GlideURLElement.urlClickSave = function() {
	if (!g_form.submitted && g_form.modified) {
		var actionName = 'url_click_save';
		gsftSubmit(undefined, undefined, actionName);
		g_submitted = true;
		return false;
	} else {
		return false;
	}
};
;
/*! RESOURCE: /scripts/classes/GlideListElement.js */
var GlideListElement = Class.create({
	
	initialize: function(name, table) {
		this.name = name;
		this.table = table;
	},
	
	setValue: function(newValue, newDisplayValue) {
		var isArbitraryEmail = false;
var hiddenElement = gel(this.name);
var visibleElement = gel("select_0" + this.name);
		this.visibleElementId = visibleElement.id;
		hiddenElement.value = "";
		visibleElement.options.length = 0;
if (newValue || newDisplayValue) {
		    if (typeof newValue == "string" && newValue != "") {
newValue = newValue.split(",");
				if (typeof newDisplayValue == "undefined" || newDisplayValue == "")
					isArbitraryEmail = true;
		    }
		    if (typeof newDisplayValue == "string" && newDisplayValue != "")
				newDisplayValue = newDisplayValue.split(",");
			if (newDisplayValue && newValue && newDisplayValue.length != newValue.length) {
				newDisplayValue = '';
				isArbitraryEmail = true;
			}
			var allEmail = true;
			if (typeof newDisplayValue == "undefined" || newDisplayValue == "") {
				for (var i = 0; i < newValue.length; i++) {
					var item = newValue[i];
					if (item.indexOf("@") == -1) {
						allEmail = false;
						break;
					}
				}
if (!allEmail) {
					hiddenElement.value = newValue.join();
					var ajaxArgs = this.table + "," + newValue.join();
					var aj = new GlideAjax("ElementGlideListAjax");
					if(this.table === 'global') {
						aj.addParam("sysparm_name", this.name);
						aj.addParam("sysparm_type", "getChoiceLabels");
					} else
						aj.addParam("sysparm_type", "getDisplayValues");
					aj.addParam("sysparm_value", ajaxArgs);
					aj.getXML(this._glideListGetDisplayValuesDone.bind(this));
return;
				}
			} else
				allEmail = false;
			if (typeof newDisplayValue != "undefined" && newValue.length > 0 && newDisplayValue.length != newValue.length) {
				jslog("Error: Length of first and second parameter arrays to setValue for " + this.name + " are not the same");
				return;
			}
			if (typeof newDisplayValue != "undefined") {
				for (i = 0; i < newDisplayValue.length; i++) {
					if (allEmail)
						this._setValue("", newValue[i]);
					else
						this._setValue(newValue[i], newDisplayValue[i]);
				}
			} else if (allEmail && isArbitraryEmail) {
				for (var i = 0; i < newValue.length; i++) {
					this._setValue(newValue[i], newValue[i], true);
				}
			} else {
					this._setValue("", newValue);
			}
		}
		this._updateDisplay();
	},
	
	clearValue : function(noOnChange) {
var hiddenElement = gel(this.name);
var visibleElement = gel("select_0" + this.name);
		if (hiddenElement)
			hiddenElement.value = "";
		if (visibleElement)
			visibleElement.options.length = 0;
		this._updateDisplay(!noOnChange);
	},
	
	_setValue: function(newValue, displayValue, allEmails) {
if (!newValue)
			addGlideListChoice(this.visibleElementId, displayValue, displayValue, false);
		else {
			addGlideListChoice(this.visibleElementId, newValue, displayValue, false);
			if (allEmails !== true)
				toggleAddMe(this.name);
		}
	},
	
	_glideListGetDisplayValuesDone: function(response, args) {
		if (!response || !response.responseXML)
			return;
			
		var hiddenElement = gel(this.name);
		hiddenElement.values = "";
		var references = response.responseXML.getElementsByTagName("reference");
		var choices = response.responseXML.getElementsByTagName("choice");
		for (var i=0; i<references.length; i++) {
			var displayValue = references[i].attributes.getNamedItem("display").nodeValue;
			var referenceValue = references[i].attributes.getNamedItem("sys_id").nodeValue;
			this._setValue(referenceValue, displayValue);
		}
		for (var i=0; i<choices.length; i++) {
			var displayValue = choices[i].attributes.getNamedItem("display").nodeValue;
			var value = choices[i].attributes.getNamedItem("value").nodeValue;
			this._setValue(value, displayValue);
		}
		this._updateDisplay();
	},
	
	_showSpacer: function(display) {
		var spacer = gel("make_spacing_ok_" + this.name);
		if (spacer)
			spacer.style.display = "inline";
	},
	_updateDisplay: function(performOnChange) {
		toggleGlideListIcons(this.name, performOnChange);
		var lockImg = gel(this.name+"_lock");
		var buttonContainer = gel(this.name);
		var buttonContainerVisible = buttonContainer ? buttonContainer.style.display == 'none' : true;
		if (lockImg && (lockImg.style.display == "none" || !buttonContainerVisible))
			this.updateLockedList('select_0' + this.name, this.name + '_nonedit');
	},
	updateLockedList: function(current_value_id, update_id){
		var current_value = gel(current_value_id);
		var the_value = "";
		if (current_value.options) {
			for(var i=0; i<current_value.options.length ;i++) {
				if (i > 0)
					the_value += g_glide_list_separator;
				the_value += current_value.options[i].text;
			}
		}
		else
			the_value = current_value.value;
		var update_element = gel(update_id);
if (update_element.href)
			update_element.href = the_value;
update_element.innerHTML = htmlEscape(the_value);
	},
	setReadOnly: function(disabled) {
		var element = gel(this.name + "_unlock");
		var addMe = $("add_me_locked." + this.name);
		if (!element)
			return;
		element.setAttribute('list-read-only', "false");
		if (addMe)
			addMe.setAttribute('list-read-only', "false");
		
		if (disabled) {
			element.setAttribute('list-read-only', "true");
			lock(element, this.name, this.name + '_edit', this.name + '_nonedit', 'select_0' + this.name, this.name + '_nonedit');
			this._showSpacer();
			element.hide();
			if (addMe) {
				addMe.hide();
				addMe.setAttribute('list-read-only', "true");
			}
				
		} else {
			element.show();
			toggleAddMe(this.name);
		}
	},
	isDisabled: function() {
		var unlockElement = $(this.name + "_unlock");
		if (unlockElement.style.visibility == "visible")
			return false;
		return true;
	},
	type: "GlideListElement"
});
function viewSelection(sourceSelect, tableName, urlBase, idField, clickThroughPopup, popupView) {
	var sysid = glideListGetSelected(sourceSelect);
	if (clickThroughPopup && window.g_form) {
		var refTable = urlBase.substring(0, urlBase.lastIndexOf('.do'));
		var view = popupView || g_form.getViewName();
		tearOff(refTable, sysid, view, false, null);
		return;
	}
    checkSaveID(tableName, urlBase, sysid);
}
function glideListGetSelected(sourceSelect) {
	var selectedOptions = _glideListGetAllSelected(sourceSelect);
	if (!selectedOptions || selectedOptions.length !== 1)
		return;
	return selectedOptions[0].value;
}
function _glideListGetAllSelected(sourceSelect) {
	if (!sourceSelect)
		return;
	var options = Array.from(sourceSelect.options);
	return options.filter(function (opt) {
		return opt.selected;
	});
}
function editList(tableName, urlBase, idField, reference, maintainOrder, collectionLabel, listLabel) {
	g_form.disableMandatoryCheck();
	var g_dialog = new GlideModal('element_glide_list_slush_bucket', false, 900);
	g_dialog.setTitle(getMessage('Edit Members'));
	g_dialog.setPreference('fieldName', idField);
	g_dialog.setPreference('focusTrap', true);
	var form = document.forms[tableName+'.do'];
	form.setAttribute("target","add_or_remove_multiple_iframe");
	addInput(form, "HIDDEN", "sysparm_collection", tableName);
	addInput(form, "HIDDEN", "sysparm_collection_key", idField);
	addInput(form, "HIDDEN", "sysparm_collection_related_file", reference);
	if (collectionLabel)
		addInput(form, "HIDDEN", "sysparm_variable_collection", collectionLabel);
	if (listLabel)
		addInput(form, "HIDDEN", "sysparm_variable_list", listLabel);
	if (typeof maintainOrder !== "undefined")
		addInput(form, "HIDDEN", "sysparm_maintain_order", maintainOrder);
    var sysid = document.getElementsByName("sys_uniqueValue")[0].value;
    sysid = trim(sysid);    
	addInput(form, "HIDDEN", "sysparm_collectionID", sysid);
	var url = tableName+'.do?sys_id='+sysid;
    var view = gel('sysparm_view');
    if (view != null) {
       view = view.value;
       if (view != '')
          url = url + "&sysparm_view=" + view;
    }
    var changeset = gel('sysparm_changeset');
    if (changeset != null) {
        changeset = changeset.value;
        if (changeset != '')
            url = url + "&sysparm_changeset=" + changeset;
    }
    
    var sysparm_record_row = gel('sysparm_record_row');
    if (sysparm_record_row)
    	url = url + "&sysparm_record_row=" + sysparm_record_row.value;
    var sysparm_record_rows = gel('sysparm_record_rows');
    if (sysparm_record_rows)
    	url = url + "&sysparm_record_rows=" + sysparm_record_rows.value;
    var sysparm_record_list = gel('sysparm_record_list');
    if (sysparm_record_list)
    	url = url + "&sysparm_record_list=" + encodeURIComponent(sysparm_record_list.value);
	addInput(form, "HIDDEN", "sysparm_referring_url", url);
	getRefQualURI(tableName, "*");
	addInput(form, "HIDDEN", "sysparm_client_record", "session");
	form.sys_action.value = 'sysverb_m2ms';
	if (typeof form.onsubmit == "function") {
	  var rc = form.onsubmit();
	  if (!rc)
	     return;
	  g_form.modified = false;
	  if (window.CustomEvent.fireAll)
	  	 window.CustomEvent.fireAll('form.isModified', false);
	}
	g_dialog.render();
	g_dialog.on('bodyrendered', function() {
		if (this.$modalContent[0]){
			this.focusTrap = window.focusTrap(this.$modalContent[0]);
			this.focusTrap.activate();
			form.submit();
		}
	});
	g_dialog.on('closeconfirm', function() {
		g_form.enableMandatoryCheck();
		form.removeAttribute("target");
		form.removeClassName('form-submitted');
		if (g_form.submitted)
			g_form.submitted = false;
		if (this.focusTrap)
			this.focusTrap.deactivate();
	});
	return false;
}
function addGlideListChoice(selectID, value, displayValue,  toggleIcons) {
	if (!value)
		return;
	var ref = selectID.substring('select_0'.length);
	var select = new Select(selectID);
	CustomEvent.fire("element_mapping:glide_list_add", {
		id: ref,
		value: value,
		displayValue: displayValue
	});
	telemetryForRecordUpdateElement(selectID);
	if (select.contains(value)) 
		return;
	select.addOption(value, displayValue);
	if (typeof toggleIcons == "undefined" || toggleIcons == true)
		toggleGlideListIcons(ref);
	if($j) {
		$j(gel(ref)).trigger("change");
	}
}
function addEmailAddressToList(selectID, input, msg) {
	if (typeof input === "undefined")
		return;
	var ref = input.getAttribute('data-ref');
	g_form.hideErrorBox(ref);
	if (input.value == null || input.value == "")
		return;
	if (!isEmailValid(input.value)) {
		g_form.showErrorBox(ref, msg);
		return;
	}
	addGlideListChoice(selectID, input.value, input.value);
	input.value = "";
}
function emailInputKeyPress(e, selectID, input, msg) {
	if (typeof input === "undefined")
		return;
	var ref = input.getAttribute('data-ref');
	g_form.hideErrorBox(ref);
	var keyCode = getKeyCode(e);
	if (keyCode != KEY_ENTER)
		return;
	Event.stop(e);
	addEmailAddressToList(selectID, input, msg);
	return false;
}
function removefieldBackgroundText(the_field, the_text, ref) {
	if (the_field.value == the_text) {
        the_field.value = "";
        var standard_field = gel("select_0" + ref);
        the_field.style.color = standard_field.style.color;
        the_field.style.fontStyle = standard_field.style.fontStyle;
    }
}
function selectFromFieldList(selectID, depTableElementID, refTables, types, title, evt, matchTypesAndTables) {
	if (evt)
		Event.stop(evt);
	var depElement = gel(depTableElementID);
	if (!depElement) {
		jslog("Dependent table not found for list");
		return;
	}
		
	var table = depElement.value;
	if (!table) {
		jslog("Dependent table not specified for list");
		return;
	}
	
	var gDialog = new GlideDialogWindow('field_list_selector');
    gDialog.setTitle(title);
	gDialog.setPreference('sysparm_elementID', selectID);
	gDialog.setPreference('sysparm_table', table);
	gDialog.setPreference('sysparm_ref_tables', refTables);
	gDialog.setPreference('sysparm_types', types);
gDialog.setPreference('sysparm_prefix', '__dollar__{');
	gDialog.setPreference('sysparm_suffix', '}');
	gDialog.setPreference('sysparm_match_types_and_tables', matchTypesAndTables);
	gDialog.setPreference('set_request_params', 'true');
	gDialog.render();
	gDialog = null;
}
function addGlideListReference(fieldid) {
    var value = gel(fieldid).value;
    var displayWidget = gel('sys_display.' + fieldid);
    var display = displayWidget.value;
    displayWidget.value = '';
	addGlideListChoice('select_0' + fieldid,  value, display);
}
function addGlideListFromSelect(selectID, select) {
	var option = select.options[select.selectedIndex];
	addGlideListChoice(selectID, option.value, option.label);
}
function addfieldBackgroundText(the_field, the_text) {
    if (the_field.value == "") {
        the_field.value = the_text;
        the_field.save_old_color = the_field.style.color;
        the_field.style.color = "blue";
        the_field.style.fontStyle = "italic";
    }
}
function setRemovalNotification(id) {
	var msg = new GwtMessage();
	var notification = gel('aria-removal-notification.' + id);
	if (!notification)
		return;
	var select = gel('select_0' + id);
	var selectedOptions = _glideListGetAllSelected(select);
	if (!selectedOptions)
		return;
	var text = !selectedOptions.length
		? msg.getMessage('nothing was selected')
		: selectedOptions.map(function(opt) {
			return msg.getMessage('{0} was successfully removed', opt.text);
		  }).join(', ');
	if (notification.innerText === text)
text += '!';
	notification.innerText = text;
}
function toggleGlideListIcons(id, performOnChange) {
	var add_me = gel('add_me.' + id);
	var remove = gel('remove.' + id);
	var view2 = gel('view2.' + id);
	if (!view2)
		view2 = gel('view2link.' + id);
	var select = gel('select_0' + id);
	var options = select.options;
	var selCnt = 0;
	var isMe = false;
	for (var i = 0; i != options.length; i++) {
		if (options[i].selected)
			selCnt++;
		if (typeof g_user !== "undefined" && options[i].value == g_user.userID)
			isMe = true;
	}
	if (view2) {
		var isEmail = false;
		var selectText = ''
		if (selCnt == 1) {
			var selectValue = select.options[select.selectedIndex].value;
			selectText = select.options[select.selectedIndex].text;
			if (selectValue.indexOf("@") > -1) {
if (selectValue == selectText)
					isEmail = true;
			}
		}
		var view2Link = gel('view2link.' + id);
		if (selCnt == 1 && !isEmail) {
view2.src = 'images/icons/hover_icon_small2.gifx';
			view2Link.disabled = false;
			var clickThrough = (view2Link.getAttribute('data-clickthrough') === 'true');
			var ariaLabel = (clickThrough) ? 'Open selected item: {0}' : 'Preview selected item: {0}';
			view2Link.setAttribute('aria-label', new GwtMessage().getMessage(ariaLabel, selectText));
		} else {
view2.src = 'images/icons/hover_icon_small2_off.gifx';
			view2Link.disabled = true;
			view2Link.removeAttribute('aria-label');
		}
	}
	if (remove) {
		if (selCnt > 0)
			if (remove.tagName == "BUTTON")
				remove.disabled = false;
			else
remove.src = 'images/delete_edit.gifx';
		else
			if (remove.tagName == "BUTTON")
				remove.disabled = true;
			else
remove.src = 'images/delete_edit_off.gifx';
	}
	if (add_me) {
		if (!isMe)
			if (add_me.tagName == "BUTTON")
				add_me.disabled = false;
			else
add_me.src = 'images/icons/user_obj.gifx';
		else
			if (add_me.tagName == "BUTTON")
				add_me.disabled = true;
			else
add_me.src = 'images/icons/user_obj_off.gifx';
	}
						
	add_me = null;
	remove = null;
	view2 = null;
	options = null;
	if (typeof performOnChange != "undefined")
		if (performOnChange == false)
			return;
	
	glideListSaveList(id);
	if (isCatalogGlideList(id))
		variableOnChange(id);
}
function isCatalogGlideList(id) {
	return ((id.startsWith("IO:") || id.startsWith("ni.VE") || id.startsWith("ni.QS")) && typeof (variableOnChange) == 'function')
}
function toggleAddMe(id) {
	var add_me_locked = $('add_me_locked.' + id);
	if (!add_me_locked)
		return;
	var select = gel('select_0' + id);
	var options = select.options;
	var isMe = false;
	for (var i = 0; i != options.length; i++) {
		if (options[i].value == g_user.userID) {
			isMe = true;
			break;
		}
	}
	var unlockImg = $(id + "_unlock");
	if (isMe)
		add_me_locked.hide();
	else if (unlockImg.style.display == "none")
		add_me_locked.hide();
	else
		add_me_locked.show();
}
function glideListSaveList(id) {
    var sel0 = gel('select_0' + id);
    var distribution = gel(id);
    saveAllSelected([ sel0 ], [ distribution ], ',', '\\', '--None--');
    if (!isCatalogGlideList(id))
    onChange(id);
}
function glideListViewSelection(id, refParent, reference, clickThroughPopup) {
	var view2Link = gel("view2link." + id);
	if (view2Link.disabled == true)
		return false;
	var popupView = view2Link.getAttribute('data-popup-view');
	viewSelection(gel("select_0"+id), refParent, reference + ".do", id, clickThroughPopup === 'true', popupView);
}
function glideListPopupSelection(event, id, table) {
	var select = gel("select_0"+id);
	var sysid = glideListGetSelected(select);
	if (sysid) {
		popRecordDiv(event, table, sysid);
		telemetryForPreviewRecord(id, table);
	}
}
function glideListInit(id, ref, reference) {
	var sel = gel(id);
	if (sel.form) {
		addOnSubmitEvent(sel.form, function() {
			saveAllSelected([ gel(id) ], [ gel(ref) ], ',', '\\', '--None--');
		 });
	}
	var listObject = new GlideListElement(ref, reference);
	g_form.registerHandler(ref, listObject);
	toggleGlideListIcons(ref, false);
	var dynamicTable = gel(ref).getAttribute("data-dynamic-table-dependent");
	if (dynamicTable) {
		$j(gel(dynamicTable)).on("change", function() {
			var value = $j(this).val();
			var display = gel("sys_display." + ref);
			display.setAttribute("data-reference", value);
			if (display.ac) {
				display.ac.setAdditionalValue('sysparm_ref_override', value);
			}
			$j(gel(ref)).val("");
			$j(gel('select_0' + ref)).find('option').remove().end().val("");
			CustomEvent.fire("element_mapping:glide_list_table_changed", {
				id: ref,
				newTable: value
			});
		})
	}
	var $look = $j('[id="lookup.' + ref + '"]:not(.sn-popover-complex)');
	if ($look.length) {
		$look.on('click keydown', function(e) {
			if (e.type === "keydown" && !($j.ui.keyCode.ENTER === e.which || $j.ui.keyCode.SPACE === e.which)) return;
			var dsp = $j(gel("sys_display." + ref));
			reflistOpen(ref,
				dsp.attr("data-name"),
				dsp.attr('data-reference'),
				dsp.attr('data-dependent'),
				'false',
				dsp.attr('data-ref-qual'),
				null,
				null,
				null,
				true);
			mousePositionSave(e);
			e.preventDefault();
			e.stopPropagation();
		});
	}
}
function safeAriaLiveAssertive(message) {
	if (window.NOW && window.NOW.accessibility && window.NOW.accessibility.ariaLiveAssertive) {
		window.NOW.accessibility.ariaLiveAssertive(message);
	}
}
;
/*! RESOURCE: /scripts/classes/GlideUserImageElement.js */
var GlideUserImageElement = Class.create({
    initialize: function(name) {
        this.name = name;
        this._ieResize();
    },
	isTemplatable: function(){
		return false;
	},
	isReadOnly : function(){
		var $element = $(this.name);
		return $element.hasClassName('readonly') || $element.getAttribute("writeaccess") == "false";
	},
    setReadOnly: function(disabled) {
		var element = gel(this.name);
        var editButtons = gel("edit." + this.name);
        var addButton = gel("add." + this.name);
        var image = gel("image." + this.name);
		if (element)
			element.readOnly = disabled;
        if (disabled) {
            hideObject(editButtons);
            hideObject(addButton);
        } else { 
            showObjectInline(editButtons);
            if (!image)
                showObjectInline(addButton);
        }
    },
	
	isDisabled: function() {
        var editButtons = $("edit." + this.name);
		if (editButtons && editButtons.visible())
			return false;
		var addButton = $("add." + this.name);
		if (addButton && addButton.visible())
			return false;
		
		return true;				
	},
	
	_ieResize: function() {
		var iInput = gel("image." + this.name);
		if (isMSIE && iInput) {
			var image = $(iInput.value);
			
			var height = image.getLayout().get('height');
			var maxHeight = parseInt(image.getStyle('max-height').sub('px', ''), 10);
			
			var width = image.getLayout().get('width');
			var maxWidth = parseInt(image.getStyle('max-width').sub('px', ''), 10);
			
			if (height > maxHeight || width > maxWidth) {
var widthRatio = width / maxWidth;
var heightRatio = height / maxHeight;
				
				if (widthRatio > heightRatio)
					image.width = maxWidth;
				else 
					image.height = maxHeight;
			}
		}
	}
});  
;
/*! RESOURCE: /scripts/classes/FieldListElement.js */
var FieldListElement = Class.create({
	initialize: function(name, dependent, dependentTable, defaultDisplayName, newRecord, excludeDotWalk) {
		this.name = name;
		this.dependent = dependent;
		this.table = dependentTable == "null" ? null : dependentTable;
		this.excludeDotWalk = excludeDotWalk;
this.defaultDisplayName = (defaultDisplayName == "true");
		if (this.defaultDisplayName)
this.tableChanged = (newRecord == "true");
		else
			this.tableChanged = false;
this.displayName = "";
		this.lastValue = "";
		this.initialSetup = true;
		this.fetching = false;
		this.valuesToSet = null;
	},
	onLoad: function() {
		if (!this.table) {
			var table = resolveDependentValue(this.name, this.dependent, this.table);
			this.table = table;
		}
		var processGlideVarInput = document.getElementById('ni.' + this.name + '.list_item_id');
		processGlideVarInput.onchange = this.processGlideVars.bind(this);
		this._listCols();
	},
	depChange: function() {
		gel(this.name).value = "";
		this._setTableName();
	},
	moveOptionUpdate: function(sourceSelect, targetSelect, keepSourceLabel, unmovableSourceValues, keepTargetLabel,
							   direction, property) {
		moveOption(sourceSelect, targetSelect, keepSourceLabel, unmovableSourceValues, keepTargetLabel,
			direction, property);
		this._setListValues();
	},
	moveUpUpdate: function(select) {
		moveUp(gel(select));
		this._setListValues();
	},
	moveDownUpdate: function(select) {
		moveDown(gel(select));
		this._setListValues();
	},
	_listCols: function() {
		this.fetching = true;
		var colist = gel(this.name);
		var url = "xmlhttp.do?sysparm_processor=ListColumns&sysparm_exclude_dot_walk=" + this.excludeDotWalk + "&sysparm_expanded=0&sysparm_name=" + this.table +
			"&sysparm_include_display_name=true&sysparm_qualified_field_name=" + this.name;
		if (colist.value.length > 0)
			url += "&sysparm_col_list=" + colist.value;
		jslog("FieldListElement: _listCols calling AJAX " + url);
		serverRequest(url, this._colsReturned.bind(this), null);
	},
	_colsReturned: function(request) {
		jslog("FieldListElement: _colsReturned AJAX response received");
		var tcols = request.responseXML;
		var scols = gel("ni." + this.name + ".select_1");
		scols.options.length = 0;
		var acols = gel("ni." + this.name + ".select_0");
		acols.options.length = 0;
		var colist = gel(this.name);
		var mfields = new Array();
		var useSpecFields = false;
		var root = tcols.getElementsByTagName("xml")[0];
		this.displayName = root.getAttribute("displayName");
		if (this.tableChanged) {
			if (this.defaultDisplayName)
				colist.value = this.displayName;
			else
				colist.value = '';
		}
		if (colist.value.length > 0) {
			mfields = colist.value.split(",");
			if (mfields.length > 0)
				useSpecFields = true;
		}
		var items = tcols.getElementsByTagName("item");
		for (var i = 0; i != items.length; i++) {
			var item = items[i];
			var value = item.getAttribute("value");
			var label = item.getAttribute("label");
			var ref = item.getAttribute("reference");
			if (ref) {
				if(ref == '')
					ref = null;
			}
			if (valueExistsInArray(value, mfields)) {
				scols.options[scols.options.length] = this._enhanceOption(item, value, label, root, "selected");
				if (ref)
					acols.options[acols.options.length] = this._enhanceOption(item, value, label, root, "available");
			} else {
				acols.options[acols.options.length] = this._enhanceOption(item, value, label, root, "available");
			}
		}
		if (useSpecFields) {
			var newOptions = new Array();
			for(var i = 0; i != mfields.length; i++) {
				var s = mfields[i];
				for(var z = 0; z != scols.options.length; z++) {
					if (scols.options[z].value == s) {
						newOptions[newOptions.length] = scols.options[z];
						break;
					}
				}
			}
	
			scols.options.length = 0;
			for(var i = 0; i != newOptions.length; i++) {
				scols.options.add(newOptions[i]);
			}
		}
		this._setListValues();
		this.fetching = false;
		if (this.valuesToSet === null)
			return;
		this.setValue(this.valuesToSet.value, this.valuesToSet.displayValue);
		this.valuesToSet = null;
	},
    _fireSetValueEvent : function() {
        if(typeof g_form != 'undefined') {
			var form = g_form.getFormElement();
			if(typeof form != 'undefined')
				$(form).fire('glideform:setvalue');
		}
    },
    
	_enhanceOption: function (item, value, label, root, status) {
		var ref = null;
		var xlabel = label;
		if (status != "selected") {
			ref = item.getAttribute("reference");
			if (ref) {
				if(ref != '') {
					xlabel += " (+)";
				} else
					ref = null;
			}
		}
		var o = new Option(xlabel, value);
		o.cv = value;
		o.cl = label;
		if (ref) {
			o.tl = item.getAttribute("reflabel");
			o.className = 'text-success';
			o.reference = ref;
			o.doNotDelete = 'true';
			if (root) {
				o.bt = root.getAttribute("name");
				o.btl = root.getAttribute("label");
			}
		}
		o.type = item.getAttribute('type');
		var elementAttributes = item.getAttribute('attributes');
		if (elementAttributes) {
			o.elementAttributes = this._setNamedAttributes(o, elementAttributes);
		}
		return o;
	},
	_setNamedAttributes: function(o, attrs) {
		o.namedAttributes = o.namedAttributes || {};
		if (!attrs)
			return;
		var pairs = attrs.split(',');
		for (var i = 0; i < pairs.length; i++) {
			var parts = pairs[i].split('=');
			if (parts.length == 2)
				o.namedAttributes[parts[0]] = parts[1];
		}
	},
	_setTableName: function() {
		var table = resolveDependentValue(this.name, this.dependent, this.table);
		if (table != this.table) {
			this.tableChanged = true;
			this.table = table;
			this._listCols(table);
		}
	},
	_setListValues: function() {
		var scols = gel("ni." + this.name + ".select_1");
		var values = "";
		var text = "";
		var count = 0;
		for (var i=0; i < scols.length; i++) {
			var opt = scols.options[i];
			if (opt.value && opt.value != "--None--") {
				if (count > 0) {
					values += ",";
					text += ", ";
				}
				values += opt.value;
				text += opt.text;
				count++;
			}
		}
		gel(this.name).value = values;
		var nonedit = gel(this.name+"_nonedit");
		if (nonedit)
			nonedit.innerText = text;
		this.tableChanged = false;
		if (this.lastValue != values) {
			this.lastValue = values;
			if (!this.initialSetup)
				onChange(this.name);
		}
		
		if (this.initialSetup)
			this._fireSetValueEvent();
		this.initialSetup = false;
	},
	setReadOnly: function(disabled) {
		if (disabled) {
			var unlockElement = gel(this.name + "_unlock");
			lock(unlockElement, this.name, this.name + '_edit', this.name + '_nonedit', 'ni.' + this.name + '.select_1', this.name + '_nonedit');
			hideObject(unlockElement);
		} else if (gel(this.name + '_edit').style.display == "none") {
			var unlockElement = gel(this.name + "_unlock");
			if (isDoctype())
				showObjectInlineBlock(unlockElement);
			else
				showObjectInline(unlockElement);
		}
		gel(this.name).disabled = disabled;
		return true;
	},
	isDisabled: function() {
		var unlockElement = $(this.name + "_unlock");
		if (unlockElement && unlockElement.visible())
			return false;
		return true;
	},
	setValue: function(value, displayValue) {
		if (this.fetching) {
			this.valuesToSet = {
				value: value,
				displayValue: displayValue
			};
			return;
		}
gel(this.name).value = value;
		var acols = gel("ni." + this.name + ".select_0");
		var scols = gel("ni." + this.name + ".select_1");
		if (typeof value == "string"){
			value = value.split(",");
		}
		if (typeof displayValue == "string"){
			displayValue = displayValue.split(",");
		}
		if ( value && displayValue) {
			if (value.length != displayValue.length) {
				jslog("FieldListElement " + this.name +
				".setValue() received value and displayValue parameters of different lengths");
				return;
			}
		}
		var selectedIds = new Array();
		var index = 0;
		for (var i = 0; i < scols.options.length; i++) {
			selectedIds[index] = i;
			index++;
		}
		if (index > 0) {
			moveSelectedOptions(selectedIds, scols, acols, '--None--', ['home'], '--None--');
		}
		var text = [];
		var validValue = new Array;
		for (var i = 0; i < value.length; i++) {
			var v = value[i];
			var aIndex = this._getOptionIndex(acols, v);
if (aIndex > -1) {
				selectedIds = new Array();
				selectedIds[0] = aIndex;
				text.push(acols.options[aIndex].text);
				validValue[i] = v;
				moveSelectedOptions(selectedIds, acols, scols, '--None--', [], '--None--');
} else {
				if (displayValue && displayValue[i]){
					addChoiceFromValueAndDisplay(scols, v, displayValue[i]);
					text.push(displayValue[i]);
					validValue[i] = v;
				}
			}
		}
        
		if(validValue.length > 0)
			this.lastValue = validValue.join(',');
		var nonedit = gel(this.name+"_nonedit");
		if (nonedit) {
			nonedit.innerHTML = text.join(', ');
		}
		onChange(this.name);
	},
	processGlideVars: function() {
		if (!this.name)
			return;
		var prefix = 'ni.' + this.name + '.';
		var item = document.getElementById(prefix + 'list_item_id');
		var itemId = item && item.value;
		if (itemId) {
			var select = document.getElementById(prefix + 'select_0');
			var option = getSingleSelectedOption(select);
			var table = getTablenameFromOption(option);
			var glideAjax = new GlideAjax('GlideVarItemsProcessor');
			glideAjax.addParam('sysparm_type', 'get_item_variables');
			glideAjax.addParam('sysparm_item_id', itemId);
			glideAjax.addParam("sysparm_name", table);
			glideAjax.getXML(setVariableOptions, null, [prefix, itemId, option.value]);
		}
	},
	_getOptionIndex: function(select, value) {
		for (var i=0; i<select.length; i++)
			if (select.options[i].value == value)
				return i;
		return -1;
	},
	type: function() {
		return "FieldListElement";
	}
});
;
/*! RESOURCE: /scripts/classes/OrderListElement.js */
var OrderListElement = Class.create({
	initialize: function(name, newRecord) {
		this.name = name;
		this.lastValue = "";
		this.initialSetup = true;
		var nonedit = gel(this.name+"_nonedit");
	},
	onLoad: function() {
		var values = gel(this.name).value;
		this.setValue(values);
	},
	moveOptionUpdate: function(sourceSelect, targetSelect, keepSourceLabel, unmovableSourceValues, keepTargetLabel,
							   direction, property) {
		moveOption(sourceSelect, targetSelect, keepSourceLabel, unmovableSourceValues, keepTargetLabel,
			direction, property);
		this._setListValues();
	},
	moveUpUpdate: function(select) {
		moveUp(gel(select));
		this._setListValues();
	},
	moveDownUpdate: function(select) {
		moveDown(gel(select));
		this._setListValues();
	},
    _fireSetValueEvent : function() {
        if(typeof g_form != 'undefined') {
			var form = g_form.getFormElement();
			if(typeof form != 'undefined')
				$(form).fire('glideform:setvalue');
		}
    },
	_setListValues: function() {
		var scols = gel("ni." + this.name + ".select_1");
		var displayValues = [];
		var text = "";
		var count = 0;
		for (var i=0; i < scols.length; i++) {
			var opt = scols.options[i];
			if (opt.value && opt.value != "--None--") {
				if (count > 0) {
					text += ", ";
				}
				displayValues.push({label: opt.text, value: opt.value});
				text += opt.text;
				count++;
			}
		}
		gel(this.name).value = JSON.stringify(displayValues);
		var nonedit = gel(this.name+"_nonedit");
		if (nonedit){
			nonedit.innerText = text;
		}
		if (this.lastValue != displayValues) {
			this.lastValue = displayValues;
			if (!this.initialSetup)
				onChange(this.name);
		}
		
		if (this.initialSetup)
			this._fireSetValueEvent();
		this.initialSetup = false;
		nonedit.style.visibility = "visible";
	},
	setReadOnly: function(disabled) {
		if (disabled) {
			var unlockElement = gel(this.name + "_unlock");
			lock(unlockElement, this.name, this.name + '_edit', this.name + '_nonedit', 'ni.' + this.name + '.select_1', this.name + '_nonedit');
			hideObject(unlockElement);
		} else if (gel(this.name + '_edit').style.display == "none") {
			var unlockElement = gel(this.name + "_unlock");
			if (isDoctype())
				showObjectInlineBlock(unlockElement);
			else
				showObjectInline(unlockElement);
		}
		gel(this.name).disabled = disabled;
		return true;
	},
	isDisabled: function() {
		var unlockElement = $(this.name + "_unlock");
		if (unlockElement && unlockElement.visible())
			return false;
		return true;
	},
	setValue: function(values) {
		if(!values) return;
		values = typeof values === "string" ? JSON.parse(values) : values;
		var scols = gel("ni." + this.name + ".select_1");
		scols.options.length = 0
		values
			.forEach(function(value) {
				scols.options[scols.options.length] =  new Option(value.label, value.value);
			});
		
		this._setListValues();
		var unlockElement = gel(this.name + "_unlock");
		lock(unlockElement, this.name, this.name + '_edit', this.name + '_nonedit', 'ni.' + this.name + '.select_1', this.name + '_nonedit');
		onChange(this.name);
	},
	type: function() {
		return "OrderListElement";
	}
});
;
/*! RESOURCE: /scripts/classes/GlideTimeElement.js */
var GlideTimeElement = Class.create({
	initialize: function(name, initialValue) {
		this.name = name;
		if (initialValue)
			this.setValue(initialValue)
	},
	setValue: function(value, displayValue) {
		if (value == "")
			value = "00:00:00";
		var hours = 0;
		var mins = 0;
		var secs = 0;
		var ampm = "";
		var dateFormat = gel(this.name + '_format').value;
		if (value == "00:00:00") {
if (dateFormat.indexOf("hh") > -1) {
				hours = 12;
				ampm = "AM";
			}
		} else {
			var timeObject = this._getTimeFromFormat(value, dateFormat);
			if (!timeObject) {
				this.log("setValue aborted; unable to interpret time '" + value + "' for format '" + dateFormat + "'");
				return;
			}
			hours = timeObject.hh;
			mins = timeObject.mm;
			secs = timeObject.ss;
			ampm = timeObject.ampm;
		}
		hours = this._LZ(hours, (dateFormat.toLowerCase().indexOf("hh") > -1));
		mins = this._LZ(mins, (dateFormat.toLowerCase().indexOf("mm") > -1));
		secs = this._LZ(secs, (dateFormat.toLowerCase().indexOf("ss") > -1));
		gel(this.name + 'dur_hour').value = hours;
		gel(this.name + 'dur_min').value = mins;
		var secondsInput = gel(this.name + 'dur_sec');
		if (secondsInput)
			secondsInput.value = secs;
	    var ampmw = gel(this.name + 'dur_ampm');
	    if (ampmw)
	       if (ampm)
	          ampmw.value = ampm;
		if ("undefined" === typeof g_form)
GlideTimeElement.updateRealTime(this.name);
		else {
			g_form._internalChange = true;
GlideTimeElement.updateRealTime(this.name);
			g_form._internalChange = false;
		}
	},
	setReadOnly: function(disabled){
		gel(this.name + "dur_hour").disabled = disabled;
		gel(this.name + "dur_min").disabled = disabled;
		var secondsInput = gel(this.name + 'dur_sec');
		if (secondsInput)
			secondsInput.disabled = disabled;
		var dateFormat = gel(this.name + '_format').value;
		if(dateFormat.indexOf("z") > -1)
			gel(this.name + "dur_ampm").disabled = disabled;
		gel(this.name).disabled = disabled;
	},
	_LZ: function(val, padded) {
		if (!padded) {
			if (val.length > 1)
				if (val.charAt(0)=='0')
					val = val.substring(1);
			return val;
		}
		val += "";
		if (val.length < 2)
			val = "0" + val;
		return val;
	},
	_getTimeFromFormat: function(val, format) {
		val = trim(val);
		var i_val=0;
		var i_format = 0;
		var c = "";
		var token = "";
		var hh="", mm="", ss="", ampm="";
		while (i_format < format.length) {
			c=format.charAt(i_format);
			token="";
			while ((format.charAt(i_format)==c) && (i_format < format.length)) {
				token += format.charAt(i_format++);
			}
			if (token=="hh"||token=="h") {
				hh=this._getInt(val,i_val,token.length,2);
				if(hh==null||(hh<1)||(hh>12)) {
					this.log("bad hours: " + hh);
					return;
				}
				i_val+=hh.length;
			} else if (token=="HH"||token=="H") {
				hh=this._getInt(val,i_val,token.length,2);
				if(hh==null||(hh<0)||(hh>23)) {
					this.log("bad hours: " + hh);
					return;
				}
				i_val+=hh.length;
			} else if (token=="mm"||token=="m") {
				mm=this._getInt(val,i_val,token.length,2);
				if(mm==null||(mm<0)||(mm>59)) {
					this.log("bad minutes: " + mm);
					return;
				}
				i_val+=mm.length;
			} else if (token=="ss"||token=="s") {
				ss=this._getInt(val,i_val,token.length,2);
				if(ss==null||(ss<0)||(ss>59)) {
					this.log("bad seconds: " + ss);
					return;
				}
				i_val+=ss.length;
			} else if (token=="a"||token=="aa") {
				if (val.substring(i_val,i_val+2).toLowerCase()=="am")
					ampm="AM";
				else if (val.substring(i_val,i_val+2).toLowerCase()=="pm")
					ampm="PM";
				else {
this.log("bad AM/PM: " + val.substring(i_val,i_val+2));
					return;
				}
				i_val+=2;
			} else {
				if (val.substring(i_val,i_val+token.length)!=token) {
					this.log("time did not match format at character " + i_val);
					return;
				} else
					i_val+=token.length;
			}
		}
		if (i_val != val.length) {
			this.log("time includes trailing characters");
			return;
		}
		return {hh:hh, mm:mm, ss:ss, ampm: ampm};
	},
	_getInt: function(str,i,minlength,maxlength) {
		for (var x=maxlength; x>=minlength; x--) {
			var token=str.substring(i,i+x);
			var intPart = this._getInteger(token);
			if (intPart != "")
				return intPart;
		}
		return null;
	},
	_getInteger: function(val) {
		var digits="1234567890";
		for (var i=0; i < val.length; i++) {
			if (digits.indexOf(val.charAt(i))==-1)
				return val.substring(0,i);
		}
		return val;
	},
	log: function(msg) {
		jslog("GetTimeElement - " + msg);
	},
	type: function() {
		return "GlideTimeElement";
	}
});
GlideTimeElement.updateRealTime = function(ref) {
	var sdata = gel(ref);
	var hour = gel(ref + 'dur_hour');
	var min = gel(ref + 'dur_min');
	var sec = "";
	var ampm = "";
	var dateFormat = gel(ref + '_format').value;
	if (dateFormat.indexOf("a") > -1) {
		var ampmw = gel(ref + 'dur_ampm');
		if (ampmw)
			ampm = ampmw.value;
	}
	if (dateFormat.indexOf("s") > -1) {
		var secondsInput = gel(ref + 'dur_sec');
		if (secondsInput)
			sec = secondsInput.value;
	}
	sdata.value = GlideTimeElement.formatTime(parseInt(hour.value || 0, 10),
		parseInt(min.value || 0, 10),
		parseInt(sec || 0, 10),
		ampm,
		dateFormat);
	onChange(ref);
}
GlideTimeElement.formatTime = function(hour, minute, second, ampm, format) {
	var value=new Object();
	if (ampm=="PM")
		hour += 12;
	value["H"]=hour;
value["HH"]=LZ(hour);
	if (hour==0)
		value["h"]=12;
	else if (hour>12)
		value["h"]=hour-12;
	else
		value["h"]=hour;
	value["hh"]=LZ(value["h"]);
	value["a"]=ampm;
	value["aa"]=ampm;
	value["m"]=minute;
	value["mm"]=LZ(minute);
	value["s"]=second;
	value["ss"]=LZ(second);
	var i_format=0;
	var c="";
	var result="";
	while (i_format < format.length) {
		c=format.charAt(i_format);
		token="";
		while ((format.charAt(i_format)==c) && (i_format < format.length)) {
			token += format.charAt(i_format++);
		}
		if (value[token] != null)
			result=result + value[token];
		else
			result=result + token;
	}
	return result;
}
;
/*! RESOURCE: /scripts/classes/GlideTimerElement.js */
var GlideTimerElement = Class.create({
	initialize : function(name, tmrID, alert) {
		this.name = name;
		this.tmrID = tmrID;
		this._incrementInterval = 1000;
		this.isShowAlert = alert === 'true';
		this.isDirty = false;
		this._setTimer();
	},
	setValue : function(value) {
		value = this._cleanDate(value);
		var elem = document.getElementById("o" + this.tmrID);
		elem.value = value;
		this._updateTotal(this.fields2time());
	},
	setReadOnly: function(readOnly) {
		gel(this.tmrID + "_hour").readOnly = readOnly;
		gel(this.tmrID + "_min").readOnly = readOnly;
		gel(this.tmrID + "_sec").readOnly = readOnly;
		gel(this.name).readOnly = readOnly;
		g_form.setSensitiveDisplayValue(this.name + ".ui_policy_sensitive", readOnly ? 'none' : '');
		return true;
	},
	
	_cancelTimer : function() {
		if (!this.timerID)
			return;
		clearTimeout(this.timerID);
		this.timerID = null;
		this._timerStarted = null;
		this._timerTicks = 0;
	},
	_setTimer : function() {
		if (!this._timerStarted)
			this._timerStarted = new Date().getTime();
		if (!this._timerTicks)
			this._timerTicks = 0;
		var diff = (new Date().getTime() - this._timerStarted) - (this._timerTicks * this._incrementInterval);
		this.timerID = setTimeout(this._incrementTimer.bind(this), this._incrementInterval - diff);
	},
	_incrementTimer : function() {
		if (!this._isPaused()) {
var addedTime = this._incrementInterval / 1000;
			var currentTime = this.fields2time() + addedTime;
			
			if (this._isScrolling)
				this._deferredTime = !!this._deferredTime ? this._deferredTime + addedTime : currentTime;
			else
				this.setIncrementingValue(currentTime);
		}
		this._timerTicks++;
		this._setTimer();
	},
	_isPaused : function() {
		var paused = $(this.tmrID + "_paused");
		return (paused.value == 'true' ? 1 : 0);
	},
	type : function() {
		return "GlideTimerElement";
	},
	_updateTotal : function(currentTime) {
		var e = $(this.tmrID).getAttribute("data-ref");
		var setField = $(e);
		var otime = this.duration2time();
		var newSetTime = parseInt(otime || 0) + parseInt(currentTime);
		this.setTimer(newSetTime, setField);
	},
	updateTotal : function() {
		var currentTime = this.fields2time();
		this._updateTotal(currentTime);
		if (this.isShowAlert) {
			var wasDirty = this.isDirty;
			this.isDirty = currentTime != 0;
			if (this.isDirty != wasDirty)
				g_form.fieldChanged(this.name, this.isDirty);
		}
	},
	fields2time : function() {
		var currentTime = 0;
		var eHour = $(this.tmrID + "_hour");
		var eMin = $(this.tmrID + "_min");
		var eSec = $(this.tmrID + "_sec");
		if (eHour.value)
			currentTime = 60 * 60 * parseInt((isNaN(eHour.value) ? 0 : eHour.value), 10);
		if (eMin.value)
			currentTime += 60 * parseInt((isNaN(eMin.value) ? 0 : eMin.value), 10);
		if (eSec.value)
			currentTime += parseInt((isNaN(eSec.value) ? 0 : eSec.value), 10);
		return currentTime;
	},
	setTotalValue : function(currentTime) {
		var eCalculated = $(this.tmrID);
		var eHour = $(this.tmrID + "_hour");
		var eMin = $(this.tmrID + "_min");
		var eSec = $(this.tmrID + "_sec");
		var hour = doubleDigitFormat(sGetHours(currentTime));
		var minute = doubleDigitFormat(sGetMinutes(currentTime));
		var second = doubleDigitFormat(sGetSeconds(currentTime));
		eCalculated.value = "0 " + hour + ":" + minute + ":" + second;
		eSec.value = second;
		eMin.value = minute;
		eHour.value = hour;
		this.updateTotal();
	},
	setIncrementingValue : function(currentTime) {
		var eCalculated = $(this.tmrID);
		var eHour = $(this.tmrID + "_hour");
		var eMin = $(this.tmrID + "_min");
		var eSec = $(this.tmrID + "_sec");
		var hour = doubleDigitFormat(sGetHours(currentTime));
		var minute = doubleDigitFormat(sGetMinutes(currentTime));
		var second = doubleDigitFormat(sGetSeconds(currentTime));
		var hourUpdate = (parseInt(eMin.value) >= 59 ? true : false);
		eCalculated.value = "0 " + hour + ":" + minute + ":" + second;
		var updateTotal = false;
		if (second != eSec.value) {
			eSec.value = second;
			updateTotal = true;
		}
		if (minute != eMin.value) {
			eMin.value = minute;
			updateTotal = true;
		}
		if (hourUpdate && hour != eHour.value) {
			eHour.value = hour;
			updateTotal = true;
		}
		
		if (updateTotal)
			this.updateTotal();
	},
	setTimer : function(newSetTime, setField) {
		var tHour = $("o" + this.tmrID + "_hour");
		var tMin = $("o" + this.tmrID + "_min");
		var tSec = $("o" + this.tmrID + "_sec");
		var hour = doubleDigitFormat(sGetHours(newSetTime));
		var minute = doubleDigitFormat(sGetMinutes(newSetTime));
		var second = doubleDigitFormat(sGetSeconds(newSetTime));
		
		tHour.innerHTML = hour;
		tMin.innerHTML = minute;
		tSec.innerHTML = second;
		if (hour > 24) {
var days = parseInt(hour / 24);
			hour = days + " " + (hour - (days * 24));
		}
		setField.value = hour + ":" + minute + ":" + second;
	},
	duration2time : function() {
		var currentTime = $("o" + this.tmrID).value;
		return this.duration2timeValue(currentTime);
	},
	duration2timeValue : function(currentTime) {
		var days = 0;
		if (currentTime == 0)
			currentTime = "00:00:00";
		if (currentTime.indexOf(" ") > -1) {
			var sp = currentTime.indexOf(" ");
			days = currentTime.substring(0, sp);
			currentTime = currentTime.substring(sp + 1, currentTime.length);
		}
		var hours = parseInt(currentTime.substring(0, 2), 10);
		var minutes = parseInt(currentTime.substring(3, 5), 10);
		var seconds = parseInt(currentTime.substring(6, 8), 10);
		currentTime = ((60 * 60) * 24) * days;
		currentTime += (60 * 60) * hours;
		currentTime += 60 * minutes;
		currentTime += seconds;
		return currentTime;
	},
	_cleanDate: function(dateToClean) {
		if (dateToClean.indexOf(" ") > -1) {
			var sp = dateToClean.indexOf(" ");
			days = dateToClean.substring(0, sp);
			if (days.indexOf('-') != -1)
days = Math.floor(new Date(days) / 8.64e7);
			dateToClean = days + " " + dateToClean.substring(sp + 1, dateToClean.length);
		}
		return dateToClean;
	},
	
	toString: function() {
		return 'GlideTimerElement';
	}
});
;
/*! RESOURCE: /scripts/classes/UserRolesElement.js */
var UserRolesElement = Class.create({
	initialize: function(name) {
		this.name = name;
		this._initializeEvents();
	},
	setReadOnly: function(disabled) {
		var lockElement = gel(this.name + "_lock");
if (disabled) {
			if (lockElement)
				hideObject(lockElement);
			var unlockElement = gel(this.name + "_unlock");
			lock(unlockElement, this.name, this.name + '_edit', this.name + '_nonedit', this.name + 'select_1', this.name + '_nonedit');
			hideObject(unlockElement);
		} else {
if (lockElement && lockElement.style.display != "none")
				return true;
			var unlockElement = gel(this.name + "_unlock");
			if (isDoctype())
				showObjectInlineBlock(unlockElement);
			else
				showObjectInline(unlockElement);
		}
		gel(this.name).disabled = disabled;
		return true;
	},
	isDisabled: function() {
		var lockElement = $(this.name + "_lock");
		if (lockElement && lockElement.visible())
			return false;
		var unlockElement = $(this.name + "_unlock");
		if (unlockElement && unlockElement.visible())
			return false;
		return true;
	},
	setValue: function(newValue) {
var hiddenElement = $(this.name);
var visibleElement = $(this.name + "select_1");
		this.visibleElementId = visibleElement.id;
		var leftSideSelect = $(this.name + "select_0");
		hiddenElement.value = "";
		visibleElement.options.length = 0;
	    if (typeof newValue == "string" && newValue != "")
newValue = newValue.split(",");
		for (var i = 0; i < newValue.length; i++) {
			var value = newValue[i];
for (var d = leftSideSelect.length - 1; d >= 0; d--) {
    			if (leftSideSelect.options[d].value == value) {
      				leftSideSelect.remove(d);
    			}
  			}
			this._setValue(value);
		}
		this._updateNonEditValue(newValue);
		UserRolesElement.buildSelectList(this.name, true);
		onChange(this.name);
	},
	keyDownLeft: function(evt) {
		var key = evt.keyCode;
		if (this._isSpaceOrEnterKey(key))
			this.selectRole();
	},
	keyDownRight: function(evt) {
		var key = evt.keyCode;
		if (this._isSpaceOrEnterKey(key))
			this.deselectRole();
	},
	_isSpaceOrEnterKey: function(keycode) {
		return keycode == 32 || keycode == 13;
	},
	selectRole: function() {
		moveOption($(this.name + 'select_0'), $(this.name + 'select_1'), '--None--', [], '--None--');
		UserRolesElement.buildSelectList(this.name, true);
	},
	deselectRole: function() {
		moveOption($(this.name + 'select_1'), $(this.name + 'select_0'), '--None--', [], '--None--');
		UserRolesElement.buildSelectList(this.name, true);
	},
	
	fetchUserRoles: function(event) {
		UserRolesElement.getUserRoles(this.name, event.target.dataset['table'], event.target.value);
	},
	_setValue: function(value) {
		if (!value)
			return;
		var select = new Select(this.visibleElementId);
		if (select.contains(value))
			return;
		select.addOption(value, value);
		select = null;
	},
	_updateNonEditValue: function(newValue) {
		var elem = $(this.name + '_nonedit');
		if (newValue.length < 2) {
			elem
				.setStyle('display', 'inline-block')
				.update(newValue);
		} else {
			elem
				.setStyle('display', 'inline-block')
				.update(newValue.join(', '));
		}
	},
	_initializeEvents: function() {
		$(this.name + 'select_0').on('keydown', this.keyDownLeft.bind(this));
		$(this.name + 'select_0').on('dblclick', this.selectRole.bind(this));
		$(this.name + 'select_1').on('keydown', this.keyDownRight.bind(this));
		$(this.name + 'select_1').on('dblclick', this.deselectRole.bind(this));
		$(this.name + '_edit').on('click', '[data-action="add"]', this.selectRole.bind(this));
		$(this.name + '_edit').on('click', '[data-action="remove"]', this.deselectRole.bind(this));
		
		var searchElement = $(this.name + '_sys_user_role');
		searchElement && searchElement.on('keyup', UserRolesElement._debounce(this.fetchUserRoles, 250, this))
	}
});
function buildGraphQLQuery (searchTerm, tableName, ref) {
    return JSON.stringify({
        "query": "query ($searchTerm:String!,$fieldReference:String!,$limit: Int) {"
                    +"GlideLayout_Query {"
                      +"userRolesQuery(searchTerm:$searchTerm,fieldReference:$fieldReference,limit:$limit){"
                        +"userRoles"
                      +"}"
                    +"}"
                  +"}",
        "variables": {
            "searchTerm": searchTerm,
            "fieldReference": tableName,
            "limit": $(ref + '_limit').textContent
        }
    });
}
UserRolesElement.getUserRoles = function(ref, table, searchTerm) {
serverRequestPostJSON("api/now/graphql", buildGraphQLQuery(searchTerm, table, ref), function(response) {
        UserRolesElement.buildSelect0List(ref, response);
    });
}
UserRolesElement.buildSelect0List = function(ref, response) {
	var results = response.response.data.GlideLayout_Query.userRolesQuery.userRoles;
	var sel0 = $(ref + 'select_0');
	var sel1 = $(ref + 'select_1');
	sel0.options.length = 0;
	if (typeof sel1.options !== 'undefined') {
		var options = results.filter(function(r) {
			var foundOption = false;
			for (var i=0,sel1Length=sel1.options.length; i < sel1Length; i++) {
				if (r === sel1.options[i].value) {
					foundOption = true;
					break;
				}
			}
			return !foundOption;
		});
		options.forEach(function(o, index){
			sel0.options[index] = new Option(o, o);
			sel0.options[index].setAttribute('aria-selected', 'false');
		});
	}
}
UserRolesElement.buildSelectList = function(ref, performOnChange) {
	var sel0 = $(ref + 'select_0');
	var sel1 = $(ref + 'select_1');
	var available = $(ref + 'available');
	var selected = $(ref);
	var isLazyLoad = $(ref + '_load_lazy').textContent;
	if (typeof sel1.options !== 'undefined' && sel1.options.length > 0) {
		if(isLazyLoad === 'true')
			saveAllSelected([ sel1 ], [ selected ], ',', '\\', '--None--');
		else if(isLazyLoad === 'false')
			saveAllSelected([ sel0, sel1 ], [available, selected ], ',', '\\', '--None--');
	}
	if (performOnChange == false)
		return;
	onChange(ref);
	telemetryForRecordUpdateElement(ref);
}
UserRolesElement.userRolesMaxWidth = function(ref) {
	var minWidth = 120;
	var scrollPad = 12;
	if (isMSIE)
		scrollPad = 0;
	var prefix = ref + "select_";
	var select0 = gel(prefix + "0");
	minWidth = Math.max(select0.clientWidth + scrollPad, minWidth);
	var select1 = gel(prefix + "1");
	minWidth = Math.max(select1.clientWidth + scrollPad, minWidth);
	select0.style.width = minWidth + "px";
	select1.style.width = minWidth + "px";
}
UserRolesElement._debounce = function(fn, delay, ctx) {
	ctx = ctx || undefined;
	var timeout;
	return function () {
		var args = arguments;
		window.clearTimeout(timeout);
		timeout = window.setTimeout(function() {
			fn.apply(ctx, args);
		}, delay);
	};
}
;
/*! RESOURCE: /scripts/classes/DaysOfWeekElement.js */
var DaysOfWeekElement = Class.create({
    initialize: function(name) {
        this.name = name;
    },
    setReadOnly: function(disabled) {
		var e = gel(this.name);
		if (e) {
			var checkedDays = e.value;
			for (var i = 1; i != 8; i++) {
				var cb = gel('ni.' + this.name + '.' + i);
				if (cb) {
					cb.disabled = disabled;
				}
			}
		}	
    },
    isDisabled: function() {
		var cb = $('ni.' + this.name + '.1');
		if (cb && !cb.disabled) 
			return false;
		
		return true;		
    }
});
;
/*! RESOURCE: /scripts/classes/TextAreaElement.js */
var TextAreaElement = Class.create({
    initialize: function(name) {
        this.name = name;
    },
    setReadOnly: function(disabled) {
    	var d = gel(this.name);
    	if (disabled) {
    		d.readOnly = "readonly";
    		addClassName(d, "readonly");
    	} else {
    		d.readOnly = "";
    		removeClassName(d, "readonly");
    	}
    },
    
	setValue: function(newValue) {
		if (newValue == "XXmultiChangeXX")
			newValue = '';
		var d = gel(this.name + ".ta");
		if (d)
			d.value = newValue;
		d = gel(this.name);
		d.value = newValue;
		onChange(this.name);
		if (window.jQuery)
			$j(d).trigger("autosize.resize");
	}
});
;
/*! RESOURCE: /scripts/classes/AttachmentUploader.js */
var AttachmentUploader = Class.create({ 
	initialize: function(event, file, fileNumber, canAttach, showView, showPopup) {
		this.target = Event.element(event);
		this.file = file;
		this.fileNumber = fileNumber;
		this.showView = showView;
		this.showPopup = showPopup;
		this.canAttach = canAttach;
		this.control = gel("upload_file_" + this.fileNumber);
		this.progress = gel("upload_file_progress_" + this.fileNumber);
		this.CRLF  = "\r\n"
		var sys_id = gel("sys_uniqueValue");
		if (!sys_id)
sys_id = gel("sysparm_item_guid");
		this.parent_sys_id = sys_id.value;
		var table = gel("sys_target");
		if (!table)
table = gel("ni.attachment_target");
		this.table = table.value;
	},
	destroy: function() {
		this.target = null;
		this.xhr = null;
		this.file = null;
		this.control = null;
		this.progress = null;
	},
	send: function(uploadedFunction) {
		this.xhr = new XMLHttpRequest();
		var self = this;
		Event.observe(this.xhr.upload, "load", function() {
			if (self.control) {
				try {
rel(self.control);
					$('header_attachment').style.height = 'auto';
				} catch (ex) {}
			}
		}, false);
		Event.observe(this.xhr.upload, "progress", function(e) {
			if (e.lengthComputable) {
var percentage = Math.round((e.loaded * 100) / e.total);
				self._updateProgressBar(percentage);
			}
		}, false);
		Event.observe(this.xhr.upload, "error", function() {
			self._updateProgress(" error");
			if (self.control)
				self.control.setAttribute('style', 'background-color: tomato; background-color: RGB(var(--now-alert--critical--background-color,var(--now-color_alert--critical-0,241,206,205)));');
			self.destroy();
		}, false);
		Event.observe(this.xhr.upload, "loadstart", function() {
			self._updateProgress("started");
			if (self.control)
				self.control.setAttribute('style', 'background-color: LightCyan; background-color: RGB(var(--now-alert--info--background-color,var(--now-color_alert--info-0,195,221,240)));');
		}, false);
		Event.observe(this.xhr.upload, "abort", function() {
			self._updateProgress(" aborted");
			if (self.control)
				self.control.setAttribute('style', 'background-color: tomato; background-color: RGB(var(--now-alert--critical--background-color,var(--now-color_alert--critical-0,241,206,205)));');
			self.destroy();
		}, false);
		this.xhr.onreadystatechange = function() {
if (self.xhr.readyState === 4) {
				var xml = self.xhr.responseXML;
				if (xml) {
					var sys_id = xml.documentElement.getAttribute("sys_id");
					if (sys_id == "attachment.refused") {
						alert("Attachment refused because file type not allowed or type does not match file contents.");
					} else if (sys_id == "create.permission") {
						alert("You do not have ability to attach file to this record.");
					} else if ( sys_id == "upload.error") {
						alert("Attachment failed. " +
"Invalid table name and/or sys_id when attempting to create attachment.");
					} else {
						var ga = new GlideAjax('AttachmentAjax');
						ga.addParam('sysparm_name','getIconSrc');
						ga.addParam('sysparm_type', 'icon');
						ga.addParam('sysparm_value', sys_id);
						ga.getXMLWait();
						var imgSrc = ga.getAnswer();
						if( !imgSrc )
imgSrc = "images/attachment.gifx";
						addAttachmentNameToForm(sys_id, self.file.name, "New", imgSrc,
							self.canAttach, self.showView, self.showPopup);
						
						ga = new GlideAjax('AttachmentAjax');
						ga.addParam('sysparm_name','getCanDelete');
						ga.addParam('sysparm_type', 'canDelete');
						ga.addParam('sysparm_value', sys_id);
						ga.getXMLWait();
						var canDelete = ga.getAnswer();
						if( !canDelete )
							canDelete = true;
						var gr = new GlideRecord('sys_attachment');
						gr.get(sys_id);
						addAttachmentNameToDialog(sys_id, self.file.name, canDelete,
							gr.sys_created_by, gr.sys_created_on, gr.content_type, imgSrc);
						
_saveAttachmentClose();
						if (typeof uploadedFunction == "function") {
							self.sys_id = sys_id;
							uploadedFunction.call(this, self);
						}
					}
				}
				self.destroy();
			}
		};
		this._checkCompatibleFile(function() {
			var formData = new FormData();
			formData.append("sysparm_sys_id", self.parent_sys_id);
			formData.append("sysparm_table", self.table);
			formData.append("sysparm_nostack", "yes");
			formData.append("sysparm_send_xml", "true");
			if (window.g_ck)
				formData.append("sysparm_ck", window.g_ck);
			formData.append("attachFile", self.file, self.file.name);
			self.xhr.open("POST", "sys_attachment.do", true);
			self.xhr.send(formData);
			jslog("starting send file upload for " + self.file.name);
		})
	},
	_updateProgress: function(txt) {
		if (this.progress)
			this.progress.innerHTML = txt;
	},
	_updateProgressBar: function(percentage) {
		if (this.progress)
			this.progress.innerHTML = "<progress value=\"" + percentage 
			+ "\" max=\"100\">" + percentage + "%";
	},
	_checkCompatibleFile: function(sendFunction) {
		var reader = new FileReader();
		var self = this;
		reader.onerror = function() {
			self._outputIncompatible();
		}
		reader.onloadend = function(evt) {
			if (evt.target.error)
				return;
			sendFunction();
		}
		reader.readAsArrayBuffer(this.file);
	},
	_isIWorkFile: function() {
		var fileName = this.file.name;
		return fileName.endsWith('.key') ||
			fileName.endsWith('.pages') ||
			fileName.endsWith('.numbers') ||
			fileName.endsWith('.keynote');
	},
	_outputIncompatible: function() {
		var errMsg = "There was an error uploading \"{0}.\" ";
		if (this._isIWorkFile())
			errMsg += "Some iWork files cannot be added through drag and drop. ";
		errMsg += "Please select the file and upload through the paperclip icon above.";
		g_form.addErrorMessage(new GwtMessage().getMessage(errMsg, this.file.name));
		if (this.control)
			this.control.style.display = "none";
		this.destroy();
	},
	type: function() {
		return "AttachmentUploader";
	}   
});
AttachmentUploader.isAttachmentEndPoint = function (response) {
	return response?.indexOf('sys_attachment.do') !== -1;
};
AttachmentUploader.uploadBlob = function(blob, filename, url, data, showView, showPopup) {
	var form = this._getFormBuilder();
	for (var key in data) {
		if(data.hasOwnProperty(key)) {
			form.append(key, data[key]);
		}
	}
	form.append('file', blob, filename);
	var xhr = new XMLHttpRequest();
	xhr.onload = function() {
		onSuccess({
			data: xhr.response,
			xml: xhr.responseXML,
			sys_id: xhr.responseXML.documentElement.getAttribute('sys_id')
		});
	};
	xhr.onreadystatechange = function() {
		if(xhr.readyState === 4) {
			try {
				var sys_id = xhr.responseXML.documentElement.getAttribute("sys_id");
				if(!sys_id) {
					return onError(new Error("Attachment failed because file type does not match with file contents."));
				}
				if (sys_id == "create.permission") {
					return onError(new Error("You do not have ability to attach file to this record."));
				}
				if (sys_id == "upload.error") {
					return onError(new Error("Attachment failed. " +
"Invalid table name and/or sys_id when attempting to create attachment."));
				}
				if (xhr.status < 200 || xhr.status >= 300) {
					return onError(new Error('server responded with: ' + xhr.status));
				}
				onSuccess({sys_id:sys_id });
				if (AttachmentUploader.isAttachmentEndPoint(xhr.responseURL || "")) {
					var ga = new GlideAjax('AttachmentAjax');
					ga.addParam('sysparm_name', 'getIconSrc');
					ga.addParam('sysparm_type', 'icon');
					ga.addParam('sysparm_value', sys_id);
					ga.getXMLAnswer(function(imgSrc) {
						if (!imgSrc)
imgSrc = "images/attachment.gifx";
						addAttachmentNameToForm(sys_id, filename, "New", imgSrc, 'true', showView, showPopup);
					});
				}
			} catch (e) {
				onError(new Error('server responded with unusable data'));
			}
		}
	};
	function listen(event, listener){
		if (!xhr.upload.addEventListener)
			xhr.attachEvent(event, listener);
		else
			xhr.upload.addEventListener(event, listener, false);
	}
	listen('progress', function(e) {
		if (e.lengthComputable) {
			onProgress({
				total: e.total,
				loaded: e.loaded,
percent: Math.round((e.loaded * 100) / e.total)
			});
		}
	});
	listen('error', function(e) { onError(e); });
	var errFuns = [];
	function onError(data) {
		errFuns.forEach(function(fun){ fun(data); });
	}
	var sucFuns = [];
	function onSuccess(data) {
		sucFuns.forEach(function(fun){ fun(data); });
	}
	var proFuns = [];
	function onProgress(data) {
		proFuns.forEach(function(fun){ fun(data); });
	}
	xhr.open("POST", url);
	xhr.send(form);
	return {
		success: function(fun) {
			sucFuns.push(fun);
			return this;
		},
		progress: function(fun) {
			proFuns.push(fun);
			return this;
		},
		error: function(fun) {
			errFuns.push(fun);
			return this;
		}
	}
};
AttachmentUploader.uploadDataURLAttachment = function(dataUrl, name, table, sys_id) {
	var parts = AttachmentUploader._parseDataUrl(dataUrl);
	if(name) {
		name = (parts.ext && name.indexOf('.') == -1 ) ? name + parts.ext : name;
	} else {
		name =  'pasted_image'+ (parts.ext ? parts.ext : '.unknown');
	}
	var data = {
		'sysparm_sys_id': sys_id,
		'sysparm_table': table
	};
	return this.uploadBlob(parts.blob, name, 'sys_attachment.do', data);
};
AttachmentUploader.uploadDataURLDBImage = function(dataUrl, name) {
	var parts = AttachmentUploader._parseDataUrl(dataUrl);
	if(name) {
		name = (parts.ext && name.indexOf('.') == -1 ) ? name + parts.ext : name;
	} else {
		name =  'pasted_image'+ (parts.ext ? parts.ext : '.unknown');
	}
	var data = {
		sysparm_table: 'db_image',
		sysparm_sys_id: 'new_db_image'
	};
	return this.uploadBlob(parts, name, 'sys_user_image.do', data);
};
AttachmentUploader._getFormBuilder = function() {
	var form = new FormData();
	form.append('sysparm_nostack', 'yes');
	form.append('sysparm_send_xml', 'true');
	if (window.g_ck)
		form.append('sysparm_ck', window.g_ck);
	return form;
};
AttachmentUploader._parseDataUrl = function(str) {
	if(typeof window.Blob == 'undefined')
		return new Error('cannot create Blobs on this browser');
	var exts = {
'image/jpeg': '.jpg',
'image/bmp': '.bmp',
'image/gif': '.gif',
'image/png': '.png',
'image/tiff': '.tiff',
'image/svg+xml': '.svg',
'image/x-icon': '.ico'
	};
	var mime = str.substring(str.indexOf(':')+1, str.indexOf(';'));
	var base64Str = str.substring(str.indexOf(',')+1);
	var byteString = atob(base64Str);
	var ab = new ArrayBuffer(byteString.length);
	var ia = new Uint8Array(ab);
	for (var i = 0, l = byteString.length; i < l; i++) {
		ia[i] = byteString.charCodeAt(i);
	}
	return {
		blob: new Blob([ia], {type: mime}),
		mime: mime,
		ext: exts[mime]
	};
};
AttachmentUploader.addDropZone = function(dropZone, maxMegabytes, canAttach, showView, showPopup, extensions, uploadedFunction) {	
	if (typeof FileReader == "undefined") 
return;
	if (canAttach == "false") {
		AttachmentUploader.noDropZone("File attachments not allowed");
		return;
	}
	if (maxMegabytes !== "")
		maxMegabytes = parseInt(maxMegabytes, 10);
	else
		maxMegabytes = 0;
	if (isNaN(maxMegabytes))
		maxMegabytes = 0;
	var gotExtensions = false;
	if (extensions) {
		extensions.toLowerCase();
		extensions = extensions.split(",");
		gotExtensions = true;
	}
	Event.observe(dropZone, "dragover", function(event) {
		Event.stop(event);
		var headerAttachment = gel("header_attachment");
		if (headerAttachment && headerAttachment.style.backgroundColor != "orange") {
			headerAttachment.style.backgroundColor = "orange";
			headerAttachment.classList.add('-active');
			needsReset = true;
		}
		var line = gel("header_attachment_line");
		if (line) {
			if (line.style.visibility == "hidden") {
				line.reverseOnCancel = "true";
				if ($$('attachment_list_items').length > 0) {
					showObjectInline(gel("header_attachment_list_label"));
				}
				line.style.visibility = "visible";
				line.style.display = "";
			}
			line.resetDisplay = "1";
		}
setTimeout("AttachmentUploader._resetBackground(false)", 1000);
		if (!(isMSIE || isMSIE11)){
			event.dataTransfer.effectAllowed = "copy";
			event.dataTransfer.dropEffect="copy";
		}
		return false;
	}, true);
	Event.observe(dropZone, "dragend", function(event) {
		AttachmentUploader._resetBackground(true);
	}, true);
	Event.observe(dropZone, "drop", function(event) {
		AttachmentUploader._resetBackground(true);
		var files = event.dataTransfer.files
if (files.length < 1)
			return;
		if (event.dataTransfer != undefined && typeof event.dataTransfer.getData === "function") {
			var dropData = event.dataTransfer.getData("text");
if (dropData != undefined && dropData.toString().startsWith(window.location.origin + "/"))
				return;
		}
		Event.stop(event);
		
if (dropZone.disableAttachments == "true") {
			alert(getMessage("Attachments are not allowed"));
			return;
		}
$('header_attachment').style.height = 'auto';
		if (isFirefox){
			$('header_attachment').style.height = '3em';
		}
		var line = gel("header_attachment_line");
		if (line)
			line.reverseOnCancel = "false";
		var progressSpan = gel("attachment_upload_progress");
		progressSpan.innerHTML = "";
		var filesTooLarge = [];
		var filesBadExtension = [];
		for (var i = 0; i < files.length; i++) {
			var file = files[i];
var megs = file.size / 1048576;
			if (maxMegabytes > 0) {
				if (megs > maxMegabytes) {
					filesTooLarge.push(file.name + " (" + AttachmentUploader.getDisplaySize(file.size) + ")");
					files[i] = null;
					continue;
				}
			}
			if (gotExtensions) {
				var badExtension = false;
				var periodIndex = file.name.lastIndexOf(".");
				var extension = "(none)";
				if (periodIndex == -1)
					badExtension = true;
				else {
					extension = file.name.substring(periodIndex+1).toLowerCase();
					if (extensions.indexOf(extension) == -1)
						badExtension = true;
				}
				if (badExtension) {
					filesBadExtension.push(file.name);
					continue;
				}
			}
			
			var p = cel("p");
			p.id = "upload_file_" + i;
			addClassName(p, 'file');
			p.textContent = files[i].name + " (" + AttachmentUploader.getDisplaySize(files[i].size) + ") ";
			var span = cel("span");
			span.id = "upload_file_progress_" + i;
			p.appendChild(span);
			progressSpan.appendChild(p);
			
			var uploader = new AttachmentUploader(event, file, i, canAttach, showView, showPopup);
			uploader.send(uploadedFunction);
		}
		
		if ((filesTooLarge.length + filesBadExtension.length) > 0)
			AttachmentUploader.setWarning(filesTooLarge, filesBadExtension, maxMegabytes);
	}, true);
};
AttachmentUploader._resetBackground = function(doNow) {
	var line = gel("header_attachment_line");
	if (!line) 
		return;
	if (doNow != true && typeof line.resetDisplay != "undefined") {
		var resetDisplay = parseInt(line.resetDisplay);
		resetDisplay++;
		line.resetDisplay = resetDisplay;
		if (resetDisplay < 10)
			return;
	}
	var headerAttachment = gel("header_attachment");
	if (headerAttachment)
		headerAttachment.style.backgroundColor = "";
		headerAttachment.classList.remove('-active');
	if (line.reverseOnCancel == "true") {
		line.reverseOnCanel = "false";
		hideObject(gel("header_attachment_list_label"));
		line.style.visibility = "hidden";
		line.style.display = "none";
	}
}
AttachmentUploader.getDisplaySize = function(sizeInBytes) {
var kilobytes = Math.round(sizeInBytes / 1024);
	if (kilobytes < 1)
		kilobytes = 1;
	var reportSize = kilobytes + "K";
	if (kilobytes > 1024)
reportSize = Math.round(kilobytes / 1024) + "MB";
	return reportSize;
}
AttachmentUploader.noDropZone = function(message) {
	var dropZone = document.body;
	Event.observe(dropZone, "dragover", function(event) {
		Event.stop(event);
		if (isChrome)
			event.dataTransfer.dropEffect="copy";
		return true;
	}, true);
	Event.observe(dropZone, "dragleave", function(event) {
		Event.stop(event);
	}, true);
	Event.observe(dropZone, "drop", function(event) {
		var files = event.dataTransfer.files
if (files.length < 1)
			return;
		
		Event.stop(event);
		alert(message);
	}, true);
}
AttachmentUploader.isAttachmentDisabled = function() {
	return document.body["disableAttachments"]  === "true";
}
AttachmentUploader.disableAttachments = function() {
	document.body.disableAttachments = "true";
}
AttachmentUploader.enableAttachments = function() {
	document.body.disableAttachments = "false";
}
AttachmentUploader.setWarning = function (filesTooLarge, filesBadExtension, maxFileSize) {
	var warningString = "The following files were not uploaded:\n\n";
	if (filesTooLarge.length > 0) {
		warningString += "Files larger than the maximum file size (" + maxFileSize + "MB):\n";
		for (var i = 0; i < filesTooLarge.length; i++)
			warningString += "\t" + filesTooLarge[i] + "\n";
		warningString += "\n";
	}
	if (filesBadExtension.length > 0) {
		warningString += "Files with prohibited extensions:\n";
		for (var i = 0; i < filesBadExtension.length; i++)
			warningString += "\t" + filesBadExtension[i] + "\n";
	}
	
	alert(warningString);
}
;
/*! RESOURCE: /scripts/classes/GwtDate.js */
 
var GwtDate = Class.create({
    MINUTES_IN_DAY : 1440,
    DAYS_IN_MONTH : [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
    MONTHS_IN_YEAR : ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    AJAX_PROCESSOR : "xmlhttp.do?sysparm_processor=com.glide.schedules.AJAXDate",
	initialize: function(s) {
	    if (s) {
	        this.deserialize(s);
	    } else {
	        this.clear();
	    }
	},
    clone: function() {
        var newDate = new GwtDate(this.serialize());
        return newDate;
    },
    clear: function() {
        this.year = 0;
        this.month = 0;
        this.day = 0;
        this.hour = 0;
        this.minute = 0;
        this.second = 0;
    },
    
    serialize: function(dateOnly) {
        var s = this.year + "-" + (this.month + 1) + "-" + this.day;
        if (!dateOnly)
        	s += " " + this.formatTime(true);
        	
        return s;
    },
    
    serializeInUserFormat: function(dateOnly) {
    	if (dateOnly)
    		return this.formatDate(g_user_date_format);
    	else
    		return this.formatDate(g_user_date_time_format);
    },
	
	serializeTimeInUserFormat: function(includeSeconds) {
var spaceIndex = g_user_date_time_format.indexOf(" ");
		var timeFormat = g_user_date_time_format.substr(spaceIndex+1);
		if (!includeSeconds)
timeFormat = timeFormat.replace(/[:\.]ss/,'');
     	var d = this.getDateObject(true);
    	return formatDate(d, timeFormat); 	
	},
    
    deserialize: function(s) {
        this.clear();
        if (typeof s == 'number')
        	return this.setFromMs(s);
        
        var components = s.split(" ");
        if (components) {
            var parts = components[0].split("-");
            this.year = parts[0] * 1;
            if (parts.length > 1) {
                this.month = (parts[1] * 1) - 1;
                if (parts.length > 2) {
                    this.day = parts[2] * 1;
                }
            }
            if (components.length >= 2) {
                var parts = components[1].split(":");
                this.hour = parts[0] * 1;
                if (parts.length > 1) {
                    this.minute = parts[1] * 1;
                }
                if (parts.length > 2) {
                    this.second = parts[2] * 1;
                }
            }
        }
    },
    getYear: function() {
        return this.year;
    },
    
    getMonth: function() {
        return this.month;
    },
    
    getDay: function() {
        return this.day;
    },
    
    getHour: function() {
        return this.hour;
    },
    
    getMinute: function() {
        return this.minute;
    },
    getSecond: function() {
        return this.second;
    },
    getTime: function() {
        var h = this.hour * 60;
        var m = this.minute * 1;
        if (this.second >= 30) {
            m++;
        }
        return h + m;
    },
     
    getDaysInMonth: function() {
        if ((this.month == 1) && ((this.year % 4) == 0) && (((this.year % 100) != 0) || ((this.year % 400) == 0))) {
            return 29;
        } else {
            return this.DAYS_IN_MONTH[this.month];
        }
    },
    setYear: function(year) {
        this.year = year;
    },
    
    setMonth: function(month) {
        this.month = month;
    },
    
    setDay: function(day) {
        this.day = day;
    },
    
    setHour: function(hour) {
        this.hour = hour;
    },
    
    setMinute: function(minute) {
        this.minute = minute;
    },
    
    setSecond: function(second) {
        this.second = second;
    },
    
    setStartOfDay: function() {
        this.hour = 0;
        this.minute = 0;
        this.second = 0;
    },
    
    setEndOfDay: function() {
        this.hour = 23;
        this.minute = 59;
        this.second = 59;
    },
    
    setFromJsDate: function(date) {
        this.year = date.getFullYear();
        this.month = date.getMonth();
        this.day = date.getDate();
        this.hour = date.getHours();
        this.minute = date.getMinutes();
        this.second = date.getSeconds();
    },
    setFromMs: function(milliseconds) {
    	this.setFromJsDate(new Date(milliseconds));
    },
    
    setFromDate: function(date) {
        this.year = date.getYear();
        this.month = date.getMonth();
        this.day = date.getDay();
        this.hour = date.getHour();
        this.minute = date.getMinute();
        this.second = date.getSecond();
    },
    setFromInt: function(intDate, intTime) {
        this.clear();
var year = Math.floor(intDate / 10000);
        this.year = year;
this.month = (Math.floor((intDate - (year * 10000)) / 100)) - 1;
        this.day = intDate % 100;
        if (intTime) {
var hour = Math.floor(intTime / 10000);
            this.hour = hour;
this.minute = Math.floor((intTime - (hour * 10000)) / 100);
            this.second = intTime % 100;
        }
    },
     
    formatTime: function(includeSeconds) {
        var h = doubleDigitFormat(this.hour);
        var m = doubleDigitFormat(this.minute);
        if (!includeSeconds) 
            return h + ":" + m;
            
        return h + ":" + m + ":" + doubleDigitFormat(this.second);
    },
	
    formatDate: function(format) {
    	var d = this.getDateObject(false);
    	d.setYear(this.year);
    	d.setMonth(this.month);
    	d.setDate(this.day);
    	d.setHours(this.hour);
    	d.setMinutes(this.minute);
    	d.setSeconds(this.second);
    	return formatDate(d, format);    	
    },
    
     getDateObject: function(includeTime) {
    	var d = new Date();
		d.setDate(1);
    	d.setYear(this.year);
    	d.setMonth(this.month);
		d.setDate(this.day);
    	if (includeTime) {
    		d.setHours(this.getHour());
    		d.setMinutes(this.getMinute());
    		d.setSeconds(this.getSecond());
    	} else {
    		d.setHours(0);
    		d.setMinutes(0);
    		d.setSeconds(0);
    	}
    	return d;
    },
    isAllDay: function(toDate) {
    	return ((this.getTime() == 0) && (toDate.getTime() >= (this.MINUTES_IN_DAY)));    	
    },
    
    compare: function(otherDate, includeTimes) {
        if (this.getYear() != otherDate.getYear()) {
            return this.getYear() - otherDate.getYear();
        }
        if (this.getMonth() != otherDate.getMonth()) {
            return this.getMonth() - otherDate.getMonth();
        }
        if (this.getDay() != otherDate.getDay()) {
            return this.getDay() - otherDate.getDay();
        }
        if (includeTimes) {
            if (this.getHour() != otherDate.getHour()) {
                return this.getHour() - otherDate.getHour();
            }
            if (this.getMinute() != otherDate.getMinute()) {
                return this.getMinute() - otherDate.getMinute();
            }
            if (this.getSecond() != otherDate.getSecond()) {
                return this.getSecond() - otherDate.getSecond();
            }
        }
        return 0;
    },
    
    addSeconds: function(seconds) {
    	if (seconds < 0)
    		return this.subtractSeconds(seconds * -1);
    		
        for (var i = 0; i < seconds; i++) {
            this._incrementSecond();
        }
    },
    
    addMinutes: function(minutes) {
    	if (minutes < 0)
    		return this.subtractMinutes(minutes * -1);
    		
        for (var i = 0; i < minutes; i++) {
            this._incrementMinute();
        }
    },
    
    addHours: function(hours) {
    	if (hours < 0)
    		return this.subtractHours(hours * -1);
    		
        for (var i = 0; i < hours; i++) {
            this._incrementHour();
        }
    },
    
    addDays: function(days) {
        for (var i = 0; i < days; i++) {
            this._incrementDay();
        }
    },
    
    addMonths: function(months) {
        for (var i = 0; i < months; i++) {
            this._incrementMonth();
        }
        if (this.day > this.getDaysInMonth()) {
            this.day = this.getDaysInMonth();
        }
    },
    
    addYears: function(years) {
        this.year += years;
    },
    
    subtractSeconds: function(seconds) {
        for (var i = 0; i < seconds; i++) {
            this._decrementSecond();
        }
    },
    
    subtractMinutes: function(minutes) {
        for (var i = 0; i < minutes; i++) {
            this._decrementMinute();
        }
    },
    
    subtractHours: function(hours) {
        for (var i = 0; i < hours; i++) {
            this._decrementHour();
        }
    },
    
    subtractDays: function(days) {
        for (var i = 0; i < days; i++) {
            this._decrementDay();
        }
    },
    
    subtractMonths: function(months) {
        for (var i = 0; i < months; i++) {
            this._decrementMonth();
        }
        if (this.day > this.getDaysInMonth()) {
            this.day = this.getDaysInMonth();
        }
    },
    
    subtractYears: function(years) {
        this.year -= years;
    },
    _incrementSecond: function() {
        this.second++;
        if (this.second > 59) {
            this.second = 0;
            this._incrementMinute();
        }
    },
    _incrementMinute: function() {
        this.minute++;
        if (this.minute > 59) {
            this.minute = 0;
            this._incrementHour();
        }
    },
    _incrementHour: function() {
        this.hour++;
        if (this.hour > 23) {
            this.hour = 0;
            this._incrementDay();
        }
    },
    _incrementDay: function() {
        this.day++;
        if (this.day > this.getDaysInMonth()) {
            this.day = 1;
            this._incrementMonth();
        }
    },
    _incrementMonth: function() {
        this.month++;
        if (this.month >= 12) {
            this.year++;
            this.month = 0;
        }    
    },
        
    _decrementSecond: function() {
        this.second--;
        if (this.second < 0) {
        	this.second = 59;
            this._decrementMinute();
        }
    },
    _decrementMinute: function() {
        this.minute--;
        if (this.minute < 0) {
        	this.minute = 59;
            this._decrementHour();
        }
    },
    _decrementHour: function() {
        this.hour--;
        if (this.hour < 0) {
        	this.hour = 23;
            this._decrementDay();
        }
    },
    _decrementDay: function() {
        this.day--;
        if (this.day == 0) {
            this._decrementMonth();
            this.day = this.getDaysInMonth();
        }
    },
    _decrementMonth: function() {
        this.month--;
        if (this.month < 0) {
            this.year--;
            this.month = 11;
        }    
    },
    now: function() {
        var parms = "&sysparm_type=now";
	    var response = serverRequestWait(this.AJAX_PROCESSOR + parms);
	    var xml = response.responseXML;
        var e = xml.documentElement; 
        this.clear();
        this.deserialize(e.getAttribute("now"));
        return this;
    },
    
    getCurrentTimeZone: function() {
        var parms = "&sysparm_type=now";
	    var response = serverRequestWait(this.AJAX_PROCESSOR + parms);
	    var xml = response.responseXML;
        var e = xml.documentElement; 
        return e.getAttribute("time_zone");
    },
    
    getDayOfWeek: function() {
        var parms = "&sysparm_type=day_of_week&date=" + this.serialize(true);
	    var response = serverRequestWait(this.AJAX_PROCESSOR + parms);
	    var xml = response.responseXML;
        var e = xml.documentElement; 
        return e.getAttribute("day_of_week");
    },
    
    getCurrentMonth: function() {
    	return this.MONTHS_IN_YEAR[this.getMonth()];
    },
    
    getWeekNumber: function() {
        var parms = "&sysparm_type=week_number&date=" + this.serialize(true);
	    var response = serverRequestWait(this.AJAX_PROCESSOR + parms);
	    var xml = response.responseXML;
        var e = xml.documentElement; 
        return e.getAttribute("week_number");
    },
    
    toString: function() {
        return this.formatDate('yyyy-MM-dd HH:mm:ss');
    }
});
;
/*! RESOURCE: /scripts/PageTimingService.js */
(function() {
	"use strict";
	if (window.NOW.PageTimingService)
		return;
	window.NOW.PageTimingService = {
		send: function(data, success, error) {
			if (!data.transaction_id) {
				if (window.console && window.console.warn)
					console.warn("missing data.transaction_id, could not send page timing");
				return;
			}
			var transactionID = data.transaction_id;
delete data.transaction_id;
			if (!error) {
				error = function(request, textStatus, errorThrown) {
if (errorThrown === '')
						return;
					if (request.statusText !== 'abort') {
						console.error(errorThrown);
					}
				};
			}
			var headers = {
'Accept': 'application/json',
'Content-Type': 'application/json',
					'X-Transaction-Source': window.transaction_source
			};
			if (typeof g_ck != 'undefined')
				headers['X-UserToken'] = g_ck;
			return $j.ajax({
				headers: headers,
				'type': 'PATCH',
'url': "/api/now/ui/page_timing/" + transactionID,
				'data': JSON.stringify(data),
				'success': success,
				'error': error
			});
		}
	};
})();
;
/*! RESOURCE: /scripts/doctype/PageTiming14.js */
(function() {
	"use strict";
	if (window.g_PageTiming)
		return;
	var categories = null;
	initialize();
	window.g_PageTiming = {initialized: true};
	var CATEGORY_TIMING_NETWORK = 'timing_network';
	var CATEGORY_TIMING_SERVER = 'timing_server';
	var CATEGORY_TIMING_BROWSER = 'timing_browser';
	var flushStamp = new Date();
	var lastRendered;
	var events = [
		{
			timingTypeCategory: CATEGORY_TIMING_NETWORK,
			timings: [
				{
					id: CATEGORY_TIMING_NETWORK,
timingType:  'Cache/DNS/TCP',
					startKey: 'fetchStart',
					endKey: 'connectEnd'
				}
			]
		},
		{
			timingTypeCategory: CATEGORY_TIMING_SERVER,
			timings: [
				{
					id: CATEGORY_TIMING_SERVER,
timingType:  'Server',
					startKey: 'requestStart',
					endKey: 'responseEnd'
				}
			]
		},
		{
			timingTypeCategory: CATEGORY_TIMING_BROWSER,
			timings: [
				{
					id: CATEGORY_TIMING_BROWSER + '_unload',
timingType:  'Unload',
					startKey: 'unloadEventStart',
					endKey: 'unloadEventEnd'
				},
				{
					id: CATEGORY_TIMING_BROWSER + '_dom',
timingType: 'DOM Processing',
					startKey: 'domLoading',
					endKey: 'domComplete'
				},
				{
					id: CATEGORY_TIMING_BROWSER + '_onload',
timingType:  'onLoad',
					startKey: 'loadEventStart',
					endKey: 'loadEventEnd'
				}
			]
		},
	]
	function initialize() {
		CustomEvent.observe('page_timing', _pageTiming);
		CustomEvent.observe('page_timing_network', _pageTimingNetwork);
		CustomEvent.observe('page_timing_show', _pageTimingShow);
		CustomEvent.observe('page_timing_clear', _clearTimingDiv);
		CustomEvent.observe('page_timing_client', _clientTransaction);
	}
	function _pageTiming(timing) {
		var ms;
		if (timing.startTime)
			ms = new Date() - timing.startTime;
		else
			ms = timing.ms;
		if (isNaN(ms))
			return;
		_initCategories();
		var category = timing.name + '';
		ms = new Number(ms);
		if (!categories[category]) {
			categories[category] = {
				children: [],
				ms: 0
			}
		}
		var cat = categories[category];
		if (timing.child) {
			if (timing.child.description) 
				cat.children.push({ name: timing.child.description + '', script_type: timing.child.type, ms: ms, sys_id: timing.child.sys_id, source_table: timing.child.source_table});
			else
				cat.children.push({ name: timing.child + '', ms: ms});
		}
		cat.ms += ms;
		flushStamp = new Date();
	}
	function _pageTimingNetwork(timing) {
		if (!window._timingStartTime)
			timing.ms = 0;
		else if (window.performance && performance.timing.requestStart != performance.timing.responseStart)
			timing.ms = window.performance.timing.requestStart - window.performance.timing.navigationStart;
		else
			timing.ms = Math.max(0, timing.loadTime - window._timingStartTime - _getTiming('SERV'));
		if (isNaN(timing.ms))
			timing.ms = 0;
		_pageTiming(timing);
	}
	function _appendSvgPatterns(timingGraph, category, timingKey, total) {
		var span = timingGraph.find('.' + category);
span.width(Math.round((_getTiming(timingKey) / total) * 100) + '%');
		span.append($j(getSvgPattern(category)))
	}
	 function _pageTimingShow(evtData) {
		if (!window._timingStartTime)
			return;
		_setRlCatName();
		var tot;
		if (window.performance)
			tot = (window.performance.timing.loadEventEnd - window.performance.timing.navigationStart);
		else
			tot = new Date().getTime() - window._timingStartTime;
		if (tot > 900000) {
			_clearTimingDiv();
			return;
		}
		window._timingTotal = tot;
		var o = {RESP: tot};
		for (var c in categories)
			o[c] = _getTiming(c) + '';
		var isFixed = evtData.isFixed === 'true';
		var div = _getOrCreateTimingDiv(o, isFixed);
		if (tot > 0) {
			var timingGraph = $j('.timing_graph');
			var timingGraphDiv = $j('.timingGraphDiv');
			_appendSvgPatterns(timingGraph, CATEGORY_TIMING_NETWORK, 'NETW', tot);
			_appendSvgPatterns(timingGraph, CATEGORY_TIMING_SERVER, 'SERV', tot);
			_appendSvgPatterns(timingGraph, CATEGORY_TIMING_BROWSER, 'REND', tot);
			if(window.performance) {
				var labels = {
					timingType: getMessage('Timing Type'),
					timeRange: getMessage('Time Range'),
					totalTime: getMessage('Total Time')
				};
				var timingBreakdown = $j('<table class="timing_breakdown table table-condensed" id="glide:timingBreakdown_widget" aria-hidden="false">' +
						'<thead>' +
'       <th aria-hidden="true"></th>' +
'       <th class="timing_label" scope="col">' + labels.timingType + '</th>' +
'       <th id="time_range" scope="col">' + labels.timeRange + '</th>' +
'       <th id="total_time" scope="col">' + labels.totalTime + '</th>' +
'</thead>');
					for (var categoryIndex = 0; categoryIndex < events.length; categoryIndex++) {
						var category = events[categoryIndex];
						var timingTypeCategory = category.timingTypeCategory;
						var timings = category.timings;
						var renderFirstCell = true;
						for (var timingIndex = 0; timingIndex < timings.length; timingIndex++) {
							var timing = timings[timingIndex];
							var timingType = getMessage(timing.timingType);
							var timingID = timing.id;
							var startKey = timing.startKey;
							var endKey = timing.endKey;
							var runTime = new GwtMessage().getMessage("{0}ms", (window.performance.timing[endKey] - window.performance.timing[startKey]));
							var start = Math.max(0, window.performance.timing[startKey] - window.performance.timing.navigationStart);
							var end = Math.max(0, window.performance.timing[endKey] - window.performance.timing.navigationStart);
							var startTime;
							if (start === 0 && end === 0)
								startTime = new GwtMessage().getMessage("{0}ms", 0);
							else
								startTime =  new GwtMessage().getMessage("{0}ms", (start + '-' + end));
							var categoryCell = renderFirstCell ? '' +
								'<td aria-hidden="true" rowspan=' + timings.length + ' class="' + timingTypeCategory + '">' +
									'<div class="wrapper_div">' +
										getSvgPattern(timingTypeCategory, true) +
'</div>' +
'</td>' : '';
							renderFirstCell = false;
							timingBreakdown.append($j('' +
								'<tr>' +
									categoryCell +
									'<th scope="row" id="' + timingID + '" class="timing_label">' +
										timingType +
'</th>' +
									'<td headers="time_range ' + timingTypeCategory + '">' +
										startTime +
'</td>' +
									'<td headers="total_time ' + timingTypeCategory + '">' +
										runTime +
'</td>' +
'</tr>'));
						}
					}
					timingBreakdown.attr('aria-label', getMessage('Timing details breakdown'));
					timingBreakdown.insertAfter(timingGraphDiv);
			}
		}
		
		var img = div.down('img');
		if (!img)
			img = div.down('button');
		if (!img)
			return;
		img.observe('click', toggle.bindAsEventListener(this));
		_trackPagePerformance(o);
	}
	function getSvgPattern(timingCategory, isTableSvg) {
		 var svgClass = isTableSvg ? "table_svg" : "breakdown_svg";
return '<svg class="' + svgClass +'" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">' +
'<rect width="100%" height="100%" fill="url(#pattern_'+ timingCategory + ')" />' +
'</svg>';
	}
	function toggle() {
		_buildDetails();
		var modal = new GlideModal();
		modal.setTitle(getMessage("Browser response time"));
		modal.setPreference('focusTrap', true);
		modal.setBody(gel("glide:timing_widget").outerHTML);
	}
	function _getRow(ariaLabel, label, ms) {
		var row = cel("tr");
		row.setAttribute("aria-label", ariaLabel);
		var col1 = cel("td");
		col1.innerText = label;
		var col2 = cel("td");
		col2.innerText = new GwtMessage().getMessage("{0} ms", ms);
		row.appendChild(col1);
		row.appendChild(col2);
		return row;
	}
	function _buildDetails() {
		if (lastRendered && lastRendered >= flushStamp)
			return;
		var timingDetailTable = gel('page_timing_details');
		while(timingDetailTable.firstChild)
			timingDetailTable.removeChild(timingDetailTable.firstChild);
		var other = _getTiming('REND');
		var el = cel("div");
		el.className = "timing_details";
		var currentCategoryIndex  = 1;
		var totalCategories = _getTotalValidCategories(other);
		CATEGORIES.forEach(function(cat) {
			if (!categories[cat.category])
				return;
			var ms = _getTiming(cat.category) + '';
			if ('RLV2' !== cat.category)
				other -= ms;
			var children = categories[cat.category].children;
			var translatedCategory = getMessage(cat.name);
			var ariaLabel  = new GwtMessage().getMessage("{0} of {1} {2}: {3}", currentCategoryIndex, totalCategories, translatedCategory, ms);
			var row = _getRow(ariaLabel, translatedCategory, ms);
			row.setAttribute("data-children", children.length);
			el.appendChild(row);
			if (children.length > 0) {
				row.className="active";
				_buildChildren(el, children);
			}
			currentCategoryIndex  = currentCategoryIndex + 1;
		});
		if (other > 10) {
			var ariaLabel  = new GwtMessage().getMessage("{0} of {1} Other: {2}", totalCategories, totalCategories, other);
			var row = _getRow(ariaLabel, getMessage("Other"), other);
			row.setAttribute("data-children", 0);
			el.appendChild(row);
		}
		timingDetailTable.appendChild(el);
		lastRendered = new Date();
	}
	function _getTotalValidCategories(other) {
		var totalCategories = 0;
		CATEGORIES.forEach(function(cat) {
			if (!categories[cat.category])
				return;
			else {
				totalCategories =  totalCategories + 1;
				var ms = _getTiming(cat.category) + '';
				if ('RLV2' !== cat.category)
					other -= ms;
			}
		});
		return other > 10 ? (totalCategories + 1) : totalCategories;
	}
	function _buildChildren(parentEl, children) {
		var row;
		for (var i = 0; i < children.length; i++) {
			var child = children[i];
			var childNumber = i+1;
			var childAriaLabel  = new GwtMessage().getMessage("{0} of {1} {2}: {3}", childNumber, children.length, child.name, child.ms);
			row = _getRow(childAriaLabel, child.name, child.ms);
			row.className = "page_timing_child";
			parentEl.appendChild(row);
		}
	}
	function _initCategories() {
		if (categories)
			return;
		categories = {};
		var startTime = 0;
		if (window.performance)
			startTime = window.performance.timing.navigationStart;
		else
			startTime = parseInt(new CookieJar().get('g_startTime'), 10);
		window._timingStartTime = startTime;
	}
	function _getTiming(category) {
		if (!categories[category])
			return 0;
		return Math.max(0, categories[category].ms);
	}
	function _setRlCatName() {
		var isDeferred = window.g_related_list_timing != 'default';
		var postFix = (isDeferred === true) ? ' (async)' :' (sync)';
		for (var i = 0; i < CATEGORIES.length; i++) {
			if ((CATEGORIES[i].category === 'RLV2') && (!hasPostFix(CATEGORIES[i].name)))
				CATEGORIES[i].name = CATEGORIES[i].name + postFix;
		}
		function hasPostFix(cat_name) {
			var cat_name_split = cat_name.split(' ');
			var len = cat_name_split.length;
			return !!((cat_name_split[len - 1] === '(async)') || (cat_name_split[len - 1] === '(sync)'));
		}
	}
	function _clearTimingDiv() {
		window._timingTotal = -1;
		var div = gel('page_timing_div');
		if (div) {
			div.innerHTML = '';
div.style.visibility = 'hidden';
		}
	}
	function setAttrs(el, attrs) {
		for(var key in attrs) {
			el.setAttribute(key, attrs[key]);
		}
	}
	function _getOrCreateTimingDiv(timing, isFixed) {
		var div = gel('page_timing_div');
		if (!div) {
			div = cel('div');
			setAttrs(div, {
				"id": "page_timing_div",
				"role": "complementary",
				"aria-label": getMessage("Timing details"),
				"class": "timingDiv"
			});
			div.appendChild(_getSVGPatternDefinition());
			document.body.appendChild(div);
		}
		div.style.visibility = '';
		_getPageTimingContents(div, timing, isFixed);
		return div;
	}
	function _getSVGPatternDefinition() {
var svgNS = "http://www.w3.org/2000/svg";
		var patternSvg = document.createElementNS(svgNS, "svg");
		setAttrs(patternSvg, {
			"class": "patterns_svg",
			"width": "0",
			"height": "0"
		});
		var defs = document.createElementNS(svgNS, "defs");
		var patternNetwork = document.createElementNS(svgNS, "pattern");
		setAttrs(patternNetwork, {
			"id": "pattern_timing_network",
			"patternUnits": "userSpaceOnUse",
			"width": "5",
			"height": "5",
			"patternTransform": "rotate(45)"
		});
		var patternNetworkLine = document.createElementNS(svgNS, "line");
		setAttrs(patternNetworkLine, {
			"class": "pattern_stroke",
			"x1": "0",
			"y1": "0",
			"x2": "0",
			"y2": "5",
			"stroke-width": "2"
		});
		patternNetwork.appendChild(patternNetworkLine);
		defs.appendChild(patternNetwork);
		var patternServer = document.createElementNS(svgNS, "pattern");
		setAttrs(patternServer, {
			"id": "pattern_timing_server",
			"patternUnits": "userSpaceOnUse",
			"width": "6",
			"height": "6",
			"patternTransform": "rotate(45)"
		});
		var patternServerLineA = document.createElementNS(svgNS, "line");
		setAttrs(patternServerLineA, {
			"class": "pattern_stroke",
			"x1": "0",
			"y1": "3",
			"x2": "2",
			"y2": "3",
			"stroke-width": "2"
		});
		patternServer.appendChild(patternServerLineA);
		var patternServerLineB = document.createElementNS(svgNS, "line");
		setAttrs(patternServerLineB, {
			"class": "pattern_stroke",
			"x1": "4",
			"y1": "3",
			"x2": "6",
			"y2": "3",
			"stroke-width": "2"
		});
		patternServer.appendChild(patternServerLineB);
		defs.appendChild(patternServer);
		var patternBrowser = document.createElementNS(svgNS, "pattern");
		setAttrs(patternBrowser, {
			"id": "pattern_timing_browser",
			"patternUnits": "userSpaceOnUse",
			"width": "5.5",
			"height": "5.5",
			"patternTransform": "rotate(135)"
		});
		var patternBrowserLine = document.createElementNS(svgNS, "line");
		setAttrs(patternBrowserLine, {
			"class": "pattern_stroke",
			"x1": "0",
			"y1": "0",
			"x2": "0",
			"y2": "5.5",
			"stroke-width": "7"
		});
		patternBrowser.appendChild(patternBrowserLine);
		defs.appendChild(patternBrowser);
		patternSvg.appendChild(defs);
		return patternSvg;
	}
	function _getPageTimingContents(container, timing, isFixed) {
		var btnTrigger = cel("button");
		btnTrigger.classList = "pointerhand icon-stop-watch btn btn-icon btn-response-time";
		if (isFixed)
			btnTrigger.classList.add("-fixed-response-time");
		var gwt = new GwtMessage();
		var title = [
			gwt.getMessage('Response time(ms): {0}', timing.RESP),
			gwt.getMessage('Network: {0}', timing.NETW),
			gwt.getMessage('Server: {0}', timing.SERV),
			gwt.getMessage('Browser: {0}', timing.REND)
		].join(", ");
		setAttrs(btnTrigger, {
			"type": "button",
			"aria-controls": "glide:timing_widget",
			"title": title,
			"aria-label": getMessage("Response time")
		});
		container.appendChild(btnTrigger);
		
		var widgetContainer = cel("div");
		widgetContainer.style.display = "none";
		var timingWidget = cel("div");
		setAttrs(timingWidget, {
			"class": "timing_span",
			"id": "glide:timing_widget",
		});
		timingWidget.innerText = title;
		var timingGraphContainer = cel("div");
		timingGraphContainer.className = "timingGraphDiv";
		var timingGraph = cel("span");
		setAttrs(timingGraph, {
			"class": "timing_graph",
			"data-aria-label": getMessage("Show Timing Breakdown")
		});
		var networkGraph = cel("span");
		setAttrs(networkGraph, {
			"class": "timing_network",
			"title": gwt.getMessage('Network: {0}ms', timing.NETW)
		});
		timingGraph.appendChild(networkGraph);
		var serverGraph = cel("span");
		setAttrs(serverGraph, {
			"class": "timing_server",
			"title": gwt.getMessage('Server: {0}ms', timing.SERV)
		});
		timingGraph.appendChild(serverGraph);
		var browserGraph = cel("span");
		setAttrs(browserGraph, {
			"class": "timing_browser",
			"title": gwt.getMessage('Browser: {0}ms', timing.REND)
		});
		timingGraph.appendChild(browserGraph);
		timingGraphContainer.appendChild(timingGraph);
		timingWidget.appendChild(timingGraphContainer);
		var detailTable = cel("table");
		setAttrs(detailTable, {
			"class": "table table-condensed table-timing-detail",
			"aria-label": getMessage('Browser timing detail')
		});
		var detailTableHead = cel("thead");
		var detailTableHeadRow = cel("tr");
		var detailTableHeadColLabel = cel("th");
		detailTableHeadColLabel.innerText = getMessage('Browser timing detail');
		detailTableHeadRow.appendChild(detailTableHeadColLabel);
		var detailTableHeadColVal = cel("th");
		detailTableHeadColVal.innerText = getMessage("Time");
		detailTableHeadRow.appendChild(detailTableHeadColVal);
		detailTableHead.appendChild(detailTableHeadRow);
		detailTable.appendChild(detailTableHead);
		var detailTableBody = cel("tbody");
		detailTableBody.id = "page_timing_details";
		detailTable.appendChild(detailTableBody);
		timingWidget.appendChild(detailTable);
		widgetContainer.appendChild(timingWidget);
		container.appendChild(widgetContainer);
	}
	function _clientTransaction(o) {
		if (!window._timingStartTime || !window._timingTotal || window._timingTotal <= 0 || getActiveUser() === false || getTopWindow().loggingOut === true)
			return;
		if (!Object.entries) {
 			Object.entries = function(obj) {
				var ownProps = Object.keys(obj);
				var i = ownProps.length;
var resArray = new Array(i);
				while (i--)
					resArray[i] = [ownProps[i], obj[ownProps[i]]];
				return resArray;
			}
		};
		if (o === undefined || o === null || !Object.entries(o).length)
			return;
		var det = [];
		for (var i = 0; i < CATEGORIES.length; i++) {
			var cat = CATEGORIES[i];
			if (!o.types[cat.category])
				continue;
			if (!categories[cat.category])
				continue;
			var children = categories[cat.category].children;
			if (!children)
				continue;
			for (var ndx = 0; ndx < children.length; ndx++) {
				var child = children[ndx];
				var t = {};
				t.type_code = cat.category;
				t.type = cat.name;
				t.script_detail = child.script_type;
				t.name = child.name;
				t.duration = child.ms;
				t.sys_id = child.sys_id;
				t.source_table = child.source_table;
				det.push(t);
			}
		}
		var data = {
			'transaction_id': o.transaction_id,
			'table_name': o.table_name,
			'form_name': o.form_name,
			'view_id': o.view_id,
			'transaction_time': window._timingTotal,
			'browser_server_time': _getTiming('SERV'),
			'network_time': _getTiming('NETW'),
			'browser_time': _getTiming('REND'),
			'client_script_time': (_getTiming('CSOL') + _getTiming('CSOC')),
			'policy_time': _getTiming('UIOL'),
			'client_details': Object.toJSON(det)
		};
		if (o.logged_in !== false)
			window.NOW.PageTimingService.send(data);
	}
	function _trackPagePerformance(data) {
		var uxMetricsLabels = {
			'RESP' :  'Page Load Time',
			'SERV' : 'Server Time',
			'NETW' : 'Network Time',
			'REND' : 'Browser Time'
		};
		try {
			var uxMetricsData = [];
			var pathName = decodeURIComponent(document.location.pathname);
var pageName = pathName.match(/[$\w]+(?=.do[?]*)/g)[0];
			for (var c in data) {
				uxMetricsLabels[c] && uxMetricsData.push({name: uxMetricsLabels[c], value:Number(data[c])});
			}
			window.GlideUXMetrics && GlideUXMetrics.trackPerformance(pageName, uxMetricsData);
		} catch (err) {
		}
	}
	var CATEGORIES = [
{ category: 'SCPT', name: 'Script Load/Parse' },
		{ category: 'PARS', name: 'CSS and JS Parse' },
		{ category: 'SECT', name: 'Form Sections' },
		{ category: 'UIOL', name: 'UI Policy - On Load' },
		{ category: 'CSOL', name: 'Client Scripts - On Load' },
		{ category: 'CSOC', name: 'Client Scripts - On Change (initial load)' },
		{ category: 'PROC', name: 'Browser processing before onload' },
		{ category: 'DOMC', name: 'DOMContentLoaded to LoadEventEnd' },
		{ category: 'LOADF', name: 'addLoadEvent functions' },
		{ category: 'RLV2', name: 'Related Lists' }
	]
})()
;
/*! RESOURCE: /scripts/classes/GlideUI.js */
var GlideUI = Class.create({
	initialize: function(id) {
		this.id = id;
		this.topWindow = getTopWindow() || window;
		this.outputMessagesTag = "output_messages";
		this.outputMsgDivClass = ".outputmsg_div";
		this.messages = {};
		if (window.NOW && window.NOW.ngLegacySessionNotificationSupport) {
			return;
		}
		CustomEvent.observe(this.getNotificationEventName('system'), this._systemNotification.bind(this));
		CustomEvent.observe(this.getNotificationEventName('info'), this._systemNotification.bind(this));
		CustomEvent.observe(this.getNotificationEventName('error'), this._systemNotification.bind(this));
		CustomEvent.observe(this.getNotificationEventName('system_event'), this._eventNotification.bind(this));
		this._setupAnnouncer();
		this._scrapePageLoadMessages();
	},
	getNotificationEventName : function (type) {
		var idPrefix = this.id ? '.' + this.id : '';
		return GlideUI.UI_NOTIFICATION + idPrefix + '.' + type;
	},
	setMsgTags: function(msgTag,msgDivClass) {
		this.outputMessagesTag = msgTag;
		this.outputMsgDivClass = msgDivClass;
	},
	display: function(htmlTextOrOptions) {
		alert('GlideUI.display() needs to be implemented in an overriding class');
	},
	fireNotifications: function() {
		var spans = $$('span.ui_notification');
		for (var i = 0; i < spans.length; i++) {
			var span = spans[i];
			this.fire(new GlideUINotification({xml: span}));
		}
	},
fire: function( notification) {
		this.topWindow.CustomEvent.fireTop(GlideUI.UI_NOTIFICATION + '.' + notification.getType(), notification);
	},
_systemNotification: function( notification) {
		if (window.NOW && window.NOW.ngLegacySessionNotificationSupport) {
			return;
		}
		var options = {
				text: notification.getText(),
				type: notification.getType()
		};
		if (!options.text)
			return;
		this.display(options);
	},
_eventNotification: function( notification) {
		var type = notification.getAttribute('event');
		if (type == 'refresh_nav')
			CustomEvent.fireTop('navigator.refresh');
	},
	addOutputMessage: function(options) {
		srMessage = {
			info: "Info Message",
			warning: "Warning Message",
			error: "Error Message",
			success: "Success Message",
			suggestion: "Suggestion Message"
		};
		options = Object.extend({
			msg: '',
			id: '',
			icon: 'icon-info',
			iconSr: srMessage.info,
			type: 'info',
			preventDuplicates: true
		}, options || {});
		document.addEventListener("DOMContentLoaded", function(event) {
			if(window.nowapi) {
				window.nowapi.g_i18n.getMessages([srMessage.info, srMessage.warning, srMessage.error, srMessage.success, srMessage.suggestion], function(translations) {
					srMessage.info = translations[srMessage.info];
					srMessage.warning = translations[srMessage.warning];
					srMessage.error = translations[srMessage.error];
					srMessage.success = translations[srMessage.success];
					srMessage.suggestion = translations[srMessage.suggestion];
				});
			}
		});
		if (options.type === 'error') {
			options.icon = 'icon-cross-circle';
			options.iconSr = srMessage.error;
		} else if (options.type === 'warning') {
			options.icon = 'icon-alert';
			options.iconSr = srMessage.warning;
		} else if (options.type === 'success') {
			options.icon = 'icon-check-circle';
			options.iconSr = srMessage.success;
		} else if (options.type === 'suggestion') {
			options.icon = 'icon-ai-sparkle-fill';
			options.iconSr = srMessage.suggestion;
		}
		var divs = this._getOutputMessageDivs();
		if (!divs)
			return false;
		var newMsg;
		if (typeof options.id == 'undefined' || options.id == '')
			newMsg = GlideUI.OUTPUT_MESSAGE_TEMPLATE.evaluate(options);
		else
			newMsg = GlideUI.OUTPUT_MESSAGE_TEMPLATE_WITH_ID.evaluate(options);
		var messageKey = options.type + "_" + options.msg;
		if (options.preventDuplicates && this.messages[messageKey])
			return false;
		this.messages[messageKey] = true;
		divs.container.insert(newMsg);
		this.show(divs.messages);
		if (options.msg && this._shouldAnnounce(divs.container))
			this._announce(options.type, options.msg);
		if (window._frameChanged)
			_frameChanged();
		return true;
	},
clearOutputMessages: function( closeImg) {
		var divs;
		if (closeImg) {
			closeImg = $(closeImg);
			divs = {
			   messages: closeImg.up(),
			   container:  closeImg.up().select(this.outputMsgDivClass)[0]
			}
		} else
			divs = this._getOutputMessageDivs();
		if (!divs)
			return false;
		this.hide(divs.messages);
		divs.container.innerHTML = '';
		this.messages = {};
		return true;
	},
	scrollIntoView: function() {
		this._getOutputMessageDivs().container.scrollIntoView();
	},
	setNavMessage: function(options) {
		options = Object.extend({
			msg: ''
		}, options || {});
		var navMessage = $('nav_message');
		if(navMessage) {
			navMessage.replace(GlideUI.NAV_MESSAGE_TEMPLATE.evaluate(options));
			this.adjustTopScrollHeight();
			return true;
		}
		var firstNavElement = $$('nav.navbar')[0];
		if(firstNavElement) {
			firstNavElement.setStyle({marginBottom: '0px'});
			firstNavElement.insert({after: GlideUI.NAV_MESSAGE_TEMPLATE.evaluate(options)});
			this.adjustTopScrollHeight();
			return true;
		}
		return false;
	},
	clearNavMessage: function() {
		var navMessage = $('nav_message');
		if(!navMessage)
			return false;
		navMessage.remove();
		var firstNavElement = $$('nav.navbar')[0];
		if(firstNavElement)
			firstNavElement.setStyle({marginBottom: '5px'});
		this.adjustTopScrollHeight();
		return true;
	},
	adjustTopScrollHeight: function() {
		var fixedContent = $$('div[data-position-fixed-header="true"]')[0];
		if(!fixedContent)
			return;
		var scrollContent = $$('div[data-position-below-header="true"]')[0];
		if(!scrollContent)
			return;
		scrollContent.setStyle({
			top: fixedContent.getHeight() + 'px'
		});
		if (fixedContent.getHeight() > 60) {
			var debugRelated = $$('div#debug_related')[0];
			if (debugRelated) {
				var marginHeight = fixedContent.getHeight() + 20;
				debugRelated.setStyle({
					marginTop: marginHeight + 'px'
				});
			}
		}
	},
	show: function(el) {
		if (el.classList.contains('outputmsg_hide'))
			el.classList.remove('outputmsg_hide');
		else if (el.style.display === 'none')
			el.style.display = '';
	},
	hide: function(el) {
		el.classList.add('outputmsg_hide');
	},
	onCloseMessagesButtonClick: function(closeImg) {
		var form = closeImg.up('form');
		this.clearOutputMessages(closeImg);
		this.focusFirstElement(form);
	},
	focusFirstElement: function(form) {
		var element = tabbable(form)[0];
		if (element)
			element.focus();
	},
	_getOutputMessageDivs: function() {
		var divs = {};
		divs.messages = $(this.outputMessagesTag);
		if (!divs.messages)
			return null;
		divs.container = divs.messages.select(this.outputMsgDivClass)[0];
		if (!divs.container)
			return null;
		return divs;
	},
	_setupAnnouncer: function() {
		var self = this;
		addRenderEvent(function() {
			var element = document.createElement('span');
			element.setAttribute('aria-live', 'polite');
			element.setAttribute('class', 'sr-only');
			document.body.appendChild(element);
			self._announcer = element;
		}, false);
	},
	_scrapePageLoadMessages: function() {
		var self = this;
		setTimeout(function() {
			var messages = document.querySelectorAll('.outputmsg_div .outputmsg');
			for (var i = 0; i < messages.length; i++) {
				var msg = messages[i];
				var text = msg.textContent;
				var srOnly = msg.querySelectorAll('.sr-only');
				for (var j = 0; j < srOnly.length; j++) {
					text = text.replace(srOnly[j].textContent, '');
				}
				var type = 'info';
				if (msg.classList.contains('outputmsg_error'))
					type = 'error';
				if (msg.classList.contains('outputmsg_warning'))
					type = 'warning';
				if (self._shouldAnnounce(msg))
					self._announce(type, text);
			}
		}, 2000);
	},
	_announce: function(type, text) {
		if (this._announcer && text) {
			var that = this;
			var textNode;
			setTimeout(function() {
				textNode = document.createTextNode(type + ': ' + text);
				that._announcer.appendChild(textNode);
				that._announcer.appendChild(textNode);
			}, 500);
		}
	},
	_pruneOldMessages: function() {
		var nodes = this._announcer.childNodes;
		for (var i = 0; i < nodes.length; i++) {
			var node = nodes[i];
			if (node.readyToDelete)
				node.parentNode.removeChild(node);
		}
	},
	_shouldAnnounce: function(el) {
		if (!el)
			return false;
		var container = el;
		while(!container.hasClassName('outputmsg_div')) {
			container = container.parentElement;
		}
		if (container.getAttribute('data-server-messages') === 'true') {
			container.removeAttribute('data-server-messages');
			return true;
		}
		return (!container.hasAttribute('aria-live')) && container.querySelectorAll('[aria-live]').length === 0;
	},
	toString: function() {
		return 'GlideUI';
	}
});
GlideUI.UI_NOTIFICATION = 'glide:ui_notification';
GlideUI.UI_NOTIFICATION_SYSTEM = GlideUI.UI_NOTIFICATION + '.system';
GlideUI.UI_NOTIFICATION_INFO = GlideUI.UI_NOTIFICATION + '.info';
GlideUI.UI_NOTIFICATION_ERROR = GlideUI.UI_NOTIFICATION + '.error';
GlideUI.UI_NOTIFICATION_SYSTEM_EVENT = GlideUI.UI_NOTIFICATION + '.system_event';
GlideUI.OUTPUT_MESSAGE_TEMPLATE = new Template(
	'<div role="alert" class="outputmsg outputmsg_#{type} notification notification-#{type}">' +
		'<span class="notification-icon #{icon}">' +
'<span class="sr-only">#{iconSr}</span>' +
'</span>' +
'<span class="outputmsg_text">#{msg}</span>' +
'</div>'
);
GlideUI.OUTPUT_MESSAGE_TEMPLATE_WITH_ID = new Template(
	'<div role="alert" class="outputmsg outputmsg_#{type} notification notification-#{type}" id="#{id}">' +
		'<span class="notification-icon #{icon}">' +
'<span class="sr-only">#{iconSr}</span>' +
'</span>' +
'<span class="outputmsg_text">#{msg}</span>' +
'</div>'
);
GlideUI.NAV_MESSAGE_TEMPLATE = new Template(
	'<div role="alert" id="nav_message" class="outputmsg_nav">' +
'<img src="images/icon_nav_info.png"/>' +
'<span class="outputmsg_text outputmsg_nav_inner">&nbsp;#{msg}</span>' +
'</div>'
);
window.g_GlideUI = new GlideUI();
GlideUI.get = function() {
	return window.g_GlideUI;
};
;
/*! RESOURCE: /scripts/classes/GlideUINotification.js */
var GlideUINotification = Class.create({
       
    initialize: function(options) {
        options = Object.extend({
            type: 'system',
            text: '',
            duration: 0,
            attributes: {},
            xml: null,
            window: window
        }, options || {});
        
        this.window = options.window;
        if (!options.xml) {
            this.type = options.type;
            this.text = options.text;
            this.attributes = options.attributes;
            this.duration = options.duration;
        } else
            this.xml = options.xml;
    },
    getType: function() {
        if (this.xml)
            return this.xml.getAttribute('data-type') || '';
        
        return this.type;
    },
    
    getText: function() {
        if (this.xml)
            return this.xml.getAttribute('data-text') || '';
        
        return this.text;
    },
    getDuration: function() {
        if (this.xml)
            return parseInt(this.xml.getAttribute('data-duration'), 10) || 0;
        return this.duration;
    },
    
    getAttribute: function(n) {
        var v;
        if (this.xml)
            v = this.xml.getAttribute('data-attr-' + n) || '';
        else
            v = this.attributes[n] || '';
        
        return v;
    },
    
    getWindow: function() {
        return this.window;
    },
    
    getChildren: function() {
        if (!this.xml)
            return [];
        
        var children = [];
        var spans = this.xml.childNodes;
        for (var i = 0; i < spans.length; i++) {
            if ((spans[i].getAttribute('class') == 'ui_notification_child') || (spans[i].getAttribute('className') == 'ui_notification_child'))
                children.push(new GlideUINotification({xml: spans[i], window: this.window}));
        }
        
        return children;
    },
    
    toString: function() { return 'GlideUINotification'; }
});
;
/*! RESOURCE: /scripts/classes/GlideUIDefault.js */
var GlideUIDefault = {
    init: function() {},
    display: function(htmlTextOrOptions) {
        if (typeof htmlTextOrOptions == 'string')
            new NotificationMessage({ text: htmlTextOrOptions });
        else
            new NotificationMessage(htmlTextOrOptions);
    }    
};
if (GlideUI.get())
    Object.extend(GlideUI.get(), GlideUIDefault).init();
;
/*! RESOURCE: /scripts/classes/doctype/NotificationMessage.js */
var NotificationMessage = Class.create({
	
	FADE_IN_DEFAULT_MS: 400,
	FADE_OUT_DEFAULT_MS: 200,
	CLOSE_DEFAULT_MS: 3000,
	initialize: function(options) {
		this.options = Object.extend({
			text: '',
			type: 'info',
			image: '',
			styles: {},
			sticky: false,
			fadeIn: this.FADE_IN_DEFAULT_MS,
			fadeOut: this.FADE_OUT_DEFAULT_MS,
			closeDelay: this.CLOSE_DEFAULT_MS,
			classPrefix: 'notification',
			container: 'ui_notification',
			classContainer: 'panel-body',
			bundleMessages: false,
			singleMessage: false,
			onBeforeOpen: function() {},
			onAfterOpen: function() {},
			onBeforeClose: function() {},
			onAfterClose: function() {}
		}, options || {});
		if (this.options.type == 'warn')
			this.options.type = 'warning';
		if (this.options.type === '')
			this.options.type = 'info';
		if (this.options.type == 'system')
			this.options.type = 'info';
		
		this.options.fadeIn = this._validNumber(this.options.fadeIn, this.FADE_IN_DEFAULT_MS);
		this.options.fadeOut = this._validNumber(this.options.fadeOut, this.FADE_OUT_DEFAULT_MS);
		this.options.closeDelay = this._validNumber(this.options.closeDelay, this.CLOSE_DEFAULT_MS);
		this._show();
	},
	
	_show: function() {
		var container = this._getContainer(this.options.container);
		this.options.onBeforeOpen.call(this);
		if (this.options.singleMessage)
			container.update("");
		this.notification = this._create();
		if (!this.options.bundleMessages || container.childElements().length === 0) {
			container.insert(this.notification);
			if (!this.options.sticky) {
				this.timeoutId = setTimeout(this._close.bind(this, false),
					this.options.closeDelay + this.options.fadeIn);
				this.notification.observe('mouseover', this._makeSticky.bind(this));
			}
} else {
			var notification = container.down('.' + this.options.classPrefix);
			if (!notification)
				notification = this.notification;
			this._showOuterPanel(notification);
			NotificationMessage.prototype.messages.push(this.notification);
			this._updateMoreText(notification, NotificationMessage.prototype.messages.length + " more...");
		}
		this.notification.on('click', '.notification_close_action', this._close.bind(this, true));
		this.notification.fadeIn(this.options.fadeIn, function() {
			this.options.onAfterOpen.call(this);
		}.bind(this));
	},
	_close: function(boolCloseImmediately, closeEvent) {
		if (!this.notification || this._isClosing === true)
			return;
		this._isClosing = true;
		this.options.onBeforeClose.call(this);
		clearTimeout(this.timeoutId);
		this.timeoutId = null;
		function _onClose(notification) {
			this._isClosing = false;
			notification.stopObserving();
			var parent = notification.up();
			if (notification.up('.' + this.options.classContainer)
					&& notification
						.up('.' + this.options.classContainer).select('.' + this.options.classPrefix).length  <= 1)
				notification.up('#' + this.options.container).remove();
			else {
				if (notification.parentNode)
					notification.remove();
				notification = null;
			}
			this.options.onAfterClose.call(this);
			if (isMSIE && parent) {
				parent.style.display = "none"
				parent.style.display = "block";
			}
		}
		var notification = this.notification;
		if (closeEvent && closeEvent.element)
			notification = closeEvent.element().up('.' + this.options.classPrefix + '-closable');
		if (boolCloseImmediately)
			_onClose.call(this, notification);
		else
			notification.animate({ height: 0, opacity: 0.2 }, this.options.fadeOut, _onClose.bind(this, notification));
	},
	_makeSticky: function() {
		clearTimeout(this.timeoutId);
		this.notification.stopObserving('mouseover');
		this.notification.down('.close').show();
		this.notification.addClassName(this.options.classPrefix + '_message_sticky');
	},
	_showAll: function(more) {
		if (this.notification.up(".panel-body").length === 0) {
			var notificationContainer = this._createContainer();
			this.notification.insert(notificationContainer)
			this.notification.wrap(notificationContainer);
			this.notification.addClassName("notification_inner");
			this.notification = notificationContainer;
		}
		for (var i = 0; i < NotificationMessage.prototype.messages.length; i++) {
			var notification = NotificationMessage.prototype.messages[i];
			this.notification.up('.panel-body').insert(notification);
			notification.stopObserving('mouseover');
			notification.down('.close').show();
			notification.addClassName(this.options.classPrefix + '_message_sticky');
		}
		more.up('.notification-more-container').hide();
		NotificationMessage.prototype.messages = [];
	},
	_getContainer: function(n) {
		var c = $(n);
		if (c)
			return c.down('.' + this.options.classContainer);
		c = new Element('div', {
			'id': n,
			'className': this.options.classPrefix + '_container notification-closable'
		});
		document.body.appendChild(c);
		this._createHeading(c);
		var body = this._createBody(c);
		this._createFooter(c);
		return body;
	},
	_createContainer: function() {
		return this._createMainDiv(true);
	},
	_createHeading: function(container) {
		var heading = new Element('div', {className: "panel-heading", style: 'display: none;' });
		var close = this._createCloseIcon();
		close.setStyle({display:"block"});
		heading.insert(close);
heading.insert("<h3 class=\"panel-title\">Current Notification Messages</h3>");
		container.insert(heading);
	},
	_createBody: function(container) {
		var el = new Element('div', { className: this.options.classContainer, style: 'padding: 0;' });
		container.insert(el);
		return el;
	},
	_createFooter: function(container) {
		var el = new Element('div', { className: 'panel-footer notification-more-container', style: 'display:none; '});
		container.insert(el);
		el.insert(this._createMoreIcon());
	},
	_create: function() {
		var e = this._createMainDiv();
		e.appendChild(this._createCloseIcon());
		e.insert(sanitizeHtml(this.options.text));
		e.style.display = 'none';
		return e;
	},
	_createCloseIcon: function() {
		var close = new Element('span', {
			className: 'icon-cross close',
			style: 'display: ' + (this.options.sticky ? 'block' : 'none')
		});
		close.observe('click', this._close.bind(this,true));
		return close;
	},
	_createMainDiv: function(isContainer) {
		var className = this.options.classPrefix;
		if (!isContainer && this.options.type)
			className += ' notification-closable ' + this.options.classPrefix + '-' + this.options.type;
		else if (isContainer)
			className = this.options.classPrefix + '_message_container panel-body';
		if (this.options.sticky)
			className += ' ' + this.options.classPrefix + '_sticky';
		var e = new Element('div', { 'className' : className });
		e.setStyle(this.options.styles);
		return e;
	},
	_createMoreIcon: function(){
		var more = new Element("a", { "className": "notification-more" });
		more.observe('click',this._showAll.bind(this, more));
		return more;
	},
	_showOuterPanel: function(notification) {
		notification.up('.notification_container').down('.panel-heading').show();
		notification.up('.notification_container').down('.panel-body').style.padding = '';
		notification.up('.notification_container').addClassName('panel panel-default');
		notification.up('.panel').down(".notification-more-container").show();
	},
	_updateMoreText: function(notification, text) {
		notification.up('.panel').select(".notification-more")[0].update(sanitizeHtml(text));
	},
	_validNumber: function(n, v) {
		n = parseInt(n, 10);
		return isNaN(n) ? v : n;
	},
	toString: function() { return 'NotificationMessage'; }
});
NotificationMessage.prototype.messages = [];
;
/*! RESOURCE: /scripts/section.js */
function expandCollapseAllSections(expandFlag) {
	var spans = document.getElementsByTagName('span');
	for (var i = 0; i < spans.length; i++) {
	    if (spans[i].id.substr(0, 8) != "section.") 
	    	continue;
	    	
	    var id = spans[i].id.substring(8);
	    var state = collapsedState(id);
	    if (state == expandFlag) 
	    	toggleSectionDisplay(id);
	}
	CustomEvent.fire('toggle.sections', expandFlag);
}
function collapsedState(sectionName) {
	var el = $(sectionName);
	if (el)
		return (el.style.display == "none");
}
function setCollapseAllIcons(action, sectionID) {
	var exp = gel('img.' + sectionID + '_expandall');
	var col = gel('img.' + sectionID + '_collapseall');
	if (!exp || !col)
		return;
	if (action == "expand") {
		exp.style.display = "none";
		col.style.display = "inline";
		return;
	}
	exp.style.display = "inline";
	col.style.display = "none";
}
function toggleSectionDisplay(id,imagePrefix,sectionID) {
	var collapsed = collapsedState(id);
	setPreference("collapse.section." + id, !collapsed, null);
	hideReveal(id, imagePrefix);
	toggleDivDisplay(id + '_spacer');
	if (collapsed) {
		CustomEvent.fire("section.expanded", id);
		setCollapseAllIcons("expand",sectionID);
	}
}
;
/*! RESOURCE: /scripts/classes/doctype/GlideTabs2.js */
var GlideTabs2 = Class.create({
	initialize: function(className, parentElement, offset, tabClassPrefix, isPreloaded) {
		this._timeout = null;
		this._lastIndex = null;
		this.tabs = [];
		this.tabIDs = [];
		this.tabNames = [];
		this.isHidable = [];
this.className = className;
		if (parentElement == null)
			return;
		this.parentElement = parentElement;
		this.omitCountTotalCount = {};
		this.endPage = {};
		this.endPageCount = {};
		this.doesNextPageExist = {};
		this.isFormTabs = window.g_form && parentElement == g_form.getFormElement();
		this.tabs = this.getChildNodesWithClass(parentElement, className);
		if (offset == 1)
			this.tabs.shift();
		if (this.isFormTabs) {
			CustomEvent.observe("form.loaded", this.markMandatoryTabs.bind(this));
			CustomEvent.observe("ui_policy.loaded", this.startCatchingMandatory.bind(this));
			var initialIndex = parseInt($j('#tabs2_section').attr('data-initial-tab-index'), 10);
			this._lastIndex = isNaN(initialIndex) ? 0 : initialIndex;
		}
		CustomEvent.observe("change.handlers.run", this.showTabs.bind(this));
		CustomEvent.observe("change.handlers.run.all", this.showTabs.bind(this));
		if (className !== 'tabs2_list' || !window.NOW.g_relatedLists)
			CustomEvent.observe("partial.page.reload", this.updateTabs.bind(this));
		this.activated = false;
		this.tabDiv = gel(className);
		this.activeTab = -1;
		this.createTabs(tabClassPrefix, isPreloaded);
		this.state = new GlideTabs2State(className + "_" + g_tabs_reference);
		if (this.tabDiv) {
			var $tabDiv = $j(this.tabDiv);
			$tabDiv.attr('role', 'tablist');
			$tabDiv.attr('aria-label', new GwtMessage().getMessage("Section Tab Lists"));
			$tabDiv.on('keydown', this, this.handleKeydown);
			setTimeout(function (tabDiv) {
				$j(tabDiv.getElementsByClassName('tabs2_tab')).not('.tabs2_active').attr({'tabindex':-1,'aria-selected':false});
			}, 0, this.tabDiv);
		}
	},
	handleKeydown: function (e) {
		var self = e.data;
if (e.which == 37) {
			var newIndex = (self.activeTab -1 + self.tabsTabs.length) % self.tabsTabs.length;
			var loopCount = 0;
			while (self.tabsTabs[newIndex].element.style['display'] == 'none' && loopCount < self.tabsTabs.length) {
				newIndex = (newIndex - 1 + self.tabsTabs.length) % self.tabsTabs.length;
				loopCount++;
			}
			self.setActive(newIndex);
} else if (e.which == 39) {
			var newIndex = (self.activeTab + 1 + self.tabsTabs.length) % self.tabsTabs.length;
			var loopCount = 0;
			while (self.tabsTabs[newIndex].element.style['display'] == 'none' && loopCount < self.tabsTabs.length) {
				newIndex = (newIndex + 1 + self.tabsTabs.length) % self.tabsTabs.length;
				loopCount++;
			}
			self.setActive(newIndex);
} else if (e.which === 36) {
			e.preventDefault();
			self.setActive(0);
} else if (e.which === 35) {
			e.preventDefault();
			self.setActive(self.tabsTabs.length - 1);
		}
		for (var i = 0; i < self.tabs.length; i++) {
			self.tabs[i].setAttribute('aria-hidden', i != self.activeTab);
		}
		var activeTab = $j(this.getElementsByClassName('tabs2_active')[0]);
		activeTab.attr('tabindex', 0);
		activeTab.attr('aria-selected', true);
		activeTab.focus();
		$j(this.getElementsByClassName('tabs2_tab')).not('.tabs2_active').attr({'tabindex':-1,'aria-selected':false});
	},
	_setActive: function(index, shouldSavePreference) {
		if (index < 0 || index > this.tabs.length - 1)
			index = 0;
		var tab = this.tabs[index];
		if (this.activeTab != -1) {
			var previousTab = this.tabs[this.activeTab];
			hide(previousTab);
			this.tabsTabs[this.activeTab].setActive(false);
		}
		show(tab);
		this.activeTab = parseInt(index, 10);
		this._configureTabbable(tab);
		
		if (shouldSavePreference) {
this.state.set(this.activeTab);
		if (this.isFormTabs && this._lastIndex !== this.activeTab && this.tabsTabs[this._lastIndex]) {
			$j(this.tabsTabs[this._lastIndex].element).removeClass('tabs2_active');
				this.saveFormTabPreference();
			}
		}
		this.tabsTabs[index].setActive(true);
	},
	setActive: function(index) {
		this._setActive(index, true);
	},
	
	setActiveNoPreference: function(index) {
		this._setActive(index, false);
	},
	isActivated: function() {
		return this.activated;
	},
	saveFormTabPreference: function() {
		clearTimeout(this._timeout);
		this._timeout = setTimeout(function() {
			this._lastIndex = this.activeTab;
			setPreference('tabs2.section.' + g_form.getTableName(), this.activeTab);
		}.bind(this), 2000);
	},
	deactivate: function() {
		removeClassName(this.parentElement, 'tabs_enabled');
		removeClassName(this.parentElement ,'tabs_disabled');
		addClassName(this.parentElement, 'tabs_disabled');
		if (this.tabs.length == 0)
			return;
		if (isDoctype){
			for (var i = 0; i < this.tabs.length; i++)
				$(this.tabs[i]).removeClassName("tab_section");
		}
		var count = this.tabsTabs.length;
		for (var i = 0; i < count; i++) {
			var tabsTab = this.tabsTabs[i];
			if (tabsTab.isVisible())
				show(this.tabs[i]);
		}
		for (var i = 0; i < this.tabs.length; i++) {
			this.tabs[i].setAttribute('aria-hidden', false);
		}
		hide(this.tabDiv);
		this.activated = false;
	},
	activate: function() {
		if (this.className === "tabs2_vars")
			return;
		removeClassName(this.parentElement, 'tabs_enabled');
		removeClassName(this.parentElement, 'tabs_disabled');
		addClassName(this.parentElement, 'tabs_enabled');
		if (this.tabs.length < 2) {
			this.deactivate();
			return;
		}
		if (isDoctype){
			for (var i = 0; i < this.tabs.length; i++)
				$(this.tabs[i]).addClassName("tab_section");
		}
		show(this.tabDiv);
		this.hideAll();
		var index = this.state.get();
		if (index == null)
			index = 0;
		if (!this.tabsTabs[index] || !this.tabsTabs[index].isVisible()) {
			index = this._findFirstVisibleTab();
			if (index != -1)
				this.setActive(index);
		}
		if (index != -1)
			this.setActive(index);
		for (var i = 0; i < this.tabs.length; i++) {
			if (i != index) {
				this.tabs[i].setAttribute('aria-hidden', true);
			}
		}
		this.activated = true;
	},
	hideAll: function() {
		var tabs = this.tabs;
		for (var i = 0; i < tabs.length; i++)
			hide(tabs[i]);
	},
	hideTabByID: function(tabID) {
		var tabIndex = this.findTabIndexByID(tabID);
		if (tabIndex == -1)
			return;
		this.hideTab(tabIndex);
	},
	hideTabByName: function(name) {
		var tabIndex = this.findTabIndexByName(name);
		if (tabIndex == -1)
			return;
		this.hideTab(tabIndex);
	},
	hideTab: function(index) {
		if(this.isHidable[index] === true) {
hide(this.tabs[index].firstChild);
this.showTabs();
		}
	},
	_findFirstVisibleTab: function() {
		var count = this.tabsTabs.length;
		for (var i = 0; i < count; i++) {
			var tabsTab = this.tabsTabs[i];
			if (tabsTab.isVisible()) {
				this.setActive(i);
				return i;
			}
		}
		return -1;
	},
	showAll: function() {
		var tabs = this.tabs;
		for (var i = 0; i < tabs.length; i++)
			show(tabs[i]);
	},
	showTabByID: function(tabID) {
		var tabIndex = this.findTabIndexByID(tabID);
		if (tabIndex == -1)
			return;
		this.showTab(tabIndex);
	},
	showTabByName: function(name) {
		var tabIndex = this.findTabIndexByName(name);
		if (tabIndex == -1)
			return;
		this.showTab(tabIndex);
	},
	isVisible: function(index) {
		var visibility = this.tabs[index].firstChild.style.display;
		return !(visibility == 'none');
	},
	showTab: function(index) {
		show(this.tabs[index].firstChild);
this.showTabs();
	},
	findTabIndexByID: function(tabID) {
		var count = this.tabIDs.length;
		for (var i = 0; i < count; i++) {
			if (this.tabIDs[i] == tabID)
				return i;
		}
		this.log("findTabIndexByID could not find " + tabID);
		return -1;
	},
	findTabIndexByName: function(tabName) {
		var index = this.tabNames.indexOf(tabName);
		if(index === -1)
			this.log("findTabIndexByName could not find " + tabName);
		return index;
	},
	createTabs: function(tabClassPrefix, isPreloaded) {
		var tabs = this.tabs;
		this.tabsTabs = [];
		for (var i = 0, n = tabs.length, tab, title, name; i < n; i++) {
			tab = tabs[i];
			title = this._getCaption(tab);
			name = tab.getAttribute('tab_caption_raw');
			this.tabsTabs[i] = new GlideTabs2Tab(this, i, title, tabClassPrefix, isPreloaded);
			this.tabIDs[i] = tab.getAttribute('id');
			this.isHidable[i] = true;
			var nameStr = "";
			if (name) {
nameStr = name.toLowerCase().replace(" ", "_").replace(/[^0-9a-z_]/gi, "");
				while (this.tabNames.indexOf(nameStr) > -1)
					nameStr += "_";
			} else {
				nameStr = tab.getAttribute('tab_list_name_raw');
			}
			this.tabNames[i]=nameStr;
			tab.setAttribute('role','tabpanel');
			tab.setAttribute('aria-hidden',true);
			tab.setAttribute('aria-labelledby',this.tabIDs[i]);
			if (!isPreloaded) {
				var header = isDoctype ? cel('span') : cel('h3');
				header.className = 'tab_header';
				if (isTextDirectionRTL()) {
					header.dir = 'rtl';
				}
				header.appendChild(this.tabsTabs[i].getElement());
				if (!this.tabDiv) {
					continue;
				}
				this.tabDiv.appendChild(header);
				var img = cel('img');
				img.className = 'tab_spacer';
img.src = 'images/s.gifx';
				img.width = '4';
				img.height = '24';
				this.tabDiv.appendChild(img);
			}
		}
		this.showTabs();
	},
	showTabs: function() {
		for (var i = 0; i < this.tabs.length; i++) {
			var tab = this.tabs[i];
			var s = tab.firstChild;
			var displayed = s.style.display != 'none';
			this.tabsTabs[i].showTab(displayed);
		}
		this._setActiveTab();
	},
	updateTabs: function() {
		var tabs = this.tabs;
		for (var i = 0; i < tabs.length; i++) {
			var tab = tabs[i];
			var t = this._getCaption(tab)
			this.tabsTabs[i].updateCaption(t);
		}
	},
	_setActiveTab: function() {
		if (this.activeTab == -1)
			return;
		var currentTab = this.tabsTabs[this.activeTab];
		if (currentTab.isVisible())
			return;
		for (var i = 0; i < this.tabsTabs.length; i++) {
			var t = this.tabsTabs[i];
			if (!t.isVisible())
				continue;
			this.setActive(i);
			break;
		}
	},
	startCatchingMandatory: function() {
		this.markMandatoryTabs();
		CustomEvent.observe("mandatory.changed", this.markMandatoryTabs.bind(this));
	},
	markMandatoryTabs: function() {
		this.markAllTabsOK();
		if (typeof(g_form) == 'undefined')
			return;
		var missingFields = g_form.getMissingFields();
		for (var i = 0; i < missingFields.length; i++)
			this.markTabMandatoryByField(missingFields[i]);
	},
	markTabMandatoryByField: function(field) {
		var i = this.findTabIndex(field);
		if (i == -1)
			return;
		this.isHidable[i] = false;
		if(!this.isVisible(i))
			this.showTab(i);
		this.tabsTabs[i].markAsComplete(false);
	},
	findTabIndex: function(fieldName) {
		var answer = -1;
		if (typeof(g_form) == 'undefined')
			return;
		var element = g_form.getControl(fieldName);
		var tabSpan = findParentByTag(element, "span");
		while (tabSpan) {
			if (hasClassName(tabSpan, 'tabs2_section'))
				break;
			tabSpan = findParentByTag(tabSpan, "span");
		}
		for (i = 0; i < this.tabs.length; i++) {
			if (this.tabs[i] == tabSpan) {
				answer = i;
				break;
			}
		}
		return answer;
	},
	markAllTabsOK: function() {
		for (var i = 0; i < this.tabsTabs.length; i++)  {
			this.isHidable[i] = true;
			this.tabsTabs[i].markAsComplete(true);
		}
	},
	hasTabs: function() {
		return this.tabs.length > 1;
	},
	_configureTabbable: function(tab) {
		if (window.tabbable) {
			var tabbableItems = window.tabbable(tab);
			if (tabbableItems.length === 0)
				tab.setAttribute("tabindex", "0");
		}
	},
	_bumpSpacer: function(newHeight) {
		var spacerDiv = gel('tabs2_spacer');
		if (!spacerDiv || !newHeight)
			return;
		var spacerHeight = spacerDiv.offsetHeight;
		if (newHeight < spacerHeight)
			return;
		spacerDiv.style.height = newHeight + "px";
		spacerDiv.style.minHeight = newHeight +"px";
	},
	_getCaption: function(tab) {
		var caption = tab.getAttribute('tab_caption');
		var rows = this._getRowCount(tab);
		if (!rows || rows == 0)
			return caption;
		if (tab) {
			if (tab.getAttribute('glide_list_omit_count') == 'false')
				rows = formatNumber(rows);
		}
		if (rows == 0)
			return caption;
		return new GwtMessage().getMessage("{0} ({1})", caption, rows);
	},
	_getRowCount: function(tab) {
		if (tab.firstChild && (tab.firstChild.tagName.toLowerCase() == "span") && tab.id && tab.id.endsWith("_tab")) {
			var rows = tab.getAttribute('tab_rows');
			if (!rows)
				return null;
			var span = tab.firstChild;
			if (!span)
				return null;
			var f;
			for (var i = 0; i < span.childNodes.length; i++) {
				f = span.childNodes[i];
				if (f.tagName.toLowerCase() == "form")
					break;
			}
			if (!f || !f[rows])
				return 0;
			return f[rows].value;
		}
		var id = tab.id.substring(0, tab.id.length - 5) + "_table";
		var idList = tab.id;
		var tab = gel(id);
		if (tab) {
			var omitCount = tab.getAttribute('glide_list_omit_count') == 'true',
				rowsPerPage = parseInt(tab.getAttribute('rows_per_page'), 10),
				totalRows = parseInt(tab.getAttribute('total_rows'), 10),
				firstRow = parseInt(tab.getAttribute('first_row'), 10);
			this.doesNextPageExist[id] = (rowsPerPage + 1) === totalRows;
			if (omitCount) {
				if (isNaN(this.omitCountTotalCount[id]))
					this.omitCountTotalCount[id] = 0;
				if (this.activeTab != -1 && this.tabs[this.activeTab].id != idList && !this.endPage[id])
					return Math.max(totalRows - 1, this.omitCountTotalCount[id]) + '+';
				if (this.doesNextPageExist[id] && !this.endPage[id] && firstRow > this.omitCountTotalCount[id]) {
					this.omitCountTotalCount[id] += totalRows - 1;
					if (this.omitCountTotalCount[id] > totalRows - 1)
						return this.omitCountTotalCount[id] + '+';
					return (totalRows - 1) + '+';
				}
				if (!this.doesNextPageExist[id] && !this.endPage[id]) {
					this.endPage[id] = true;
					this.endPageCount[id] = this.omitCountTotalCount[id] += totalRows;
				}
				if (this.endPage[id])
					return this.endPageCount[id];
				if (this.omitCountTotalCount[id] != 0)
					return this.omitCountTotalCount[id] + '+';
				return (totalRows - 1) + '+';
			}
			if (totalRows <= rowsPerPage) {
				var skippedRowsSpan = $(id.substring(0, id.length - 6) + "_skipped_count");
				if (skippedRowsSpan) {
					var v = skippedRowsSpan.getAttribute("skip_count");
					var skippedRows = parseInt(v);
					if (!isNaN(skippedRows)) {
						totalRows -= skippedRows;
						return String(totalRows);
					}
				}
			}
			return tab.getAttribute('total_rows');
		}
		return "";
	},
	getChildNodesWithClass: function(p, className) {
		var children = p.childNodes;
		var answer = [];
		for (var i = 0, nodes = 0, n = children.length; i < n; i++) {
			var node = children[i];
			if (hasClassName(node, className))
				answer.push(node);
		}
		return answer;
	},
	log: function(msg) {
		jslog("GlideTabs2 " + msg);
	},
	type: 'GlideTabs2'
});
;
/*! RESOURCE: /scripts/classes/doctype/GlideTabs2Tab.js */
var GlideTabs2Tab = Class.create({
	initialize: function(parent, index, caption, classPrefix, isPreloaded) {
		var el;
		var tabs = isPreloaded ? $j('#tabs2_section').find('.tabs2_tab') : '';
this.caption = caption.replace(/\s/g, "\u00a0");
		this.parent = parent;
		this.index = index;
		if (isPreloaded && tabs.length !== 0 && tabs[index]) {
			el = tabs[index];
			this.element = el;
			this.classPrefix = "tabs2";
			this.mandatorySpan = $j(el).find('[mandatory=true]')[0];
			this._createMandatorySpan(this.mandatorySpan);
		} else {
			this.element = cel("span");
			el = this.element;
			if (!classPrefix)
				this.classPrefix = "tabs2";
			else
				this.classPrefix = classPrefix;
			el.className = this.classPrefix + '_tab';
			el.tabIndex = "0";
			el.setAttribute('role', 'tab');
			this.mandatorySpan = this._createMandatorySpan();
			el.appendChild(this.mandatorySpan);
			var c = cel("span");
			c.className = "tab_caption_text";
			c.innerHTML = this.caption;
			el.appendChild(c);
		}
		if (isTextDirectionRTL() && (isMSIE6 || isMSIE7 || isMSIE8 || (isMSIE9 && !getTopWindow().document.getElementById('edge_west'))))
			$j(el).addClass('tabs2_tab_ie');
		Event.observe(el, 'click', this.onClick.bind(this));
		Event.observe(el, 'mouseover', this.onMouseOver.bind(this));
		Event.observe(el, 'mouseout', this.onMouseOut.bind(this));
	},
	setActive: function(yesNo) {
		if (yesNo) {
			this.element.setAttribute('tabindex',0);
			addClassName(this.element, this.classPrefix + '_active');
			CustomEvent.fire("tab.activated", this.parent.className + (this.index+1));
		} else {
			this.element.setAttribute('tabindex',-1);
			removeClassName(this.element, this.classPrefix + '_active');
		}
		this.element.setAttribute('aria-selected',yesNo);
		this.element.setAttribute('aria-controls',this.parent.tabIDs[this.index]);
		this.parent.tabs[this.index].setAttribute('aria-hidden',!yesNo);
	},
	showTab: function(yesNo) {
		var display = 'none';
		if (yesNo)
			display = '';
		this.element.style.display = display;
		var elementParent = this.element.parentElement;
		if (!elementParent || elementParent.tagName != 'H3')
			return;
		var elementParentSibling = elementParent.nextSibling;
		if (elementParentSibling && elementParentSibling.tagName == 'IMG')
			elementParentSibling.style.display = display;
	},
	updateCaption: function(caption) {
		this.caption = caption;
		this.getElement().getElementsByClassName('tab_caption_text')[0].innerHTML = this.caption;
	},
	isVisible: function() {
		return this.element.style.display == '';
	},
	getElement: function() {
		return this.element;
	},
	onClick: function() {
		this.parent.setActive(this.index);
	},
	onMouseOver: function() {
		addClassName(this.element, this.classPrefix + '_hover');
	},
	onMouseOut: function() {
		removeClassName(this.element, this.classPrefix + '_hover');
	},
	markAsComplete: function(yesNo) {
		this.mandatorySpan.style.visibility = yesNo ? 'hidden' : '';
		if (yesNo)
			this.element.removeAttribute('aria-describedby');
		else
			this.element.setAttribute('aria-describedby', 'tab2_section_mandatory_text_' + this.index);
		if (isDoctype())
			this.mandatorySpan.style.display = yesNo ? 'none' : 'inline-block';
	},
	_createMandatorySpan: function(element) {
		var answer = element || cel("span");
		answer.style.marginRight = '2px';
		answer.style.visibility = 'hidden';
		if (isDoctype()) {
			answer.setAttribute('mandatory', 'true');
			answer.setAttribute('aria-hidden', 'true');
			answer.className = 'label_description';
			answer.innerHTML = '*';
			answer.style.display = 'none';
		} else {
			answer.className = 'mandatory';
			var img = cel("img", answer);
img.src = 'images/s.gifx';
			img.alt = '';
			img.style.width = '4px';
			img.style.height = '12px';
			img.style.margin = '0px';
		}
		return answer;
	}
});
;
/*! RESOURCE: /scripts/classes/GlideTabs2State.js */
var GlideTabs2State = Class.create({
	initialize: function(name) {
	    this.name = name; 
	    this.cj = new CookieJar();
	},
	
	get: function() {
	   return this.cj.get(this.name);
	},
	
	set: function(value) {
	   this.cj.put(this.name, value); 
	}, 
	
	type: 'GlideTabs2State'
});
;
/*! RESOURCE: /scripts/doctype/tabs2_14.js */
(function() {
	"use strict";
	window.g_tabs2Sections = null;
	window.g_tabs2List = null;
	function tabs2Init() {
		initFormTabs();
	}
	function initFormTabs() {
		var f = document.forms[0];
		window.g_tabs2Sections = new GlideTabs2('tabs2_section', f, 1, undefined, true);
		initTabs(window.g_tabs2Sections);
		initVariablesTabs();
	}
	function initRelatedListTabs() {
		var f = $j('#related_lists_wrapper')[0];
		window.g_tabs2List = new GlideTabs2('tabs2_list', f, 0);
		initTabs(window.g_tabs2List);
		for (var i = 0; i < hiddenOnLoad.length; i++) 
			hideTab(hiddenOnLoad[i]);
		for (var i = 0; i <showOnLoad.length; i++)
			showTab(showOnLoad[i]);
		showOnLoad = [];
		hiddenOnLoad = [];
	}
	
	function initVariablesTabs() {
		var f = $j('[id^="var_container"]');
		for (var i = 0, l = f.length; l > i; i++) {
			var varTabs = new GlideTabs2("tabs2_vars", f[i], 0);
			initTabs(varTabs);
			varTabs.deactivate();
		}
	}
	function initTabs(tabSet) {
		if (window.g_tabs_print) {
			tabSet.deactivate();
			return;
		}
		if (window.g_tabs_preference)
			tabSet.activate();
		else
			tabSet.deactivate();
		if (!hasTabs(window.g_tabs2Sections) && !hasTabs(window.g_tabs2List))
			tabs2ToggleDisable();
	}
function hasTabs( tabSet) {
		if (tabSet === null)
			return true;
		return tabSet.hasTabs();
	}
	function tabs2ToggleDisable() {
	}
	function tabs2Toggle() {
		window.g_tabs_preference = !window.g_tabs_preference;
		CustomEvent.fireAll('tabbed', window.g_tabs_preference);
	}
	
	CustomEvent.observe('tabbed', function(trueFalse) {
		window.NOW.tabbed = trueFalse;
		window.g_tabs_preference = window.NOW.tabbed;
		setPreference('tabbed.forms', window.g_tabs_preference);
		setTabbed();
	})
	
	function setTabbed() {
		if (window.g_tabs_preference) {
			window.g_tabs2Sections.activate();
			if (window.g_tabs2List)
				window.g_tabs2List.activate();
			CustomEvent.fire('tabs.enable');
		} else {
			window.g_tabs2Sections.deactivate();
			if (window.g_tabs2List)
				window.g_tabs2List.deactivate();
			CustomEvent.fire('tabs.disable');
		}
	}
	window.tabs2Init = tabs2Init;
	window.tabs2Toggle = tabs2Toggle;
	CustomEvent.observe('related_lists.ready', initRelatedListTabs);
	var hiddenOnLoad = [];
	var showOnLoad = [];
	CustomEvent.observe('related_lists.show', function(listTableName) {
		if (window.NOW.g_relatedLists) {
			if (!window.NOW.g_relatedLists.loaded) {
				showOnLoad.push(listTableName);
				return;
			}
		}
		if (!window.g_tabs2List) {
			if (showOnLoad.indexOf(listTableName) == -1)
				showOnLoad.push(listTableName);
			return;
		}
		showTab(listTableName);
	});
	CustomEvent.observe('related_lists.hide', function(listTableName) {
		if (window.NOW.g_relatedLists) {
			if (!window.NOW.g_relatedLists.loaded) {
				hiddenOnLoad.push(listTableName);
				return;
			}
		}
		if (!window.g_tabs2List) {
            if (hiddenOnLoad.indexOf(listTableName) == -1)
                hiddenOnLoad.push(listTableName);
            return;
        }
        hideTab(listTableName);
    });
    function showTab(listTableName) {
        var relatedListID = g_form._getRelatedListID(listTableName);
        window.g_tabs2List.showTabByID(relatedListID);
        if (!window.g_tabs2List.isActivated())
            show(relatedListID);
		formatLastTabRoundedBorder();
	    if (window.NOW.g_relatedLists)
	        if (window.NOW.g_relatedLists.loaded)
	            CustomEvent.fire('calculate_fixed_headers');
    }
    function hideTab(listTableName) {
          var relatedListID = g_form._getRelatedListID(listTableName);
          window.g_tabs2List.hideTabByID(relatedListID);
          if (!g_tabs2List.isActivated())
            hide(relatedListID);
		formatLastTabRoundedBorder();
    }
	function formatLastTabRoundedBorder() {
		$j('.tabs2_strip .tabs2_tab:visible').removeClass('last_tab_closure');
		$j('.tabs2_strip .tabs2_tab:visible:last').addClass('last_tab_closure');
	}
})();
;
/*! RESOURCE: /scripts/annotations_toggle.js */
var SN = SN || {};
SN.formAnnotations = {
	preference: false,
annotations: null,
	hide: function() {
		SN.formAnnotations.annotations.fadeOut();
		SN.formAnnotations.preference = false;
	},
	show: function() {
		if(isPolarisTemplate())
			SN.formAnnotations.annotations.fadeIn().css('display', 'block');
		else
			SN.formAnnotations.annotations.fadeIn();
		SN.formAnnotations.preference = true;
	},
	toggle: function () {
		if (SN.formAnnotations.preference) {
			SN.formAnnotations.hide();
			GlideUXMetrics && GlideUXMetrics.track('Toggle Annotations', { action: 'Off' });
		}
		else {
			SN.formAnnotations.show();
			GlideUXMetrics && GlideUXMetrics.track('Toggle Annotations', { action: 'On' });
		}
		setPreference('glide.ui.show_annotations', SN.formAnnotations.preference);
	},
	toggleFromInfoMsg: function() {
		SN.formAnnotations.toggle();
		GlideUI.get().clearOutputMessages();
	},
	init: function() {
		var selectors = ['.annotation-row[data-annotation-type="Info Box Blue"]',
		                 '.annotation-row[data-annotation-type="Info Box Red"]',
		                 '.annotation-row[data-annotation-type="Section Details"]',
		                 '.annotation-row[data-annotation-type="Text"]'];
		
		SN.formAnnotations.annotations = $j(selectors.join(','));
		var $annotationButton = $j('#header_toggle_annotations');
		if (SN.formAnnotations.annotations.length) {
			$annotationButton.show().click(SN.formAnnotations.toggle);
			if (!SN.formAnnotations.preference && SN.formAnnotations.infoPreference) {
				SN.formAnnotations.addHiddenAnnotationMessage();
				$j("#info_toggle_annotations").show().click(SN.formAnnotations.toggleFromInfoMsg);
			}
		} else {
			$annotationButton.prop('disabled', true)
			var $annotationTooltip = $annotationButton.closest('.annotation-tooltip');
			$annotationTooltip.attr('title', $annotationTooltip.attr('data-title-disabled'));
		}
		
		if (SN.formAnnotations.preference)
			SN.formAnnotations.show();
	},
	setInfoPref: function() {
		setPreference("glide.ui.annotations.show_hidden_msg", "false");
		GlideUI.get().clearOutputMessages();
	},
	addHiddenAnnotationMessage: function() {
		var msg = getMessage('This form has annotations - click');
msg += ' <span id="info_toggle_annotations" tabindex="0" class="icon-button icon-help sn-cloak" title="Toggle annotations on / off" style="display: inline-block;color:#678;cursor:pointer;font-size:1.4em"></span> ';
		msg += getMessage("to toggle them");
		msg += ' - (<span style="text-decoration:underline;cursor:pointer;" onclick="SN.formAnnotations.setInfoPref()">';
		msg += getMessage("click here");
msg += '</span> ';
		msg += getMessage("to never show this again");
		msg += ')';
		g_form.addInfoMessage(msg);
	}
};
;
/*! RESOURCE: /scripts/doctype/js_includes_doctype.js */
/*! RESOURCE: scripts/GlideFlow.js */
var GlideFlow=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=188)}([function(e,t,n){var r=n(2),o=n(9),i=n(23),u=n(30),s=n(16),a=function(e,t,n){var c,f,l,d,p=e&a.F,h=e&a.G,v=e&a.S,g=e&a.P,b=e&a.B,m=h?r:v?r[t]||(r[t]={}):(r[t]||{}).prototype,y=h?o:o[t]||(o[t]={}),_=y.prototype||(y.prototype={});for(c in h&&(n=t),n)l=((f=!p&&m&&void 0!==m[c])?m:n)[c],d=b&&f?s(l,r):g&&"function"==typeof l?s(Function.call,l):l,m&&u(m,c,l,e&a.U),y[c]!=l&&i(y,c,d),g&&_[c]!=l&&(_[c]=l)};r.core=o,a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,e.exports=a},function(e,t,n){var r=n(102)("wks"),o=n(67),i=n(2).Symbol,u="function"==typeof i;(e.exports=function(e){return r[e]||(r[e]=u&&i[e]||(u?i:o)("Symbol."+e))}).store=r},function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){"use strict";var r=n(121),o=Object.prototype.toString;function i(e){return"[object Array]"===o.call(e)}function u(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function a(e){if("[object Object]"!==o.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function c(e){return"[object Function]"===o.call(e)}function f(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!u(e)&&null!==e.constructor&&!u(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:a,isUndefined:u,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:f,merge:function e(){var t={};function n(n,r){a(t[r])&&a(n)?t[r]=e(t[r],n):a(n)?t[r]=e({},n):i(n)?t[r]=n.slice():t[r]=n}for(var r=0,o=arguments.length;r<o;r++)f(arguments[r],n);return t},extend:function(e,t,n){return f(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(12));t.default=function(e){function t(t){window.console&&console.log(e+" "+t)}return{debug:function(e){"debug"===r.default.logLevel&&t("[DEBUG] "+e)},addInfoMessage:function(e){t("[INFO] "+e)},addErrorMessage:function(e){t("[ERROR] "+e)},addWarnMessage:function(e){t("[WARN] "+e)}}}},function(e,t,n){var r=n(33),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){"use strict";var r=n(24);e.exports=function(e,t){return!!e&&r((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},function(e,t,n){var r=n(130),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();e.exports=i},function(e,t){var n=e.exports={version:"2.5.7"};"number"==typeof __e&&(__e=n)},function(e,t,n){var r=n(70);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(1)("unscopables"),o=Array.prototype;null==o[r]&&n(23)(o,r,{}),e.exports=function(e){o[r][e]=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.WEBSOCKET_TYPE_NAME=t.TOKEN_MANAGEMENT_EXTENSION=void 0,t.WEBSOCKET_TYPE_NAME="websocket",t.TOKEN_MANAGEMENT_EXTENSION="tokenManagementExtension";t.default={servletPath:"amb",logLevel:"info",loginWindow:"true",wsConnectTimeout:1e4,overlayStyle:"",pruneFailedTransports:"true",subscribeCommandsFlow:{enable:!1,maxInflight:1,maxWait:1e4,retries:3,retryDelay:{min:2e3,max:3e5,increaseFactor:2}},redeliveryDisconnectTimeoutInMins:10,requestHeaderToClearStickySessionCookie:!0}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var r=n(15);e.exports=function(e){if(!r(e))throw TypeError(e+" is not an object!");return e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(17);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,n){var r=n(16),o=n(43),i=n(10),u=n(6),s=n(77);e.exports=function(e,t){var n=1==e,a=2==e,c=3==e,f=4==e,l=6==e,d=5==e||l,p=t||s;return function(t,s,h){for(var v,g,b=i(t),m=o(b),y=r(s,h,3),_=u(m.length),x=0,w=n?p(t,_):a?p(t,0):void 0;_>x;x++)if((d||x in m)&&(g=y(v=m[x],x,b),e))if(n)w[x]=g;else if(g)switch(e){case 3:return!0;case 5:return v;case 6:return x;case 2:w.push(v)}else if(f)return!1;return l?-1:c||f?f:w}}},function(e,t,n){var r=n(274),o=n(279);e.exports=function(e,t){var n=o(e,t);return r(n)?n:void 0}},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,u,s){if(!e){var a;if(void 0===t)a=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,u,s],f=0;(a=new Error(t.replace(/%s/g,(function(){return c[f++]})))).name="Invariant Violation"}throw a.framesToPop=1,a}}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(31),o=n(69);e.exports=n(32)?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(26),o=n(275),i=n(276),u=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":u&&u in Object(e)?o(e):i(e)}},function(e,t,n){var r=n(8).Symbol;e.exports=r},function(e,t,n){var r=n(96),o=n(368),i=n(369),u=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":u&&u in Object(e)?o(e):i(e)}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){var r=n(2),o=n(23),i=n(42),u=n(67)("src"),s=Function.toString,a=(""+s).split("toString");n(9).inspectSource=function(e){return s.call(e)},(e.exports=function(e,t,n,s){var c="function"==typeof n;c&&(i(n,"name")||o(n,"name",t)),e[t]!==n&&(c&&(i(n,u)||o(n,u,e[t]?""+e[t]:a.join(String(t)))),e===r?e[t]=n:s?e[t]?e[t]=n:o(e,t,n):(delete e[t],o(e,t,n)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[u]||s.call(this)}))},function(e,t,n){var r=n(14),o=n(191),i=n(192),u=Object.defineProperty;t.f=n(32)?Object.defineProperty:function(e,t,n){if(r(e),t=i(t,!0),r(n),o)try{return u(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){e.exports=!n(24)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t){e.exports={}},function(e,t,n){var r=n(43),o=n(70);e.exports=function(e){return r(o(e))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(239);Object.defineProperty(t,"startFlow",{enumerable:!0,get:function(){return r.startFlow}}),Object.defineProperty(t,"startSubflow",{enumerable:!0,get:function(){return r.startSubflow}}),Object.defineProperty(t,"startAction",{enumerable:!0,get:function(){return r.startAction}}),Object.defineProperty(t,"getExecution",{enumerable:!0,get:function(){return r.getExecution}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FLOW_TYPES={FLOW:"flow",SUBFLOW:"subflow",ACTION:"action"},t.FLOWOBJECT_API_PATH="api/now/processflow/flowobject",t.START="start",t.OUTPUTS="outputs",t.STATUS="status"},function(e,t,n){var r=n(141),o=n(304),i=n(50);e.exports=function(e){return i(e)?r(e):o(e)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){(function(e){var r=n(8),o=n(302),i=t&&!t.nodeType&&t,u=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=u&&u.exports===i?r.Buffer:void 0,a=(s?s.isBuffer:void 0)||o;e.exports=a}).call(this,n(39)(e))},function(e,t,n){var r=n(91),o=n(45),i=n(334),u=n(4);e.exports=function(e,t){return(u(e)?r:i)(e,o(t,3))}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(22);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==r(e)?e.split(""):Object(e)}},function(e,t,n){var r=n(33),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=r(e))<0?o(e+t,0):i(e,t)}},function(e,t,n){var r=n(262),o=n(311),i=n(53),u=n(4),s=n(320);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?u(e)?o(e[0],e[1]):r(e):s(e)}},function(e,t,n){var r=n(264),o=n(265),i=n(266),u=n(267),s=n(268);function a(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}a.prototype.clear=r,a.prototype.delete=o,a.prototype.get=i,a.prototype.has=u,a.prototype.set=s,e.exports=a},function(e,t,n){var r=n(80);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(19)(Object,"create");e.exports=r},function(e,t,n){var r=n(288);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(61),o=n(87);e.exports=function(e){return null!=e&&o(e.length)&&!r(e)}},function(e,t,n){var r=n(25),o=n(13);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==r(e)}},function(e,t,n){var r=n(51);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t){e.exports=function(e){return e}},function(e,t,n){var r=n(155),o=n(156);e.exports=function(e,t,n,i){var u=!n;n||(n={});for(var s=-1,a=t.length;++s<a;){var c=t[s],f=i?i(n[c],e[c],c,n,e):void 0;void 0===f&&(f=e[c]),u?o(n,c,f):r(n,c,f)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)((0,o.default)(e),"executionId is a required string argument"),!0};var r=i(n(21)),o=i(n(95));function i(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){var r=n(164),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();e.exports=i},function(e,t,n){var r=n(27),o=n(29);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==r(e)}},function(e,t,n){var r=n(180)(Object,"create");e.exports=r},function(e,t,n){var r=n(426);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(432);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(25),o=n(20);e.exports=function(e){if(!o(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t,n){var r=n(93),o=n(92),i=n(45),u=n(331),s=n(4);e.exports=function(e,t,n){var a=s(e)?r:u,c=arguments.length<3;return a(e,i(t,4),n,c,o)}},function(e,t,n){e.exports=n(242)},function(e,t,n){var r=n(152),o=n(92),i=n(330),u=n(4);e.exports=function(e,t){return(u(e)?r:o)(e,i(t))}},function(e,t,n){var r=n(22),o=n(1)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,u;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(u=r(t))&&"function"==typeof t.callee?"Arguments":u}},function(e,t){e.exports=!1},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(15),o=n(2).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,n){var r=n(35),o=n(6),i=n(44);e.exports=function(e){return function(t,n,u){var s,a=r(t),c=o(a.length),f=i(u,c);if(e&&n!=n){for(;c>f;)if((s=a[f++])!=s)return!0}else for(;c>f;f++)if((e||f in a)&&a[f]===n)return e||f||0;return!e&&-1}}},function(e,t,n){var r=n(102)("keys"),o=n(67);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t,n){var r=n(2).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(31).f,o=n(42),i=n(1)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){"use strict";var r=n(17);e.exports.f=function(e){return new function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)}(e)}},function(e,t,n){var r=n(22);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){var r=n(218);e.exports=function(e,t){return new(r(e))(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(447),o=(0,function(e){return e&&e.__esModule?e:{default:e}}(n(367)).default)();t.default=function(e,t,n){var i=n.body,u=n.transform,s=(0,r.snHttpFactory)({xsrfToken:o.g_ck});return new Promise((function(n,r){s.request(e,t,{data:i,batch:!1}).then((function(e){var t=e.data.result;n(u(t))})).catch((function(e){var t=e.response,n=(t=void 0===t?{}:t).data.error;r(n)}))}))}},function(e,t,n){var r=n(46),o=n(269),i=n(270),u=n(271),s=n(272),a=n(273);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=o,c.prototype.delete=i,c.prototype.get=u,c.prototype.has=s,c.prototype.set=a,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(19)(n(8),"Map");e.exports=r},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(280),o=n(287),i=n(289),u=n(290),s=n(291);function a(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}a.prototype.clear=r,a.prototype.delete=o,a.prototype.get=i,a.prototype.has=u,a.prototype.set=s,e.exports=a},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}},function(e,t,n){var r=n(299),o=n(140),i=Object.prototype.propertyIsEnumerable,u=Object.getOwnPropertySymbols,s=u?function(e){return null==e?[]:(e=Object(e),r(u(e),(function(t){return i.call(e,t)})))}:o;e.exports=s},function(e,t,n){var r=n(301),o=n(13),i=Object.prototype,u=i.hasOwnProperty,s=i.propertyIsEnumerable,a=r(function(){return arguments}())?r:function(e){return o(e)&&u.call(e,"callee")&&!s.call(e,"callee")};e.exports=a},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(4),o=n(51),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,u=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||u.test(e)||!i.test(e)||null!=t&&e in Object(t)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=Array(r);++n<r;)o[n]=t(e[n],n,e);return o}},function(e,t,n){var r=n(326),o=n(329)(r);e.exports=o},function(e,t){e.exports=function(e,t,n,r){var o=-1,i=null==e?0:e.length;for(r&&i&&(n=e[++o]);++o<i;)n=t(n,e[o],o,e);return n}},function(e,t,n){var r=n(135);e.exports=function(e){var t=new e.constructor(e.byteLength);return new r(t).set(new r(e)),t}},function(e,t,n){var r=n(27),o=n(28),i=n(29);e.exports=function(e){return"string"==typeof e||!o(e)&&i(e)&&"[object String]"==r(e)}},function(e,t,n){var r=n(56).Symbol;e.exports=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(5));t.default=function(e,t,n){var o,i,u=new r.default("amb.ChannelListener"),s=e;return{getCallback:function(){return i},getSubscriptionCallback:function(){return n},getID:function(){return o},setNewChannel:function(e){s.unsubscribe(this),s=e,this.subscribe(i)},subscribe:function(e){return i=e,o=s.subscribe(this),this},resubscribe:function(){return this.subscribe(i)},unsubscribe:function(){return s.unsubscribe(this),u.debug("Unsubscribed from channel: "+s.getName()),this},publish:function(e,t){s.publish(e,t)},getName:function(){return s.getName()}}}},function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.isUndefined=t.isObject=t.isNull=t.isNil=t.isEmptyObject=void 0;var o=function(e){return void 0===e};t.isUndefined=o;var i=function(e){return null===e};t.isNull=i,t.isNil=function(e){return i(e)||o(e)};var u=function(e){return null!=e&&"object"===r(e)};t.isObject=u,t.isEmptyObject=function(e){return u(e)&&0===Object.keys(e).length}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WS_CONNECTION_NODE_ID=t.NODEID_COOKIE_KEY=t.MSG_SHARD=t.MSG_NUM=t.META_HANDSHAKE=t.MESSAGE_REDELIVERY_OPTIONS=t.GLIDE_REMEMBER_ME=t.GLIDE_AMB_HUP_SIGNAL_RECONNECT_IN_SEC=t.CHANNEL_READY_TO_DELIVER=t.CHANNEL_NOT_READY_TO_DELIVER=void 0,t.MSG_NUM="msg_num",t.MSG_SHARD="msg_shard",t.MESSAGE_REDELIVERY_OPTIONS="msg_redelivery_options",t.CHANNEL_READY_TO_DELIVER="Channel set to deliver messages now: ",t.CHANNEL_NOT_READY_TO_DELIVER="Channel set to not deliver messages until re-subscription & re-delivery of missed messages is over: ",t.META_HANDSHAKE="/meta/handshake",t.WS_CONNECTION_NODE_ID="glide.amb.wsConnectionNodeId",t.NODEID_COOKIE_KEY="glide_node_id_for_js",t.GLIDE_REMEMBER_ME="glide.remember.me",t.GLIDE_AMB_HUP_SIGNAL_RECONNECT_IN_SEC="glide.amb.hup.signal.reconnect.in.sec"},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(9),o=n(2),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:r.version,mode:n(66)?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){"use strict";var r=n(193)(!0);n(104)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=r(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t,n){"use strict";var r=n(66),o=n(0),i=n(30),u=n(23),s=n(34),a=n(194),c=n(74),f=n(198),l=n(1)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,h,v,g,b){a(n,t,h);var m,y,_,x=function(e){if(!d&&e in O)return O[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},w=t+" Iterator",S="values"==v,T=!1,O=e.prototype,E=O[l]||O["@@iterator"]||v&&O[v],C=E||x(v),j=v?S?x("entries"):C:void 0,A="Array"==t&&O.entries||E;if(A&&(_=f(A.call(new e)))!==Object.prototype&&_.next&&(c(_,w,!0),r||"function"==typeof _[l]||u(_,l,p)),S&&E&&"values"!==E.name&&(T=!0,C=function(){return E.call(this)}),r&&!b||!d&&!T&&O[l]||u(O,l,C),s[t]=C,s[w]=p,v)if(m={values:S?C:x("values"),keys:g?C:x("keys"),entries:j},b)for(y in m)y in O||i(O,y,m[y]);else o(o.P+o.F*(d||T),t,m);return m}},function(e,t,n){var r=n(197),o=n(106);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){"use strict";var r=n(11),o=n(200),i=n(34),u=n(35);e.exports=n(104)(Array,"Array",(function(e,t){this._t=u(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},function(e,t,n){var r=n(14);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(34),o=n(1)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){var r=n(65),o=n(1)("iterator"),i=n(34);e.exports=n(9).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){var r=n(14),o=n(17),i=n(1)("species");e.exports=function(e,t){var n,u=r(e).constructor;return void 0===u||null==(n=r(u)[i])?t:o(n)}},function(e,t,n){var r,o,i,u=n(16),s=n(204),a=n(73),c=n(68),f=n(2),l=f.process,d=f.setImmediate,p=f.clearImmediate,h=f.MessageChannel,v=f.Dispatch,g=0,b={},m=function(){var e=+this;if(b.hasOwnProperty(e)){var t=b[e];delete b[e],t()}},y=function(e){m.call(e.data)};d&&p||(d=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return b[++g]=function(){s("function"==typeof e?e:Function(e),t)},r(g),g},p=function(e){delete b[e]},"process"==n(22)(l)?r=function(e){l.nextTick(u(m,e,1))}:v&&v.now?r=function(e){v.now(u(m,e,1))}:h?(i=(o=new h).port2,o.port1.onmessage=y,r=u(i.postMessage,i,1)):f.addEventListener&&"function"==typeof postMessage&&!f.importScripts?(r=function(e){f.postMessage(e+"","*")},f.addEventListener("message",y,!1)):r="onreadystatechange"in c("script")?function(e){a.appendChild(c("script")).onreadystatechange=function(){a.removeChild(this),m.call(e)}}:function(e){setTimeout(u(m,e,1),0)}),e.exports={set:d,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var r=n(14),o=n(15),i=n(75);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(2),o=n(31),i=n(32),u=n(1)("species");e.exports=function(e){var t=r[e];i&&t&&!t[u]&&o.f(t,u,{configurable:!0,get:function(){return this}})}},function(e,t,n){var r=n(1)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i=[7],u=i[r]();u.next=function(){return{done:n=!0}},i[r]=function(){return u},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(31),o=n(69);e.exports=function(e,t,n){t in e?r.f(e,t,o(0,n)):e[t]=n}},function(e,t,n){var r=n(17),o=n(10),i=n(43),u=n(6);e.exports=function(e,t,n,s,a){r(t);var c=o(e),f=i(c),l=u(c.length),d=a?l-1:0,p=a?-1:1;if(n<2)for(;;){if(d in f){s=f[d],d+=p;break}if(d+=p,a?d<0:l<=d)throw TypeError("Reduce of empty array with no initial value")}for(;a?d>=0:l>d;d+=p)d in f&&(s=t(s,f[d],d,c));return s}},function(e,t,n){"use strict";var r=n(76),o=n(15),i=n(6),u=n(16),s=n(1)("isConcatSpreadable");e.exports=function e(t,n,a,c,f,l,d,p){for(var h,v,g=f,b=0,m=!!d&&u(d,p,3);b<c;){if(b in a){if(h=m?m(a[b],b,n):a[b],v=!1,o(h)&&(v=void 0!==(v=h[s])?!!v:r(h)),v&&l>0)g=e(t,n,h,i(h.length),g,l-1)-1;else{if(g>=9007199254740991)throw TypeError();t[g]=h}g++}b++}return g}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=s(n(241)),o=s(n(165)),i=s(n(55)),u=s(n(370));function s(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){return(0,i.default)(e),{getExecutionId:function(){return e},getExecutionStatus:function(){return(0,r.default)(e)},getOutputs:function(){return(0,o.default)(e)},awaitCompletion:function(){return(0,u.default)(e)}}}},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(3);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var u=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),u.push(o(t)+"="+o(e))})))})),i=u.join("&")}if(i){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";(function(t){var r=n(3),o=n(248),i={"Content-Type":"application/x-www-form-urlencoded"};function u(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var s={adapter:function(){var e;return("undefined"!=typeof XMLHttpRequest||void 0!==t&&"[object process]"===Object.prototype.toString.call(t))&&(e=n(125)),e}(),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(u(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(u(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){s.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){s.headers[e]=r.merge(i)})),e.exports=s}).call(this,n(247))},function(e,t,n){"use strict";var r=n(3),o=n(249),i=n(251),u=n(122),s=n(252),a=n(255),c=n(256),f=n(126);e.exports=function(e){return new Promise((function(t,n){var l=e.data,d=e.headers;r.isFormData(l)&&delete d["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",v=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(h+":"+v)}var g=s(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),u(g,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in p?a(p.getAllResponseHeaders()):null,i={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:r,config:e,request:p};o(t,n,i),p=null}},p.onabort=function(){p&&(n(f("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){n(f("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(f(t,e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var b=(e.withCredentials||c(g))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;b&&(d[e.xsrfHeaderName]=b)}if("setRequestHeader"in p&&r.forEach(d,(function(e,t){void 0===l&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),n(e),p=null)})),l||(l=null),p.send(l)}))}},function(e,t,n){"use strict";var r=n(250);e.exports=function(e,t,n,o,i){var u=new Error(e);return r(u,t,n,o,i)}},function(e,t,n){"use strict";var r=n(3);e.exports=function(e,t){t=t||{};var n={},o=["url","method","data"],i=["headers","auth","proxy","params"],u=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function a(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function c(o){r.isUndefined(t[o])?r.isUndefined(e[o])||(n[o]=a(void 0,e[o])):n[o]=a(e[o],t[o])}r.forEach(o,(function(e){r.isUndefined(t[e])||(n[e]=a(void 0,t[e]))})),r.forEach(i,c),r.forEach(u,(function(o){r.isUndefined(t[o])?r.isUndefined(e[o])||(n[o]=a(void 0,e[o])):n[o]=a(void 0,t[o])})),r.forEach(s,(function(r){r in t?n[r]=a(e[r],t[r]):r in e&&(n[r]=a(void 0,e[r]))}));var f=o.concat(i).concat(u).concat(s),l=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===f.indexOf(e)}));return r.forEach(l,c),n}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t){e.exports=function(e,t){var n="000000000"+e;return n.substr(n.length-t)}},function(e,t,n){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(this,n(82))},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(292),o=n(13);e.exports=function e(t,n,i,u,s){return t===n||(null==t||null==n||!o(t)&&!o(n)?t!=t&&n!=n:r(t,n,i,u,e,s))}},function(e,t,n){var r=n(293),o=n(134),i=n(296);e.exports=function(e,t,n,u,s,a){var c=1&n,f=e.length,l=t.length;if(f!=l&&!(c&&l>f))return!1;var d=a.get(e);if(d&&a.get(t))return d==t;var p=-1,h=!0,v=2&n?new r:void 0;for(a.set(e,t),a.set(t,e);++p<f;){var g=e[p],b=t[p];if(u)var m=c?u(b,g,p,t,e,a):u(g,b,p,e,t,a);if(void 0!==m){if(m)continue;h=!1;break}if(v){if(!o(t,(function(e,t){if(!i(v,t)&&(g===e||s(g,e,n,u,a)))return v.push(t)}))){h=!1;break}}else if(g!==b&&!s(g,b,n,u,a)){h=!1;break}}return a.delete(e),a.delete(t),h}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(8).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t,n){var r=n(139),o=n(85),i=n(38);e.exports=function(e){return r(e,i,o)}},function(e,t,n){var r=n(84),o=n(4);e.exports=function(e,t,n){var i=t(e);return o(e)?i:r(i,n(e))}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(300),o=n(86),i=n(4),u=n(40),s=n(142),a=n(143),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=i(e),f=!n&&o(e),l=!n&&!f&&u(e),d=!n&&!f&&!l&&a(e),p=n||f||l||d,h=p?r(e.length,String):[],v=h.length;for(var g in e)!t&&!c.call(e,g)||p&&("length"==g||l&&("offset"==g||"parent"==g)||d&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,v))||h.push(g);return h}},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(303),o=n(88),i=n(144),u=i&&i.isTypedArray,s=u?o(u):r;e.exports=s},function(e,t,n){(function(e){var r=n(130),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,u=i&&i.exports===o&&r.process,s=function(){try{return u&&u.binding&&u.binding("util")}catch(e){}}();e.exports=s}).call(this,n(39)(e))},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(306),o=n(81),i=n(307),u=n(308),s=n(309),a=n(25),c=n(131),f=c(r),l=c(o),d=c(i),p=c(u),h=c(s),v=a;(r&&"[object DataView]"!=v(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=v(new o)||i&&"[object Promise]"!=v(i.resolve())||u&&"[object Set]"!=v(new u)||s&&"[object WeakMap]"!=v(new s))&&(v=function(e){var t=a(e),n="[object Object]"==t?e.constructor:void 0,r=n?c(n):"";if(r)switch(r){case f:return"[object DataView]";case l:return"[object Map]";case d:return"[object Promise]";case p:return"[object Set]";case h:return"[object WeakMap]"}return t}),e.exports=v},function(e,t,n){var r=n(20);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&n[e]===t&&(void 0!==t||e in Object(n))}}},function(e,t,n){var r=n(150),o=n(52);e.exports=function(e,t){for(var n=0,i=(t=r(t,e)).length;null!=e&&n<i;)e=e[o(t[n++])];return n&&n==i?e:void 0}},function(e,t,n){var r=n(4),o=n(90),i=n(313),u=n(151);e.exports=function(e,t){return r(e)?e:o(e,t)?[e]:i(u(e))}},function(e,t,n){var r=n(316);e.exports=function(e){return null==e?"":r(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty,o=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}();t.arrayToObject=function(e,t){for(var n=t&&t.plainObjects?Object.create(null):{},r=0;r<e.length;++r)void 0!==e[r]&&(n[r]=e[r]);return n},t.merge=function(e,n,o){if(!n)return e;if("object"!=typeof n){if(Array.isArray(e))e.push(n);else{if("object"!=typeof e)return[e,n];(o.plainObjects||o.allowPrototypes||!r.call(Object.prototype,n))&&(e[n]=!0)}return e}if("object"!=typeof e)return[e].concat(n);var i=e;return Array.isArray(e)&&!Array.isArray(n)&&(i=t.arrayToObject(e,o)),Array.isArray(e)&&Array.isArray(n)?(n.forEach((function(n,i){r.call(e,i)?e[i]&&"object"==typeof e[i]?e[i]=t.merge(e[i],n,o):e.push(n):e[i]=n})),e):Object.keys(n).reduce((function(e,i){var u=n[i];return r.call(e,i)?e[i]=t.merge(e[i],u,o):e[i]=u,e}),i)},t.assign=function(e,t){return Object.keys(t).reduce((function(e,n){return e[n]=t[n],e}),e)},t.decode=function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(t){return e}},t.encode=function(e){if(0===e.length)return e;for(var t="string"==typeof e?e:String(e),n="",r=0;r<t.length;++r){var i=t.charCodeAt(r);45===i||46===i||95===i||126===i||i>=48&&i<=57||i>=65&&i<=90||i>=97&&i<=122?n+=t.charAt(r):i<128?n+=o[i]:i<2048?n+=o[192|i>>6]+o[128|63&i]:i<55296||i>=57344?n+=o[224|i>>12]+o[128|i>>6&63]+o[128|63&i]:(r+=1,i=65536+((1023&i)<<10|1023&t.charCodeAt(r)),n+=o[240|i>>18]+o[128|i>>12&63]+o[128|i>>6&63]+o[128|63&i])}return n},t.compact=function(e){for(var t=[{obj:{o:e},prop:"o"}],n=[],r=0;r<t.length;++r)for(var o=t[r],i=o.obj[o.prop],u=Object.keys(i),s=0;s<u.length;++s){var a=u[s],c=i[a];"object"==typeof c&&null!==c&&-1===n.indexOf(c)&&(t.push({obj:i,prop:a}),n.push(c))}return function(e){for(var t;e.length;){var n=e.pop();if(t=n.obj[n.prop],Array.isArray(t)){for(var r=[],o=0;o<t.length;++o)void 0!==t[o]&&r.push(t[o]);n.obj[n.prop]=r}}return t}(t)},t.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},t.isBuffer=function(e){return null!=e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}},function(e,t,n){"use strict";var r=String.prototype.replace,o=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return r.call(e,o,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},function(e,t,n){var r=n(156),o=n(80),i=Object.prototype.hasOwnProperty;e.exports=function(e,t,n){var u=e[t];i.call(e,t)&&o(u,n)&&(void 0!==n||t in e)||r(e,t,n)}},function(e,t,n){var r=n(157);e.exports=function(e,t,n){"__proto__"==t&&r?r(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}},function(e,t,n){var r=n(19),o=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,t,n){var r=n(141),o=n(338),i=n(50);e.exports=function(e){return i(e)?r(e,!0):o(e)}},function(e,t,n){var r=n(84),o=n(160),i=n(85),u=n(140),s=Object.getOwnPropertySymbols?function(e){for(var t=[];e;)r(t,i(e)),e=o(e);return t}:u;e.exports=s},function(e,t,n){var r=n(145)(Object.getPrototypeOf,Object);e.exports=r},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(161),o=Math.max;e.exports=function(e,t,n){return t=o(void 0===t?e.length-1:t,0),function(){for(var i=arguments,u=-1,s=o(i.length-t,0),a=Array(s);++u<s;)a[u]=i[t+u];u=-1;for(var c=Array(t+1);++u<t;)c[u]=i[u];return c[t]=n(a),r(e,this,c)}}},function(e,t,n){var r=n(359),o=n(361)(r);e.exports=o},function(e,t,n){(function(t){var n="object"==typeof t&&t&&t.Object===Object&&t;e.exports=n}).call(this,n(82))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(37),o=u(n(78)),i=u(n(55));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){return e};t.default=function(e){(0,i.default)(e);var t=r.FLOWOBJECT_API_PATH+"/"+r.OUTPUTS+"/"+e;return(0,o.default)(t,"GET",{transform:s})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(e){var t=[],n=0;return{subscribe:function(e,r){var o=n++;return t.push({event:e,callback:r,id:o}),o},unsubscribe:function(e){for(var n=0;n<t.length;n++)e===t[n].id&&t.splice(n,1)},publish:function(e,t){for(var n=this._getSubscriptions(e),r=0;r<n.length;r++)n[r].callback.apply(null,t)},getEvents:function(){return e},_getSubscriptions:function(e){for(var n=[],r=0;r<t.length;r++)t[r].event===e&&n.push(t[r]);return n}}}},function(e,t,n){"use strict";function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=v(n(166)),i=v(n(5)),u=function(e,t){if(e&&e.__esModule)return e;if(null===e||"object"!==r(e)&&"function"!=typeof e)return{default:e};var n=function(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return function(e){return e?n:t}(e)}(t);if(n&&n.has(e))return n.get(e);var o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var s=i?Object.getOwnPropertyDescriptor(e,u):null;s&&(s.get||s.set)?Object.defineProperty(o,u,s):o[u]=e[u]}return o.default=e,n&&n.set(e,o),o}(n(12)),s=v(n(168)),a=v(n(169)),c=v(n(380)),f=n(98),l=v(n(381)),d=v(n(382)),p=v(n(383)),h=n(99);function v(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new c.default,n=!1,r=!1,v=null,g=new o.default({CONNECTION_INITIALIZED:"connection.initialized",CONNECTION_OPENED:"connection.opened",CONNECTION_CLOSED:"connection.closed",CONNECTION_BROKEN:"connection.broken",SESSION_LOGGED_IN:"session.logged.in",SESSION_LOGGED_OUT:"session.logged.out",SESSION_INVALIDATED:"session.invalidated",SESSION_REESTABLISHED:"session.reestablished"}),b={SESSION_LOGGED_IN:"session.logged.in",SESSION_LOGGED_OUT:"session.logged.out",SESSION_INVALIDATED:"session.invalidated"},m="closed",y={},_={},x=new i.default("amb.ServerConnection");!function(){e.addListener("/meta/handshake",this,Q),e.addListener("/meta/connect",this,ae),e.addListener("/meta/subscribe",this,oe),e.addListener("/meta/unsubscribe",this,ee)}();var w=b.SESSION_INVALIDATED,S=null,T="true"===u.default.loginWindow,O=null,E={UNKNOWN_CLIENT:"402::Unknown client",UNKNOWN_SESSION:"402::session_unknown",NODE_MISMATCH:"websocket_http_node_mismatch",RECONNECT_REMEMBER_ME:"reconnect_remember_me_http_activity",HUP_SIGNAL:"reconnect_on_hup_signal"},C=!1,j={},A=!1,N=new s.default(e,j),k=!1,M="glide.amb.session.logout.overlay.style",I="glide.amb.redelivery.disconnect.timeout.in.mins",L="glide.amb.clear_node_affinity_cookie",R="glide.session.status",P="session.touch.http",D="amb.ServerConnection.reestablish.session",F="set.header.request.sent",U="request.reconnection",q=e.getExtension(u.TOKEN_MANAGEMENT_EXTENSION),B=null,H=new p.default(e),G=null,W=!0,z=null,V=null,$=null,X=null,K=null;function Q(e){ee(e),void 0!==J(e,h.WS_CONNECTION_NODE_ID)&&(v=J(e,h.WS_CONNECTION_NODE_ID),x.debug("Node Id from handshake callback initially set to "+v));var t=J(e,M);t&&(u.default.overlayStyle=t);var n=J(e,I);n&&(u.default.redeliveryDisconnectTimeoutInMins=n),J(e,L)&&(u.default.requestHeaderToClearStickySessionCookie=!0===J(e,L)),w=J(e,R),function(e){if(e.ext){var t=e.ext.subscribeCommandsFlow;if(t){var n=u.default.subscribeCommandsFlow;if(u.default.subscribeCommandsFlow.enable=function(e,t){var n=t;return(0,f.isNil)(e)||(n=!!e),n}(t.enable,n.enable),u.default.subscribeCommandsFlow.enable){u.default.subscribeCommandsFlow.retries=ie(t.retries,n.retries),u.default.subscribeCommandsFlow.maxInflight=ie(t.maxInflight,n.maxInflight),u.default.subscribeCommandsFlow.maxWait=ie(t.maxWait,n.maxWait);var r=t.retryDelay;if(r){var o=u.default.subscribeCommandsFlow.retryDelay;u.default.subscribeCommandsFlow.retryDelay.min=ie(r.min,o.min),u.default.subscribeCommandsFlow.retryDelay.max=ie(r.max,o.max),u.default.subscribeCommandsFlow.retryDelay.increaseFactor=ie(r.increaseFactor,o.increaseFactor)}}u.default.subscribeCommandsFlow.enable&&(x.addInfoMessage("_initializeSubscriptionCommandSender: SubscriptionCommandSender is enabled"),null!=q&&q.updateTokenCount(u.default.subscribeCommandsFlow.maxInflight),B&&B.stop(),B=new d.default(new l.default(1e4),q))}}}(e),setTimeout((function(){e.successful&&ce()}),0)}function J(e,t){if((0,f.isObject)(e.ext))return e.ext[t]}function Y(t,n){if(t in y)return y[t];var r=new a.default(e,t,k,n);return y[t]=r,r}function Z(e){_[e]=y[e],delete y[e]}function ee(t){if(t.ext){!1===t.ext["glide.amb.active"]&&j.disconnect();var n=J(t,"glide.amb.client.log.level");n&&(u.default.logLevel=n,e.setLogLevel(u.default.logLevel)),u.default.pruneFailedTransports="false"!==J(t,"glide.amb.pruneFailedTransports")}}function te(){null!==ne()&&(clearInterval(V),V=null,z=null,A=!0,O=E.RECONNECT_REMEMBER_ME,j.connect())}function ne(){if(void 0!==document.cookie)for(var e=document.cookie.split(";"),t=0;t<e.length;t++){var n=e[t].trim();if(n.startsWith("".concat(h.NODEID_COOKIE_KEY,"=")))return n.substring(h.NODEID_COOKIE_KEY.length+1)}return null}function re(t){v=null,r=!0,e.disconnect((function(){x.addInfoMessage("Disconnected WS Connection. Connecting back"),O=t,n=!1,pe(),$=null,A=!0,r=!1,j.connect()}))}function oe(e){ee(e)}function ie(e,t){var n=Math.floor(parseInt(e));return(isNaN(n)||n<0)&&(n=t),n}function ue(){for(var e in x.debug("Resubscribing to all!"),y){var t=y[e];t&&t.resubscribeToCometD()}}function se(){for(var e in x.debug("Unsubscribing from all!"),y){var t=y[e];t&&t.unsubscribeFromCometD()}}function ae(t){if(ee(t),J(t,h.GLIDE_REMEMBER_ME)&&(z=J(t,h.GLIDE_REMEMBER_ME)),J(t,h.GLIDE_AMB_HUP_SIGNAL_RECONNECT_IN_SEC)&&function(e){$||($=setTimeout((function(){x.addInfoMessage("Reconnecting after "+e+"sec as the server received an HUP signal from load balancer"),re(E.HUP_SIGNAL)}),1e3*e))}(J(t,h.GLIDE_AMB_HUP_SIGNAL_RECONNECT_IN_SEC)),r)setTimeout((function(){n=!1,pe()}),0);else{n&&!ve(J(t,R))&&function(){if(null!==v){var e=ne();null!==e&&v!==e&&setTimeout((function(){null!==(e=ne())&&v!==e&&(x.addInfoMessage("WS Connection is with "+v+" whereas httpsession is with "+e+". Disconnecting WS connection"),re(E.NODE_MISMATCH))}),2e4)}}();var o=J(t,P);u.WEBSOCKET_TYPE_NAME===e.getTransport().getType()&&!0===o&&j._touchHttpSession();var i=t.error;i&&(O=i),function(e){var t=J(e,R);t&&t!==w&&(C=!0===J(e,"glide.amb.login.window.override"),he(t))}(t);var s=n;n=!0===t.successful,!s&&n?fe():s&&!n&&(x.addErrorMessage("Connection broken"),m="broken",A=!0,me(g.getEvents().CONNECTION_BROKEN),G=Date.now(),B&&(B.stop(),B=null)),X=new Date}}function ce(){x.debug("Connection initialized"),k=!0,m="initialized",me(g.getEvents().CONNECTION_INITIALIZED)}function fe(){x.debug("Connection opened"),H.processConnectionOpened(),A?function(e){return Object.values(E).includes(e)}(j.getLastError())?(j.setLastError(null),j._sendSessionSetupRequest((function(e){var t=e.status,n=e.response;if(200===t){A=!1;var r=JSON.parse(n)["glide.session.status"];x.debug("/amb_session_setup.do response: "+n),r&&w!==r?(N.initialize(de),he(r)):N.initialize((function(){le(!1)}))}else x.addWarnMessage("/amb_session_setup.do status: "+t)}))):x.addWarnMessage("Error connecting to server. Unkown status "+j.getLastError()):N.initialize((function(){le(!0)}))}function le(e){ue(),de(),e&&(x.debug("Sending signal to reconnect"),t.emit(U,U))}function de(){m="opened",me(g.getEvents().CONNECTION_OPENED)}function pe(){x.debug("Connection closed"),m="closed",me(g.getEvents().CONNECTION_CLOSED)}function he(e){x.debug("session.status - "+e),ve(e)?(x.debug("INVALIDATED event fire!"),se(),me(g.getEvents().SESSION_INVALIDATED),u.default.requestHeaderToClearStickySessionCookie&&(void 0!==navigator.locks?navigator.locks.request("lock-set_clear_node_affinity_header",be):(x.debug("navigator.locks.request not supported"),be())),ge()||j.disconnect((function(){j.loginHide(),n=!1,pe(),r=!1,z&&function(e){return void 0!==document.cookie&&(document.cookie=e+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/",!0)}(h.NODEID_COOKIE_KEY)&&(V=setInterval(te,5e3))}))):function(e){return w===b.SESSION_LOGGED_IN&&e===b.SESSION_LOGGED_OUT}(e)?(x.debug("LOGGED_OUT event fire!"),se(),me(g.getEvents().SESSION_LOGGED_OUT),T&&!C&&j.loginShow(),ge()):function(e){return w===b.SESSION_INVALIDATED&&e===b.SESSION_LOGGED_OUT}(e)?(x.debug("REESTABLISHED event fire!"),ue(),me(g.getEvents().SESSION_REESTABLISHED)):function(e){return(w===b.SESSION_INVALIDATED||w===b.SESSION_LOGGED_OUT)&&e===b.SESSION_LOGGED_IN}(e)&&(x.debug("LOGGED_IN event fire!"),ue(),me(g.getEvents().SESSION_LOGGED_IN),j.loginHide(),W=!0),w=e}function ve(e){return(w===b.SESSION_LOGGED_IN||w===b.SESSION_LOGGED_OUT)&&e===b.SESSION_INVALIDATED}function ge(){return!!(X&&K&&K>X)&&(x.debug("Either the session is logged out/invalidated from a different tab. Calling reestablishSession as lastReconnectionEventTime "+K+" happened after lastMetaConnectResponseTime "+X),ye(!1),!0)}function be(){W?(x.debug("Sending set_clear_node_affinity_header"),t.emit(F,F),j._sendSetHeaderToClearNodeAffinityCookie((function(e){var t=e.status;200!==t?x.addErrorMessage("Error sending set_clear_node_affinity_header: "+t):W=!1}))):x.debug("set_clear_node_affinity_header not sent")}function me(e){try{g.publish(e)}catch(t){x.addErrorMessage("error publishing '"+e+"' - "+t)}}function ye(e){j._sendSessionSetupRequest((function(e){var t=e.response;t&&he(JSON.parse(t)["glide.session.status"])})),e&&t.emit(D,D)}return j.connect=function(){n?x.debug(">>> connection exists, request satisfied"):(x.debug("Connecting to glide amb server -> "+u.default.servletURI),e.configure({url:j.getURL(u.default.servletPath),logLevel:u.default.logLevel,connectTimeout:u.default.wsConnectTimeout}),e.handshake(),t.on(D,(function(){j._reestablishSession(!1)})),t.on(F,(function(){W=!1})),t.on(U,(function(){x.debug("Received signal to reconnect"),n?w===b.SESSION_LOGGED_OUT?ye(!1):w===b.SESSION_LOGGED_IN&&(K=new Date):j.connect()})))},j.reload=function(){e.reload()},j.abort=function(){e.getTransport().abort()},j.disconnect=function(t){x.debug("Disconnecting from glide amb server.."),r=!0,e.disconnect(t)},j.getURL=function(e){return window.location.protocol+"//"+window.location.host+"/"+e},j.getConnectionBrokenTS=function(){return G},j.unsubscribeAll=function(){se()},j.resubscribeAll=function(){ue()},j.removeChannel=function(e){Z(e)},j.getEvents=function(){return g.getEvents()},j.getConnectionState=function(){return m},j.getLastError=function(){return O},j.setLastError=function(e){O=e},j.getErrorMessages=function(){return E},j.isLoggedIn=function(){return w===b.SESSION_LOGGED_IN},j.isSessionActive=function(){return w!==b.SESSION_INVALIDATED},j.getChannelRedirect=function(){return N},j.getChannel=function(e,t){return Y(e,t)},j.getChannels=function(){return y},j.getRemovedChannels=function(){return _},j.getState=function(){return m},j.getLoginWindowOverlayStyle=function(){return u.default.overlayStyle},j.loginShow=function(){x.debug("Show login window");var e='<iframe src="/amb_login.do" style="border: 0" height="400px" width="405px"></iframe>',t='<div id="amb_disconnect_modal" tabindex="-1" aria-hidden="true" class="modal" role="dialog" style="'.concat(u.default.overlayStyle,'">\n\t\t\t\t<div class="modal-dialog small-modal" style="width:450px">\n\t\t\t\t   <div class="modal-content">\n\t\t\t\t\t  <header class="modal-header">\n\t\t\t\t\t\t <h4 id="small_modal1_title" class="modal-title">Login</h4>\n\t\t\t\t\t  </header>\n\t\t\t\t\t  <div class="modal-body">\n\t\t\t\t\t  </div>\n\t\t\t\t   </div>\n\t\t\t\t</div>\n\t\t\t</div>');try{if(window.NOW&&!0===window.NOW.amb_themed_login){var n=new GlideModal("amb_login_router");n.renderWithContent&&(n.template=t),n.render(),S=n}else{var r=new GlideModal("amb_disconnect_modal");r.renderWithContent?(r.template=t,r.renderWithContent(e)):(r.setBody(e),r.render()),S=r}}catch(e){x.debug(e)}},j.loginHide=function(){S&&(S.destroy(),S=null)},j.loginComplete=function(){j.reestablishSession()},j.reestablishSession=function(){j._reestablishSession(!0)},j.subscribeToEvent=function(e,t){return g.getEvents().CONNECTION_OPENED===e&&n&&t(),g.subscribe(e,t)},j.unsubscribeFromEvent=function(e){g.unsubscribe(e)},j.isLoginWindowEnabled=function(){return T},j.setLoginWindowEnabled=function(e){T=e},j.isLoginWindowOverride=function(){return C},j.getSubscriptionCommandSender=function(){return B},j._metaConnect=ae,j._metaHandshake=Q,j._metaSubscribe=oe,j._sendSessionSetupRequest=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){},n=function(){x.debug("sending /amb_session_setup.do!");var t=new XMLHttpRequest;return t.open("POST","/amb_session_setup.do",!0),t.setRequestHeader("Content-type","application/json;charset=UTF-8"),t.setRequestHeader("X-UserToken",window.g_ck),t.setRequestHeader("X-CometD-SessionID",e.getClientId()),t}();n.onload=function(){return t(n)},n.send()},j._onChannelRedirectSubscriptionComplete=le,j._getChannel=Y,j._removeChannel=Z,j._connectionInitialized=ce,j._connectionOpened=fe,j._reestablishSession=ye,j._touchHttpSession=function(){var e=new XMLHttpRequest;e.open("POST","/amb",!0),e.setRequestHeader("Content-type","application/json"),e.send()},j._sendSetHeaderToClearNodeAffinityCookie=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){},t=function(){var e=new XMLHttpRequest;return e.open("POST","/set_clear_node_affinity_header",!0),e}();t.onload=function(){return e(t)},t.send()},j}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=i(n(5)),o=i(n(97));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){var n,i=e,u=new r.default("amb.ChannelRedirect");function s(e){u.debug("_onAdvice:"+e.data.clientId);var n=t.getChannels(),r=null!=n?n[e.data.fromChannel]:null;if(!r){var o=t.getRemovedChannels();r=null!=o?o[e.data.fromChannel]:null}var i=t.getChannel(e.data.toChannel);r&&i?(function(e,t){for(var n=e.getChannelListeners(),r=0;r<n.length;r++)n[r].setNewChannel(t)}(r,i),u.debug("published channel switch event, fromChannel:"+r.getName()+", toChannel:"+i.getName())):u.debug("Could not redirect from "+e.data.fromChannel+" to "+e.data.toChannel)}return{initialize:function(e){var r="/sn/meta/channel_redirect/"+i.getClientId(),a=t.getChannel(r);n&&a===n?n.subscribeToCometD():(n&&t.removeChannel(n.getName()),n=a,new o.default(n,t,e).subscribe(s)),u.debug("ChannelRedirect initialized: "+r)},_onAdvice:s}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=c(n(5)),o=n(98),i=c(n(170)),u=c(n(379)),s=c(n(12)),a=n(99);function c(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t,n){var c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){return{}},f=null,l=null,d=[],p=[],h=new r.default("amb.Channel"),v=0,g=n,b=-1,m=null,y=!0,_=new u.default;function x(){return(0,i.default)().getServerConnection().getSubscriptionCommandSender()}return{subscribe:function(e){if(e.getCallback()){for(var n=0;n<d.length;n++)if(d[n]===e)return h.debug("Channel listener already in the list"),e.getID();d.push(e);var r=e.getSubscriptionCallback();if(r&&(l?r(l):p.push(r)),!f&&g)try{this.subscribeToCometD()}catch(e){return void h.addErrorMessage(e)}return++v}h.addErrorMessage("Cannot subscribe to channel: "+t+", callback not provided")},resubscribe:function(){f=null;for(var e=0;e<d.length;e++)d[e].resubscribe()},_handleResponse:function(e){y?this.processMessageCallback(e):this.processReSubscriptionMessages(e)},processReSubscriptionMessages:function(e){var n=this;_.shouldDeliver(e)?(h.debug(a.CHANNEL_READY_TO_DELIVER+t),y=!0,this.processMessageCallback(e)):_.shouldDeliverPendingMessages()&&_.getAllPendingMessages().forEach((function(e){return n.processMessageCallback(e)}))},processMessageCallback:function(e){for(var t=0;t<d.length;t++)d[t].getCallback()(e);_.containsMetaInfo(e)&&(b=e.ext[a.MSG_NUM],m=e.ext[a.MSG_SHARD])},unsubscribe:function(n){if(n){for(var r=0;r<d.length;r++)if(d[r].getID()===n.getID()){d.splice(r,1);break}d.length<1&&f&&!function(){var t=e.getStatus();return"disconnecting"===t||"disconnected"===t}()&&this.unsubscribeFromCometD()}else h.addErrorMessage("Cannot unsubscribe from channel: "+t+", listener argument does not exist")},publish:function(n,r){e.publish(t,n,r)},subscribeToCometD:function(){h.debug("subscribeToCometD channelName : "+t+", subscription : "+f),x()?x().subscribeToChannel(this):this._subscribeToCometD(this.subscriptionCallback)},_subscribeToCometD:function(n){h.debug("_subscribeToCometD channelName : "+t);var r=this._populateSubscriptionOptions();if((0,o.isNil)(r)||(0,o.isEmptyObject)(r))f=e.subscribe(t,this._handleResponse.bind(this),n);else{var i={subscribeOptions:r};f=e.subscribe(t,this._handleResponse.bind(this),i,n)}h.debug("Successfully subscribed to channel: "+t+", subscribeOptions: "+JSON.stringify(r))},_populateSubscriptionOptions:function(){var e=c(),n=Date.now()-this.fetchDisconnectionTS();return this._shouldRedeliveryBeRequested(n)&&((0,o.isNil)(e)&&(e={}),e[a.MESSAGE_REDELIVERY_OPTIONS]={},e[a.MESSAGE_REDELIVERY_OPTIONS].last_msg_num=b,e[a.MESSAGE_REDELIVERY_OPTIONS].last_msg_shard=m,e[a.MESSAGE_REDELIVERY_OPTIONS].request_duration=n,h.debug(a.CHANNEL_NOT_READY_TO_DELIVER+t),y=!1,_.resetState()),e},_shouldRedeliveryBeRequested:function(e){return e<=6e4*s.default.redeliveryDisconnectTimeoutInMins&&-1!=b&&!(0,o.isNil)(m)},subscriptionCallback:function(e){h.debug("Cometd subscription callback completed for channel: "+t),h.debug("Listener callback queue size: "+p.length),l=e,p.map((function(e){e(l)})),p=[]},unsubscribeFromCometD:function(){h.debug("unsubscribeFromCometD  from : "+t+", subscription : "+f),null!==f&&(x()?x().unsubscribeToChannel(this):this._unsubscribeFromCometD())},_unsubscribeFromCometD:function(){h.debug("_unsubscribeFromCometD  from : "+t+", subscription : "+f),null!==f&&(e.unsubscribe(f),f=null,l=null,h.debug("Successfully unsubscribed from channel: "+t))},resubscribeToCometD:function(){h.debug("Resubscribe to "+t),x()?x().subscribeToChannel(this):this._subscribeToCometD(this.subscriptionCallback)},getSubscribeOptionsCallback:function(){return c},getName:function(){return t},getChannelListeners:function(){return d},getLastMessageShard:function(){return m},getLastMessageNumber:function(){return b},fetchDisconnectionTS:function(){var e=(0,i.default)().getServerConnection().getConnectionBrokenTS();return h.debug("Client Disconnect Time in ms:"+e),e||0},getRedeliveryManager:function(){return _},isReadyToDeliver:function(){return y},getListenerCallbackQueue:function(){return p},setSubscriptionCallbackResponse:function(e){l=e}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=u(n(171)),o=u(n(377)),i=u(n(378));function u(e){return e&&e.__esModule?e:{default:e}}function s(e){return e.MSInputMethodContext&&e.document.documentMode}function a(e,t){if(void 0!==e.getClientWindow&&e.getClientWindow()===t)return e;var n=function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}({},e);return n.getChannel=function(n,r,o){return e.getChannel(n,r,o||t)},n.getRecordWatcherChannel=function(n,r,o,i,u){return e.getRecordWatcherChannel(n,r,o,i,u||t)},n.subscribeToEvent=function(n,r,o){return e.subscribeToEvent(n,r,o||t)},n.unsubscribeFromEvent=function(n,r){return e.unsubscribeFromEvent(n,r||t)},n.getClientWindow=function(){return t},n}t.default=function(){var e=function(e){try{if(!s(e))for(;e!==e.parent&&!e.g_ambClient;)e=e.parent;if(e.g_ambClient)return e.g_ambClient}catch(e){console.log("AMB getClient() tried to access parent from an iFrame. Caught error: "+e)}return null}(window);return e||function(e){var t=window.self;t.g_ambClient=e,t.addEventListener("unload",(function(){t.g_ambClient.disconnect()}));var n=!(!t.NOW||!t.NOW.hasOwnProperty("deferAmbConnection"))&&t.NOW.deferAmbConnection,r=t.NOW&&t.NOW.hasOwnProperty("deferredAmbConnectionTimeout")&&function(e){return function(e){return parseInt(e,10)===e}(e)&&e>0}(t.NOW.deferredAmbConnectionTimeout)?t.NOW.deferredAmbConnectionTimeout:1e4;n?t.setTimeout(i,r):("complete"===(t.document?t.document.readyState:null)?i():t.addEventListener("load",i),t.setTimeout(i,1e4));var o=!1;function i(){o||(o=!0,t.g_ambClient.connect())}}(e=a(function(e){return function(){var t=new r.default,n=function(){var e=[];function t(e,t,r){if(e&&r){var o=n(e);if(o)for(var i=o.subscriptions,u=i.length-1;u>=0;u--)i[u].id===t&&i[u].callback===r&&i.splice(u,1)}}function n(t){for(var n=0,r=e.length;n<r;n++)if(e[n].window===t)return e[n];return null}function r(t){var n={window:t,onUnload:function(){n.unloading=!0;for(var t,r=n.subscriptions;t=r.pop();)t.unsubscribe();!function(t){for(var n=0,r=e.length;n<r;n++)if(e[n].window===t.window){e.splice(n,1);break}t.subscriptions=[],t.window.removeEventListener("unload",t.onUnload),t.onUnload=null,t.window=null}(n)},unloading:!1,subscriptions:[]};return t.addEventListener("unload",n.onUnload),e.push(n),n}return{add:function(e,o,i,u){if(e&&i&&u){t(e,o,i);var s=n(e);s||(s=r(e)),s.unloading||s.subscriptions.push({id:o,callback:i,unsubscribe:u})}},remove:t}}(),u=t.getServerConnection();return e&&u.setLoginWindowEnabled(!1),{getServerConnection:function(){return u},connect:function(){t.connect()},abort:function(){t.abort()},disconnect:function(){t.disconnect()},getConnectionState:function(){return t.getConnectionState()},getState:function(){return t.getConnectionState()},getClientId:function(){return t.getClientId()},getChannel:function(e,r,o){var i=t.getChannel(e,r),s=i.subscribe,a=i.unsubscribe;return o=o||window,i.subscribe=function(e){return n.add(o,i,e,(function(){i.unsubscribe(e)})),s.call(i,e),i},i.unsubscribe=function(r){n.remove(o,i,r);var s=a.call(i,r);return 0===u.getChannel(e).getChannelListeners().length&&t.removeChannel(e),s},i},getChannel0:function(e,n){return t.getChannel(e,n)},getRecordWatcherChannel:function(e,t,n,r,u){var s=o.default.stringify(i.default.parse(t)).replace(/=/g,"-");return n=n||"default",this.getChannel("/rw/"+n+"/"+e+"/"+s,r,u)},registerExtension:function(e,n){t.registerExtension(e,n)},unregisterExtension:function(e){t.unregisterExtension(e)},batch:function(e){t.batch(e)},subscribeToEvent:function(e,r,o){o=o||window;var i=t.subscribeToEvent(e,r);return n.add(o,i,!0,(function(){t.unsubscribeFromEvent(i)})),i},unsubscribeFromEvent:function(e,r){r=r||window,n.remove(r,e,!0),t.unsubscribeFromEvent(e)},isLoggedIn:function(){return t.isLoggedIn()},getConnectionEvents:function(){return t.getConnectionEvents()},getEvents:function(){return t.getConnectionEvents()},reestablishSession:function(){t.reestablishSession()},loginComplete:function(){t.loginComplete()},getChannels:function(){return t.getChannels()},extendSession:function(){return t.extendSession()},getTokenManagementExtension:function(){return t.getTokenManagementExtension()}}}()}(s(window)&&null!==window.frameElement),window)),a(e,window)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(n(373)),o=l(n(167)),i=l(n(5)),u=l(n(97)),s=l(n(374)),a=n(12),c=l(n(375)),f=l(n(376));function l(e){return e&&e.__esModule?e:{default:e}}t.default=function(){var e=new r.default.CometD;e.registerTransport(a.WEBSOCKET_TYPE_NAME,new r.default.WebSocketTransport,0),e.registerTransport("long-polling",new r.default.LongPollingTransport,1),e.unregisterTransport("callback-polling");var t=new s.default;e.registerExtension("graphQLSubscription",t);var n=new c.default;e.registerExtension("sessionExtension",n);var l=new f.default;e.registerExtension(a.TOKEN_MANAGEMENT_EXTENSION,l);var d=new o.default(e),p=new i.default("amb.MessageClient"),h=!1;return{getServerConnection:function(){return d},isLoggedIn:function(){return d.isLoggedIn()},loginComplete:function(){d.loginComplete()},reestablishSession:function(){d.reestablishSession()},connect:function(){h?p.addInfoMessage(">>> connection exists, request satisfied"):(h=!0,d.connect())},reload:function(){h=!1,d.reload()},abort:function(){h=!1,d.abort()},disconnect:function(){h=!1,d.disconnect()},isConnected:function(){return h},getConnectionEvents:function(){return d.getEvents()},subscribeToEvent:function(e,t){return d.subscribeToEvent(e,t)},unsubscribeFromEvent:function(e){d.unsubscribeFromEvent(e)},getConnectionState:function(){return d.getConnectionState()},getClientId:function(){return e.getClientId()},getChannel:function(e,n){var r=n||{},o=r.subscriptionCallback,i=r.serializedGraphQLSubscription,s=r.subscribeOptionsCallback,a=d.getChannel(e,s);return t.isGraphQLChannel(e)&&(i?t.addGraphQLChannel(e,i):p.addErrorMessage("Serialized subscription not present for GraphQL channel "+e)),new u.default(a,d,o)},removeChannel:function(e){d.removeChannel(e),t.isGraphQLChannel(e)&&t.removeGraphQLChannel(e)},getChannels:function(){return d.getChannels()},extendSession:function(){n.extendSession()},getTokenManagementExtension:function(){return l},registerExtension:function(t,n){e.registerExtension(t,n)},unregisterExtension:function(t){e.unregisterExtension(t)},batch:function(t){e.batch(t)}}}},function(e,t,n){e.exports=function(){var e=e||function(e,t){var n=Object.create||function(){function e(){}return function(t){var n;return e.prototype=t,n=new e,e.prototype=null,n}}(),r={},o=r.lib={},i=o.Base={extend:function(e){var t=n(this);return e&&t.mixIn(e),t.hasOwnProperty("init")&&this.init!==t.init||(t.init=function(){t.$super.init.apply(this,arguments)}),t.init.prototype=t,t.$super=this,t},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}},u=o.WordArray=i.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=null!=t?t:4*e.length},toString:function(e){return(e||a).stringify(this)},concat:function(e){var t=this.words,n=e.words,r=this.sigBytes,o=e.sigBytes;if(this.clamp(),r%4)for(var i=0;i<o;i++){var u=n[i>>>2]>>>24-i%4*8&255;t[r+i>>>2]|=u<<24-(r+i)%4*8}else for(i=0;i<o;i+=4)t[r+i>>>2]=n[i>>>2];return this.sigBytes+=o,this},clamp:function(){var t=this.words,n=this.sigBytes;t[n>>>2]&=4294967295<<32-n%4*8,t.length=e.ceil(n/4)},clone:function(){var e=i.clone.call(this);return e.words=this.words.slice(0),e},random:function(t){for(var n,r=[],o=function(t){t=t;var n=987654321,r=4294967295;return function(){var o=((n=36969*(65535&n)+(n>>16)&r)<<16)+(t=18e3*(65535&t)+(t>>16)&r)&r;return o/=4294967296,(o+=.5)*(e.random()>.5?1:-1)}},i=0;i<t;i+=4){var s=o(4294967296*(n||e.random()));n=987654071*s(),r.push(4294967296*s()|0)}return new u.init(r,t)}}),s=r.enc={},a=s.Hex={stringify:function(e){for(var t=e.words,n=e.sigBytes,r=[],o=0;o<n;o++){var i=t[o>>>2]>>>24-o%4*8&255;r.push((i>>>4).toString(16)),r.push((15&i).toString(16))}return r.join("")},parse:function(e){for(var t=e.length,n=[],r=0;r<t;r+=2)n[r>>>3]|=parseInt(e.substr(r,2),16)<<24-r%8*4;return new u.init(n,t/2)}},c=s.Latin1={stringify:function(e){for(var t=e.words,n=e.sigBytes,r=[],o=0;o<n;o++){var i=t[o>>>2]>>>24-o%4*8&255;r.push(String.fromCharCode(i))}return r.join("")},parse:function(e){for(var t=e.length,n=[],r=0;r<t;r++)n[r>>>2]|=(255&e.charCodeAt(r))<<24-r%4*8;return new u.init(n,t)}},f=s.Utf8={stringify:function(e){try{return decodeURIComponent(escape(c.stringify(e)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(e){return c.parse(unescape(encodeURIComponent(e)))}},l=o.BufferedBlockAlgorithm=i.extend({reset:function(){this._data=new u.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=f.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(t){var n=this._data,r=n.words,o=n.sigBytes,i=this.blockSize,s=o/(4*i),a=(s=t?e.ceil(s):e.max((0|s)-this._minBufferSize,0))*i,c=e.min(4*a,o);if(a){for(var f=0;f<a;f+=i)this._doProcessBlock(r,f);var l=r.splice(0,a);n.sigBytes-=c}return new u.init(l,c)},clone:function(){var e=i.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0}),d=(o.Hasher=l.extend({cfg:i.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){l.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(e){return function(t,n){return new e.init(n).finalize(t)}},_createHmacHelper:function(e){return function(t,n){return new d.HMAC.init(e,n).finalize(t)}}}),r.algo={});return r}(Math);return e}()},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(388),o=n(389);e.exports=function(e){return null==e?[]:r(e,o(e))}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=Array(r);++n<r;)o[n]=t(e[n],n,e);return o}},function(e,t,n){var r=n(392),o=n(29),i=Object.prototype,u=i.hasOwnProperty,s=i.propertyIsEnumerable,a=r(function(){return arguments}())?r:function(e){return o(e)&&u.call(e,"callee")&&!s.call(e,"callee")};e.exports=a},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(179),o=n(100);e.exports=function(e){return null!=e&&o(e.length)&&!r(e)}},function(e,t,n){var r=n(27),o=n(101);e.exports=function(e){if(!o(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t,n){var r=n(414),o=n(418);e.exports=function(e,t){var n=o(e,t);return r(n)?n:void 0}},function(e,t,n){var r=n(260),o=n(129),i=0,u=Math.pow(36,4);function s(){return o((Math.random()*u<<0).toString(36),4)}function a(){return i=i<u?i:0,++i-1}function c(){return"c"+(new Date).getTime().toString(36)+o(a().toString(36),4)+r()+(s()+s())}c.slug=function(){var e=(new Date).getTime().toString(36),t=a().toString(36).slice(-4),n=r().slice(0,1)+r().slice(-1),o=s().slice(-2);return e.slice(-2)+t+n+o},c.fingerprint=r,e.exports=c},function(e,t,n){var r=n(261),o=n(45),i=n(323),u=Math.max;e.exports=function(e,t,n){var s=null==e?0:e.length;if(!s)return-1;var a=null==n?0:i(n);return a<0&&(a=u(s+a,0)),r(e,o(t,3),a)}},function(e,t,n){var r=n(151);e.exports=function(e){return r(e).toUpperCase()}},function(e,t,n){"use strict";var r=n(332),o=n(333),i=n(154);e.exports={formats:i,parse:o,stringify:r}},function(e,t,n){var r=n(335);e.exports=function(e){return r(e,5)}},function(e,t,n){var r=n(134),o=n(357)(r);e.exports=o},function(e,t,n){var r=n(366),o=n(88),i=n(144),u=i&&i.isArrayBuffer,s=u?o(u):r;e.exports=s},function(e,t,n){n(189),n(210),n(234),e.exports=n(238)},function(e,t,n){n(190),n(103),n(199),n(201),n(208),n(209),e.exports=n(9).Promise},function(e,t,n){"use strict";var r=n(65),o={};o[n(1)("toStringTag")]="z",o+""!="[object z]"&&n(30)(Object.prototype,"toString",(function(){return"[object "+r(this)+"]"}),!0)},function(e,t,n){e.exports=!n(32)&&!n(24)((function(){return 7!=Object.defineProperty(n(68)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(15);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(33),o=n(70);e.exports=function(e){return function(t,n){var i,u,s=String(o(t)),a=r(n),c=s.length;return a<0||a>=c?e?"":void 0:(i=s.charCodeAt(a))<55296||i>56319||a+1===c||(u=s.charCodeAt(a+1))<56320||u>57343?e?s.charAt(a):i:e?s.slice(a,a+2):u-56320+(i-55296<<10)+65536}}},function(e,t,n){"use strict";var r=n(195),o=n(69),i=n(74),u={};n(23)(u,n(1)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=r(u,{next:o(1,n)}),i(e,t+" Iterator")}},function(e,t,n){var r=n(14),o=n(196),i=n(106),u=n(72)("IE_PROTO"),s=function(){},a=function(){var e,t=n(68)("iframe"),r=i.length;for(t.style.display="none",n(73).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),a=e.F;r--;)delete a.prototype[i[r]];return a()};e.exports=Object.create||function(e,t){var n;return null!==e?(s.prototype=r(e),n=new s,s.prototype=null,n[u]=e):n=a(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(31),o=n(14),i=n(105);e.exports=n(32)?Object.defineProperties:function(e,t){o(e);for(var n,u=i(t),s=u.length,a=0;s>a;)r.f(e,n=u[a++],t[n]);return e}},function(e,t,n){var r=n(42),o=n(35),i=n(71)(!1),u=n(72)("IE_PROTO");e.exports=function(e,t){var n,s=o(e),a=0,c=[];for(n in s)n!=u&&r(s,n)&&c.push(n);for(;t.length>a;)r(s,n=t[a++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(42),o=n(10),i=n(72)("IE_PROTO"),u=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,n){for(var r=n(107),o=n(105),i=n(30),u=n(2),s=n(23),a=n(34),c=n(1),f=c("iterator"),l=c("toStringTag"),d=a.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},h=o(p),v=0;v<h.length;v++){var g,b=h[v],m=p[b],y=u[b],_=y&&y.prototype;if(_&&(_[f]||s(_,f,d),_[l]||s(_,l,b),a[b]=d,m))for(g in r)_[g]||i(_,g,r[g],!0)}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var r,o,i,u,s=n(66),a=n(2),c=n(16),f=n(65),l=n(0),d=n(15),p=n(17),h=n(202),v=n(203),g=n(111),b=n(112).set,m=n(205)(),y=n(75),_=n(113),x=n(206),w=n(114),S=a.TypeError,T=a.process,O=T&&T.versions,E=O&&O.v8||"",C=a.Promise,j="process"==f(T),A=function(){},N=o=y.f,k=!!function(){try{var e=C.resolve(1),t=(e.constructor={})[n(1)("species")]=function(e){e(A,A)};return(j||"function"==typeof PromiseRejectionEvent)&&e.then(A)instanceof t&&0!==E.indexOf("6.6")&&-1===x.indexOf("Chrome/66")}catch(e){}}(),M=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},I=function(e,t){if(!e._n){e._n=!0;var n=e._c;m((function(){for(var r=e._v,o=1==e._s,i=0,u=function(t){var n,i,u,s=o?t.ok:t.fail,a=t.resolve,c=t.reject,f=t.domain;try{s?(o||(2==e._h&&P(e),e._h=1),!0===s?n=r:(f&&f.enter(),n=s(r),f&&(f.exit(),u=!0)),n===t.promise?c(S("Promise-chain cycle")):(i=M(n))?i.call(n,a,c):a(n)):c(r)}catch(e){f&&!u&&f.exit(),c(e)}};n.length>i;)u(n[i++]);e._c=[],e._n=!1,t&&!e._h&&L(e)}))}},L=function(e){b.call(a,(function(){var t,n,r,o=e._v,i=R(e);if(i&&(t=_((function(){j?T.emit("unhandledRejection",o,e):(n=a.onunhandledrejection)?n({promise:e,reason:o}):(r=a.console)&&r.error&&r.error("Unhandled promise rejection",o)})),e._h=j||R(e)?2:1),e._a=void 0,i&&t.e)throw t.v}))},R=function(e){return 1!==e._h&&0===(e._a||e._c).length},P=function(e){b.call(a,(function(){var t;j?T.emit("rejectionHandled",e):(t=a.onrejectionhandled)&&t({promise:e,reason:e._v})}))},D=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),I(t,!0))},F=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw S("Promise can't be resolved itself");(t=M(e))?m((function(){var r={_w:n,_d:!1};try{t.call(e,c(F,r,1),c(D,r,1))}catch(e){D.call(r,e)}})):(n._v=e,n._s=1,I(n,!1))}catch(e){D.call({_w:n,_d:!1},e)}}};k||(C=function(e){h(this,C,"Promise","_h"),p(e),r.call(this);try{e(c(F,this,1),c(D,this,1))}catch(e){D.call(this,e)}},(r=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(207)(C.prototype,{then:function(e,t){var n=N(g(this,C));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=j?T.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&I(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new r;this.promise=e,this.resolve=c(F,e,1),this.reject=c(D,e,1)},y.f=N=function(e){return e===C||e===u?new i(e):o(e)}),l(l.G+l.W+l.F*!k,{Promise:C}),n(74)(C,"Promise"),n(115)("Promise"),u=n(9).Promise,l(l.S+l.F*!k,"Promise",{reject:function(e){var t=N(this);return(0,t.reject)(e),t.promise}}),l(l.S+l.F*(s||!k),"Promise",{resolve:function(e){return w(s&&this===u?C:this,e)}}),l(l.S+l.F*!(k&&n(116)((function(e){C.all(e).catch(A)}))),"Promise",{all:function(e){var t=this,n=N(t),r=n.resolve,o=n.reject,i=_((function(){var n=[],i=0,u=1;v(e,!1,(function(e){var s=i++,a=!1;n.push(void 0),u++,t.resolve(e).then((function(e){a||(a=!0,n[s]=e,--u||r(n))}),o)})),--u||r(n)}));return i.e&&o(i.v),n.promise},race:function(e){var t=this,n=N(t),r=n.reject,o=_((function(){v(e,!1,(function(e){t.resolve(e).then(n.resolve,r)}))}));return o.e&&r(o.v),n.promise}})},function(e,t){e.exports=function(e,t,n,r){if(!(e instanceof t)||void 0!==r&&r in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var r=n(16),o=n(108),i=n(109),u=n(14),s=n(6),a=n(110),c={},f={};(t=e.exports=function(e,t,n,l,d){var p,h,v,g,b=d?function(){return e}:a(e),m=r(n,l,t?2:1),y=0;if("function"!=typeof b)throw TypeError(e+" is not iterable!");if(i(b)){for(p=s(e.length);p>y;y++)if((g=t?m(u(h=e[y])[0],h[1]):m(e[y]))===c||g===f)return g}else for(v=b.call(e);!(h=v.next()).done;)if((g=o(v,m,h.value,t))===c||g===f)return g}).BREAK=c,t.RETURN=f},function(e,t){e.exports=function(e,t,n){var r=void 0===n;switch(t.length){case 0:return r?e():e.call(n);case 1:return r?e(t[0]):e.call(n,t[0]);case 2:return r?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return r?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return r?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var r=n(2),o=n(112).set,i=r.MutationObserver||r.WebKitMutationObserver,u=r.process,s=r.Promise,a="process"==n(22)(u);e.exports=function(){var e,t,n,c=function(){var r,o;for(a&&(r=u.domain)&&r.exit();e;){o=e.fn,e=e.next;try{o()}catch(r){throw e?n():t=void 0,r}}t=void 0,r&&r.enter()};if(a)n=function(){u.nextTick(c)};else if(!i||r.navigator&&r.navigator.standalone)if(s&&s.resolve){var f=s.resolve(void 0);n=function(){f.then(c)}}else n=function(){o.call(r,c)};else{var l=!0,d=document.createTextNode("");new i(c).observe(d,{characterData:!0}),n=function(){d.data=l=!l}}return function(r){var o={fn:r,next:void 0};t&&(t.next=o),e||(e=o,n()),t=o}}},function(e,t,n){var r=n(2).navigator;e.exports=r&&r.userAgent||""},function(e,t,n){var r=n(30);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},function(e,t,n){"use strict";var r=n(0),o=n(9),i=n(2),u=n(111),s=n(114);r(r.P+r.R,"Promise",{finally:function(e){var t=u(this,o.Promise||i.Promise),n="function"==typeof e;return this.then(n?function(n){return s(t,e()).then((function(){return n}))}:e,n?function(n){return s(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var r=n(0),o=n(75),i=n(113);r(r.S,"Promise",{try:function(e){var t=o.f(this),n=i(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){n(103),n(211),n(212),n(213),n(214),n(215),n(216),n(217),n(219),n(220),n(221),n(222),n(223),n(224),n(225),n(226),n(227),n(229),n(231),n(232),n(233),n(107),e.exports=n(9).Array},function(e,t,n){var r=n(0);r(r.S,"Array",{isArray:n(76)})},function(e,t,n){"use strict";var r=n(16),o=n(0),i=n(10),u=n(108),s=n(109),a=n(6),c=n(117),f=n(110);o(o.S+o.F*!n(116)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,o,l,d=i(e),p="function"==typeof this?this:Array,h=arguments.length,v=h>1?arguments[1]:void 0,g=void 0!==v,b=0,m=f(d);if(g&&(v=r(v,h>2?arguments[2]:void 0,2)),null==m||p==Array&&s(m))for(n=new p(t=a(d.length));t>b;b++)c(n,b,g?v(d[b],b):d[b]);else for(l=m.call(d),n=new p;!(o=l.next()).done;b++)c(n,b,g?u(l,v,[o.value,b],!0):o.value);return n.length=b,n}})},function(e,t,n){"use strict";var r=n(0),o=n(117);r(r.S+r.F*n(24)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,n=new("function"==typeof this?this:Array)(t);t>e;)o(n,e,arguments[e++]);return n.length=t,n}})},function(e,t,n){"use strict";var r=n(0),o=n(35),i=[].join;r(r.P+r.F*(n(43)!=Object||!n(7)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),o=n(73),i=n(22),u=n(44),s=n(6),a=[].slice;r(r.P+r.F*n(24)((function(){o&&a.call(o)})),"Array",{slice:function(e,t){var n=s(this.length),r=i(this);if(t=void 0===t?n:t,"Array"==r)return a.call(this,e,t);for(var o=u(e,n),c=u(t,n),f=s(c-o),l=new Array(f),d=0;d<f;d++)l[d]="String"==r?this.charAt(o+d):this[o+d];return l}})},function(e,t,n){"use strict";var r=n(0),o=n(17),i=n(10),u=n(24),s=[].sort,a=[1,2,3];r(r.P+r.F*(u((function(){a.sort(void 0)}))||!u((function(){a.sort(null)}))||!n(7)(s)),"Array",{sort:function(e){return void 0===e?s.call(i(this)):s.call(i(this),o(e))}})},function(e,t,n){"use strict";var r=n(0),o=n(18)(0),i=n(7)([].forEach,!0);r(r.P+r.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,n){var r=n(15),o=n(76),i=n(1)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),r(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,n){"use strict";var r=n(0),o=n(18)(1);r(r.P+r.F*!n(7)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(18)(2);r(r.P+r.F*!n(7)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(18)(3);r(r.P+r.F*!n(7)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(18)(4);r(r.P+r.F*!n(7)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(118);r(r.P+r.F*!n(7)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,n){"use strict";var r=n(0),o=n(118);r(r.P+r.F*!n(7)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,n){"use strict";var r=n(0),o=n(71)(!1),i=[].indexOf,u=!!i&&1/[1].indexOf(1,-0)<0;r(r.P+r.F*(u||!n(7)(i)),"Array",{indexOf:function(e){return u?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,n){"use strict";var r=n(0),o=n(35),i=n(33),u=n(6),s=[].lastIndexOf,a=!!s&&1/[1].lastIndexOf(1,-0)<0;r(r.P+r.F*(a||!n(7)(s)),"Array",{lastIndexOf:function(e){if(a)return s.apply(this,arguments)||0;var t=o(this),n=u(t.length),r=n-1;for(arguments.length>1&&(r=Math.min(r,i(arguments[1]))),r<0&&(r=n+r);r>=0;r--)if(r in t&&t[r]===e)return r||0;return-1}})},function(e,t,n){var r=n(0);r(r.P,"Array",{copyWithin:n(228)}),n(11)("copyWithin")},function(e,t,n){"use strict";var r=n(10),o=n(44),i=n(6);e.exports=[].copyWithin||function(e,t){var n=r(this),u=i(n.length),s=o(e,u),a=o(t,u),c=arguments.length>2?arguments[2]:void 0,f=Math.min((void 0===c?u:o(c,u))-a,u-s),l=1;for(a<s&&s<a+f&&(l=-1,a+=f-1,s+=f-1);f-- >0;)a in n?n[s]=n[a]:delete n[s],s+=l,a+=l;return n}},function(e,t,n){var r=n(0);r(r.P,"Array",{fill:n(230)}),n(11)("fill")},function(e,t,n){"use strict";var r=n(10),o=n(44),i=n(6);e.exports=function(e){for(var t=r(this),n=i(t.length),u=arguments.length,s=o(u>1?arguments[1]:void 0,n),a=u>2?arguments[2]:void 0,c=void 0===a?n:o(a,n);c>s;)t[s++]=e;return t}},function(e,t,n){"use strict";var r=n(0),o=n(18)(5),i=!0;"find"in[]&&Array(1).find((function(){i=!1})),r(r.P+r.F*i,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(11)("find")},function(e,t,n){"use strict";var r=n(0),o=n(18)(6),i="findIndex",u=!0;i in[]&&Array(1)[i]((function(){u=!1})),r(r.P+r.F*u,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(11)(i)},function(e,t,n){n(115)("Array")},function(e,t,n){n(235),n(236),n(237),e.exports=n(9).Array},function(e,t,n){"use strict";var r=n(0),o=n(71)(!0);r(r.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),n(11)("includes")},function(e,t,n){"use strict";var r=n(0),o=n(119),i=n(10),u=n(6),s=n(17),a=n(77);r(r.P,"Array",{flatMap:function(e){var t,n,r=i(this);return s(e),t=u(r.length),n=a(r,0),o(n,r,r,t,0,1,e,arguments[1]),n}}),n(11)("flatMap")},function(e,t,n){"use strict";var r=n(0),o=n(119),i=n(10),u=n(6),s=n(33),a=n(77);r(r.P,"Array",{flatten:function(){var e=arguments[0],t=i(this),n=u(t.length),r=a(t,0);return o(r,t,t,n,0,void 0===e?1:s(e)),r}}),n(11)("flatten")},function(e,t,n){"use strict";n.r(t);var r=n(36);n.d(t,"startFlow",(function(){return r.startFlow})),n.d(t,"startSubflow",(function(){return r.startSubflow})),n.d(t,"startAction",(function(){return r.startAction})),n.d(t,"getExecution",(function(){return r.getExecution}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getExecution=t.startAction=t.startSubflow=t.startFlow=void 0;var r=n(37),o=u(n(240)),i=u(n(120));function u(e){return e&&e.__esModule?e:{default:e}}t.startFlow=function(e,t){return(0,o.default)({type:r.FLOW_TYPES.FLOW,name:e,inputs:t})},t.startSubflow=function(e,t){return(0,o.default)({type:r.FLOW_TYPES.SUBFLOW,name:e,inputs:t})},t.startAction=function(e,t){return(0,o.default)({type:r.FLOW_TYPES.ACTION,name:e,inputs:t})},t.getExecution=function(e){return Promise.resolve((0,i.default)(e))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(37),o=s(n(120)),i=s(n(384)),u=s(n(78));function s(e){return e&&e.__esModule?e:{default:e}}var a=function(e){return(0,o.default)(e.execution_id)};t.default=function(e){(0,i.default)(e);var t=e.type,n=e.name,o=e.inputs,s="/"+r.FLOWOBJECT_API_PATH+"/"+r.START+"/"+t,c={name:n,inputs:o};return(0,u.default)(s,"POST",{body:c,transform:a})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(37),o=u(n(78)),i=u(n(55));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){return e.status};t.default=function(e){(0,i.default)(e);var t=r.FLOWOBJECT_API_PATH+"/"+r.STATUS+"/"+e;return(0,o.default)(t,"GET",{transform:s})}},function(e,t,n){"use strict";var r=n(3),o=n(121),i=n(243),u=n(127);function s(e){var t=new i(e),n=o(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var a=s(n(124));a.Axios=i,a.create=function(e){return s(u(a.defaults,e))},a.Cancel=n(128),a.CancelToken=n(257),a.isCancel=n(123),a.all=function(e){return Promise.all(e)},a.spread=n(258),a.isAxiosError=n(259),e.exports=a,e.exports.default=a},function(e,t,n){"use strict";var r=n(3),o=n(122),i=n(244),u=n(245),s=n(127);function a(e){this.defaults=e,this.interceptors={request:new i,response:new i}}a.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[u,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},a.prototype.getUri=function(e){return e=s(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){a.prototype[e]=function(t,n){return this.request(s(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){a.prototype[e]=function(t,n,r){return this.request(s(r||{},{method:e,url:t,data:n}))}})),e.exports=a},function(e,t,n){"use strict";var r=n(3);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},function(e,t,n){"use strict";var r=n(3),o=n(246),i=n(123),u=n(124);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||u.adapter)(e).then((function(t){return s(e),t.data=o(t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(s(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var r=n(3);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function u(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:u}catch(e){r=u}}();var a,c=[],f=!1,l=-1;function d(){f&&a&&(f=!1,a.length?c=a.concat(c):l=-1,c.length&&p())}function p(){if(!f){var e=s(d);f=!0;for(var t=c.length;t;){for(a=c,c=[];++l<t;)a&&a[l].run();l=-1,t=c.length}a=null,f=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===u||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function v(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||f||s(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";var r=n(3);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},function(e,t,n){"use strict";var r=n(126);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(3);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,u){var s=[];s.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(o)&&s.push("path="+o),r.isString(i)&&s.push("domain="+i),!0===u&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(253),o=n(254);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(3),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,u={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(u[t]&&o.indexOf(t)>=0)return;u[t]="set-cookie"===t?(u[t]?u[t]:[]).concat([n]):u[t]?u[t]+", "+n:n}})),u):u}},function(e,t,n){"use strict";var r=n(3);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r=n(128);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},function(e,t,n){var r=n(129),o="object"==typeof window?window:self,i=Object.keys(o),u=r(((navigator.mimeTypes?navigator.mimeTypes.length:0)+navigator.userAgent.length).toString(36)+i.toString(36),4);e.exports=function(){return u}},function(e,t){e.exports=function(e,t,n,r){for(var o=e.length,i=n+(r?1:-1);r?i--:++i<o;)if(t(e[i],i,e))return i;return-1}},function(e,t,n){var r=n(263),o=n(310),i=n(148);e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?i(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(79),o=n(132);e.exports=function(e,t,n,i){var u=n.length,s=u,a=!i;if(null==e)return!s;for(e=Object(e);u--;){var c=n[u];if(a&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++u<s;){var f=(c=n[u])[0],l=e[f],d=c[1];if(a&&c[2]){if(void 0===l&&!(f in e))return!1}else{var p=new r;if(i)var h=i(l,d,f,e,t,p);if(!(void 0===h?o(d,l,3,i,p):h))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(47),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0||(n==t.length-1?t.pop():o.call(t,n,1),--this.size,0))}},function(e,t,n){var r=n(47);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(47);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(47);e.exports=function(e,t){var n=this.__data__,o=r(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},function(e,t,n){var r=n(46);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(46),o=n(81),i=n(83);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var u=n.__data__;if(!o||u.length<199)return u.push([e,t]),this.size=++n.size,this;n=this.__data__=new i(u)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(61),o=n(277),i=n(20),u=n(131),s=/^\[object .+?Constructor\]$/,a=Function.prototype,c=Object.prototype,f=a.toString,l=c.hasOwnProperty,d=RegExp("^"+f.call(l).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||o(e))&&(r(e)?d:s).test(u(e))}},function(e,t,n){var r=n(26),o=Object.prototype,i=o.hasOwnProperty,u=o.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var o=u.call(e);return r&&(t?e[s]=n:delete e[s]),o}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(278),o=function(){var e=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();e.exports=function(e){return!!o&&o in e}},function(e,t,n){var r=n(8)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(281),o=n(46),i=n(81);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(e,t,n){var r=n(282),o=n(283),i=n(284),u=n(285),s=n(286);function a(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}a.prototype.clear=r,a.prototype.delete=o,a.prototype.get=i,a.prototype.has=u,a.prototype.set=s,e.exports=a},function(e,t,n){var r=n(48);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(48),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(48),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:o.call(t,e)}},function(e,t,n){var r=n(48);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(49);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(49);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(49);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(49);e.exports=function(e,t){var n=r(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},function(e,t,n){var r=n(79),o=n(133),i=n(297),u=n(298),s=n(146),a=n(4),c=n(40),f=n(143),l="[object Arguments]",d="[object Array]",p="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,v,g,b){var m=a(e),y=a(t),_=m?d:s(e),x=y?d:s(t),w=(_=_==l?p:_)==p,S=(x=x==l?p:x)==p,T=_==x;if(T&&c(e)){if(!c(t))return!1;m=!0,w=!1}if(T&&!w)return b||(b=new r),m||f(e)?o(e,t,n,v,g,b):i(e,t,_,n,v,g,b);if(!(1&n)){var O=w&&h.call(e,"__wrapped__"),E=S&&h.call(t,"__wrapped__");if(O||E){var C=O?e.value():e,j=E?t.value():t;return b||(b=new r),g(C,j,n,v,b)}}return!!T&&(b||(b=new r),u(e,t,n,v,g,b))}},function(e,t,n){var r=n(83),o=n(294),i=n(295);function u(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}u.prototype.add=u.prototype.push=o,u.prototype.has=i,e.exports=u},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(26),o=n(135),i=n(80),u=n(133),s=n(136),a=n(137),c=r?r.prototype:void 0,f=c?c.valueOf:void 0;e.exports=function(e,t,n,r,c,l,d){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!l(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var p=s;case"[object Set]":var h=1&r;if(p||(p=a),e.size!=t.size&&!h)return!1;var v=d.get(e);if(v)return v==t;r|=2,d.set(e,t);var g=u(p(e),p(t),r,c,l,d);return d.delete(e),g;case"[object Symbol]":if(f)return f.call(e)==f.call(t)}return!1}},function(e,t,n){var r=n(138),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,i,u,s){var a=1&n,c=r(e),f=c.length;if(f!=r(t).length&&!a)return!1;for(var l=f;l--;){var d=c[l];if(!(a?d in t:o.call(t,d)))return!1}var p=s.get(e);if(p&&s.get(t))return p==t;var h=!0;s.set(e,t),s.set(t,e);for(var v=a;++l<f;){var g=e[d=c[l]],b=t[d];if(i)var m=a?i(b,g,d,t,e,s):i(g,b,d,e,t,s);if(!(void 0===m?g===b||u(g,b,n,i,s):m)){h=!1;break}v||(v="constructor"==d)}if(h&&!v){var y=e.constructor,_=t.constructor;y!=_&&"constructor"in e&&"constructor"in t&&!("function"==typeof y&&y instanceof y&&"function"==typeof _&&_ instanceof _)&&(h=!1)}return s.delete(e),s.delete(t),h}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=0,i=[];++n<r;){var u=e[n];t(u,n,e)&&(i[o++]=u)}return i}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t,n){var r=n(25),o=n(13);e.exports=function(e){return o(e)&&"[object Arguments]"==r(e)}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(25),o=n(87),i=n(13),u={};u["[object Float32Array]"]=u["[object Float64Array]"]=u["[object Int8Array]"]=u["[object Int16Array]"]=u["[object Int32Array]"]=u["[object Uint8Array]"]=u["[object Uint8ClampedArray]"]=u["[object Uint16Array]"]=u["[object Uint32Array]"]=!0,u["[object Arguments]"]=u["[object Array]"]=u["[object ArrayBuffer]"]=u["[object Boolean]"]=u["[object DataView]"]=u["[object Date]"]=u["[object Error]"]=u["[object Function]"]=u["[object Map]"]=u["[object Number]"]=u["[object Object]"]=u["[object RegExp]"]=u["[object Set]"]=u["[object String]"]=u["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&o(e.length)&&!!u[r(e)]}},function(e,t,n){var r=n(89),o=n(305),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return o(e);var t=[];for(var n in Object(e))i.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t,n){var r=n(145)(Object.keys,Object);e.exports=r},function(e,t,n){var r=n(19)(n(8),"DataView");e.exports=r},function(e,t,n){var r=n(19)(n(8),"Promise");e.exports=r},function(e,t,n){var r=n(19)(n(8),"Set");e.exports=r},function(e,t,n){var r=n(19)(n(8),"WeakMap");e.exports=r},function(e,t,n){var r=n(147),o=n(38);e.exports=function(e){for(var t=o(e),n=t.length;n--;){var i=t[n],u=e[i];t[n]=[i,u,r(u)]}return t}},function(e,t,n){var r=n(132),o=n(312),i=n(317),u=n(90),s=n(147),a=n(148),c=n(52);e.exports=function(e,t){return u(e)&&s(t)?a(c(e),t):function(n){var u=o(n,e);return void 0===u&&u===t?i(n,e):r(t,u,3)}}},function(e,t,n){var r=n(149);e.exports=function(e,t,n){var o=null==e?void 0:r(e,t);return void 0===o?n:o}},function(e,t,n){var r=/^\./,o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,u=n(314)((function(e){var t=[];return r.test(e)&&t.push(""),e.replace(o,(function(e,n,r,o){t.push(r?o.replace(i,"$1"):n||e)})),t}));e.exports=u},function(e,t,n){var r=n(315);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(83);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,o=t?t.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var u=e.apply(this,r);return n.cache=i.set(o,u)||i,u};return n.cache=new(o.Cache||r),n}o.Cache=r,e.exports=o},function(e,t,n){var r=n(26),o=n(91),i=n(4),u=n(51),s=r?r.prototype:void 0,a=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(i(t))return o(t,e)+"";if(u(t))return a?a.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t,n){var r=n(318),o=n(319);e.exports=function(e,t){return null!=e&&o(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(150),o=n(86),i=n(4),u=n(142),s=n(87),a=n(52);e.exports=function(e,t,n){for(var c=-1,f=(t=r(t,e)).length,l=!1;++c<f;){var d=a(t[c]);if(!(l=null!=e&&n(e,d)))break;e=e[d]}return l||++c!=f?l:!!(f=null==e?0:e.length)&&s(f)&&u(d,f)&&(i(e)||o(e))}},function(e,t,n){var r=n(321),o=n(322),i=n(90),u=n(52);e.exports=function(e){return i(e)?r(u(e)):o(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(149);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(324);e.exports=function(e){var t=r(e),n=t%1;return t==t?n?t-n:t:0}},function(e,t,n){var r=n(325);e.exports=function(e){return e?(e=r(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}},function(e,t,n){var r=n(20),o=n(51),i=/^\s+|\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,a=/^0o[0-7]+$/i,c=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(o(e))return NaN;if(r(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=r(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(i,"");var n=s.test(e);return n||a.test(e)?c(e.slice(2),n?2:8):u.test(e)?NaN:+e}},function(e,t,n){var r=n(327),o=n(38);e.exports=function(e,t){return e&&r(e,t,o)}},function(e,t,n){var r=n(328)();e.exports=r},function(e,t){e.exports=function(e){return function(t,n,r){for(var o=-1,i=Object(t),u=r(t),s=u.length;s--;){var a=u[e?s:++o];if(!1===n(i[a],a,i))break}return t}}},function(e,t,n){var r=n(50);e.exports=function(e,t){return function(n,o){if(null==n)return n;if(!r(n))return e(n,o);for(var i=n.length,u=t?i:-1,s=Object(n);(t?u--:++u<i)&&!1!==o(s[u],u,s););return n}}},function(e,t,n){var r=n(53);e.exports=function(e){return"function"==typeof e?e:r}},function(e,t){e.exports=function(e,t,n,r,o){return o(e,(function(e,o,i){n=r?(r=!1,e):t(n,e,o,i)})),n}},function(e,t,n){"use strict";var r=n(153),o=n(154),i={brackets:function(e){return e+"[]"},indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},u=Date.prototype.toISOString,s={delimiter:"&",encode:!0,encoder:r.encode,encodeValuesOnly:!1,serializeDate:function(e){return u.call(e)},skipNulls:!1,strictNullHandling:!1},a=function e(t,n,o,i,u,a,c,f,l,d,p,h){var v=t;if("function"==typeof c)v=c(n,v);else if(v instanceof Date)v=d(v);else if(null===v){if(i)return a&&!h?a(n,s.encoder):n;v=""}if("string"==typeof v||"number"==typeof v||"boolean"==typeof v||r.isBuffer(v))return a?[p(h?n:a(n,s.encoder))+"="+p(a(v,s.encoder))]:[p(n)+"="+p(String(v))];var g,b=[];if(void 0===v)return b;if(Array.isArray(c))g=c;else{var m=Object.keys(v);g=f?m.sort(f):m}for(var y=0;y<g.length;++y){var _=g[y];u&&null===v[_]||(b=Array.isArray(v)?b.concat(e(v[_],o(n,_),o,i,u,a,c,f,l,d,p,h)):b.concat(e(v[_],n+(l?"."+_:"["+_+"]"),o,i,u,a,c,f,l,d,p,h)))}return b};e.exports=function(e,t){var n=e,u=t?r.assign({},t):{};if(null!==u.encoder&&void 0!==u.encoder&&"function"!=typeof u.encoder)throw new TypeError("Encoder has to be a function.");var c=void 0===u.delimiter?s.delimiter:u.delimiter,f="boolean"==typeof u.strictNullHandling?u.strictNullHandling:s.strictNullHandling,l="boolean"==typeof u.skipNulls?u.skipNulls:s.skipNulls,d="boolean"==typeof u.encode?u.encode:s.encode,p="function"==typeof u.encoder?u.encoder:s.encoder,h="function"==typeof u.sort?u.sort:null,v=void 0!==u.allowDots&&u.allowDots,g="function"==typeof u.serializeDate?u.serializeDate:s.serializeDate,b="boolean"==typeof u.encodeValuesOnly?u.encodeValuesOnly:s.encodeValuesOnly;if(void 0===u.format)u.format=o.default;else if(!Object.prototype.hasOwnProperty.call(o.formatters,u.format))throw new TypeError("Unknown format option provided.");var m,y,_=o.formatters[u.format];"function"==typeof u.filter?n=(y=u.filter)("",n):Array.isArray(u.filter)&&(m=y=u.filter);var x,w=[];if("object"!=typeof n||null===n)return"";x=u.arrayFormat in i?u.arrayFormat:"indices"in u?u.indices?"indices":"repeat":"indices";var S=i[x];m||(m=Object.keys(n)),h&&m.sort(h);for(var T=0;T<m.length;++T){var O=m[T];l&&null===n[O]||(w=w.concat(a(n[O],O,S,f,l,d?p:null,y,h,v,g,_,b)))}var E=w.join(c),C=!0===u.addQueryPrefix?"?":"";return E.length>0?C+E:""}},function(e,t,n){"use strict";var r=n(153),o=Object.prototype.hasOwnProperty,i={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:r.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},u=function(e,t,n){if(e){var r=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,i=/(\[[^[\]]*])/g,u=/(\[[^[\]]*])/.exec(r),s=u?r.slice(0,u.index):r,a=[];if(s){if(!n.plainObjects&&o.call(Object.prototype,s)&&!n.allowPrototypes)return;a.push(s)}for(var c=0;null!==(u=i.exec(r))&&c<n.depth;){if(c+=1,!n.plainObjects&&o.call(Object.prototype,u[1].slice(1,-1))&&!n.allowPrototypes)return;a.push(u[1])}return u&&a.push("["+r.slice(u.index)+"]"),function(e,t,n){for(var r=t,o=e.length-1;o>=0;--o){var i,u=e[o];if("[]"===u)i=(i=[]).concat(r);else{i=n.plainObjects?Object.create(null):{};var s="["===u.charAt(0)&&"]"===u.charAt(u.length-1)?u.slice(1,-1):u,a=parseInt(s,10);!isNaN(a)&&u!==s&&String(a)===s&&a>=0&&n.parseArrays&&a<=n.arrayLimit?(i=[])[a]=r:i[s]=r}r=i}return r}(a,t,n)}};e.exports=function(e,t){var n=t?r.assign({},t):{};if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(n.ignoreQueryPrefix=!0===n.ignoreQueryPrefix,n.delimiter="string"==typeof n.delimiter||r.isRegExp(n.delimiter)?n.delimiter:i.delimiter,n.depth="number"==typeof n.depth?n.depth:i.depth,n.arrayLimit="number"==typeof n.arrayLimit?n.arrayLimit:i.arrayLimit,n.parseArrays=!1!==n.parseArrays,n.decoder="function"==typeof n.decoder?n.decoder:i.decoder,n.allowDots="boolean"==typeof n.allowDots?n.allowDots:i.allowDots,n.plainObjects="boolean"==typeof n.plainObjects?n.plainObjects:i.plainObjects,n.allowPrototypes="boolean"==typeof n.allowPrototypes?n.allowPrototypes:i.allowPrototypes,n.parameterLimit="number"==typeof n.parameterLimit?n.parameterLimit:i.parameterLimit,n.strictNullHandling="boolean"==typeof n.strictNullHandling?n.strictNullHandling:i.strictNullHandling,""===e||null==e)return n.plainObjects?Object.create(null):{};for(var s="string"==typeof e?function(e,t){for(var n={},r=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,u=t.parameterLimit===1/0?void 0:t.parameterLimit,s=r.split(t.delimiter,u),a=0;a<s.length;++a){var c,f,l=s[a],d=l.indexOf("]="),p=-1===d?l.indexOf("="):d+1;-1===p?(c=t.decoder(l,i.decoder),f=t.strictNullHandling?null:""):(c=t.decoder(l.slice(0,p),i.decoder),f=t.decoder(l.slice(p+1),i.decoder)),o.call(n,c)?n[c]=[].concat(n[c]).concat(f):n[c]=f}return n}(e,n):e,a=n.plainObjects?Object.create(null):{},c=Object.keys(s),f=0;f<c.length;++f){var l=c[f],d=u(l,s[l],n);a=r.merge(a,d,n)}return r.compact(a)}},function(e,t,n){var r=n(92),o=n(50);e.exports=function(e,t){var n=-1,i=o(e)?Array(e.length):[];return r(e,(function(e,r,o){i[++n]=t(e,r,o)})),i}},function(e,t,n){var r=n(79),o=n(152),i=n(155),u=n(336),s=n(337),a=n(340),c=n(341),f=n(342),l=n(343),d=n(138),p=n(344),h=n(146),v=n(345),g=n(346),b=n(355),m=n(4),y=n(40),_=n(20),x=n(38),w="[object Arguments]",S="[object Function]",T="[object Object]",O={};O[w]=O["[object Array]"]=O["[object ArrayBuffer]"]=O["[object DataView]"]=O["[object Boolean]"]=O["[object Date]"]=O["[object Float32Array]"]=O["[object Float64Array]"]=O["[object Int8Array]"]=O["[object Int16Array]"]=O["[object Int32Array]"]=O["[object Map]"]=O["[object Number]"]=O[T]=O["[object RegExp]"]=O["[object Set]"]=O["[object String]"]=O["[object Symbol]"]=O["[object Uint8Array]"]=O["[object Uint8ClampedArray]"]=O["[object Uint16Array]"]=O["[object Uint32Array]"]=!0,O["[object Error]"]=O[S]=O["[object WeakMap]"]=!1,e.exports=function e(t,n,E,C,j,A){var N,k=1&n,M=2&n,I=4&n;if(E&&(N=j?E(t,C,j,A):E(t)),void 0!==N)return N;if(!_(t))return t;var L=m(t);if(L){if(N=v(t),!k)return c(t,N)}else{var R=h(t),P=R==S||"[object GeneratorFunction]"==R;if(y(t))return a(t,k);if(R==T||R==w||P&&!j){if(N=M||P?{}:b(t),!k)return M?l(t,s(N,t)):f(t,u(N,t))}else{if(!O[R])return j?t:{};N=g(t,R,e,k)}}A||(A=new r);var D=A.get(t);if(D)return D;A.set(t,N);var F=I?M?p:d:M?keysIn:x,U=L?void 0:F(t);return o(U||t,(function(r,o){U&&(r=t[o=r]),i(N,o,e(r,n,E,o,t,A))})),N}},function(e,t,n){var r=n(54),o=n(38);e.exports=function(e,t){return e&&r(t,o(t),e)}},function(e,t,n){var r=n(54),o=n(158);e.exports=function(e,t){return e&&r(t,o(t),e)}},function(e,t,n){var r=n(20),o=n(89),i=n(339),u=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return i(e);var t=o(e),n=[];for(var s in e)("constructor"!=s||!t&&u.call(e,s))&&n.push(s);return n}},function(e,t){e.exports=function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}},function(e,t,n){(function(e){var r=n(8),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,u=i&&i.exports===o?r.Buffer:void 0,s=u?u.allocUnsafe:void 0;e.exports=function(e,t){if(t)return e.slice();var n=e.length,r=s?s(n):new e.constructor(n);return e.copy(r),r}}).call(this,n(39)(e))},function(e,t){e.exports=function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}},function(e,t,n){var r=n(54),o=n(85);e.exports=function(e,t){return r(e,o(e),t)}},function(e,t,n){var r=n(54),o=n(159);e.exports=function(e,t){return r(e,o(e),t)}},function(e,t,n){var r=n(139),o=n(159),i=n(158);e.exports=function(e){return r(e,i,o)}},function(e,t){var n=Object.prototype.hasOwnProperty;e.exports=function(e){var t=e.length,r=e.constructor(t);return t&&"string"==typeof e[0]&&n.call(e,"index")&&(r.index=e.index,r.input=e.input),r}},function(e,t,n){var r=n(94),o=n(347),i=n(348),u=n(350),s=n(351),a=n(353),c=n(354);e.exports=function(e,t,n,f){var l=e.constructor;switch(t){case"[object ArrayBuffer]":return r(e);case"[object Boolean]":case"[object Date]":return new l(+e);case"[object DataView]":return o(e,f);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return c(e,f);case"[object Map]":return i(e,f,n);case"[object Number]":case"[object String]":return new l(e);case"[object RegExp]":return u(e);case"[object Set]":return s(e,f,n);case"[object Symbol]":return a(e)}}},function(e,t,n){var r=n(94);e.exports=function(e,t){var n=t?r(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}},function(e,t,n){var r=n(349),o=n(93),i=n(136);e.exports=function(e,t,n){var u=t?n(i(e),1):i(e);return o(u,r,new e.constructor)}},function(e,t){e.exports=function(e,t){return e.set(t[0],t[1]),e}},function(e,t){var n=/\w*$/;e.exports=function(e){var t=new e.constructor(e.source,n.exec(e));return t.lastIndex=e.lastIndex,t}},function(e,t,n){var r=n(352),o=n(93),i=n(137);e.exports=function(e,t,n){var u=t?n(i(e),1):i(e);return o(u,r,new e.constructor)}},function(e,t){e.exports=function(e,t){return e.add(t),e}},function(e,t,n){var r=n(26),o=r?r.prototype:void 0,i=o?o.valueOf:void 0;e.exports=function(e){return i?Object(i.call(e)):{}}},function(e,t,n){var r=n(94);e.exports=function(e,t){var n=t?r(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}},function(e,t,n){var r=n(356),o=n(160),i=n(89);e.exports=function(e){return"function"!=typeof e.constructor||i(e)?{}:r(o(e))}},function(e,t,n){var r=n(20),o=Object.create,i=function(){function e(){}return function(t){if(!r(t))return{};if(o)return o(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();e.exports=i},function(e,t,n){var r=n(161),o=n(91),i=n(45),u=n(358),s=n(88),a=n(362);e.exports=function(e){return a((function(t){return t=o(t,s(i)),u((function(n){var o=this;return e(t,(function(e){return r(e,o,n)}))}))}))}},function(e,t,n){var r=n(53),o=n(162),i=n(163);e.exports=function(e,t){return i(o(e,t,r),e+"")}},function(e,t,n){var r=n(360),o=n(157),i=n(53),u=o?function(e,t){return o(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:i;e.exports=u},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var o=n(),i=16-(o-r);if(r=o,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(363),o=n(162),i=n(163);e.exports=function(e){return i(o(e,void 0,r),e+"")}},function(e,t,n){var r=n(364);e.exports=function(e){return null!=e&&e.length?r(e,1):[]}},function(e,t,n){var r=n(84),o=n(365);e.exports=function e(t,n,i,u,s){var a=-1,c=t.length;for(i||(i=o),s||(s=[]);++a<c;){var f=t[a];n>0&&i(f)?n>1?e(f,n-1,i,u,s):r(s,f):u||(s[s.length]=f)}return s}},function(e,t,n){var r=n(26),o=n(86),i=n(4),u=r?r.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||o(e)||!!(u&&e&&e[u])}},function(e,t,n){var r=n(25),o=n(13);e.exports=function(e){return o(e)&&"[object ArrayBuffer]"==r(e)}},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==e)return e;throw new Error("Unable to locate global object")}}).call(this,n(82))},function(e,t,n){var r=n(96),o=Object.prototype,i=o.hasOwnProperty,u=o.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var o=u.call(e);return r&&(t?e[s]=n:delete e[s]),o}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=u(n(55)),o=u(n(165)),i=u(n(371));function u(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){(0,r.default)(e);var t=(0,i.default)(),n="/flow/execution/"+e,o=t.getChannel(n);return new Promise((function(t,n){o.subscribe((function(r){var i=r.data,u=i.status,f=i.outputs,l=i.error,d=i.fetchOutputs;l?c(l,n):d?s(e,u,{resolve:t,reject:n}):a(u,f,t),setTimeout((function(){return o.unsubscribe()}),0)}))}))};var s=function(e,t,n){(0,o.default)(e).then((function(e){a(t,e,n.resolve)}),(function(e){c(e,n.reject)}))},a=function(e,t,n){n({status:e,outputs:t})},c=function(e,t){t({error:e})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e){return e&&e.__esModule?e:{default:e}}(n(372));t.default=function(){return r.default.getClient()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=d(n(12)),o=d(n(5)),i=d(n(166)),u=d(n(167)),s=d(n(168)),a=d(n(97)),c=d(n(169)),f=d(n(171)),l=d(n(170));function d(e){return e&&e.__esModule?e:{default:e}}var p={properties:r.default,Logger:o.default,EventManager:i.default,ServerConnection:u.default,ChannelRedirect:s.default,ChannelListener:a.default,Channel:c.default,MessageClient:f.default,getClient:l.default};t.default=p},function(e,t,n){e.exports=function(){var e={isString:function(e){return null!=e&&("string"==typeof e||e instanceof String)},isArray:function(e){return null!=e&&e instanceof Array},inArray:function(e,t){for(var n=0;n<t.length;++n)if(e===t[n])return n;return-1}},t=function(){var t,n,r;this.registered=function(e,r){t=e,n=r},this.unregistered=function(){t=null,n=null},this._notifyTransportTimeout=function(e){var t=n._getTransportListeners("timeout");if(t)for(var r=0;r<t.length;++r){var o=t[r];try{var i=o.call(this,e);if("number"==typeof i&&i>0)return i}catch(e){this._info("Exception during execution of transport listener",o,e)}}return 0},this._debug=function(){n._debug.apply(n,arguments)},this._info=function(){n._info.apply(n,arguments)},this._mixin=function(){return n._mixin.apply(n,arguments)},this.getConfiguration=function(){return n.getConfiguration()},this.getAdvice=function(){return n.getAdvice()},this.setTimeout=function(e,t){return n.setTimeout(e,t)},this.clearTimeout=function(e){n.clearTimeout(e)},this.convertToJSON=function(e){for(var t=this.getConfiguration().maxSendBayeuxMessageSize,n="[",r=0;r<e.length;++r){r>0&&(n+=",");var o=e[r],i=JSON.stringify(o);if(i.length>t)throw"maxSendBayeuxMessageSize "+t+" exceeded";n+=i}return n+"]"},this.convertToMessages=function(t){if(e.isString(t))try{return JSON.parse(t)}catch(e){throw this._debug("Could not convert to JSON the following string",'"'+t+'"'),e}if(e.isArray(t))return t;if(null==t)return[];if(t instanceof Object)return[t];throw"Conversion Error "+t+", typeof "+typeof t},this.accept=function(e,t,n){throw"Abstract"},this.getType=function(){return t},this.getURL=function(){return r},this.setURL=function(e){r=e},this.send=function(e,t){throw"Abstract"},this.reset=function(e){this._debug("Transport",t,"reset",e?"initial":"retry")},this.abort=function(){this._debug("Transport",t,"aborted")},this.toString=function(){return this.getType()}};t.derive=function(e){function t(){}return t.prototype=e,new t};var n=function(){var n=new t,r=t.derive(n),o=0,i=null,u=[],s=[];function a(e,t){if(this.transportSend(e,t)&&(t.expired=!1,!e.sync)){var n=this.getConfiguration().maxNetworkDelay;!0===t.metaConnect&&(n+=this.getAdvice().timeout),this._debug("Transport",this.getType(),"started waiting for message replies of request",t.id,":",n,"ms");var r=this;t.timeout=this.setTimeout((function(){(function e(t,n,r){var o=this._notifyTransportTimeout(t.messages);if(o>0){this._debug("Transport",this.getType(),"extended waiting for message replies of request",n.id,":",o,"ms");var i=this;n.timeout=this.setTimeout((function(){e.call(i,t,n,r+o)}),o)}else{n.expired=!0;var u="Transport "+this.getType()+" expired waiting for message replies of request "+n.id+": "+r+" ms",s={reason:u},a=n.xhr;s.httpCode=this.xhrStatus(a),this.abortXHR(a),this._debug(u),this.complete(n,!1,n.metaConnect),t.onFailure(a,t.messages,s)}}).call(r,e,t,n)}),n)}}function c(e){var t=++o,n={id:t,metaConnect:!1,envelope:e};u.length<this.getConfiguration().maxConnections-1?(u.push(n),a.call(this,e,n)):(this._debug("Transport",this.getType(),"queueing request",t,"envelope",e),s.push([e,n]))}function f(t,n){var r=e.inArray(t,u);if(r>=0&&u.splice(r,1),s.length>0){var o=s.shift(),i=o[0],a=o[1];if(this._debug("Transport dequeued request",a.id),n)this.getConfiguration().autoBatch&&function(e){for(;s.length>0;){var t=s[0],n=t[0],r=t[1];if(n.url!==e.url||n.sync!==e.sync)break;s.shift(),e.messages=e.messages.concat(n.messages),this._debug("Coalesced",n.messages.length,"messages from request",r.id)}}.call(this,i),c.call(this,i),this._debug("Transport completed request",t.id,i);else{var f=this;this.setTimeout((function(){f.complete(a,!1,a.metaConnect);var e={reason:"Previous request failed"},t=a.xhr;e.httpCode=f.xhrStatus(t),i.onFailure(t,i.messages,e)}),0)}}}return r.complete=function(e,t,n){n?function(e){var t=e.id;if(this._debug("Transport",this.getType(),"/meta/connect complete, request",t),null!==i&&i.id!==t)throw"/meta/connect request mismatch, completing request "+t;i=null}.call(this,e):f.call(this,e,t)},r.transportSend=function(e,t){throw"Abstract"},r.transportSuccess=function(e,t,n){t.expired||(this.clearTimeout(t.timeout),this._debug("Transport",this.getType(),"cancelled waiting for message replies"),this.complete(t,!0,t.metaConnect),n&&n.length>0?e.onSuccess(n):e.onFailure(t.xhr,e.messages,{httpCode:204}))},r.transportFailure=function(e,t,n){t.expired||(this.clearTimeout(t.timeout),this._debug("Transport",this.getType(),"cancelled waiting for failed message replies"),this.complete(t,!1,t.metaConnect),e.onFailure(t.xhr,e.messages,n))},r.send=function(e,t){t?function(e){if(null!==i)throw"Concurrent /meta/connect requests not allowed, request id="+i.id+" not yet completed";var t=++o;this._debug("Transport",this.getType(),"/meta/connect send, request",t,"envelope",e);var n={id:t,metaConnect:!0,envelope:e};a.call(this,e,n),i=n}.call(this,e):c.call(this,e)},r.abort=function(){n.abort();for(var e=0;e<u.length;++e){var t=u[e];t&&(this._debug("Aborting request",t),this.abortXHR(t.xhr)||this.transportFailure(t.envelope,t,{reason:"abort"}))}var r=i;r&&(this._debug("Aborting /meta/connect request",r),this.abortXHR(r.xhr)||this.transportFailure(r.envelope,r,{reason:"abort"})),this.reset(!0)},r.reset=function(e){n.reset(e),i=null,u=[],s=[]},r.abortXHR=function(e){if(e)try{var t=e.readyState;return e.abort(),t!==window.XMLHttpRequest.UNSENT}catch(e){this._debug(e)}return!1},r.xhrStatus=function(e){if(e)try{return e.status}catch(e){this._debug(e)}return-1},r},r=function(){var e=new n,r=t.derive(e),o=!0;return r.accept=function(e,t,n){return o||!t},r.newXMLHttpRequest=function(){return new window.XMLHttpRequest},r.xhrSend=function(e){var t=r.newXMLHttpRequest();!function(e){try{e.context=r.context}catch(e){r._debug("Could not copy transport context into XHR",e)}}(t),t.withCredentials=!0,t.open("POST",e.url,!0!==e.sync);var n=e.headers;if(n)for(var o in n)n.hasOwnProperty(o)&&t.setRequestHeader(o,n[o]);return t.setRequestHeader("Content-Type","application/json;charset=UTF-8"),t.onload=function(){200===t.status?e.onSuccess(t.responseText):e.onError(t.statusText)},t.onabort=t.onerror=function(){e.onError(t.statusText)},t.send(e.body),t},r.transportSend=function(e,t){this._debug("Transport",this.getType(),"sending request",t.id,"envelope",e);var n=this;try{var r=!0;return t.xhr=this.xhrSend({transport:this,url:e.url,sync:e.sync,headers:this.getConfiguration().requestHeaders,body:this.convertToJSON(e.messages),onSuccess:function(r){n._debug("Transport",n.getType(),"received response",r);var i=!1;try{var u=n.convertToMessages(r);0===u.length?(o=!1,n.transportFailure(e,t,{httpCode:204})):(i=!0,n.transportSuccess(e,t,u))}catch(r){if(n._debug(r),!i){o=!1;var s={exception:r};s.httpCode=n.xhrStatus(t.xhr),n.transportFailure(e,t,s)}}},onError:function(i,u){n._debug("Transport",n.getType(),"received error",i,u),o=!1;var s={reason:i,exception:u};s.httpCode=n.xhrStatus(t.xhr),r?n.setTimeout((function(){n.transportFailure(e,t,s)}),0):n.transportFailure(e,t,s)}}),r=!1,!0}catch(r){return this._debug("Transport",this.getType(),"exception:",r),o=!1,this.setTimeout((function(){n.transportFailure(e,t,{exception:r})}),0),!1}},r.reset=function(t){e.reset(t),o=!0},r},o=function(){var e=new n,r=t.derive(e),o=0;function i(e,t,n){var r=this;return function(){r.transportFailure(e,t,"error",n)}}return r.accept=function(e,t,n){return!0},r.jsonpSend=function(e){var t=document.getElementsByTagName("head")[0],n=document.createElement("script"),r="_cometd_jsonp_"+o++;window[r]=function(o){t.removeChild(n),delete window[r],e.onSuccess(o)};var i=e.url;i+=i.indexOf("?")<0?"?":"&",i+="jsonp="+r,i+="&message="+encodeURIComponent(e.body),n.src=i,n.async=!0!==e.sync,n.type="application/javascript",n.onerror=function(t){e.onError("jsonp "+t.type)},t.appendChild(n)},r.transportSend=function(e,t){for(var n=this,r=0,o=e.messages.length,u=[];o>0;){var s=JSON.stringify(e.messages.slice(r,r+o)),a=e.url.length+encodeURI(s).length,c=this.getConfiguration().maxURILength;if(a>c){if(1===o){var f="Bayeux message too big ("+a+" bytes, max is "+c+") for transport "+this.getType();return void this.setTimeout(i.call(this,e,t,f),0)}--o}else u.push(o),r+=o,o=e.messages.length-r}var l=e;if(u.length>1){var d=0,p=u[0];this._debug("Transport",this.getType(),"split",e.messages.length,"messages into",u.join(" + ")),(l=this._mixin(!1,{},e)).messages=e.messages.slice(d,p),l.onSuccess=e.onSuccess,l.onFailure=e.onFailure;for(var h=1;h<u.length;++h){var v=this._mixin(!1,{},e);d=p,p+=u[h],v.messages=e.messages.slice(d,p),v.onSuccess=e.onSuccess,v.onFailure=e.onFailure,this.send(v,t.metaConnect)}}this._debug("Transport",this.getType(),"sending request",t.id,"envelope",l);try{var g=!0;return this.jsonpSend({transport:this,url:l.url,sync:l.sync,headers:this.getConfiguration().requestHeaders,body:JSON.stringify(l.messages),onSuccess:function(e){var r=!1;try{var o=n.convertToMessages(e);0===o.length?n.transportFailure(l,t,{httpCode:204}):(r=!0,n.transportSuccess(l,t,o))}catch(e){n._debug(e),r||n.transportFailure(l,t,{exception:e})}},onError:function(e,r){var o={reason:e,exception:r};g?n.setTimeout((function(){n.transportFailure(l,t,o)}),0):n.transportFailure(l,t,o)}}),g=!1,!0}catch(e){return this.setTimeout((function(){n.transportFailure(l,t,{exception:e})}),0),!1}},r},i=function(){var n,r=new t,o=t.derive(r),i=!0,u=!1,s=!0,a=null,c=null,f=!1,l=null;function d(e,t){e&&(this.webSocketClose(e,t.code,t.reason),this.onClose(e,t))}function p(e){return e===c||e===a}function h(e,t,n){for(var r=[],o=0;o<t.messages.length;++o){var i=t.messages[o];i.id&&r.push(i.id)}e.envelopes[r.join(",")]=[t,n],this._debug("Transport",this.getType(),"stored envelope, envelopes",e.envelopes)}function v(t,n){for(var r=!1,o=t.envelopes,i=0;i<n.length;++i){var u=n[i];for(var s in o)if(o.hasOwnProperty(s)){var a=s.split(","),c=e.inArray(u,a);if(c>=0){r=!0,a.splice(c,1);var f=o[s][0],l=o[s][1];delete o[s],a.length>0&&(o[a.join(",")]=[f,l]);break}}}r&&this._debug("Transport",this.getType(),"removed envelope, envelopes",o)}function g(e,t,n){var r=this._notifyTransportTimeout([t]);if(r>0){this._debug("Transport",this.getType(),"extended waiting for message replies:",r,"ms");var o=this;e.timeouts[t.id]=this.setTimeout((function(){g.call(o,e,t,n+r)}),r)}else this._debug("Transport",this.getType(),"expired waiting for message reply",t.id,":",n,"ms"),d.call(this,e,{code:1e3,reason:"Message Timeout"})}function b(e,t,n){var r=this;try{var o=this.convertToJSON(t.messages)}catch(n){this._debug("Transport",this.getType(),"exception:",n);for(var i=[],u=0;u<t.messages.length;++u){var s=t.messages[u];i.push(s.id)}return v.call(this,e,i),void this.setTimeout((function(){r._notifyFailure(t.onFailure,e,t.messages,{exception:n})}),0)}e.webSocket.send(o),this._debug("Transport",this.getType(),"sent",t,"/meta/connect =",n);var a=this.getConfiguration().maxNetworkDelay;n&&(a+=this.getAdvice().timeout,f=!0);for(var c=[],l=0;l<t.messages.length;++l)!function(){var n=t.messages[l];n.id&&(c.push(n.id),e.timeouts[n.id]=r.setTimeout((function(){g.call(r,e,n,a)}),a))}();this._debug("Transport",this.getType(),"started waiting for message replies",a,"ms, messageIds:",c,", timeouts:",e.timeouts)}function m(e,t,r){try{null===e?(e=c||{envelopes:{},timeouts:{}},h.call(this,e,t,r),function(e){if(!c){var t=n.getURL().replace(/^http/,"ws");this._debug("Transport",this.getType(),"connecting to URL",t);try{var r=n.getConfiguration().protocol;e.webSocket=r?new window.WebSocket(t,r):new window.WebSocket(t),c=e}catch(e){throw i=!1,this._debug("Exception while creating WebSocket object",e),e}s=!1!==n.getConfiguration().stickyReconnect;var o=this,f=n.getConfiguration().connectTimeout;f>0&&(e.connectTimer=this.setTimeout((function(){n._debug("Transport",o.getType(),"timed out while connecting to URL",t,":",f,"ms"),d.call(o,e,{code:1e3,reason:"Connect Timeout"})}),f));var l=function(t){t=t||{code:1e3},n._debug("WebSocket onclose",e,t,"connecting",c,"current",a),e.connectTimer&&o.clearTimeout(e.connectTimer),o.onClose(e,t)};e.webSocket.onopen=function(){n._debug("WebSocket onopen",e),e.connectTimer&&o.clearTimeout(e.connectTimer),p(e)?(c=null,a=e,u=!0,o.onOpen(e)):(n._warn("Closing extra WebSocket connection",this,"active connection",a),d.call(o,e,{code:1e3,reason:"Extra Connection"}))},e.webSocket.onclose=l,e.webSocket.onerror=function(){l({code:1e3,reason:"Error"})},e.webSocket.onmessage=function(t){n._debug("WebSocket onmessage",t,e),o.onMessage(e,t)},this._debug("Transport",this.getType(),"configured callbacks on",e)}}.call(this,e)):(h.call(this,e,t,r),b.call(this,e,t,r))}catch(t){var o=this;this.setTimeout((function(){d.call(o,e,{code:1e3,reason:"Exception",exception:t})}),0)}}return o.reset=function(e){r.reset(e),i=!0,e&&(u=!1),s=!0,e&&(a=null),c=null,f=!1},o._notifySuccess=function(e,t){e.call(this,t)},o._notifyFailure=function(e,t,n,r){e.call(this,t,n,r)},o.onOpen=function(e){var t=e.envelopes;for(var n in this._debug("Transport",this.getType(),"opened",e,"pending messages",t),t)if(t.hasOwnProperty(n)){var r=t[n],o=r[0],i=r[1];l=o.onSuccess,b.call(this,e,o,i)}},o.onMessage=function(e,t){this._debug("Transport",this.getType(),"received websocket message",t,e);for(var n=!1,r=this.convertToMessages(t.data),o=[],i=0;i<r.length;++i){var u=r[i];if((/^\/meta\//.test(u.channel)||void 0===u.data)&&u.id){o.push(u.id);var s=e.timeouts[u.id];s&&(this.clearTimeout(s),delete e.timeouts[u.id],this._debug("Transport",this.getType(),"removed timeout for message",u.id,", timeouts",e.timeouts))}"/meta/connect"===u.channel&&(f=!1),"/meta/disconnect"!==u.channel||f||(n=!0)}v.call(this,e,o),this._notifySuccess(l,r),n&&this.webSocketClose(e,1e3,"Disconnect")},o.onClose=function(e,t){this._debug("Transport",this.getType(),"closed",e,t),p(e)&&(i=s&&u,c=null,a=null);var n=e.timeouts;for(var r in e.timeouts={},n)n.hasOwnProperty(r)&&this.clearTimeout(n[r]);var o=e.envelopes;for(var l in e.envelopes={},o)if(o.hasOwnProperty(l)){var d=o[l][0];o[l][1]&&(f=!1);var h={websocketCode:t.code,reason:t.reason};t.exception&&(h.exception=t.exception),this._notifyFailure(d.onFailure,e,d.messages,h)}},o.registered=function(e,t){r.registered(e,t),n=t},o.accept=function(e,t,r){return this._debug("Transport",this.getType(),"accept, supported:",i),i&&!!window.WebSocket&&!1!==n.websocketEnabled},o.send=function(e,t){this._debug("Transport",this.getType(),"sending",e,"/meta/connect =",t),m.call(this,a,e,t)},o.webSocketClose=function(e,t,n){try{e.webSocket&&e.webSocket.close(t,n)}catch(e){this._debug(e)}},o.abort=function(){r.abort(),d.call(this,a,{code:1e3,reason:"Abort"}),this.reset(!0)},o},u=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z",".","-",":","+","=","^","!","/","*","?","&","<",">","(",")","[","]","{","}","@","%","$","#"],s=[0,68,0,84,83,82,72,0,75,76,70,65,0,63,62,69,0,1,2,3,4,5,6,7,8,9,64,0,73,66,74,71,81,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,77,0,78,67,0,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,79,0,80,0,0];return{CometD:function(t){var n,u,s,a,c,f=new function(){var e=0,t={};this.register=function(n){var r=++e;return t[r]=n,r},this.unregister=function(e){var n=t[e];return delete t[e],n},this.setTimeout=function(e,t){return window.setTimeout(e,t)},this.clearTimeout=function(e){window.clearTimeout(e)}},l=this,d=t||"default",p=!1,h=new function(){var e=[],t={};this.getTransportTypes=function(){return e.slice(0)},this.findTransportTypes=function(n,r,o){for(var i=[],u=0;u<e.length;++u){var s=e[u];!0===t[s].accept(n,r,o)&&i.push(s)}return i},this.negotiateTransport=function(n,r,o,i){for(var u=0;u<e.length;++u)for(var s=e[u],a=0;a<n.length;++a)if(s===n[a]){var c=t[s];if(!0===c.accept(r,o,i))return c}return null},this.add=function(n,r,o){for(var i=!1,u=0;u<e.length;++u)if(e[u]===n){i=!0;break}return i||("number"!=typeof o?e.push(n):e.splice(o,0,n),t[n]=r),!i},this.find=function(n){for(var r=0;r<e.length;++r)if(e[r]===n)return t[n];return null},this.remove=function(n){for(var r=0;r<e.length;++r)if(e[r]===n){e.splice(r,1);var o=t[n];return delete t[n],o}return null},this.clear=function(){e=[],t={}},this.reset=function(n){for(var r=0;r<e.length;++r)t[e[r]].reset(n)}},v="disconnected",g=0,b=null,m=0,y=[],_=!1,x=0,w={},S={},T=0,O=null,E=[],C={},j={},A={},N=!1,k=!1,M=0,I=0,L=null,R={useWorkerScheduler:!0,protocol:null,stickyReconnect:!0,connectTimeout:0,maxConnections:2,backoffIncrement:1e3,maxBackoff:6e4,logLevel:"info",maxNetworkDelay:1e4,requestHeaders:{},appendMessageTypeToURL:!0,autoBatch:!1,urls:{},maxURILength:2e3,maxSendBayeuxMessageSize:8192,advice:{timeout:6e4,interval:0,reconnect:void 0,maxInterval:0}};function P(e,t){try{return e[t]}catch(e){return}}function D(t){return e.isString(t)}function F(e){return e>="A"&&e<="Z"||e>="a"&&e<="z"}function U(e){return e>="0"&&e<="9"}function q(e){switch(e){case" ":case"!":case"#":case"$":case"(":case")":case"*":case"+":case"-":case".":case"/":case"@":case"_":case"{":case"~":case"}":return!0;default:return!1}}function B(e){if(!D(e))return!1;if(e.length<2)return!1;if("/"!==e.charAt(0))return!1;for(var t=1;t<e.length;++t){var n=e.charAt(t);if(!(F(n)||U(n)||q(n)))return!1}return!0}function H(e){return null!=e&&"function"==typeof e}function G(e,t){for(var n="";--t>0&&!(e>=Math.pow(10,t));)n+="0";return n+e}function W(e,t){if(window.console){var n=window.console[e];if(H(n)){var r=new Date;[].splice.call(t,0,0,G(r.getHours(),2)+":"+G(r.getMinutes(),2)+":"+G(r.getSeconds(),2)+"."+G(r.getMilliseconds(),3)),n.apply(window.console,t)}}}function z(e){return new RegExp("(^https?://)?(((\\[[^\\]]+])|([^:/?#]+))(:(\\d+))?)?([^?#]*)(.*)?").exec(e)}function V(e){l._debug("Configuring cometd object with",e),D(e)&&(e={url:e}),e||(e={}),R=l._mixin(!1,R,e);var t=l.getURL();if(!t)throw"Missing required configuration parameter 'url' specifying the Bayeux server URL";var n=z(t),r=n[2],o=n[8],i=n[9];if(p=l._isCrossDomain(r),R.appendMessageTypeToURL)if(void 0!==i&&i.length>0)l._info("Appending message type to URI "+o+i+" is not supported, disabling 'appendMessageTypeToURL' configuration"),R.appendMessageTypeToURL=!1;else{var u=o.split("/"),s=u.length-1;o.match(/\/$/)&&(s-=1),u[s].indexOf(".")>=0&&(l._info("Appending message type to URI "+o+" is not supported, disabling 'appendMessageTypeToURL' configuration"),R.appendMessageTypeToURL=!1)}if(window.Worker&&window.Blob&&window.URL&&R.useWorkerScheduler){var a=function(){var e={};self.onmessage=function(t){var n=t.data,r=e[n.id];switch(n.type){case"setTimeout":e[n.id]=self.setTimeout((function(){delete e[n.id],self.postMessage({id:n.id})}),n.delay);break;case"clearTimeout":delete e[n.id],r&&self.clearTimeout(r);break;default:throw"Unknown command "+n.type}}}.toString();a=a.substring(a.indexOf("{")+1,a.lastIndexOf("}"));var c=new window.Blob([a],{type:"application/json"}),d=window.URL.createObjectURL(c),h=new window.Worker(d);f.setTimeout=function(e,t){var n=f.register(e);return h.postMessage({id:n,type:"setTimeout",delay:t}),n},f.clearTimeout=function(e){f.unregister(e),h.postMessage({id:e,type:"clearTimeout"})},h.onmessage=function(e){var t=e.data.id,n=f.unregister(t);n&&n()}}}function $(e){if(e){var t=w[e.channel];t&&t[e.id]&&(delete t[e.id],l._debug("Removed",e.listener?"listener":"subscription",e))}}function X(e){e&&!e.listener&&$(e)}function K(){for(var e in w)if(w.hasOwnProperty(e)){var t=w[e];if(t)for(var n in t)t.hasOwnProperty(n)&&X(t[n])}}function Q(e){v!==e&&(l._debug("Status",v,"->",e),v=e)}function J(){return"disconnecting"===v||"disconnected"===v}function Y(){return""+ ++g}function Z(e,t,n,r,o){try{return t.call(e,r)}catch(e){var i=l.onExtensionException;if(H(i)){l._debug("Invoking extension exception handler",n,e);try{i.call(l,e,n,o,r)}catch(e){l._info("Exception during execution of extension exception handler",n,e)}}else l._info("Exception during execution of extension",n,e);return r}}function ee(e){for(var t=E.length-1;t>=0&&null!=e;--t){var n=E[t],r=n.extension.outgoing;if(H(r)){var o=Z(n.extension,r,n.name,e,!0);e=void 0===o?e:o}}return e}function te(e,t){var n=w[e];if(n)for(var r in n)if(n.hasOwnProperty(r)){var o=n[r];if(o)try{o.callback.call(o.scope,t)}catch(e){var i=l.onListenerException;if(H(i)){l._debug("Invoking listener exception handler",o,e);try{i.call(l,e,o,o.listener,t)}catch(e){l._info("Exception during execution of listener exception handler",o,e)}}else l._info("Exception during execution of listener",o,t,e)}}}function ne(e,t){te(e,t);for(var n=e.split("/"),r=n.length-1,o=r;o>0;--o){var i=n.slice(0,o).join("/")+"/*";o===r&&te(i,t),te(i+="*",t)}}function re(){null!==O&&l.clearTimeout(O),O=null}function oe(e,t){re();var n=C.interval+t;l._debug("Function scheduled in",n,"ms, interval =",C.interval,"backoff =",T,e),O=l.setTimeout(e,n)}function ie(e,t,r){for(var o=0;o<e.length;++o){var i=e[o],u=i.id;b&&(i.clientId=b),void 0!==(i=ee(i))&&null!==i?(i.id=u,e[o]=i):(delete j[u],e.splice(o--,1))}if(0!==e.length){t&&(L=e[0]);var s=l.getURL();R.appendMessageTypeToURL&&(s.match(/\/$/)||(s+="/"),r&&(s+=r));var f={url:s,sync:!1,messages:e,onSuccess:function(e){try{a.call(l,e)}catch(e){l._info("Exception during handling of messages",e)}},onFailure:function(e,t,n){try{var r=l.getTransport();n.connectionType=r?r.getType():"unknown",c.call(l,e,t,n)}catch(e){l._info("Exception during handling of failure",e)}}};l._debug("Send",f),n.send(f,t)}}function ue(e){m>0||!0===_?y.push(e):ie([e],!1)}function se(){T=0}function ae(){var e=y;y=[],e.length>0&&ie(e,!1)}function ce(e){Q("connecting"),oe((function(){!function(){if(!J()){var e={id:Y(),channel:"/meta/connect",connectionType:n.getType()};k||(e.advice={timeout:0}),Q("connecting"),l._debug("Connect sent",e),ie([e],!0,"connect"),Q("connected")}}()}),e)}function fe(e){e&&(C=l._mixin(!1,{},R.advice,e),l._debug("New advice",C))}function le(e){if(re(),e&&n&&n.abort(),p=!1,n=null,Q("disconnected"),b=null,m=0,se(),N=!1,k=!1,M=0,L=null,y.length>0){var t=y;y=[],c.call(l,void 0,t,{reason:"Disconnected"})}}function de(e,t,n){var r=l.onTransportException;if(H(r)){l._debug("Invoking transport exception handler",e,t,n);try{r.call(l,n,e,t)}catch(e){l._info("Exception during execution of transport exception handler",e)}}}function pe(e,t){H(e)&&(t=e,e=void 0),b=null,K(),J()&&h.reset(!0),fe({}),m=0,_=!0,u=e,s=t;var r=l.getURL(),o=h.findTransportTypes("1.0",p,r),i={id:Y(),version:"1.0",minimumVersion:"1.0",channel:"/meta/handshake",supportedConnectionTypes:o,advice:{timeout:C.timeout,interval:C.interval}},a=l._mixin(!1,{},u,i);if(l._putCallback(a.id,t),!n&&!(n=h.negotiateTransport(o,"1.0",p,r))){var c="Could not find initial transport among: "+h.getTransportTypes();throw l._warn(c),c}l._debug("Initial transport is",n.getType()),Q("handshaking"),l._debug("Handshake sent",a),ie([a],!1,"handshake")}function he(e,t){try{e.call(l,t)}catch(e){var n=l.onCallbackException;if(H(n)){l._debug("Invoking callback exception handler",e);try{n.call(l,e,t)}catch(e){l._info("Exception during execution of callback exception handler",e)}}else l._info("Exception during execution of message callback",e)}}function ve(e){var t=l._getCallback([e.id]);H(t)&&(delete j[e.id],he(t,e))}function ge(e){var t=A[e.id];if(delete A[e.id],t){l._debug("Handling remote call response for",e,"with context",t);var n=t.timeout;n&&l.clearTimeout(n);var r=t.callback;if(H(r))return he(r,e),!0}return!1}function be(e){l._debug("Transport failure handling",e),e.transport&&(n=e.transport),e.url&&n.setURL(e.url);var t=e.action,r=e.delay||0;switch(t){case"handshake":!function(e){Q("handshaking"),_=!0,oe((function(){pe(u,s)}),e)}(r);break;case"retry":ce(r);break;case"none":le(!0);break;default:throw"Unknown action "+t}}function me(e,t){ve(e),ne("/meta/handshake",e),ne("/meta/unsuccessful",e),J()&&(t.action="none"),l.onTransportFailure.call(l,e,t,be)}function ye(e){me(e,{cause:"failure",action:"handshake",transport:null})}function _e(e){return"disconnected"===v||!(!L||L.id!==e.id)&&(L=null,!0)}function xe(e,t){ne("/meta/connect",e),ne("/meta/unsuccessful",e),J()&&(t.action="none"),l.onTransportFailure.call(l,e,t,be)}function we(e){_e(e)?(k=!1,xe(e,{cause:"failure",action:"retry",transport:null})):l._debug("Mismatched /meta/connect failure",e)}function Se(e){le(!0),ve(e),ne("/meta/disconnect",e),ne("/meta/unsuccessful",e)}function Te(e){Se(e)}function Oe(e){var t=w[e.subscription];if(t)for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];r&&!r.listener&&(delete t[n],l._debug("Removed failed subscription",r))}ve(e),ne("/meta/subscribe",e),ne("/meta/unsuccessful",e)}function Ee(e){Oe(e)}function Ce(e){ve(e),ne("/meta/unsubscribe",e),ne("/meta/unsuccessful",e)}function je(e){Ce(e)}function Ae(e){ge(e)||(ve(e),ne("/meta/publish",e),ne("/meta/unsuccessful",e))}function Ne(e){Ae(e)}function ke(e){if(M=0,void 0!==(e=function(e){for(var t=0;t<E.length&&null!=e;++t){var n=E[t],r=n.extension.incoming;if(H(r)){var o=Z(n.extension,r,n.name,e,!1);e=void 0===o?e:o}}return e}(e))&&null!==e)switch(fe(e.advice),e.channel){case"/meta/handshake":!function(e){var t=l.getURL();if(e.successful){var r=l._isCrossDomain(z(t)[2]),o=h.negotiateTransport(e.supportedConnectionTypes,e.version,r,t);if(null===o)return e.successful=!1,void me(e,{cause:"negotiation",action:"none",transport:null});n!==o&&(l._debug("Transport",n.getType(),"->",o.getType()),n=o),b=e.clientId,_=!1,ae(),e.reestablish=N,N=!0,ve(e),ne("/meta/handshake",e),I=e["x-messages"]||0;var i=J()?"none":C.reconnect||"retry";switch(i){case"retry":se(),0===I?ce(0):l._debug("Processing",I,"handshake-delivered messages");break;case"none":le(!0);break;default:throw"Unrecognized advice action "+i}}else me(e,{cause:"unsuccessful",action:C.reconnect||"handshake",transport:n})}(e);break;case"/meta/connect":!function(e){if(_e(e))if(k=e.successful){ne("/meta/connect",e);var t=J()?"none":C.reconnect||"retry";switch(t){case"retry":se(),ce(T);break;case"none":le(!1);break;default:throw"Unrecognized advice action "+t}}else xe(e,{cause:"unsuccessful",action:C.reconnect||"retry",transport:n});else l._debug("Mismatched /meta/connect reply",e)}(e);break;case"/meta/disconnect":!function(e){e.successful?(le(!1),ve(e),ne("/meta/disconnect",e)):Se(e)}(e);break;case"/meta/subscribe":!function(e){e.successful?(ve(e),ne("/meta/subscribe",e)):Oe(e)}(e);break;case"/meta/unsubscribe":!function(e){e.successful?(ve(e),ne("/meta/unsubscribe",e)):Ce(e)}(e);break;default:!function(e){void 0!==e.data?ge(e)||(ne(e.channel,e),I>0&&0==--I&&(l._debug("Processed last handshake-delivered message"),ce(0))):void 0===e.successful?l._warn("Unknown Bayeux Message",e):e.successful?(ve(e),ne("/meta/publish",e)):Ae(e)}(e)}}function Me(e){var t=w[e];if(t)for(var n in t)if(t.hasOwnProperty(n)&&t[n])return!0;return!1}function Ie(e,t){var n={scope:e,method:t};if(H(e))n.scope=void 0,n.method=e;else if(D(t)){if(!e)throw"Invalid scope "+e;if(n.method=e[t],!H(n.method))throw"Invalid callback "+t+" for scope "+e}else if(!H(t))throw"Invalid callback "+t;return n}function Le(e,t,n,r){var o=Ie(t,n);l._debug("Adding",r?"listener":"subscription","on",e,"with scope",o.scope,"and callback",o.method);var i=++x,u={id:i,channel:e,scope:o.scope,callback:o.method,listener:r},s=w[e];return s||(s={},w[e]=s),s[i]=u,l._debug("Added",r?"listener":"subscription",u),u}this._mixin=function(e,t,n){for(var r=t||{},o=2;o<arguments.length;++o){var i=arguments[o];if(null!=i)for(var u in i)if(i.hasOwnProperty(u)){var s=P(i,u),a=P(r,u);if(s===t)continue;if(void 0===s)continue;if(e&&"object"==typeof s&&null!==s)if(s instanceof Array)r[u]=this._mixin(e,a instanceof Array?a:[],s);else{var c="object"!=typeof a||a instanceof Array?{}:a;r[u]=this._mixin(e,c,s)}else r[u]=s}}return r},this._warn=function(){W("warn",arguments)},this._info=function(){"warn"!==R.logLevel&&W("info",arguments)},this._debug=function(){"debug"===R.logLevel&&W("debug",arguments)},this._isCrossDomain=function(e){return!!(window.location&&window.location.host&&e)&&e!==window.location.host},this.send=ue,this._getCallback=function(e){return j[e]},this._putCallback=function(e,t){var n=this._getCallback(e);return H(t)&&(j[e]=t),n},this.onTransportFailure=function(e,t,r){this._debug("Transport failure",t,"for",e);var o=this.getTransportRegistry(),i=this.getURL(),u=this._isCrossDomain(z(i)[2]),s=o.findTransportTypes("1.0",u,i);if("none"===t.action){if("/meta/handshake"===e.channel&&!t.transport){var a="Could not negotiate transport, client=["+s+"], server=["+e.supportedConnectionTypes+"]";this._warn(a),de(n.getType(),null,{reason:a,connectionType:n.getType(),transport:n})}}else if(t.delay=this.getBackoffPeriod(),"/meta/handshake"===e.channel){if(!t.transport){var c=n?n.getType():null,f=o.negotiateTransport(s,"1.0",u,i);if(f){var d=f.getType();this._debug("Transport",c,"->",d),de(c,d,e.failure),t.action="handshake",t.transport=f}else this._warn("Could not negotiate transport, client=["+s+"]"),de(c,null,e.failure),t.action="none"}"none"!==t.action&&this.increaseBackoffPeriod()}else{var p=(new Date).getTime();if(0===M&&(M=p),"retry"===t.action){t.delay=this.increaseBackoffPeriod();var h=C.maxInterval;if(h>0){var v=C.timeout+C.interval+h;p-M+T>v&&(t.action="handshake")}}"handshake"===t.action&&(t.delay=0,o.reset(!1),this.resetBackoffPeriod())}r.call(l,t)},this.receive=ke,a=function(e){l._debug("Received",e);for(var t=0;t<e.length;++t){ke(e[t])}},c=function(e,t,n){l._debug("handleFailure",e,t,n),n.transport=e;for(var r=0;r<t.length;++r){var o=t[r],i={id:o.id,successful:!1,channel:o.channel,failure:n};switch(n.message=o,o.channel){case"/meta/handshake":ye(i);break;case"/meta/connect":we(i);break;case"/meta/disconnect":Te(i);break;case"/meta/subscribe":i.subscription=o.subscription,Ee(i);break;case"/meta/unsubscribe":i.subscription=o.subscription,je(i);break;default:Ne(i)}}},this.registerTransport=function(e,t,n){var r=h.add(e,t,n);return r&&(this._debug("Registered transport",e),H(t.registered)&&t.registered(e,this)),r},this.unregisterTransport=function(e){var t=h.remove(e);return null!==t&&(this._debug("Unregistered transport",e),H(t.unregistered)&&t.unregistered()),t},this.unregisterTransports=function(){h.clear()},this.getTransportTypes=function(){return h.getTransportTypes()},this.findTransport=function(e){return h.find(e)},this.getTransportRegistry=function(){return h},this.configure=function(e){V.call(this,e)},this.init=function(e,t){this.configure(e),this.handshake(t)},this.handshake=function(e,t){if("disconnected"!==v)throw"Illegal state: handshaken";pe(e,t)},this.disconnect=function(e,t){if(!J()){H(e)&&(t=e,e=void 0);var n={id:Y(),channel:"/meta/disconnect"},r=this._mixin(!1,{},e,n);l._putCallback(r.id,t),Q("disconnecting"),ie([r],!1,"disconnect")}},this.startBatch=function(){++m,l._debug("Starting batch, depth",m)},this.endBatch=function(){!function(){if(--m,l._debug("Ending batch, depth",m),m<0)throw"Calls to startBatch() and endBatch() are not paired";0!==m||J()||_||ae()}()},this.batch=function(e,t){var n=Ie(e,t);this.startBatch();try{n.method.call(n.scope),this.endBatch()}catch(e){throw this._info("Exception during execution of batch",e),this.endBatch(),e}},this.addTransportListener=function(e,t){if("timeout"!==e)throw"Unsupported event "+e;var n=S[e];n||(S[e]=n=[]),n.push(t)},this.removeTransportListener=function(e,t){var n=S[e];if(n){var r=n.indexOf(t);if(r>=0)return n.splice(r,1),!0}return!1},this._getTransportListeners=function(e){return S[e]},this.addListener=function(e,t,n){if(arguments.length<2)throw"Illegal arguments number: required 2, got "+arguments.length;if(!D(e))throw"Illegal argument type: channel must be a string";return Le(e,t,n,!0)},this.removeListener=function(e){if(!(e&&e.channel&&"id"in e))throw"Invalid argument: expected subscription, not "+e;$(e)},this.clearListeners=function(){w={}},this.subscribe=function(e,t,n,r,o){if(arguments.length<2)throw"Illegal arguments number: required 2, got "+arguments.length;if(!B(e))throw"Illegal argument: invalid channel "+e;if(J())throw"Illegal state: disconnected";H(t)&&(o=r,r=n,n=t,t=void 0),H(r)&&(o=r,r=void 0);var i=!Me(e),u=Le(e,t,n,!1);if(i){var s={id:Y(),channel:"/meta/subscribe",subscription:e},a=this._mixin(!1,{},r,s);l._putCallback(a.id,o),ue(a)}else H(o)&&l.setTimeout((function(){he(o,{id:Y(),successful:!0,channel:"/meta/subscribe",subscription:e})}),0);return u},this.unsubscribe=function(e,t,n){if(arguments.length<1)throw"Illegal arguments number: required 1, got "+arguments.length;if(J())throw"Illegal state: disconnected";H(t)&&(n=t,t=void 0),this.removeListener(e);var r=e.channel;if(Me(r))H(n)&&l.setTimeout((function(){he(n,{id:Y(),successful:!0,channel:"/meta/unsubscribe",subscription:r})}),0);else{var o={id:Y(),channel:"/meta/unsubscribe",subscription:r},i=this._mixin(!1,{},t,o);l._putCallback(i.id,n),ue(i)}},this.resubscribe=function(e,t){if(X(e),e)return this.subscribe(e.channel,e.scope,e.callback,t)},this.clearSubscriptions=function(){K()},this.publish=function(e,t,n,r){if(arguments.length<1)throw"Illegal arguments number: required 1, got "+arguments.length;if(!B(e))throw"Illegal argument: invalid channel "+e;if(/^\/meta\//.test(e))throw"Illegal argument: cannot publish to meta channels";if(J())throw"Illegal state: disconnected";H(t)?(r=t,t={},n=void 0):H(n)&&(r=n,n=void 0);var o={id:Y(),channel:e,data:t},i=this._mixin(!1,{},n,o);l._putCallback(i.id,r),ue(i)},this.publishBinary=function(e,t,n,r,o,i){H(t)?(i=t,t=new ArrayBuffer(0),n=!0,r=void 0,o=void 0):H(n)?(i=n,n=!0,r=void 0,o=void 0):H(r)?(i=r,r=void 0,o=void 0):H(o)&&(i=o,o=void 0);var u={meta:r,data:t,last:n},s=this._mixin(!1,o,{ext:{binary:{}}});this.publish(e,u,s,i)},this.remoteCall=function(e,t,n,r,o){if(arguments.length<1)throw"Illegal arguments number: required 1, got "+arguments.length;if(!D(e))throw"Illegal argument type: target must be a string";if(J())throw"Illegal state: disconnected";if(H(t)?(o=t,t={},n=R.maxNetworkDelay,r=void 0):H(n)?(o=n,n=R.maxNetworkDelay,r=void 0):H(r)&&(o=r,r=void 0),"number"!=typeof n)throw"Illegal argument type: timeout must be a number";e.match(/^\//)||(e="/"+e);var i="/service"+e;if(!B(i))throw"Illegal argument: invalid target "+e;var u={id:Y(),channel:i,data:t},s=this._mixin(!1,{},r,u),a={callback:o};n>0&&(a.timeout=l.setTimeout((function(){l._debug("Timing out remote call",s,"after",n,"ms"),Ae({id:s.id,error:"406::timeout",successful:!1,failure:{message:s,reason:"Remote Call Timeout"}})}),n),l._debug("Scheduled remote call timeout",s,"in",n,"ms")),A[s.id]=a,ue(s)},this.remoteCallBinary=function(e,t,n,r,o,i,u){H(t)?(u=t,t=new ArrayBuffer(0),n=!0,r=void 0,o=R.maxNetworkDelay,i=void 0):H(n)?(u=n,n=!0,r=void 0,o=R.maxNetworkDelay,i=void 0):H(r)?(u=r,r=void 0,o=R.maxNetworkDelay,i=void 0):H(o)?(u=o,o=R.maxNetworkDelay,i=void 0):H(i)&&(u=i,i=void 0);var s={meta:r,data:t,last:n},a=this._mixin(!1,i,{ext:{binary:{}}});this.remoteCall(e,s,o,a,u)},this.getStatus=function(){return v},this.isDisconnected=J,this.setBackoffIncrement=function(e){R.backoffIncrement=e},this.getBackoffIncrement=function(){return R.backoffIncrement},this.getBackoffPeriod=function(){return T},this.increaseBackoffPeriod=function(){return T<R.maxBackoff&&(T+=R.backoffIncrement),T},this.resetBackoffPeriod=function(){se()},this.setLogLevel=function(e){R.logLevel=e},this.registerExtension=function(e,t){if(arguments.length<2)throw"Illegal arguments number: required 2, got "+arguments.length;if(!D(e))throw"Illegal argument type: extension name must be a string";for(var n=!1,r=0;r<E.length;++r){var o=E[r];if(o.name===e){n=!0;break}}return n?(this._info("Could not register extension with name",e,"since another extension with the same name already exists"),!1):(E.push({name:e,extension:t}),this._debug("Registered extension",e),H(t.registered)&&t.registered(e,this),!0)},this.unregisterExtension=function(e){if(!D(e))throw"Illegal argument type: extension name must be a string";for(var t=!1,n=0;n<E.length;++n){var r=E[n];if(r.name===e){E.splice(n,1),t=!0,this._debug("Unregistered extension",e);var o=r.extension;H(o.unregistered)&&o.unregistered();break}}return t},this.getExtension=function(e){for(var t=0;t<E.length;++t){var n=E[t];if(n.name===e)return n.extension}return null},this.getName=function(){return d},this.getClientId=function(){return b},this.getURL=function(){if(n){var e=n.getURL();if(e)return e;if(e=R.urls[n.getType()])return e}return R.url},this.getTransport=function(){return n},this.getConfiguration=function(){return this._mixin(!0,{},R)},this.getAdvice=function(){return this._mixin(!0,{},C)},this.setTimeout=function(e,t){return f.setTimeout((function(){try{l._debug("Invoking timed function",e),e()}catch(t){l._debug("Exception invoking timed function",e,t)}}),t)},this.clearTimeout=function(e){f.clearTimeout(e)},window.WebSocket&&this.registerTransport("websocket",new i),this.registerTransport("long-polling",new r),this.registerTransport("callback-polling",new o)},Transport:t,RequestTransport:n,LongPollingTransport:r,CallbackPollingTransport:o,WebSocketTransport:i,Utils:e,Z85:{encode:function(e){var t=null;if(e instanceof ArrayBuffer?t=e:e.buffer instanceof ArrayBuffer?t=e.buffer:Array.isArray(e)&&(t=new Uint8Array(e).buffer),null==t)throw"Cannot Z85 encode "+e;for(var n=t.byteLength,r=n%4,o=4-(0===r?4:r),i=new DataView(t),s="",a=0,c=0;c<n+o;++c){var f=c>=n;if(a=256*a+(f?0:i.getUint8(c)),(c+1)%4==0){for(var l=52200625,d=5;d>0;--d){if(!f||d>o){var p=Math.floor(a/l)%85;s+=u[p]}l/=85}a=0}}return s},decode:function(e){for(var t=e.length%5,n=5-(0===t?5:t),r=0;r<n;++r)e+=u[u.length-1];for(var o=e.length,i=new ArrayBuffer(4*o/5-n),a=new DataView(i),c=0,f=0,l=0,d=0;d<o;++d){var p=e.charCodeAt(f++)-32;if(c=85*c+s[p],f%5==0){for(var h=16777216;h>=1;)l<a.byteLength&&a.setUint8(l++,Math.floor(c/h)%256),h/=256;c=0}}return i}}}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(5));t.default=function(){var e=new r.default("amb.GraphQLSubscriptionExtension"),t={};this.isGraphQLChannel=function(e){return e&&e.startsWith("/rw/graphql")},this.addGraphQLChannel=function(e,n){t[e]=n},this.removeGraphQLChannel=function(e){delete t[e]},this.getGraphQLSubscriptions=function(){return t},this.outgoing=function(n){return"/meta/subscribe"===n.channel&&this.isGraphQLChannel(n.subscription)&&(n.ext||(n.ext={}),t[n.subscription]&&(e.debug("Subscribing with GraphQL subscription:"+t[n.subscription]),n.ext.serializedGraphQLSubscription=t[n.subscription])),n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(5));t.default=function(){var e=new r.default("amb.SessionExtension"),t=!1;this.extendSession=function(){t=!0},this.outgoing=function(n){return"/meta/connect"===n.channel&&t&&(n.ext||(n.ext={}),e.debug("extendSession"),n.ext.extendSession=!0,t=!1),n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=i(n(5)),o=i(n(12));function i(e){return e&&e.__esModule?e:{default:e}}t.default=function(){var e=new r.default("amb.TokenManagementExtension"),t=o.default.subscribeCommandsFlow.maxInflight,n=[];function i(e){return"/meta/subscribe"==e.channel||"/meta/unsubscribe"==e.channel}function u(){e.debug("notifyOnAvailabilityOfToken - current tokenCount: "+t);try{n.forEach((function(e){e()}))}catch(t){e.addErrorMessage("notifyOnAvailabilityOfToken - failed to call tokenEventListeners. Error Details : "+t)}}this.updateTokenCount=function(e){t=e},this.refillTokens=function(){t=o.default.subscribeCommandsFlow.maxInflight,u(),e.debug("refillTokens -- tokenCount : "+t)},this.outgoing=function(e){return function(e){return"/meta/handshake"===e.channel}(e)&&(e.ext||(e.ext={}),e.ext.supportsSubscribeCommandFlow=!0),o.default.subscribeCommandsFlow.enable?(i(e)&&t>0&&t--,e):e},this.incoming=function(e){return o.default.subscribeCommandsFlow.enable?(i(e)?(t<o.default.subscribeCommandsFlow.maxInflight&&t++,u()):function(e){if(!e.ext)return!1;var t=e.ext.received_by_glide;return!!t&&t&&i(t)}(e)&&(e=null),e):e},this.getTokenCount=function(){return t},this.addTokenAvailabilityListener=function(t){t&&(e.debug("addTokenAvailabilityListener - tokenEventListener : "+t),n.push(t))},this.removeTokenAvailabilityListener=function(t){if(t){e.debug("removeTokenAvailabilityListener - tokenEventListener : "+t);var r=n.findIndex((function(e){return t===e}));-1!==r&&(e.debug("removeTokenAvailabilityListener - removing listener at index : "+r),n.splice(r,1))}}}},function(e,t,n){e.exports=function(e){return function(){var t=e,n=t.lib.WordArray;t.enc.Base64={stringify:function(e){var t=e.words,n=e.sigBytes,r=this._map;e.clamp();for(var o=[],i=0;i<n;i+=3)for(var u=(t[i>>>2]>>>24-i%4*8&255)<<16|(t[i+1>>>2]>>>24-(i+1)%4*8&255)<<8|t[i+2>>>2]>>>24-(i+2)%4*8&255,s=0;s<4&&i+.75*s<n;s++)o.push(r.charAt(u>>>6*(3-s)&63));var a=r.charAt(64);if(a)for(;o.length%4;)o.push(a);return o.join("")},parse:function(e){var t=e.length,r=this._map,o=this._reverseMap;if(!o){o=this._reverseMap=[];for(var i=0;i<r.length;i++)o[r.charCodeAt(i)]=i}var u=r.charAt(64);if(u){var s=e.indexOf(u);-1!==s&&(t=s)}return function(e,t,r){for(var o=[],i=0,u=0;u<t;u++)if(u%4){var s=r[e.charCodeAt(u-1)]<<u%4*2,a=r[e.charCodeAt(u)]>>>6-u%4*2;o[i>>>2]|=(s|a)<<24-i%4*8,i++}return n.create(o,i)}(e,t,o)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),e.enc.Base64}(n(172))},function(e,t,n){e.exports=function(e){return e.enc.Utf8}(n(172))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(5)),o=n(99);function i(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return s=e.done,e},e:function(e){a=!0,i=e},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw i}}}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}t.default=function(){var e,t,n=new r.default("amb.MessagesRedeliveryManager"),u=[],s=[],a=function(e){return e.ext.redelivery_message},c=function(e){return!0!==e.ext.redelivery_message.redelivery_not_authorized},f=function(e,t){return e.find((function(e){return function(e,t){return e.ext[o.MSG_SHARD]===t.ext[o.MSG_SHARD]&&e.ext[o.MSG_NUM]===t.ext[o.MSG_NUM]}(e,t)}))},l=function(e){return o.MSG_NUM+":"+e.ext[o.MSG_NUM]+","+o.MSG_SHARD+":"+e.ext[o.MSG_SHARD]};function d(){n.debug("Clearing all messages"),u=[],s=[]}return{resetState:function(){d(),e=!0,t=!1},containsMetaInfo:function(e){return e.ext&&e.ext[o.MSG_NUM]&&e.ext[o.MSG_SHARD]},shouldDeliver:function(r){return e?function(e){return e.ext.redelivery_notification&&!1===e.ext.redelivery_notification.can_redeliver}(r)?(n.debug("No messages to redeliver"),e=!1,!1):!!this.containsMetaInfo(r)&&(a(r)&&c(r)?(n.debug("Processing redelivered - "+l(r)),u.push(r)):a(r)&&!c(r)?n.debug("Not Processing unauthorized redelivery message - "+l(r)):(s.push(r),n.debug("Processing original - "+l(r))),function(e){return a(e)&&!0===e.ext.redelivery_message.is_last_redelivery}(r)&&(n.debug("Redelivery over"),e=!1,t=!0),!1):f(u,r)?(n.debug("Dropping duplicate: "+l(r)),!1):(n.debug("Out of redelivery. New message received: "+l(r)),d(),!0)},shouldDeliverPendingMessages:function(){return t},getAllPendingMessages:function(){var e=[];if(u.length>0||s.length>0){var r=function(e,t){return t.filter((function(t){return!f(e,t)}))}(u,s);e=u.concat(r)}return n.debug("Flushing: "+function(e){var t,n="",r=i(e);try{for(r.s();!(t=r.n()).done;){var o=t.value;n=n.concat("<"+l(o)+">")}}catch(e){r.e(e)}finally{r.f()}return n}(e)),u=e,s=[],t=!1,e},getMissedMessagesSize:function(){return u.length},getOriginalMessagesSize:function(){return s.length}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(5));function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=function(e,t,n){return Object.defineProperty(e,"prototype",{writable:!1}),e}((function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"emit",(function(e,t){window.localStorage.setItem(e,JSON.stringify(t)),window.localStorage.removeItem(e)})),o(this,"on",(function(e,n){if(t.registeredListeners.has(e)){var r=t.registeredListeners.get(e);window.removeEventListener("storage",r),t.LOGGER.debug("Removed storage event listener "+e)}var o=function(t){var r=t.key,o=t.newValue;r===e&&o&&n(JSON.parse(o))};window.addEventListener("storage",o),t.LOGGER.debug("Registered storage event listener "+e),t.registeredListeners.set(e,o)})),this.registeredListeners=new Map,this.LOGGER=new r.default("amb.CrossClientChannel")}));t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:134217727,t=[],n=Math.max(1,Math.floor(e));return{enqueue:function(e){return this.getAvailableSpace()>0&&(t.push(e),!0)},enqueueMultiple:function(e){return this.getAvailableSpace()>=e.length&&(t=t.concat(e),!0)},dequeue:function(){var e;return t.length>0&&(e=t.shift()),e},dequeueMultiple:function(e){var n;return e>=0&&t.length>=e&&(n=[],e>0&&(n=t.slice(0,e),t=t.slice(e))),n},clear:function(){t=[]},getSize:function(){return t.length},getCapacity:function(){return n},getAvailableSpace:function(){return n-t.length},getQueueBuffer:function(){return t}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=u(n(12)),o=n(98),i=u(n(5));function u(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){var n="subscribe",u="unsubscribe",s=3e5,a=new i.default("amb.SubscriptionCommandSender");t.addTokenAvailabilityListener((function(){_()}));var c=!r.default.subscribeCommandsFlow.enable,f=null;function l(e,t,n){return Math.min(n,Math.max(t,e))}function d(){return t.getTokenCount()>=r.default.subscribeCommandsFlow.maxInflight}function p(){(0,o.isNil)(f)||(a.debug("stopTimer"),clearTimeout(f),f=null)}function h(){var e=parseInt(r.default.subscribeCommandsFlow.retryDelay.min);return l(e,0,s)}function v(e,t,i,s){var c;a.debug("scheduleRetry - channel : "+e.getName()+", triesLeft : "+t+", mode : "+i);var f=function(e){return l(r.default.subscribeCommandsFlow.retryDelay.increaseFactor*e,r.default.subscribeCommandsFlow.retryDelay.min,r.default.subscribeCommandsFlow.retryDelay.max)}(s);switch(i){case n:c=function(){return m(e,t,f)};break;case u:c=function(){return y(e,t,f)}}(0,o.isNil)(c)||setTimeout(c,s)}function g(e,n,r,o,i){a.debug("onResponse - response ".concat(JSON.stringify(e),", channel ").concat(JSON.stringify(n),", mode : ").concat(r,", \n\t\t\ttriesLeft ").concat(o,", stopping : ").concat(c,", tokenCount : ").concat(t.getTokenCount(),", isBucketFull - ").concat(d(),", retryDelay - ").concat(i)),c?n.subscriptionCallback(e):(o-=1,d()&&p(),o>0&&function(e){if(a.debug("isRetriable - response : "+e),e&&e.ext){var t=e.ext.rejected_by_glide;if(t){var n=parseInt(e.ext["glide.amb.reply.status.code"]);if(a.addWarnMessage("isRetriable - rejected_by_glide : "+t+", glide.amb.reply.status.code : "+n),!isNaN(n))return 429==n||202==n}}return a.debug("isRetriable -  "+!1),!1}(e)?v(n,o,r,i):n.subscriptionCallback(e),_())}function b(t){return a.debug("addItemToQueue - item : "+t),!!e.enqueue(t)&&(_(),!0)}function m(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h();return a.debug("enqueueSubscribe - channel: "+e.getName()+", triesLeft : "+t+", stopping : "+c+", retryDelay : "+i),!!(!c&&(0,o.isObject)(e)&&((0,o.isNil)(t)&&(t=1+Math.floor(r.default.subscribeCommandsFlow.retries)),t>0))&&b((function(){a.debug("enqueueSubscribe - inside the item execution. Calling channel._subscribeToCometD - channel: "+e.getName()+", triesLeft : "+t),e._subscribeToCometD((function(r){return g(r,e,n,t,i)}))}))}function y(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h();return a.debug("enqueueUnsubscribe - channel: "+e.getName()+", triesLeft : "+t+", stopping : "+c+", retryDelay : "+n),!!(!c&&(0,o.isObject)(e)&&((0,o.isNil)(t)&&(t=1+Math.floor(r.default.subscribeCommandsFlow.retries)),t>0))&&b((function(){e._unsubscribeFromCometD((function(r){return g(r,e,u,t,n)}))}))}function _(){var n=Math.min(e.getSize(),l(t.getTokenCount(),0,r.default.subscribeCommandsFlow.maxInflight));a.debug("processQueue - numberToProcess : "+n),n>0&&(e.dequeueMultiple(n).forEach((function(e){return(0,o.isNil)(e)||e()})),function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(e||(0,o.isNil)(f)){var n=l(r.default.subscribeCommandsFlow.maxWait,0,s);a.debug("restartTimer - force: "+e+", timerObject : "+f+", timeInterval : "+n),p(),f=setTimeout((function(){f=null,a.debug("onTimer - stopping : "+c),c||(t.refillTokens(),_())}),n)}}(!1))}return{subscribeToChannel:function(e){return a.debug("subscribeToChannel - to : "+e.getName()),m(e)},unsubscribeToChannel:function(e){return a.debug("unsubscribeToChannel - from : "+e.getName()),y(e)},stop:function(){a.debug("stop"),a.debug("signalStop - stopping : "+c),c||(c=!0,p(),e.clear())},isStopping:function(){return c},getQueue:function(){return e},isBucketEmpty:function(){return!d()},getTimerObject:function(){return f},getTokenCountFromTokenManager:function(){return t.getTokenCount()}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=i(n(5)),o=i(n(12));function i(e){return e&&e.__esModule?e:{default:e}}function u(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,a=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return u=e.done,e},e:function(e){a=!0,i=e},f:function(){try{u||null==n.return||n.return()}finally{if(a)throw i}}}}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}t.default=function(e){var t={},n=new r.default("amb.TransportManagement");return t.isPruningEnabled=function(){return"false"!==o.default.pruneFailedTransports},t.processConnectionOpened=function(){this.isPruningEnabled()&&(n.debug("Processing connection opened"),this.removeSkippedTransportsInConnect())},t.removeSkippedTransportsInConnect=function(){var t=null===e.getTransport()?null:e.getTransport().getType();if(n.addInfoMessage("Connected using transport "+t),n.debug("Purging failed transports from registry..."),null!==t){var r,o=[],i=u(e.getTransportTypes());try{for(i.s();!(r=i.n()).done;){var s=r.value;if(s==t)break;e.unregisterTransport(s),o.push(s)}}catch(e){i.e(e)}finally{i.f()}n.addInfoMessage("Removed failed registry transports after connect: {"+o+"}")}},t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,o.default)(!(0,i.default)(e)&&(0,u.default)(e),"Expected startConfig to be an object"),(0,o.default)((0,c.default)(e,"type")&&(0,s.default)(e.type)&&(0,f.default)(d,e.type),"Expected type to be one of: "+d.join(", ")),(0,o.default)((0,c.default)(e,"name")&&(0,s.default)(e.name),"Expected name string argument"),(0,o.default)((0,u.default)(e.inputs)||(0,i.default)(e.inputs),"Expected inputs to be object or undefined"),!0};var r=n(37),o=l(n(21)),i=l(n(385)),u=l(n(386)),s=l(n(95)),a=l(n(174)),c=l(n(402)),f=l(n(439));function l(e){return e&&e.__esModule?e:{default:e}}var d=(0,a.default)(r.FLOW_TYPES)},function(e,t){e.exports=function(e){return void 0===e}},function(e,t,n){var r=n(27),o=n(387),i=n(29),u=Function.prototype,s=Object.prototype,a=u.toString,c=s.hasOwnProperty,f=a.call(Object);e.exports=function(e){if(!i(e)||"[object Object]"!=r(e))return!1;var t=o(e);if(null===t)return!0;var n=c.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&a.call(n)==f}},function(e,t,n){var r=n(173)(Object.getPrototypeOf,Object);e.exports=r},function(e,t,n){var r=n(175);e.exports=function(e,t){return r(t,(function(t){return e[t]}))}},function(e,t,n){var r=n(390),o=n(399),i=n(178);e.exports=function(e){return i(e)?r(e):o(e)}},function(e,t,n){var r=n(391),o=n(176),i=n(28),u=n(393),s=n(177),a=n(395),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=i(e),f=!n&&o(e),l=!n&&!f&&u(e),d=!n&&!f&&!l&&a(e),p=n||f||l||d,h=p?r(e.length,String):[],v=h.length;for(var g in e)!t&&!c.call(e,g)||p&&("length"==g||l&&("offset"==g||"parent"==g)||d&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,v))||h.push(g);return h}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t,n){var r=n(27),o=n(29);e.exports=function(e){return o(e)&&"[object Arguments]"==r(e)}},function(e,t,n){(function(e){var r=n(56),o=n(394),i=t&&!t.nodeType&&t,u=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=u&&u.exports===i?r.Buffer:void 0,a=(s?s.isBuffer:void 0)||o;e.exports=a}).call(this,n(39)(e))},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(396),o=n(397),i=n(398),u=i&&i.isTypedArray,s=u?o(u):r;e.exports=s},function(e,t,n){var r=n(27),o=n(100),i=n(29),u={};u["[object Float32Array]"]=u["[object Float64Array]"]=u["[object Int8Array]"]=u["[object Int16Array]"]=u["[object Int32Array]"]=u["[object Uint8Array]"]=u["[object Uint8ClampedArray]"]=u["[object Uint16Array]"]=u["[object Uint32Array]"]=!0,u["[object Arguments]"]=u["[object Array]"]=u["[object ArrayBuffer]"]=u["[object Boolean]"]=u["[object DataView]"]=u["[object Date]"]=u["[object Error]"]=u["[object Function]"]=u["[object Map]"]=u["[object Number]"]=u["[object Object]"]=u["[object RegExp]"]=u["[object Set]"]=u["[object String]"]=u["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&o(e.length)&&!!u[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(164),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,u=i&&i.exports===o&&r.process,s=function(){try{return u&&u.binding&&u.binding("util")}catch(e){}}();e.exports=s}).call(this,n(39)(e))},function(e,t,n){var r=n(400),o=n(401),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return o(e);var t=[];for(var n in Object(e))i.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(173)(Object.keys,Object);e.exports=r},function(e,t,n){var r=n(403),o=n(404);e.exports=function(e,t){return null!=e&&o(e,t,r)}},function(e,t){var n=Object.prototype.hasOwnProperty;e.exports=function(e,t){return null!=e&&n.call(e,t)}},function(e,t,n){var r=n(405),o=n(176),i=n(28),u=n(177),s=n(100),a=n(438);e.exports=function(e,t,n){for(var c=-1,f=(t=r(t,e)).length,l=!1;++c<f;){var d=a(t[c]);if(!(l=null!=e&&n(e,d)))break;e=e[d]}return l||++c!=f?l:!!(f=null==e?0:e.length)&&s(f)&&u(d,f)&&(i(e)||o(e))}},function(e,t,n){var r=n(28),o=n(406),i=n(407),u=n(436);e.exports=function(e,t){return r(e)?e:o(e,t)?[e]:i(u(e))}},function(e,t,n){var r=n(28),o=n(57),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,u=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||u.test(e)||!i.test(e)||null!=t&&e in Object(t)}},function(e,t,n){var r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=n(408)((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(r,(function(e,n,r,i){t.push(r?i.replace(o,"$1"):n||e)})),t}));e.exports=i},function(e,t,n){var r=n(409);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(410);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,o=t?t.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var u=e.apply(this,r);return n.cache=i.set(o,u)||i,u};return n.cache=new(o.Cache||r),n}o.Cache=r,e.exports=o},function(e,t,n){var r=n(411),o=n(431),i=n(433),u=n(434),s=n(435);function a(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}a.prototype.clear=r,a.prototype.delete=o,a.prototype.get=i,a.prototype.has=u,a.prototype.set=s,e.exports=a},function(e,t,n){var r=n(412),o=n(423),i=n(430);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(e,t,n){var r=n(413),o=n(419),i=n(420),u=n(421),s=n(422);function a(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}a.prototype.clear=r,a.prototype.delete=o,a.prototype.get=i,a.prototype.has=u,a.prototype.set=s,e.exports=a},function(e,t,n){var r=n(58);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t,n){var r=n(179),o=n(415),i=n(101),u=n(417),s=/^\[object .+?Constructor\]$/,a=Function.prototype,c=Object.prototype,f=a.toString,l=c.hasOwnProperty,d=RegExp("^"+f.call(l).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||o(e))&&(r(e)?d:s).test(u(e))}},function(e,t,n){var r=n(416),o=function(){var e=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();e.exports=function(e){return!!o&&o in e}},function(e,t,n){var r=n(56)["__core-js_shared__"];e.exports=r},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(58),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(58),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:o.call(t,e)}},function(e,t,n){var r=n(58);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(424),o=n(425),i=n(427),u=n(428),s=n(429);function a(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}a.prototype.clear=r,a.prototype.delete=o,a.prototype.get=i,a.prototype.has=u,a.prototype.set=s,e.exports=a},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(59),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0||(n==t.length-1?t.pop():o.call(t,n,1),--this.size,0))}},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(59);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(59);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(59);e.exports=function(e,t){var n=this.__data__,o=r(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},function(e,t,n){var r=n(180)(n(56),"Map");e.exports=r},function(e,t,n){var r=n(60);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(60);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(60);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(60);e.exports=function(e,t){var n=r(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},function(e,t,n){var r=n(437);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(96),o=n(175),i=n(28),u=n(57),s=r?r.prototype:void 0,a=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(i(t))return o(t,e)+"";if(u(t))return a?a.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t,n){var r=n(57);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){var r=n(440),o=n(178),i=n(95),u=n(444),s=n(174),a=Math.max;e.exports=function(e,t,n,c){e=o(e)?e:s(e),n=n&&!c?u(n):0;var f=e.length;return n<0&&(n=a(f+n,0)),i(e)?n<=f&&e.indexOf(t,n)>-1:!!f&&r(e,t,n)>-1}},function(e,t,n){var r=n(441),o=n(442),i=n(443);e.exports=function(e,t,n){return t==t?i(e,t,n):r(e,o,n)}},function(e,t){e.exports=function(e,t,n,r){for(var o=e.length,i=n+(r?1:-1);r?i--:++i<o;)if(t(e[i],i,e))return i;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,o=e.length;++r<o;)if(e[r]===t)return r;return-1}},function(e,t,n){var r=n(445);e.exports=function(e){var t=r(e),n=t%1;return t==t?n?t-n:t:0}},function(e,t,n){var r=n(446);e.exports=function(e){return e?(e=r(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}},function(e,t,n){var r=n(101),o=n(57),i=/^\s+|\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,a=/^0o[0-7]+$/i,c=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(o(e))return NaN;if(r(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=r(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(i,"");var n=s.test(e);return n||a.test(e)?c(e.slice(2),n?2:8):u.test(e)?NaN:+e}},function(e,t,n){"use strict";n.r(t),n.d(t,"snHttpFactory",(function(){return Ae}));var r=n(63),o=n.n(r),i=Uint8Array,u=Uint16Array,s=Uint32Array,a=new i([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),c=new i([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),f=new i([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),l=function(e,t){for(var n=new u(31),r=0;r<31;++r)n[r]=t+=1<<e[r-1];var o=new s(n[30]);for(r=1;r<30;++r)for(var i=n[r];i<n[r+1];++i)o[i]=i-n[r]<<5|r;return[n,o]},d=l(a,2),p=d[0],h=d[1];p[28]=258,h[258]=28;for(var v=l(c,0),g=(v[0],v[1]),b=new u(32768),m=0;m<32768;++m){var y=(43690&m)>>>1|(21845&m)<<1;y=(61680&(y=(52428&y)>>>2|(13107&y)<<2))>>>4|(3855&y)<<4,b[m]=((65280&y)>>>8|(255&y)<<8)>>>1}var _=function(e,t,n){for(var r=e.length,o=0,i=new u(t);o<r;++o)++i[e[o]-1];var s,a=new u(t);for(o=0;o<t;++o)a[o]=a[o-1]+i[o-1]<<1;if(n){s=new u(1<<t);var c=15-t;for(o=0;o<r;++o)if(e[o])for(var f=o<<4|e[o],l=t-e[o],d=a[e[o]-1]++<<l,p=d|(1<<l)-1;d<=p;++d)s[b[d]>>>c]=f}else for(s=new u(r),o=0;o<r;++o)e[o]&&(s[o]=b[a[e[o]-1]++]>>>15-e[o]);return s},x=new i(288);for(m=0;m<144;++m)x[m]=8;for(m=144;m<256;++m)x[m]=9;for(m=256;m<280;++m)x[m]=7;for(m=280;m<288;++m)x[m]=8;var w=new i(32);for(m=0;m<32;++m)w[m]=5;var S=_(x,9,0),T=_(w,5,0),O=function(e){return(e+7)/8|0},E=function(e,t,n){n<<=7&t;var r=t/8|0;e[r]|=n,e[r+1]|=n>>>8},C=function(e,t,n){n<<=7&t;var r=t/8|0;e[r]|=n,e[r+1]|=n>>>8,e[r+2]|=n>>>16},j=function(e,t){for(var n=[],r=0;r<e.length;++r)e[r]&&n.push({s:r,f:e[r]});var o=n.length,s=n.slice();if(!o)return[R,0];if(1==o){var a=new i(n[0].s+1);return a[n[0].s]=1,[a,1]}n.sort((function(e,t){return e.f-t.f})),n.push({s:-1,f:25001});var c=n[0],f=n[1],l=0,d=1,p=2;for(n[0]={s:-1,f:c.f+f.f,l:c,r:f};d!=o-1;)c=n[n[l].f<n[p].f?l++:p++],f=n[l!=d&&n[l].f<n[p].f?l++:p++],n[d++]={s:-1,f:c.f+f.f,l:c,r:f};var h=s[0].s;for(r=1;r<o;++r)s[r].s>h&&(h=s[r].s);var v=new u(h+1),g=A(n[d-1],v,0);if(g>t){r=0;var b=0,m=g-t,y=1<<m;for(s.sort((function(e,t){return v[t.s]-v[e.s]||e.f-t.f}));r<o;++r){var _=s[r].s;if(!(v[_]>t))break;b+=y-(1<<g-v[_]),v[_]=t}for(b>>>=m;b>0;){var x=s[r].s;v[x]<t?b-=1<<t-v[x]++-1:++r}for(;r>=0&&b;--r){var w=s[r].s;v[w]==t&&(--v[w],++b)}g=t}return[new i(v),g]},A=function(e,t,n){return-1==e.s?Math.max(A(e.l,t,n+1),A(e.r,t,n+1)):t[e.s]=n},N=function(e){for(var t=e.length;t&&!e[--t];);for(var n=new u(++t),r=0,o=e[0],i=1,s=function(e){n[r++]=e},a=1;a<=t;++a)if(e[a]==o&&a!=t)++i;else{if(!o&&i>2){for(;i>138;i-=138)s(32754);i>2&&(s(i>10?i-11<<5|28690:i-3<<5|12305),i=0)}else if(i>3){for(s(o),--i;i>6;i-=6)s(8304);i>2&&(s(i-3<<5|8208),i=0)}for(;i--;)s(o);i=1,o=e[a]}return[n.subarray(0,r),t]},k=function(e,t){for(var n=0,r=0;r<t.length;++r)n+=e[r]*t[r];return n},M=function(e,t,n){var r=n.length,o=O(t+2);e[o]=255&r,e[o+1]=r>>>8,e[o+2]=255^e[o],e[o+3]=255^e[o+1];for(var i=0;i<r;++i)e[o+i+4]=n[i];return 8*(o+4+r)},I=function(e,t,n,r,o,i,s,l,d,p,h){E(t,h++,n),++o[256];for(var v=j(o,15),g=v[0],b=v[1],m=j(i,15),y=m[0],O=m[1],A=N(g),I=A[0],L=A[1],R=N(y),P=R[0],D=R[1],F=new u(19),U=0;U<I.length;++U)F[31&I[U]]++;for(U=0;U<P.length;++U)F[31&P[U]]++;for(var q=j(F,7),B=q[0],H=q[1],G=19;G>4&&!B[f[G-1]];--G);var W,z,V,$,X=p+5<<3,K=k(o,x)+k(i,w)+s,Q=k(o,g)+k(i,y)+s+14+3*G+k(F,B)+(2*F[16]+3*F[17]+7*F[18]);if(X<=K&&X<=Q)return M(t,h,e.subarray(d,d+p));if(E(t,h,1+(Q<K)),h+=2,Q<K){W=_(g,b,0),z=g,V=_(y,O,0),$=y;var J=_(B,H,0);for(E(t,h,L-257),E(t,h+5,D-1),E(t,h+10,G-4),h+=14,U=0;U<G;++U)E(t,h+3*U,B[f[U]]);h+=3*G;for(var Y=[I,P],Z=0;Z<2;++Z){var ee=Y[Z];for(U=0;U<ee.length;++U){var te=31&ee[U];E(t,h,J[te]),h+=B[te],te>15&&(E(t,h,ee[U]>>>5&127),h+=ee[U]>>>12)}}}else W=S,z=x,V=T,$=w;for(U=0;U<l;++U)if(r[U]>255){te=r[U]>>>18&31,C(t,h,W[te+257]),h+=z[te+257],te>7&&(E(t,h,r[U]>>>23&31),h+=a[te]);var ne=31&r[U];C(t,h,V[ne]),h+=$[ne],ne>3&&(C(t,h,r[U]>>>5&8191),h+=c[ne])}else C(t,h,W[r[U]]),h+=z[r[U]];return C(t,h,W[256]),h+z[256]},L=new s([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),R=new i(0),P=function(e,t,n,r,o,f){var l=e.length,d=new i(r+l+5*(1+Math.ceil(l/7e3))+o),p=d.subarray(r,d.length-o),v=0;if(!t||l<8)for(var b=0;b<=l;b+=65535){var m=b+65535;m<l?v=M(p,v,e.subarray(b,m)):(p[b]=f,v=M(p,v,e.subarray(b,l)))}else{for(var y=L[t-1],_=y>>>13,x=8191&y,w=(1<<n)-1,S=new u(32768),T=new u(w+1),E=Math.ceil(n/3),C=2*E,j=function(t){return(e[t]^e[t+1]<<E^e[t+2]<<C)&w},A=new s(25e3),N=new u(288),k=new u(32),P=0,D=0,F=(b=0,0),U=0,q=0;b<l;++b){var B=j(b),H=32767&b,G=T[B];if(S[H]=G,T[B]=H,U<=b){var W=l-b;if((P>7e3||F>24576)&&W>423){v=I(e,p,0,A,N,k,D,F,q,b-q,v),F=P=D=0,q=b;for(var z=0;z<286;++z)N[z]=0;for(z=0;z<30;++z)k[z]=0}var V=2,$=0,X=x,K=H-G&32767;if(W>2&&B==j(b-K))for(var Q=Math.min(_,W)-1,J=Math.min(32767,b),Y=Math.min(258,W);K<=J&&--X&&H!=G;){if(e[b+V]==e[b+V-K]){for(var Z=0;Z<Y&&e[b+Z]==e[b+Z-K];++Z);if(Z>V){if(V=Z,$=K,Z>Q)break;var ee=Math.min(K,Z-2),te=0;for(z=0;z<ee;++z){var ne=b-K+z+32768&32767,re=ne-S[ne]+32768&32767;re>te&&(te=re,G=ne)}}}K+=(H=G)-(G=S[H])+32768&32767}if($){A[F++]=268435456|h[V]<<18|g[$];var oe=31&h[V],ie=31&g[$];D+=a[oe]+c[ie],++N[257+oe],++k[ie],U=b+V,++P}else A[F++]=e[b],++N[e[b]]}}v=I(e,p,f,A,N,k,D,F,q,b-q,v),!f&&7&v&&(v=M(p,v+1,R))}return function(e,t,n){(null==t||t<0)&&(t=0),(null==n||n>e.length)&&(n=e.length);var r=new(e instanceof u?u:e instanceof s?s:i)(n-t);return r.set(e.subarray(t,n)),r}(d,0,r+O(v)+o)},D=function(){for(var e=new Int32Array(256),t=0;t<256;++t){for(var n=t,r=9;--r;)n=(1&n&&-306674912)^n>>>1;e[t]=n}return e}(),F=function(e,t,n){for(;n;++t)e[t]=n,n>>>=8};function U(e,t){t||(t={});var n=function(){var e=-1;return{p:function(t){for(var n=e,r=0;r<t.length;++r)n=D[255&n^t[r]]^n>>>8;e=n},d:function(){return~e}}}(),r=e.length;n.p(e);var o=function(e,t,n,r,o){return P(e,null==t.level?6:t.level,null==t.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,n,r,!o)}(e,t,function(e){return 10+(e.filename&&e.filename.length+1||0)}(t),8),i=o.length;return function(e,t){var n=t.filename;if(e[0]=31,e[1]=139,e[2]=8,e[8]=t.level<2?4:9==t.level?2:0,e[9]=3,0!=t.mtime&&F(e,4,Math.floor(new Date(t.mtime||Date.now())/1e3)),n){e[3]=8;for(var r=0;r<=n.length;++r)e[r+10]=n.charCodeAt(r)}}(o,t),F(o,i-8,n.d()),F(o,i-4,r),o}var q="undefined"!=typeof TextDecoder&&new TextDecoder;try{q.decode(R,{stream:!0})}catch(e){}"function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout;var B=n(181),H=n.n(B);function G(){return H()()}var W=n(21),z=n.n(W),V=n(182),$=n.n(V);function X(e,t,n,r){if(z()(["push","unshift"].includes(r),"snHttpFactory: options must contain 'enqueueRequest' must return an operation of push or unshit."),z()(["high","low"].includes(n),"snHttpFactory: options must contain 'enqueueRequest' must return an priority of low or high."),"high"===n&&"push"===r||"low"===n&&"unshift"===r){const n=$()(e,e=>"low"===e.config.priority);-1===n?e.push(t):e.splice(n,0,t)}"high"===n&&"unshift"===r&&e.unshift(t),"low"===n&&"push"===r&&e.push(t)}var K=n(64),Q=n.n(K),J=n(62),Y=n.n(J),Z=n(183),ee=n.n(Z),te=n(184),ne=n.n(te),re=n(41),oe=n.n(re);const ie="X-UserToken",ue="x-is-logged-in";var se=n(185),ae=n.n(se);const ce=new TextEncoder;var fe=(()=>{let e,t,n;const r=o.a.create({transformRequest:o.a.defaults.transformRequest.concat((function(r,o){if("string"==typeof r&&e&&r.length>=e){o["Content-Encoding"]="gzip";const e={};return t&&(e.level=t),n&&(e.mem=n),U(ce.encode(r),e)}return r}))});let i,u,s;return r.interceptors.request.use(e=>{const t=e.headers[ie]||i,n={...s,...e.headers,[ie]:t,...u&&{"X-Transaction-Source":u}};return{...e,headers:n}}),r.interceptors.response.use(void 0,e=>{const{response:t}=e;return t&&401===t.status&&t.config?new Promise((n,o)=>{const u=t.headers["x-usertoken-response"];if(!u||u===i)return o(e);i=u;const s=ae()(t.config);return s.headers[ie]=u,n(r(s))}):Promise.reject(e)}),r.interceptors.request.use(function(e){return t=>{if(!t.data||!t.data.batch_request_id)return t;const n=t.transformRequest[0],r=t.data.rest_requests||[],o=oe()(r,t=>{const{headers:r,body:o,url:i,params:u,...s}=t,a=function(e,t){return`)}`}(i,u),c=o?function(e){return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,(function(e,t){return String.fromCharCode("0x"+t)})))}(n(o)):o;return{...s,url:a,headers:e?[...r,{name:ie,value:e}]:[...r],body:c}});return{...t,data:{...t.data,rest_requests:o}}}}(i)),r.interceptors.response.use(function(){function e(e){let t=function(e){return decodeURIComponent(atob(e).split("").map(e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)).join(""))}(e);if("string"==typeof t)try{t=JSON.parse(t)}catch(e){}return t}function t(t){return{id:t.id,data:e(t.body),headers:function(e){return Y()(e,(e,{name:t,value:n})=>({...e,[t]:n}),{})}(t.headers),status:t.status_code,statusText:t.status_text,...t.error_message&&{error:!0,errorMessage:t.error_message}}}return e=>{const{config:n,data:r={},headers:o}=e;if(!0===n.batch){const{serviced_requests:n=[]}=r,i=function(e=[],t={}){return t.hasOwnProperty(ue)?oe()(e,e=>{const n=e;return n.headers[ue]=t[ue],n}):e}(oe()(n,t),o);return{...e,data:{...r,serviced_requests:i}}}return e}}(),function(){function e(e){if("string"==typeof e)try{return JSON.parse(e)}catch(e){}return e}return t=>{const{config:n,response:r,message:o}=t;return n&&!0===n.batch?Promise.reject({...t,config:{...n,data:e(n.data)},...r&&{...r,data:e(r.data)},message:o}):Promise.reject(t)}}()),r.getSource=()=>o.a.CancelToken.source(),r.setXsrfToken=e=>{i=e},r.setXTransactionSource=e=>{u=e},r.setDefaultHeaders=e=>{s=e},r.setHttpRequestCompressionThreshold=t=>{Number.isInteger(t)&&t>0&&(e=t)},r.setHttpRequestCompressionLevel=e=>{Number.isInteger(e)&&e>=0&&e<=9&&(t=e)},r.setHttpRequestCompressionMemoryLevel=e=>{Number.isInteger(e)&&e>=0&&e<=12&&(n=e)},r.getHttpRequestCompressionThreshold=()=>e,r.getHttpRequestCompressionLevel=()=>t,r.getHttpRequestCompressionMemoryLevel=()=>n,r})(),le=n(186),de=n.n(le),pe=n(187),he=n.n(pe),ve=n(40),ge=n.n(ve),be=n(61),me=n.n(be),ye=n(13),_e=n.n(ye);const{toString:xe}=Object.prototype;function we(e){return"undefined"!=typeof FormData&&e instanceof FormData}function Se(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function Te(e){return"[object File]"===xe.call(e)}function Oe(e){return"[object Blob]"===xe.call(e)}function Ee(e){return _e()(e)&&me()(e.pipe)}function Ce(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function je(){return{priority:"high",operation:"push"}}var Ae=(e=>(t={})=>{const n=t.methods||["get","post","put","patch","delete","head"],r=t.maxConcurrent||2,o=t.queue||[],i=t.enqueueRequestPrioritizer||je,u=!1!==t.batching;t.xsrfToken?e.setXsrfToken(t.xsrfToken):console.warn("No XSRF token supplied in snHttp construction.  Setting an initial XSRF token (typically found on window.g_ck) is highly advised to avoid a 401 on initial request."),t.xTransactionSource&&e.setXTransactionSource(t.xTransactionSource),t.headers&&e.setDefaultHeaders(t.headers),t.httpRequestCompressionThreshold&&e.setHttpRequestCompressionThreshold(t.httpRequestCompressionThreshold),t.httpRequestCompressionLevel&&e.setHttpRequestCompressionLevel(t.httpRequestCompressionLevel),t.httpRequestCompressionMemoryLevel&&e.setHttpRequestCompressionMemoryLevel(t.httpRequestCompressionMemoryLevel);const s=function({batchUrl:e="/api/now/v1/batch",batchMethod:t="post",batchMax:n=10,batchInterval:r=50,sendRequest:o}={}){z()(o,"createHttpRequestBatcher: options must contain 'sendRequest' function.");const i=[],u=new Map;function s(e){const{config:{priority:t,operation:o}}=e;X(i,e,t,o),1===i.length&&setTimeout(()=>{i.length&&f()},r),i.length===n&&f()}function a(e){const t=e.response||{},n=(e.config||{}).data||{};Q()(n.rest_requests,n=>{const{id:r}=n;if(void 0===r||!u.has(r))return;const{deferredReject:o}=u.get(r);o({...e,response:{headers:t.headers,data:t.data,status:t.status,statusText:t.statusText}}),u.delete(r)})}function c(e){const{data:t={},config:n={}}=e,{serviced_requests:r=[],unserviced_requests:o=[]}=t;Q()(r,e=>{const{id:t,...r}=e;if(void 0===t||!u.has(t))return;const{deferredResolve:o,deferredReject:i}=u.get(t);!function(e){return e>=200&&e<300}(e.status)?i({config:n,response:r}):o(r),u.delete(t)}),Q()(o,e=>{s(u.get(e))})}function f(){const n=G(),r=[];let s;for(;i.length&&(!s||s===i[0].config.priority);){const e=i.shift();r.push(e.request),u.set(e.requestId,e),s=e.config.priority}o(e,t,{batch:!0,data:{batch_request_id:n,enforce_order:!1,rest_requests:r}}).then(c).catch(a),i.length&&f()}return{get currentQueueSize(){return i.length},get batchInterval(){return r},enqueueRequest:function(e,t,n){const r=G();let o,i;const u=new Promise((e,t)=>{o=e,i=t}),{data:a,params:c,headers:f,priority:l="high",operation:d="push"}=n;return s({requestId:r,config:{priority:l,operation:d},request:{id:r,headers:function(e={}){return Y()(e,(e,t,n)=>(e.push({name:n,value:t}),e),[])}(f),url:e,method:ee()(n.method||t),...a&&{body:a},...c&&{params:c}},deferredReject:i,deferredResolve:o}),u}}}({sendRequest:h});let a=[];function c(){return r-a.length}function f(){a.length>0&&a.shift(),l()}function l(){o.splice(0,c()).forEach(d)}function d(t){const{config:n,deferredResolve:r,deferredReject:o,cancel:i}=t;e.request(n).then(e=>{r(e)}).catch(e=>{o(e)}).then(f),function(e){a.push(e)}({config:n,cancel:i})}function p(){a.slice().forEach(({cancel:e})=>{e(),a.shift()})}function h(t,n,r){let i,a;const f=new Promise((e,t)=>{i=e,a=t}),d=r.source||e.getSource(),p=d.token,h=()=>{!function(e){const{priority:t="high",operation:n="push"}=e.config;X(o,e,t,n)}({config:Object.assign({},{url:t,method:n,cancelToken:p},r),deferredResolve:i,deferredReject:a,cancel:()=>d.cancel("Request cancelled by user")}),0!==c()&&l()};if(u&&!1===r.batch&&"low"===r.priority){const e=setInterval(()=>{s.currentQueueSize||(((...e)=>{(window.requestIdleCallback||window.setTimeout)(...e)})(()=>h()),clearInterval(e))},s.batchInterval)}else h();return f}function v(e,t,r){if(!t)throw new Error("Must supply method");if(!n.includes(t.toLowerCase()))throw new Error(`Method "" is not supported (supported methods are )`);return function(e={}){const{batching:t=!0,batch:n,data:r={}}=e;return(!0===n||!1===n?n:t)&&t&&function(e){return!de()([he.a,Se,Oe,ge.a,Te,we,Ee,Ce])(e)}(r)}({...r,batching:u})?function(e,t,n){return s.enqueueRequest(e,t,Object.assign({},n,{batch:!0}))}(e,t,{...r,batch:!0,...i(e)}):h(e,t,{...r,batch:!1,...i(e)})}const g={get client(){return e},get queue(){return o},get interceptors(){return e.interceptors},cancelRequests:function(){p(),o.slice().forEach(e=>{e.deferredReject("Request cancelled by user"),o.shift()})},cancelInFlightRequests:p,request:v};return n.reduce((e,t)=>({...e,[t]:(e,n={})=>v(e,t,n)}),g)})(fe)}]);
;
/*! RESOURCE: scripts/classes/WFStageSet.js */
var WFStageSet = (function() {
	function getWorkflowVersionFromQuery(qry) {
	    if (!qry)
		    return null;
	    var exps = qry.split("^");
	    for (var i = 0; i < exps.length; i++) {
	    	var exp = exps[i];
	    	var parts = exp.split('=');
	    	if (parts.length == 2 && parts[0].trim() == 'workflow_version' && parts[1].trim() != '')
	    		return parts[1].trim();
	    }
	    return null;
	}
	
	function exportStageSet(setName, workflowVersionId, filter) {
		var ga = new GlideAjax('WFStageSet');
		ga.addParam('sysparm_name',     'exportStageSet');
		ga.addParam('sysparm_set_name', setName);    
		ga.addParam('sysparm_workflow', workflowVersionId);
		if (filter != null)
  		    ga.addParam('sysparm_filter', filter);
		ga.getXMLWait();
		return ga.getAnswer();
	}
	function importStages(source, workflowVersionId, setId) {
		var ga = new GlideAjax('WFStageSet');
		ga.addParam('sysparm_name',     'import'+source);
		ga.addParam('sysparm_set_id',   setId);    
		ga.addParam('sysparm_workflow', workflowVersionId);
		ga.getXMLWait();
		return ga.getAnswer();
	}
	function incrementCounter(table, column, sys_id, increment) {
		var ga = new GlideAjax('WFStageSet');
		ga.addParam('sysparm_name',      'incrementCounter');
		ga.addParam('sysparm_sys_id',    sys_id);    
		ga.addParam('sysparm_table',     table);
		ga.addParam('sysparm_column',    column);
		ga.addParam('sysparm_increment', increment);
		ga.getXMLWait();
		return ga.getAnswer();
	}
	
	function warnNoWorkflow(msg) {
	    var dialog = new GlideDialogWindow('glide_warn');
		var msgs = new GwtMessage();
	    dialog.setPreference('title', msgs.getMessage('Operation not supported.')
+ '<br/>'
							        + msgs.getMessage(msg) );
	    dialog.render();
	    return 'ok';
	}
	
	return {
		getWorkflowVersionFromQuery: getWorkflowVersionFromQuery,
					 exportStageSet: exportStageSet,
					   importStages: importStages,
				   incrementCounter: incrementCounter,
				     warnNoWorkflow: warnNoWorkflow
				}
	
}());
;
/*! RESOURCE: scripts/TestClient.js */
function popTestClient(test_definition, test_subject) {
	var test_execution;
	if (!test_subject) 
		test_execution = test_definition;
		
	var dialog = new GlideDialogWindow('test_client', false, "50em", "25em");
	if (test_execution) {
		dialog.setPreference('sysparm_test_execution', test_execution);
	} else {
		dialog.setPreference('sysparm_test_definition', test_definition);
		dialog.setPreference('sysparm_test_subject', test_subject);
	}
	
	dialog.render();
}
var TestClient = Class.create();
TestClient.prototype = {
	TEST_STATES : [ "Pending", "Running", "Succeeded", "Failed" ],
STATUS_IMAGES : [ "images/workflow_skipped.gif",
"images/loading_anim2.gifx", "images/workflow_complete.gifx",
"images/workflow_rejected.gifx" ],
	TRANSLATED_TEXT : [ "Pending", "Running", "Succeeded", "Failed",
			"Details", "more", "Hide Details", "Show Details" ],
TIMEOUT_INTERVAL : 1000,
	translator : new GwtMessage(),
	detailStates : {},
	id : "",
	container : null,
	initialize : function(test_definition, test_subject) {
		this.container = $("container");
		this._setContainerStyles(this.container);
		this.translator.getMessages(this.TRANSLATED_TEXT);
		
		var test_execution;
		if (!test_subject) {
			this.id = test_definition
			return
		}
		this.testDefinition = test_definition;
		this.testSubject = test_subject;
		
	},
	start : function() {
		if (this.id) {
			this.getStatus();
			return;
		}
		var ga = new GlideAjax('AJAXTestProcessor');
		ga.addParam('sysparm_name', 'startTest');
		ga.addParam('sysparm_test_definition', this.testDefinition);
		ga.addParam('sysparm_test_subject', this.testSubject);
		ga.getXML(this.handleStart.bind(this));
	},
	handleStart : function(response) {
		this.id = response.responseXML.documentElement.getAttribute("answer");
		this.getStatus();
	},
	getStatus : function() {
		var ga = new GlideAjax('AJAXTestProcessor');
		ga.addParam('sysparm_name', 'getStatus');
		ga.addParam('sysparm_execution_id', this.id);
		if (typeof this.id != "string" || this.id == "")
			return;
		ga.getXML(this.handleGetStatus.bind(this));
	},
	handleGetStatus : function(response) {
		var answer = response.responseXML.documentElement.getAttribute("answer");
		eval("var so = " + answer);
		this.renderStatus(so);
		this.container = $("container");
		if (this.container == null)
			return;
		if (so.state == "0" || so.state == "1")
			setTimeout(this.getStatus.bind(this), this.TIMEOUT_INTERVAL);
	},
	renderStatus : function(so) {
		if (!so)
			return;
		var new_container = new Element("div");
		this._setContainerStyles(new_container);
		new_container.appendChild(this.getStatusRow(so));
		this.container.replace(new_container);
		this.container = new_container;
	},
	getStatusRow : function(obj, order) {
		var name = obj.name;
		var state = obj.state;
		var message = obj.message;
		var percent = NaN;
		if (obj.percent_complete) {
			percent = parseInt(obj.percent_complete);
		}
		var hasPercent = (!isNaN(percent) && percent > 0 && percent <= 100);
		var hasDetails = (obj.results.length >= 1 || message != "");
		var tr = new Element("div", {
			id : "row_container-" + obj.sys_id
		});
		tr.style.padding = "5px";
		var simp = new Element("div");
		simp.appendChild(this._getImage(obj));
		simp.appendChild(this._getItemTitleElement(name, order));
		var det = this._getDetailElement();
		var dtl;
		if (hasDetails || hasPercent)
			dtl = det.appendChild(this._getShowDetailsLink(obj.sys_id));
		
		simp.appendChild(det);
		simp.appendChild(this._getFloatClear("both"));
		tr.appendChild(simp);
		
		if (hasDetails || hasPercent) {
			var dtd = new Element("div");
			var ddc = new Element("div");
			ddc.style.marginTop = ".5em";
			ddc.style.marginLeft = "30px";
			ddc.id = "detail_cont-" + obj.sys_id;
			dtd.appendChild(ddc);
			if (hasPercent) {
				ddc.appendChild(this._getProgressBar(percent));
				ddc.appendChild(this._getFloatClear("both"));
			}
			if (message != "") {
				var dds = new Element("div");
				dds.appendChild(this._getDetailsText(message, obj));
				dds.style.fontSize = "smaller";
				dds.style.marginBottom = ".5em";
				ddc.appendChild(dds);
			}
			dtl.details_container = ddc;
			if (typeof this.detailStates[obj.sys_id] == "boolean" && this.detailStates[obj.sys_id] == false && dtl != null)
				dtl.onclick();
			
			tr.appendChild(dtd);
			this.renderChildren(obj, ddc);
		}
		return tr;
	},
	_getItemTitleElement : function (name, order) {
var nameHtml = "<b>" + name + "</b>";
		if (order) {
			nameHtml = "\t" + order + ".\t" + nameHtml;
		}
		var nsp = new Element("span");
		nsp.innerHTML = nameHtml;
		nsp.style.float = "left";
		return nsp;
	},
	_getImage : function(obj) {
		var state = obj.state;
		var si = new Element("img");
		si.id = "img-" + obj.sys_id;
		si.src = this.STATUS_IMAGES[state];
		si.style.marginRight = "10px";
		si.style.float = "left";
		si.title = this.TEST_STATES[state];
		return si;
	},
	_getDetailElement : function () {
		var det = new Element("span");
		det.style.marginLeft = "10px";
		det.style.float = "left";
		return det;
	},
	_getShowDetailsLink : function(objSysID) {
		var da = new Element("a");
		da.id = objSysID;
		da.controller = this;
		da.innerHTML = "(" + this.translator.getMessage("Hide Details") + ")";
		da.toggleText = "(" + this.translator.getMessage("Show Details") + ")";
		da.style.fontSize = "8pt";
		da.style.float = "left";
		da.onclick = this.__detailsToggle;
		return da;
	},
	__detailsToggle : function() {
		var cont = this.details_container;
		cont.toggle();
		this.controller.detailStates[this.id] = cont.visible();
		var nt = this.toggleText;
		this.toggleText = this.innerHTML;
		this.innerHTML = nt;
	},
	_getDetailsText : function(message, obj) {
		if (message.length > 150) {
			var new_message = new Element("span");
			new_message.innerHTML = "<b>"
+ this.translator.getMessage("Details") + ": </b>"
					+ message.slice(0, 150) + "... ";
			var anch = new Element("a");
			anch.href = "test_execution.do?sys_id=" + obj.sys_id;
			anch.innerHTML = "<b>(" + this.translator.getMessage("more")
+ ")</b>";
			new_message.appendChild(anch);
			return new_message;
		} else {
			var new_message = new Element("span")
			new_message.innerHTML = "<b>"
+ this.translator.getMessage("Details") + ": </b>"
					+ message;
			return new_message;
		}
	},
	_getProgressBar : function (percent) {
		percent = Math.max(0, Math.min(100, percent));
		var progressContainer = new Element("div");
		progressContainer.style.width = "300px";
		progressContainer.style.height = "8px";
		progressContainer.style.border = "1px solid black";
		progressContainer.style.borderRadius = "10px";
		progressContainer.style.padding = "2px";
    	progressContainer.style.marginTop = "2px";
    	progressContainer.style.marginBottom = "2px";
    	progressContainer.style.float = "left";
		var progressBar = new Element("div");
		progressBar.style.width = percent + "%";
		progressBar.style.height = "100%";
		progressBar.style.borderRadius = "10px";
		progressBar.style.backgroundColor = "#667788";
		progressContainer.appendChild(progressBar);
		return progressContainer;
	},
	_getFloatClear : function (which) {
		var br = new Element("br");
		br.style.clear = which;
		return br;
	},
	renderChildren : function(so, pr_cont) {
		if (!so.results)
			return;
		for ( var i = 0; i < so.results.length; i++) {
			pr_cont.appendChild(this.getStatusRow(so.results[i], i + 1)).style.marginLeft = "15px";
		}
	},
	_setContainerStyles : function(container) {
		container.id = "container";
		container.style.overflowY = "auto";
		container.style.maxHeight = "50em";
		container.style.marginRight = ".25em";
		container.style.marginLeft = ".25em";
	},
	type : 'TestClient'
};
;
/*! RESOURCE: scripts/OpticsInspector.js */
var OpticsInspector = Class
		.create({
			CATEGORIES : {
				"sys_script" : "BUSINESS RULE",
				"sys_script_client" : "CLIENT SCRIPT",
				"data_lookup" : "DATA LOOKUP",
				"sys_data_policy2" : "DATA POLICY",
				"ui_policy" : "UI POLICY",
				"wf_context" : "WORKFLOW",
				"request_action" : "REQUEST ACTION",
				"script_engine" : "SCRIPT ENGINE",
				"wf_activity" : "WORKFLOW ACTIVITY",
				"acl" : "ACL",
				"sys_ui_action" : "UI ACTION",
				"reference_qual" : "REFERENCE QUALIFIER QUERY",
				"container_action" : "CONTAINER ACTION"
			},
			initialize : function() {
				this.opticsContextStack = new Array();
				this.tableName = null;
				this.fieldName = null;
				this.enabled = false;
			},
			pushOpticsContext : function(category, name, sys_id, sourceTable) {
				if(category == 'sys_script_client')
					name = "\""+name+"\"";				
				var context = {
					"category" : category,
					"name" : name,
					"sys_id" : sys_id,
					"startTime" : new Date(),
					actions : [],
					type : 'context',
"sourceTable": sourceTable || category
				};
				if ((typeof g_form !== 'undefined') && g_form.actionStack)
					g_form.actionStack.push(context);
				if (this.isInspecting() && category !== 'container_action')
					this.opticsContextStack.push(context);
			},
			popOpticsContext : function() {
				var context ;
				if ((typeof g_form !== 'undefined') && g_form.actionStack) {
					context = g_form.actionStack.pop();
					if (g_form._pushAction)
						g_form._pushAction(context);
				}
				if (this.isInspecting() && this.opticsContextStack.length > 0 && (context && context.category !== 'container_action'))
					return this.opticsContextStack.pop();
				return null;
			},
			isInspecting : function(tableName, fieldName) {
				if (this.tableName == null && this.fieldName == null)
					return false;
				if (arguments.length == 0)
					return (this.tableName && this.tableName.length > 0
							&& this.fieldName && this.fieldName.length > 0);
				if (arguments.length == 2)
					return tableName == this.tableName
							&& fieldName == this.fieldName;
				return false;
			},
			getTableName : function() {
				return (this.tableName && this.tableName.length > 0) ? this.tableName
						: '';
			},
			getFieldName : function() {
				return (this.fieldName && this.fieldName.length > 0) ? this.fieldName
						: '';
			},
			hideWatchIcons: function(){
				if(isDoctype()) {
					$$(".icon-debug.watch_icon").each(function (element) {
						$(element).hide()
					});
				} else {
					$$("img.watch_icon").each(function (element) {
						$(element).hide()
					});
				}
			},
			addWatchIcon:function(watchField){
				if (!watchField) {
					return;
				}
				var td = $('label.' + watchField);
				if (!td) {
					var fieldParts = watchField.split(".");
					if ((fieldParts.length == 2 && fieldParts[0].length > 0 && fieldParts[1].length > 0)) {
						td = $('label_' + fieldParts[1]);
						if (td && td.tagName !== 'TD') {
							var tds = td.getElementsByTagName("TD");
							if (tds && tds.length > 0) {
								td = tds[0];
							}
						}
						if (!td) {
							td = $('ni.' + fieldParts[1] + '_label');
						}
					}
				}
				var icon;
				if (td) {
					if(isDoctype()) {
						var label = td.select('label');
						if (label.length > 0) {
							label = label[0];
						} else {
							label = td.select('legend');
							if (label.length > 0) {
								label = label[0];
							} else if (td.nodeName == "LABEL") {
								label = td;
							}
						}
						icon = '<span class="label-icon icon-debug watch_icon" id="'
						+ watchField
						+ '.watch_icon"'
						+ ' onclick="CustomEvent.fireTop(\'showFieldWatcher\')" '
+ ' src="images/debug.gifx" '
						+ ' alt="Field is being watched"'
+ ' title="Field is being watched"></span>';
						if(label){
							$(label).insert(icon);
						}
					} else {
						if (fieldParts.length === 2
								&& fieldParts[1].startsWith("IO:")) {
							var legend = td.select('legend');
							if (legend.length > 0) {
								td = legend[0];
							}
						}
						icon = '<img class="watch_icon" id="'
						+ watchField
						+ '.watch_icon"'
						+ ' onclick="CustomEvent.fireTop(\'showFieldWatcher\')" '
+ ' src="images/debug.gifx" '
						+ ' alt="Field is being watched"'
+ ' title="Field is being watched" />';
						td.insert(icon);
					}
				}
			},
			clearWatchField : function(watchfield) {
				this.opticsContextStack = new Array();
				this.tableName = null;
				this.fieldName = null;
				this.hideWatchIcons();
				var debuggerTools = getTopWindow().debuggerTools;
				if (debuggerTools && debuggerTools.isDebugPanelVisible()) {
					var wndw = debuggerTools.getJsDebugWindow();
					if (wndw.updateFieldInfo)
						wndw.updateFieldInfo(null);
				} else {
					debuggerTools = parent.parent.debuggerTools;
					if (debuggerTools && debuggerTools.isDebugPanelVisible()) {
						var wndw = debuggerTools.getJsDebugWindow();
						if (wndw.updateFieldInfo)
							wndw.updateFieldInfo(null);
					}
				}
			},
			setWatchField : function(watchField) {
				if (!watchField)
					return;
				var fieldParts = watchField.split(".");
				if (!(fieldParts.length == 2 && fieldParts[0].length > 0 && fieldParts[1].length > 0))
					return;
				this.tableName = fieldParts[0];
				this.fieldName = fieldParts[1];
				this.hideWatchIcons();
				var icon = $(watchField + ".watch_icon");
				if (icon) {
					icon.show();
				}
				else {
					this.addWatchIcon(watchField);
				}
				var debuggerTools = getTopWindow().debuggerTools;
				if (debuggerTools && debuggerTools.isDebugPanelVisible()) {
					var wndw = debuggerTools.getJsDebugWindow();
					if (wndw.updateFieldInfo)
						wndw.updateFieldInfo(watchField);
				} else{
					debuggerTools = parent.parent.debuggerTools;
					if (debuggerTools && debuggerTools.isDebugPanelVisible()) {
						var wndw = debuggerTools.getJsDebugWindow();
						if (wndw.updateFieldInfo)
							wndw.updateFieldInfo(watchField);
					}
				}
			},
			showWatchField : function(watchField) {
				var debuggerTools = getTopWindow().debuggerTools;
				if (debuggerTools) {
					if (!debuggerTools.isDebugPanelVisible())
						debuggerTools.showFieldWatcher();
					setWatchField(watchField);
				} else {
					debuggerTools = parent.parent.debuggerTools;
					if (debuggerTools) {
						if (!debuggerTools.isDebugPanelVisible())
							debuggerTools.showFieldWatcher();
						setWatchField(watchField);
					}
				}
			},
			processClientMessage : function(notification) {
				var opticsContext = this.opticsContextStack[this.opticsContextStack.length - 1];
				if (!opticsContext) {
					jslog("No optics context found");
					return;
				}
				var info = {
					type : 'CLIENT ',
					message : notification.message,
					message_type : "static",
					category : opticsContext.category,
					name : opticsContext.name,
					level : this.opticsContextStack.length,
					time : getFormattedTime(new Date()),
					call_trace : this._getCallTrace(this.opticsContextStack),
					sys_id : opticsContext["sys_id"],
					sourceTable: opticsContext["sourceTable"]
				};
				if (notification["oldvalue"] && notification["newvalue"]) {
					info.message_type = "change";
					info.oldvalue = notification["oldvalue"];
					info.newvalue = notification["newvalue"];
				}
				this.process(info);
			},
			processServerMessages : function() {
				var spans = $$('span[data-type="optics_debug"]');
				for (var i = 0; i < spans.length; i++) {
					var notification = new GlideUINotification({
						xml : spans[i]
					});
					this.processServerMessage(notification);
					spans[i].setAttribute("data-attr-processed", "true");
				}
			},
			processServerMessage : function(notification) {
				if (notification.getAttribute('processed') == "true")
					return;
				var info = {
					type : 'SERVER',
					category : notification.getAttribute('category'),
					name : notification.getAttribute('name'),
					message : notification.getAttribute('message'),
					message_type : notification.getAttribute('message_type'),
					oldvalue : notification.getAttribute('oldvalue'),
					newvalue : notification.getAttribute('newvalue'),
					level : notification.getAttribute('level'),
					time : notification.getAttribute('time'),
					sys_id : notification.getAttribute('sys_id'),
					sourceTable : notification.getAttribute('sourceTable'),
					call_trace : this._getCallTrace(eval(notification
							.getAttribute('call_trace')))
				};
				this.process(info);
			},
			process : function(notification) {
var msg = '<div class="debug_line ' + notification['category'] + '">' + this._getMessage(notification) + '</div>';
				this._log(msg);
			},
			addLine : function() {
this._log('<hr class="logs-divider"/>');
			},
			openScriptWindow : function(tablename, sysid) {
				if (tablename && sysid) {
					if (tablename == "request_action")
						tablename = "sys_ui_action";
var url = "/" + tablename + ".do?sys_id=" + sysid;
					window.open(url, "tablewindow");
				}
			},
			_log : function(msg) {
				var debuggerTools = getTopWindow().debuggerTools;
				if (debuggerTools && debuggerTools.isDebugPanelVisible()) {
					var wndw = debuggerTools.getJsDebugWindow();
					if (wndw.insertJsDebugMsg)
						wndw.insertJsDebugMsg(msg);
				} else {
					if(parent && parent.parent) {
						debuggerTools = parent.parent.debuggerTools;
						if (debuggerTools && debuggerTools.isDebugPanelVisible()) {
							var wndw = debuggerTools.getJsDebugWindow();
							if (wndw.insertJsDebugMsg)
								wndw.insertJsDebugMsg(msg);
						}
					}
				}
			},
			_getCallTrace : function(contextStack) {
				var trace = '';
var arrows = '<span class="rtl-arrow"> &larr;</span><span class="lrt-arrow">&rarr; </span>';
				var space = arrows;
				for (i = 0, maxi = contextStack.length; i < maxi; i++) {
					var context = contextStack[i];
					if (i > 0)
						space = arrows + space;
					if (context['name'] && context['name'].length > 0)
						trace += '<div>' + space
								+ this._getCategoryName(context['category'])
+ '&nbsp;-&nbsp;' + context['name'] + '</div>';
					else
						trace += '<div>' + space
								+ this._getCategoryName(context['category'])
+ '</div>';
				}
				if (trace && trace.length > 0)
trace = '<div class="call_trace">' + trace + '</div>';
				return trace;
			},
			_getMessage : function(notification) {
				var notif_type = notification['type'];
				var legend_title = (notif_type.indexOf('CLIENT') > -1) ? 'Client-side activity'
						: 'Server-side activity';
var msg = '<span class="expand-button" onclick="toggleCallTrace(this);">&nbsp;</span>';
msg += '<img class="infoIcon" height="16"  width="16" border="0" src="images/info-icon.png" title="'
						+ legend_title + '" alt="' + legend_title + '">';
				msg += '<span class="log-time ' + notif_type + '">'
+ notification['time'] + '</span>';
				msg += '<span class="log-category">'
						+ this.CATEGORIES[notification['category']];
				if (notification['name'] && notification['name'].length > 0) {
					if (notification["sys_id"])
						msg += '&nbsp;-&nbsp;<a data-tablename="'
								+ notification['sourceTable']
								+ '" data-sys_id="'
								+ notification['sys_id']
								+ '" onclick="javascript:openScriptWindow(this);">'
+ notification['name'] + '</a></span>';
					else
						msg += '&nbsp;-&nbsp;' + notification['name']
+ '</span>';
				} else
msg += '</span>';
				msg += '<span class="log-value">';
				if ("request_action" === notification['category']) {
					msg += 'Value received from client is: <span class="value" title="Value">'
+ notification['message'] + '</span>';
				} else if (notification["message_type"] == "change") {
					msg += '<span>'
							+ notification["oldvalue"]
+ '</span><span class="rtl-arrow"> &larr; </span><span class="lrt-arrow"> &rarr; </span><span>'
+ notification["newvalue"] + '</span>';
				} else {
					msg += notification['message'];
				}
msg += '</span>';
				msg += notification['call_trace'];
				return msg;
			},
			_getCategoryName : function(category) {
				var name = this.CATEGORIES[category];
				if (name === 'undefined' || name === null)
					name = category;
				return name;
			},
			_getLevelStr : function(level) {
				if (level == 'undefined' || level == null || level <= 0)
					level = 1;
				var levelStr = '';
				for (i = 0; i < level; i++)
					levelStr += '-';
				return levelStr + '>';
			},
			toString : function() {
				return 'OpticsInspector';
			}
		});
var g_optics_inspect_handler = new OpticsInspector();
OpticsInspector.WATCH_EVENT = 'glide:ui_notification.optics_debug';
OpticsInspector.WATCH_EVENT_UI = 'glide:ui_notification.optics_debug_ui';
OpticsInspector.WATCH_FIELD = 'glide_optics_inspect_watchfield';
OpticsInspector.SHOW_WATCH_FIELD = 'glide_optics_inspect_watchfield';
OpticsInspector.UPDATE_WATCH_FIELD = 'glide_optics_inspect_update_watchfield';
OpticsInspector.CLEAR_WATCH_FIELD = 'glide_optics_inspect_clear_watchfield';
OpticsInspector.SHOW_WATCH_FIELD = 'glide_optics_inspect_show_watchfield';
OpticsInspector.PUT_CONTEXT = 'glide_optics_inspect_put_context';
OpticsInspector.POP_CONTEXT = 'glide_optics_inspect_pop_context';
OpticsInspector.PUT_CS_CONTEXT = 'glide_optics_inspect_put_cs_context';
OpticsInspector.POP_CS_CONTEXT = 'glide_optics_inspect_pop_cs_context';
OpticsInspector.PUT_CONTEXT = 'glide_optics_inspect_put_context';
OpticsInspector.POP_CONTEXT = 'glide_optics_inspect_pop_context';
OpticsInspector.LOG_MESSAGE = 'glide_optics_inspect_log_message';
OpticsInspector.WINDOW_OPEN = 'glide_optics_inspect_window_open';
function getClientScriptContextName(name, type) {
	var csname = null;
	if (type === "submit")
		csname = g_event_handlers_onSubmit[name];
	else if (type === "load")
		csname = g_event_handlers_onLoad[name];
	else if (type === "change")
		csname = g_event_handlers_onChange[name];
	return csname;
}
CustomEvent.observe(OpticsInspector.PUT_CONTEXT, function(category, name, sys_id, sourceTable) {
	g_optics_inspect_handler.pushOpticsContext(category, name, sys_id, sourceTable);
});
CustomEvent.observe(OpticsInspector.POP_CONTEXT, function() {
	g_optics_inspect_handler.popOpticsContext();
});
CustomEvent.observe(OpticsInspector.PUT_CS_CONTEXT, function(name, type) {
	var csname = getClientScriptContextName(name, type);
	if (csname)
		g_optics_inspect_handler.pushOpticsContext("sys_script_client", csname,
				g_event_handler_ids[name]);
});
CustomEvent.observe(OpticsInspector.POP_CS_CONTEXT, function(name, type) {
	var csname = getClientScriptContextName(name, type);
	if (csname)
		g_optics_inspect_handler.popOpticsContext();
});
CustomEvent.observe(OpticsInspector.LOG_MESSAGE, function(notification) {
	if (g_optics_inspect_handler.isInspecting(notification["table"],
			notification["field"])) {
		g_optics_inspect_handler.processClientMessage(notification);
	}
});
CustomEvent.observe(OpticsInspector.WATCH_EVENT_UI, function(notification) {
	g_optics_inspect_handler.process(notification);
});
CustomEvent.observe(OpticsInspector.WATCH_EVENT, function(notification) {
	g_optics_inspect_handler.processServerMessage(notification);
});
CustomEvent.observe(OpticsInspector.WATCH_FIELD, function(watchfield) {
	g_optics_inspect_handler.setWatchField(watchfield);
});
CustomEvent.observe(OpticsInspector.SHOW_WATCH_FIELD, function(watchfield) {
	g_optics_inspect_handler.showWatchField(watchfield);
});
CustomEvent.observe(OpticsInspector.CLEAR_WATCH_FIELD, function(watchfield) {
	g_optics_inspect_handler.clearWatchField(watchfield);
});
CustomEvent.observe(OpticsInspector.UPDATE_WATCH_FIELD, function(watchfield) {
	g_optics_inspect_handler.setWatchField(watchfield);
if (window.name !== "jsdebugger") {
		g_optics_inspect_handler.addLine();
		g_optics_inspect_handler.processServerMessages();
	}
});
;
/*! RESOURCE: scripts/labels.js */
var refreshRateProperty = "60";
var refreshLabelRate = (refreshRateProperty != null && refreshRateProperty > 0? refreshRateProperty : 60);
var refreshLabelTimer = null;
var g_label_status = initLabelStatus();
CustomEvent.observe('nav.loaded', refreshLabels);
function initLabelStatus() {
	var answer = new Object();
	answer.loading = false;
answer.error_count = 0;
	return answer;
}
function refreshLabels() {
	var labelList = new Array();
	var divTags = document.getElementsByTagName('div');
	if (divTags) {
		for(var c=0;c != divTags.length; ++c) {
			var divTag = divTags[c];
    		var label = divTag.sclabel || divTag.getAttribute('sclabel');
    		if (label && label == 'true') {
    			var id = divTag.appid || divTag.getAttribute('appid');
				labelList.push(id);
    		}
		}
	}
    startRefresh(labelList);
}
function clearLabelRefresh() {
	if (refreshLabelTimer == null)
	    return;
	clearTimeout(refreshLabelTimer);
	refreshLabelTimer = null;
}
function startRefresh(labelRefresh) {
	clearLabelRefresh();
	if (labelRefresh.length < 1)
		return;
	if (labelsGetRequest(labelRefresh))
		refreshLabelTimer = setTimeout(refreshLabels, refreshLabelRate * 1000);
}
function labelsGetRequest(labelIds) {
if (g_label_status.loading)
return true;
if (g_label_status.error_count > 3) {
	    jslog('Stopped tag fetch due to excessive error counts');
return false;
	}
	g_label_status.loading = true;
	var aj = new GlideAjax("LabelsAjax");
	aj.addParam("sysparm_value", labelIds.join(","));
	aj.addParam("sysparm_type", 'get');
	aj.getXML(labelsGetResponse);
	return true;
}
function labelsGetResponse(request) {
	g_label_status.loading = false;
	if (request.status == 200)
		g_label_status.error_count = 0;
	else
		g_label_status.error_count += 1;
	if (!request.responseXML)
		return;
	var labels = request.responseXML.getElementsByTagName("label");
	if (labels && labels.length > 0 ) {
		for (var i = 0; i < labels.length; i++) {
			var labelEntry = labels[i];
			updateMenuItems(labelEntry);
		}
	}
}
function updateMenuItems(labelElement) {
	var appid = labelElement.getAttribute("id");
	var divElem = gel('div.' + appid)
	var tds = divElem.getElementsByTagName("td");
	var appTD = tds[0];
    var notRead = 0;
    var span = gel(appid);
    var table = cel("table");
	var tbody = cel("tbody", table);
    var label;
    var items = labelElement.getElementsByTagName("item");
	if (items && items.length > 0 ) {
		for (var i=0; i < items.length; i++) {
		    label = items[i].getAttribute("label");
			var lid = items[i].getAttribute("name");
			var style = items[i].getAttribute("style");
			var read = items[i].getAttribute("read");
			if ("true" != read)
			   notRead++;
			var url = items[i].getAttribute("url");
			var title = items[i].getAttribute("title");
			var image = items[i].getAttribute("image");
			createLabelMod(tbody, style, lid, url, title, image, appid);
		}
	}
	updateLabelReadCount(appTD, notRead);
	clearNodes(span)
    span.appendChild(table);
	table = null;
}
function createLabelMod(parent, style, id, url, title, image, appid) {
    var tr = cel("tr", parent);
var scrollIcon = isTextDirectionRTL() ? "images/scroll_lft.gifx" : "images/scroll_rt.gifx";
if (image == "images/s.gifx")
		image = scrollIcon;
    var img;
	if (image == null || image == '')
img = '<img style="width:16px; cursor:hand" src="images/icons/remove.gifx" alt="Click me to remove the tag entry" onmouseover="this.src = \'images/closex_hover.gifx\'" onmouseout="this.src = \'images/icons/remove.gifx\'" src="images/icons/remove.gifx"/>';
	else
img = "<img style='width:16px' src='"+image+"' alt='' />";
	var tdimg = cel("td", tr);
	tdimg.style.width = "16px";
	var tdhtml;
	if (image == scrollIcon)
		tdhtml = img;
	else
tdhtml = '<a onclick="removeLabel(\'' + appid + '\',\'' + id + '\');" onmouseover="this.src = \'images/closex_hover.gifx\'" onmouseout="this.src = \'images/icons/remove.gifx\'" title="Click me to remove the tag entry">' + img+'</a>';
	tdimg.innerHTML = tdhtml;
	var td = cel("td", tr);
	var html = '<a class="menulabel" style="' + style + '" id= "' + id + '"';
html += ' target="gsft_main" href="' + url +'">'+ title +'</a>';
	td.innerHTML = html;
	tr = null;
	tdimg = null;
	td = null;
}
function updateLabelReadCount(appTD, notRead) {
	var inner = appTD.innerHTML;
var term = '</H2>';
var paren = inner.indexOf("</H2>");
	if (paren < 0) {
paren = inner.indexOf("</h2");
term = '</h2>';
	}
	if (paren > -1 ) {
	  inner = inner.substring(0, paren);
	  paren--;
	  var c = inner.substring(paren,paren+1);
	  if (c == ')') {
	     while (paren > 0 && c != '(') {
	        paren--;
	        c = inner.substring(paren,paren+1)
	     }
	     if (paren > 0 ) {
	        inner = inner.substring(0, paren);
	     }
	  }
	  inner = inner.trim();
	  if (notRead > 0)
	    inner = inner + ' (' + notRead + ')';
	  inner = inner + term;
	  clearNodes(appTD);
	  appTD.innerHTML = inner;
	}
}
function doAssignLabel(tableName, label, sysId) {
	var form = getFormByTableName(tableName);
	if (sysId == null || !sysId) {
		if (!populateParmQuery(form, '', 'NULL'))
			return false;
	} else {
addInput(form, 'HIDDEN', 'sysparm_checked_items', sysId);
	}
	if (!label && typeof option != 'undefined' && option.getAttribute("gsft_base_label"))
		label = option.getAttribute("gsft_base_label");
	addInput(form, 'HIDDEN', 'sys_action', 'java:com.glide.labels.LabelActions');
	addInput(form, 'HIDDEN', 'sys_action_type', 'assign_label');
	addInput(form, 'HIDDEN', 'sysparm_label_picked', label);
	form.submit();
}
function doRemoveLabel(tableName, label, sysId) {
	var form = getFormByTableName(tableName);
	if (sysId == null || !sysId) {
		if (!populateParmQuery(form, '', 'NULL'))
			return false;
	} else {
addInput(form, 'HIDDEN', 'sysparm_checked_items', sysId);
	}
	if (!label && typeof option != 'undefined' && option.getAttribute("gsft_base_label"))
		label = option.getAttribute("gsft_base_label");
	addInput(form, 'HIDDEN', 'sys_action', 'java:com.glide.labels.LabelActions');
	addInput(form, 'HIDDEN', 'sys_action_type', 'remove_label');
	addInput(form, 'HIDDEN', 'sysparm_label_picked', label);
	form.submit();
}
function assignLabelActionViaLookupModal(tableName, listId) {
	var list = GlideList2.get(listId);
	if (!list)
		return;
	var sysIds = list.getChecked();
	if (!sysIds)
		return;
	assignLabelViaLookup(tableName, sysIds, list.getView());
}
function assignLabelViaLookup(tableName, sysId, viewName) {
	var assignCallback = function (labelId) {
		assignLabel(labelId, tableName, sysId, viewName);
	};
	showLabelLookupWindow("Assign Tag", tableName, sysId, assignCallback);
}
function removeLabelActionViaLookupModal(tableName, listId) {
	var list = GlideList2.get(listId);
	if (!list)
		return;
	var sysIds = list.getChecked();
	if (!sysIds)
		return;
	removeLabelViaLookup(tableName, sysIds);
}
function removeLabelViaLookup(tableName, sysId) {
	var removeCallback = function (labelId) {
		removeLabelById(labelId, sysId);
	};
	showLabelLookupWindow("Remove Tag", tableName, sysId, removeCallback);
}
function showLabelLookupWindow(actionName, tableName, sysID, callback) {
	var tagLookupForm = new GlideDialogWindow("tag_lookup_form");
	tagLookupForm.setTitle(actionName);
	tagLookupForm.setPreference("sys_ids", sysID);
	tagLookupForm.setPreference("table_name", tableName);
	tagLookupForm.setPreference('on_accept', callback);
	tagLookupForm.removeCloseDecoration();
	tagLookupForm.render();
}
function newLabel(tableName, sysID,  callback,  focusTrap) {
	var isDoctype = document.documentElement.getAttribute("data-doctype") == "true";
	if (isDoctype) {
		var tagForm = new GlideDialogWindow("tag_form");
		tagForm.setTitle(getMessage('Tag Details'));
		tagForm.setPreference("sys_ids", sysID);
		tagForm.setPreference("table_name", tableName);
		tagForm.removeCloseDecoration();
		tagForm.render();
		if (focusTrap) {
			$j('#tag_form').on('ft-ready', function() {tagForm.enableFocusTrap();});
			$j('#tag_form').on('select2-open', function() {tagForm.disableFocusTrap();});
			$j('#tag_form').on('select2-close', function() {tagForm.enableFocusTrap();});
		}
	} else {
		var keys = ["Please enter the name for the new tag", "New tag"];
		var msgs = getMessages(keys);
		if (!callback)
			gsftPrompt(msgs["New tag"], msgs["Please enter the name for the new tag"],  function(labelName) { newLabelRequest(tableName, labelName, sysID)} );
		else
			gsftPrompt(msgs["New tag"], msgs["Please enter the name for the new tag"],  callback);
	}
}
function newLabelRequest(tableName, labelName, sysID) {
	if (labelName == null)
		return;
	var viewName;
	var view = gel('sysparm_view');
	if (view != null)
		viewName = view.value;
	assignLabel(labelName, tableName, sysID, viewName);
}
function assignLabel(labelName, tableName, sysId, viewName) {
    if (!labelName)
        return;
	var url = new GlideAjax("LabelsAjax");
	url.addParam("sysparm_name", tableName);
	url.addParam("sysparm_value", sysId);
	url.addParam("sysparm_chars", labelName);
	url.addParam("sysparm_type", "create");
	if (viewName)
		url.addParam("sysparm_view", viewName);
	url.getXML(function(){ reloadWindow(window); });
}
function removeLabel(appid, labelid) {
	var aj = new GlideAjax("LabelsAjax");
	aj.addParam("sysparm_name", appid);
	aj.addParam("sysparm_value", labelid);
	aj.addParam("sysparm_type", 'delete');
	aj.getXML(removeLabelResponse);
}
function removeLabelByName(labelName, sysId) {
	var aj = new GlideAjax("LabelsAjax");
	aj.addParam("sysparm_name", labelName);
	aj.addParam("sysparm_value", sysId);
	aj.addParam("sysparm_type", 'removeByName');
	aj.getXML(function(){ reloadWindow(window); });
}
function removeLabelById(labelId, sysId) {
	var aj = new GlideAjax("LabelsAjax");
	aj.addParam("sysparm_name", labelId);
	aj.addParam("sysparm_value", sysId);
	aj.addParam("sysparm_type", 'remove');
	aj.getXML(refreshNavIfNotDoctypeUI);
}
function removeLabelResponse(response, args) {
  	var labelId = response.responseXML.documentElement.getAttribute("sysparm_name");
   	if (!labelId)
		refreshNavIfNotDoctypeUI();
	else {
		var labelIds = new Array();
		labelIds.push(labelId);
		labelsGetRequest(labelIds);
	}
}
function newLabelPromptListAction(tableName, listId) {
	var nonDoctypeUICallback = function (labelName) { assignLabelToCheckedSysIds(labelName, tableName, listId) };
	var list = GlideList2.get(listId);
	if (!list)
		return;
	var sysIds = list.getChecked();
	if (!sysIds)
		return;
	newLabel(tableName, sysIds, nonDoctypeUICallback, true);
}
function assignLabelToCheckedSysIds(labelName, tableName, listId) {
    if (!labelName || labelName.strip() == '')
        return;
    var list = GlideList2.get(listId);
    if (!list)
        return;
    var sysIds = list.getChecked();
    if (!sysIds)
        return;
    assignLabel(labelName, tableName, sysIds, list.getView());
}
function removeLabelFromCheckedSysIds(labelName, listId) {
    var list = GlideList2.get(listId);
    var sysIds = list.getChecked();
    if (!sysIds)
        return;
    removeLabelByName(labelName, sysIds);
}
function getFormByTableName(tableName) {
	var form = getControlForm(tableName);
	if (!form)
		form = document.forms[tableName + '.do'];
	return form;
}
function refreshNavIfNotDoctypeUI() {
	var isDoctype = document.documentElement.getAttribute("data-doctype") == "true";
	if (!isDoctype)
		refreshNav();
}
;
/*! RESOURCE: scripts/SNCredStoreFormUtil.js */
var SNCredStoreFormUtil = {
	mandatoryFieldMap: {
		name: 'Name',
		type: 'Type'
	},
	
	validateMandatoryFields: function() {
		var unfilledMandatoryFields = [];
		
		for (var key in this.mandatoryFieldMap) {
			g_form.hideErrorBox(key);
			if (!g_form.getValue(key)) {
				g_form.showErrorBox(key, this.mandatoryFieldMap[key] + " is required");
				unfilledMandatoryFields.push(this.mandatoryFieldMap[key]);
			}	
		}
		
		if (unfilledMandatoryFields.length > 0)
			g_form.addErrorMessage(g_scratchpad.unfilledMandatoryFieldsMsg + unfilledMandatoryFields.join());
		
		return unfilledMandatoryFields;
	},
		
	isValidHistoryLimit: function() {
		var limit;
		
		if (g_form.getBooleanValue('enforce_history_policy')) {
			limit = this.getPwdHistoryLimit();
			if (limit === -1) {
				g_form.addErrorMessage(g_scratchpad.mandatoryHistoryParamMsg);
				return false;
			}
		}
		
		return true;
	},
	
	_showHistoryLimitConfirmation: function(newLimit, oldLimit, action) {
		var modal = new GlideModal('pwd_history_change_confirmation');
		modal.setTitle('Confirmation');
		modal.setPreference('sysparm_old_limit', oldLimit);
		modal.setPreference('sysparm_new_limit', newLimit);
		modal.setPreference('sysparm_action', action);
		modal.setPreference('sysparm_conf_type', 'limit_decrease_confirmation');
		modal.setWidth(350);
		modal.render();
	},
	
	_showEnforceHistoryUncheckConfirmation: function(action) {
		var modal = new GlideModal('pwd_history_change_confirmation');
		modal.setTitle('Confirmation');
		modal.setPreference('sysparm_action', action);
		modal.setPreference('sysparm_conf_type', 'history_uncheck_confirmation');
		modal.setWidth(350);
		modal.render();
	},
		
	getPwdHistoryLimit: function() {
		var list = GlideList2.getListsForTable('pwd_cred_store_param')[0];
		
		if (list) {
			var numRows = list.table.rows.length;
			for (var i = 1; i < numRows-1; i++) {
				var curRow = list.table.rows[i];
				var paramId  = curRow.getAttribute('sys_id');
				var paramName = list.getCell(paramId, 'name').textContent;
				
				if (paramName == 'password_history_limit') {
					if (curRow.className.indexOf("list_delete") > 0) {
						return -1;
					}
						
					if (list.getCell(paramId, 'value').textContent)
						return parseInt(list.getCell(paramId, 'value').textContent);
					
					return -1;
				}
			}	
		}
		return -1;
	},
	
	save: function() {
		this.saveOrSubmit("save");
	},
	
	update: function() {
		this.saveOrSubmit("submit");
	},
	
	saveOrSubmit: function(action) {
		if (!action)
			action = "submit";
		
		var hasIssues = false;
		if (this.validateMandatoryFields().length > 0) {
			hasIssues = true;
			return;
		}	
		
		if (!g_form.getBooleanValue('enforce_history_policy') && g_scratchpad.cur_enforce_history_policy) {
			hasIssues = true
			this._showEnforceHistoryUncheckConfirmation(action);
		}
		
		if (g_form.getBooleanValue('enforce_history_policy')) {
			if (!this.isValidHistoryLimit()) {
				hasIssues = true;
				return;
			}	
			
			var newLimit = this.getPwdHistoryLimit();
			var oldLimit = g_scratchpad.cur_password_history_limit;
			
			if (newLimit < oldLimit) {
				hasIssues = true;
				this._showHistoryLimitConfirmation(newLimit, oldLimit, action);
			}	
		}
		
		if (!hasIssues) {
			if (action == "submit") {
				gsftSubmit(null, g_form.getFormElement(), "sysverb_update");
				return;
			}
			
			gsftSubmit(null, g_form.getFormElement(), "sysverb_update_and_stay");
		}	
	}
};
;
/*! RESOURCE: scripts/classes/GlideMenu.js */
var GlideMenu = Class.create();
GlideMenu.prototype = {
	initialize: function(idSuffix, type) {
		this.suffix = idSuffix;
		this.type = type;
		this.clear();
	},
	destroy: function() {
		this.clear();
	},
	clear: function() {
		this.menuItems = [];
		this.variables = {};
		this.onShowScripts = [];
	},
	isEmpty: function() {
		var e = gel('context.' + this.type + "." + this.suffix);
		if (e) {
			var script = e.innerHTML;
if (window.execScript)
				window.execScript(script);
			else
				eval.call(window, script);
			
			Element.remove(e);
		}
		
		for ( var i = 0; i < this.menuItems.length; i++) {
			if (this.menuItems[i].parentId == '')
				return false;
		}
		return true;
	},
	load: function() {
	    
	},
    add: function(sysId, id, parentId, label, type, action, order, img, trackSelected) {
        var item = {};
        item.sysId = sysId;
        item.id = id;
        item.parentId = parentId;
        item.label = label;
        item.type = type;
        item.action = action || "";
        item.order = order;
        item.image = img;
        item.trackSelected = (trackSelected == "true");
        this._add(item);
    },
	addItem: function(id, parentId, label, type, action, order, img, trackSelected, onShowScript) {
		var item = {};
		item.id = id;
		item.parentId = parentId;
		item.label = label;
		item.type = type;
		item.action = action;
		item.order = order;
		item.image = img;
		item.trackSelected = (trackSelected == "true");
		item.onShowScript = onShowScript;
		this._add(item);
	},
	_add: function(item) {
        if (!item.order)
            item.order = 0;
        this.menuItems.push(item);
    },
    increaseItemsOrder: function(increase){
		for (var i = 0; i < this.menuItems.length; i++)
			this.menuItems[i].order += increase;
	},
	
	addAction: function(label, action, order) {
		this.addItem("", "", label, "action", action, order);
	},
	showContextMenu: function(evt, id, variables) {
		this.variables = variables;
		id += this.suffix;
		if (!getMenuByName(id))
			this._createMenu(id);
		var cm = getMenuByName(id);
		if (cm.context.isEmpty())
			return;
		this._loadVariables(variables);
		for ( var i = 0; i < this.onShowScripts.length; i++) {
			var onShow = this.onShowScripts[i];
			g_menu = getMenuByName(onShow.menuId);
			if (!g_menu)
				continue;
			g_menu = g_menu.context;
			if (!g_menu)
				continue;
			g_item = g_menu.getItem(onShow.itemId);
			if (!g_item)
				continue;
			this._runOnShowScript(onShow.script, onShow.itemId);
		}
		if (id.includes('context_list'))
			this._trackListMetrics(evt, id, variables);
		this._clearVariables(variables);
		g_menu = null;
		g_item = null;
		return contextShow(evt, id, 0, 0, 0, 0);
	},
	_trackListMetrics: function(evt, id, variables) {
		if (!id || !variables || !variables.g_list)
			return;
		var payload = {
			isRightClick: evt.type === 'contextmenu',
		};
		if (id.includes('context_list_header')) {
			payload.fieldType = variables.g_fieldType;
			payload.columnName = variables.g_fieldLabel;
			payload.fieldName = variables.g_fieldName;
			payload.contextMenuType = 'header';
		}
		else if (id.includes('context_list_row')) {
			payload.selectedSysId = variables.g_sysId;
			payload.fieldName = variables.g_fieldName;
			payload.contextMenuType = 'row';
		}
		else if (id.includes('context_list_title')) {
			payload.contextMenuType = 'title';
		}
		else {
			return;
		}
		GlideListUxMetricsUtils.track('Open List Context Menu', variables.g_list, payload);
	},
	setOnShow: function(onshow) {
		this.onshow = onshow;
	},
	setOnHide: function(onhide) {
		this.onhide = onhide;
	},
	_createMenu: function(id) {
		var cm = new GwtContextMenu(id);
		cm.setOnShow(this.onshow);
		cm.setOnHide(this.onhide);
		cm.clear();
		this._sort();
		this._buildMenu("", cm);
	},
	_sort: function() {
		this.menuItems = this.menuItems.sort(function(a, b) {
			var aOrder = parseInt("0" + a.order, 10);
			var bOrder = parseInt("0" + b.order, 10);
			if ((aOrder) < (bOrder)) {
				return -1;
			}
			if ((aOrder) > (bOrder)) {
				return 1;
			}
			return 0;
		});
	},
	_buildMenu: function(parentId, cm) {
		var lastType;
		var itemsAfterLine = 0;
		for ( var i = 0; i < this.menuItems.length; i++) {
			var item = this.menuItems[i];
			if (parentId != item.parentId)
				continue;
			if (lastType == "line" && item.type == "line")
				continue;
			if (lastType == "line" && itemsAfterLine > 0) {
				this._addLine(cm);
				itemsAfterLine = 0;
			}
			lastType = item.type;
			if (lastType == "line")
				continue;
			if (this._addMenuItem(cm, item))
				itemsAfterLine++;
		}
	},
	_addLine: function(cm) {
		cm.addLine();
	},
	_addMenuItem: function(cm, item) {
		var added = true;
		var mi;
		if (item.type == "action") {
			if (!this._getAction(item))
				mi = cm.addLabel(item.label);
			else
				mi = cm.addFunc(item.label, this._runMenuAction.bind(this, item), item.id);
		} else if (item.type == "label") {
			mi = cm.addLabel(item.label);
		} else if (item.type == "menu") {
			var sm = new GwtContextMenu(item.id + '_' + this.suffix);
			if (item.trackSelected)
				sm.setTrackSelected(true);
			this._buildMenu(item.id, sm);
			if (sm.isEmpty())
				added = false;
			else
				mi = cm.addMenu(item.label, sm, item.id);
		}
		if (mi && item.image)
			cm.setImage(mi, item.image);
		if (added && this._getOnShowScript(item)) {
			var o = {};
			o.menuId = cm.id;
			o.itemId = item.id;
			o.script = this._getOnShowScript(item);
			this.onShowScripts.push(o);
		}
		return added;
	},
	
	_getAction: function(item) {
	    var action = '';
	    if (item.action)
	       action = item.action;
	   
	   if (item.sysId)
	       action += '\n' + GlideMenu.scripts[item.sysId];
	   
	   return action;
	},
    _getOnShowScript: function(item) {
        if (item.sysId)
            return GlideMenu.onScripts[item.sysId];
        
        return item.onShowScript;
     },
	_runMenuAction: function(item) {
		this._loadVariables(this.variables);
		try {
			eval(this._getAction(item));
		} catch (ex) {
			jslog("Error running context menu '" + item.label + "': " + ex);
		}
		this._clearVariables(this.variables);
	},
	_runOnShowScript: function(script, itemId) {
		try {
			eval(script);
		} catch (ex) {
			jslog("Error running onShow script for item '" + itemId + "': " + ex);
		}
	},
	_loadVariables: function(variables) {
		for ( var n in variables) {
			var s = n + '=variables["' + n + '"]';
			eval(s);
		}
	},
	_clearVariables: function(variables) {
		for ( var n in variables) {
			var s = n + '=null;';
			eval(s);
		}
	},
	type: 'GlideMenu'
};
GlideMenu.scripts = {};
GlideMenu.onScripts = {};
GlideMenu.addScripts = function(o) {
	
	if (o == null)
		return;
	
	for (var s in o.scripts)
		GlideMenu.scripts[s] = o.scripts[s];
   
	for (var s in o.onScripts)
		GlideMenu.onScripts[s] = o.onScripts[s];
	
}
;
/*! RESOURCE: scripts/AJAXTextSearchCompleter.js */
var AJAXTextSearchCompleter = Class.create(AJAXTableCompleter, {
	
	
	PROCESSOR: "TSSuggestProcessor",
   
    initialize: function(name, elementName, horizontalAlign, searchContainer) {
		AJAXCompleter.prototype.initialize.call(this, name, elementName);
		this.className = "AJAXTextSearchCompleter";
		this.element = $(elementName);
		this.keyElement = this.element;
this.horizontalAlign = horizontalAlign;
this.enterSubmits = true;
this.searchContainer = searchContainer;
this.allowInvalid = true;
this.ieIFrameAdjust = 2;
this.oneMatchSelects = false;
		
		AJAXReferenceCompleter.prototype._commonSetup.call(this);
    },
	
	copyAttributes: function(node) {
		var text = node.childNodes[0].nodeValue;
		var attributes = new Array();
		attributes['label'] = text;
		attributes['name'] = text;
		return attributes;	
	},
	
	setTopLeft: function (style, top, left) {
		if (this.horizontalAlign == "right")
			this._rightAlign(style, parseInt(left, 10));
		else 
			style.left = left;
		style.top = top;
	},
	
	setInvalid: function() {
	},
	
	clearInvalid: function() {
	
	},
	onDisplayDropDown: function() {
		AJAXTableCompleter.prototype.onDisplayDropDown.call(this);
		if (this.horizontalAlign == "right") {
			var mLeft = grabOffsetLeft(this.element);
			var x = this._rightAlign(this.dropDown.style, mLeft);			
			this.iFrame.style.left = x;
		}
	},
	
	_rightAlign: function(style, left) {
		var containerWidth = this._getContainerWidth();
		var dropWidth = this.dropDown.getWidth();
		var adjust = 0;
		if (isWebKit)
			adjust = 2;
		this.log("_rightAlign: " + left + "+" + containerWidth + "-" + dropWidth + "-" + adjust);
		var x = left + containerWidth - dropWidth - adjust + "px";
		style.left = x;
		return	x;
	},
	_createTable: function() {
		AJAXTableCompleter.prototype._createTable.call(this);
		var tableWidth = this._getContainerWidth();
		if (!g_isInternetExplorer)
			tableWidth -= 2;
		this.table.style.width = tableWidth + "px";
	},
	
	_getContainerWidth: function() {
		var adjust = 1;
		if (!g_isInternetExplorer)
			adjust = 2;
		
		var width = 0;
		if (this.searchContainer)
			width = $(this.searchContainer).getWidth() - adjust;
		return width;
	}
});
;
/*! RESOURCE: /scripts/doctype/html_class_setter.js */
(function () {
	if (window.NOW.htmlClassSetterInitialized)
		return;
	window.NOW.htmlClassSetterInitialized = true;
	var df = window.NOW.dateFormat;
	var shortDateFormat = window.NOW.shortDateFormat;
	var $h = $j('HTML');
	$j(function() {
		if (!df)
			return; 
		
		CustomEvent.observe('timeago_set', function(timeAgo) {
			df.timeAgo = timeAgo;
			df.dateBoth = false;
			setDateClass();
			setDateTimeVisibilityToSR();
		});
		
		CustomEvent.observe('shortdates_set', function(trueFalse) {
			shortDateFormat = trueFalse;
			setDateClass();
			setDateTimeVisibilityToSR();
		});
		
		CustomEvent.observe('date_both', function(trueFalse) {
			df.dateBoth = trueFalse;
			df.timeAgo = false;
			setDateClass();
			setDateTimeVisibilityToSR();
		})
	});
	
	function setDateClass() {
		$h.removeClass('date-timeago');
		$h.removeClass('date-calendar');
		$h.removeClass('date-calendar-short');
		$h.removeClass('date-both');
		if (df.dateBoth) {
			$h.addClass('date-both');
			if (shortDateFormat)
				$h.addClass('date-calendar-short');
			else 
				$h.addClass('date-calendar');
		} else if (df.timeAgo)
			$h.addClass('date-timeago');
		else {
			if (shortDateFormat)
				$h.addClass('date-calendar-short');
			else
				$h.addClass('date-calendar');
		}
	}
setDateClass();
	function _showDateCalender(dateCalendarLong, dateCalendarShort) {
		if (shortDateFormat) {
			_hideDateTimeFormat(dateCalendarLong);
			_showDateTimeFormat(dateCalendarShort);
		}
		else {
			_showDateTimeFormat(dateCalendarLong);
			_hideDateTimeFormat(dateCalendarShort);
		}
	}
	function _hideDateTimeFormat(element) {
		element.attr('aria-hidden', 'true');
	}
	function _showDateTimeFormat(element) {
		element.removeAttr('aria-hidden');
	}
	function setDateTimeVisibilityToSR() {
		if (!window.g_accessibility)
			return;
		var dateCalendarLong = $j(".datex.date-calendar"),
			dateCalendarShort = $j(".datex.date-calendar-short"),
			dateTimeAgo = $j(".datex.date-timeago");
		if (window.NOW.dateFormat.dateBoth) {
			_showDateCalender(dateCalendarLong, dateCalendarShort);
			_showDateTimeFormat(dateTimeAgo);
		}
		else if (window.NOW.dateFormat.timeAgo) {
			_hideDateTimeFormat(dateCalendarLong);
			_hideDateTimeFormat(dateCalendarShort);
			_showDateTimeFormat(dateTimeAgo);
		}
		else {
			_showDateCalender(dateCalendarLong, dateCalendarShort);
			_hideDateTimeFormat(dateTimeAgo);
		}
	}
	CustomEvent.observe('list.loaded', setDateTimeVisibilityToSR);
	var toggleTemplate = function(trueFalse){
		var bool = (typeof trueFalse !== "undefined") ? trueFalse : !window.NOW.templateToggle;
		window.NOW.templateToggle = bool;
		if (bool) document.body.style.paddingBottom = "100px";
		else document.body.style.paddingBottom = "";
		setPreference('glide.ui.templateToggle', bool);
		setTemplateToggle();
		if (CustomEvent.events.templateToggle.length > 1)
			CustomEvent.un('templateToggle', toggleTemplate);
		GlideUXMetrics && GlideUXMetrics.track('Toggle Template Bar', '');
	};
	CustomEvent.observe('templateToggle', toggleTemplate);
	CustomEvent.observe('compact', function(trueFalse) {
		window.NOW.compact = trueFalse;
		setCompact();
	});
	CustomEvent.observe('cc_listv3_tablerow_striped', function(bool) {
		if (bool) {
			$j('.table-container table.list-grid').addClass('table-striped');
		} else {
			$j('.table-container table.list-grid').removeClass('table-striped');
		}
	});
	function setTemplateToggle(){
		var toggleBtn = $j('#template-toggle-button'),
			ariaLiveEl = $j('#template-bar-aria-live');
		var ariaLiveMsg = '';
		if (window.NOW.templateToggle) {
			$h.addClass('templates');
			toggleBtn.attr('aria-expanded', 'true');
			ariaLiveMsg = getMessage('Added Template bar landmark to bottom of form.');
		}
		else {
			$h.removeClass('templates');
			toggleBtn.removeAttr('aria-expanded');
			ariaLiveMsg = getMessage('Removed Template bar landmark from bottom of form.');
		}
		ariaLiveEl.text(ariaLiveMsg);
	}
	CustomEvent.observe('form.loaded', setTemplateToggle);
	function setCompact() {
		try {
			var modalDiv = window.top.document.getElementById("settings_modal");
		} catch (e) {
		}
		if (modalDiv)
			modalDiv = modalDiv.childNodes[0];
		var $pH;
		if(parent.$j)
			$pH = parent.$j('HTML');
		if (window.NOW.compact) {
			$h.addClass('compact');
			if ($pH)
				$pH.addClass('compact');
			
			if (modalDiv && modalDiv.className.indexOf(' compact') == -1)
				modalDiv.className += ' compact';
		} else {
			$h.removeClass('compact');
			if ($pH)
				$pH.removeClass('compact');
			
			if (modalDiv && modalDiv.className.indexOf(' compact') > -1)
				modalDiv.className = modalDiv.className.replace(" compact", "");
		}
	}
setCompact();
	
	CustomEvent.observe('tabbed', function(trueFalse) {
		window.NOW.tabbed = trueFalse;
		setTabbed();
	});
	
	function setTabbed() {
		if (window.NOW.tabbed) 
			$h.addClass('tabbed');
		else
			$h.removeClass('tabbed');
	}
setTabbed();
	function setListTableWrap() {
		if (window.NOW.listTableWrap)
			$j('HTML').removeClass('list-nowrap-whitespace');
		else
			$j('HTML').addClass('list-nowrap-whitespace');
	}
	setListTableWrap();
	CustomEvent.observe('table_wrap', function (trueFalse) {
		window.NOW.listTableWrap = trueFalse;
		setListTableWrap();
		CustomEvent.fire('calculate_fixed_headers');
	});
})();
function printList(maxRows) {
	var mainWin = getMainWindow();
	if (mainWin && mainWin.CustomEvent && mainWin.CustomEvent.fire && mainWin.CustomEvent.fire("print", maxRows) === false)
		return false;
		
	var veryLargeNumber = "999999999";
	var print = true;
	var features = "resizable=yes,scrollbars=yes,status=yes,toolbar=no,menubar=yes,location=no";
	if (isChrome && isMacintosh)
		features = "";
	
	var href = "";
	var frame = top.gsft_main;
	if (!frame)
		frame = top;
	
	if (frame.document.getElementById("printURL") != null) {
		href = frame.document.getElementById("printURL").value;
	    href = printListURLDecode(href);
	}
	
	if (!href) {
		if (frame.document.getElementById("sysparm_total_rows") != null) {
			var mRows = parseInt(maxRows);
			if (mRows < 1)
				mRows = 5000;
			
			var totalrows = frame.document.getElementById("sysparm_total_rows").value;
			if (parseInt(totalrows) > parseInt(mRows))
				print = confirm(getMessage("Printing large lists may affect system performance. Continue?"));
		}
		
		var formTest;
		var f = 0;
var form = frame.document.forms['sys_personalize'];
		if (form && form.sysparm_referring_url) {
			href = form.sysparm_referring_url.value;
			if (href.indexOf("?sys_id=-1") != -1 && !href.startsWith('sys_report_template')) {
				alert(getMessage("Please save the current form before printing."));
				return false;
			}
			if (isMSIE) {
				var isFormPage = frame.document.getElementById("isFormPage");
				if (isFormPage != null && isFormPage.value == "true")
href = href.replace(/javascript%3A/gi, "_javascript_%3A");
			}
	    	href = printListURLDecode(href);
		} else
			href = document.getElementById("gsft_main").contentWindow.location.href;
	}
	if( href.indexOf("?") <0 )
		href += "?";
	else
		href += "&";
		
	href = href.replace("partial_page=", "syshint_unimportant=");
	href = href.replace("sysparm_media=", "syshint_unimportant=");
	href += "sysparm_stack=no&sysparm_force_row_count=" + veryLargeNumber + "&sysparm_media=print";
	if (print) {
		if (href != null && href != "") {
			win = window.open(href, "Printer_friendly_format", features);
			win.focus();
		} else {
			alert("Nothing to print");
		}
	}
	
	function printListURLDecode(href) {
href = href.replace(/@99@/g, "&");
href = href.replace(/@88@/g, "@99@");
href = href.replace(/@77@/g, "@88@");
href = href.replace(/@66@/g, "@77@");
		return href;	
	}
}
function clearCacheSniperly() {
	var aj = new GlideAjax("GlideSystemAjax");
	aj.addParam("sysparm_name", "cacheFlush");
	aj.getXML(clearCacheDone);
}
function clearCacheDone() {
	window.status = "Cache flushed";
}
;
/*! RESOURCE: /scripts/doctype/floating_scrollbar.min.js */
!function(t){function o(t){b.toggle(!!t)}function e(){s&&b.scrollLeft(s.scrollLeft())}function n(){var t=$j(".navbar-fixed-bottom");return t.length&&window.NOW.templateToggle?t.outerHeight():0}function i(){if(c=s,s=null,v.each(function(){var o=t(this).offset().top,e=o+t(this).height(),n=h.height();return n>o+u&&e>n?(s=t(this),!1):void 0}),!s)return void o();var i=s.scrollLeft(),l=s.scrollLeft(90019001).scrollLeft(),r=s.innerWidth(),a=r+l;return s.scrollLeft(i),r>=a?void o():(o(!0),c&&c[0]===s[0]||(c&&(c[0].onscroll=void 0),s[0].onscroll=e,s.after(b)),b.css({left:s.offset().left-f.scrollLeft(),width:r,bottom:n()}).scrollLeft(i),void g.width(a))}function l(){var o=t(".custom-form-group");o.length&&(a||(f=t(".section_header_content_no_scroll"),o.floatingScrollbar(),a=!0))}function r(t,o,e){function n(){clearTimeout(r),r=setTimeout(i.bind(null,arguments),s)}function i(o,e,n){l=o,t.apply(e,n)}var l,r,s=o||100;return function(){var t=e||this,o=+new Date,r=arguments;l&&l+s>o?n(o,t,r):i(o,t,r)}}if(!isMSIE9&&window.NOW.floatingScrollbars){var s,c,f,a,d=30,u=30,h=t(this),v=t([]),b=t('<div id="floating-scrollbar"><div/></div>'),g=b.children();b.hide().css({position:"fixed",bottom:n(),height:"30px","overflow-x":"auto","overflow-y":"hidden"}).scroll(function(){s&&s.scrollLeft(b.scrollLeft())}),g.css({border:"1px solid #fff",opacity:.01}),t.fn.floatingScrollbar=function(o){o===!1?(v=v.not(this),this.unbind("scroll",e),v.length||(b.detach(),h.unbind("resize",i),f.unbind("scroll",i))):this.length&&(v=v.add(this),isChrome&&v.each(function(){t(this).css({"-webkit-transform":"translate3d(0,0,0)"})})),h.bind("resize",r(i,d)),f.bind("scroll",r(i,d)),i()},CustomEvent.observe("list.loaded",l),CustomEvent.observe("tab.activated",i),CustomEvent.observe("partial.page.reload",l),CustomEvent.observe("related_lists.render",l),CustomEvent.observe("templateToggle",function(){b.css({bottom:n()})})}}(jQuery);
/*! RESOURCE: /scripts/doctype/page_title.js */
$j(function($) {
	var title = $('[data-form-title]').first().attr('data-form-title');
	if (!title || title == "null")
		title = $( ".tabs2_section" ).first().attr('tab_caption');
	if (!title || title == "null")
		title = $('.list_title').first().text();
	if (!title || title == "null")
		title = $('.properties_page_title').first().text();
	if (!title || title == "null")
		return;
	document.title = title + ' | ' + document.title;
});
;
/*! RESOURCE: /scripts/responsive_form_header.js */
(function($) {
	var cache = null;
	var MIN_HEADER_HEIGHT = 60;
	var DEFAULT_TIMEOUT_IN_MS = 100;
	addLoadEvent(initializeFormHeader);
	function initializeFormHeader() {
		if ($('.section_header_div_no_scroll').length === 0) {
			return;
		}
		setupCache();
		CustomEvent.observe("frame.resized", adjustFormHeaderElements);
		Event.observe(window, "resize", debounceAdjustFormHeaderElements);
	}
	function adjustFormHeaderElements() {
		if (!cache.hasLoaded && cache.$header.height() < MIN_HEADER_HEIGHT) {
			cache.hasLoaded = true;
			return;
		}
		if (cache.$navbar.is(":visible")) {
			recalculateDynamicHeaderElements();
			fitUiActions();
		}
		cache.$content.css({height: cache.$window.innerHeight() - cache.$header.height()});
	}
	function debounceAdjustFormHeaderElements() {
		clearTimeout(cache.timeout);
		cache.timeout = setTimeout(adjustFormHeaderElements, DEFAULT_TIMEOUT_IN_MS);
	}
	function setupCache() {
		if (cache == null) {
			cache = {};
			cache.timeout = null;
			cache.hasLoaded = false;
			cache.$window = $(window);
			cache.$header = $('.section_header_div_no_scroll');
			cache.$content = $('.section_header_content_no_scroll');
			cache.$spacer = $('div[data-position-below-header="true"]');
			cache.$navbar = $('nav.navbar-default').first();
			cache.$primaryContainer = cache.$navbar.find('.ui_action_container_primary');
			cache.$overflowContainer = cache.$navbar.find('.ui_action_container_overflow');
			cache.$uiActionContainer = cache.$primaryContainer.children(0);
			cache.$navbarDisplayValueElement = cache.$navbar.find('.navbar-header:first .navbar-title-display-value');
			cache.uiActionWidth = cache.$uiActionContainer.width();
			cache.navbarRightWidth = cache.$navbar.find('.navbar-right:first').width() - cache.uiActionWidth;
			cache.navbarTitleCaption = cache.$navbar.find('.navbar-header:first .navbar-title-caption').width();
			cache.$navbarWidth = cache.$navbar.width();
		}
	}
	function recalculateDynamicHeaderElements() {
		cache.navbarHeaderWidth = cache.$navbar.find('.navbar-header:first').width();
		cache.navbarDisplayWidth = cache.$navbar.find('.navbar-header .navbar-title-display-value').width();
		if((cache.$navbar.find('.navbar-right').width() - cache.uiActionWidth) <= 0 || cache.$navbarWidth <= 0) {
			cache.navbarRightWidth = cache.$navbar.find('.navbar-right').width();
		}
	}
	function fitUiActions() {
		cache.$navbarDisplayValueElement.css('max-width', '');
		recalculateDynamicHeaderElements();
		var navbarWidth = cache.$navbar.width();
		var headerSize = cache.navbarHeaderWidth + cache.navbarRightWidth + cache.uiActionWidth;
var btnOffset = 32 + 10 + 10;
		if ((cache.navbarHeaderWidth + cache.navbarRightWidth) > cache.$window.width()) {
			var maxWidth = cache.navbarDisplayWidth - (cache.navbarHeaderWidth - cache.$window.width()) - cache.navbarRightWidth - btnOffset;
			cache.$navbarDisplayValueElement.css('max-width', Math.max(maxWidth, cache.navbarTitleCaption));
			navbarWidth = cache.$navbar.width();
			recalculateDynamicHeaderElements();
		}
		headerSize = cache.navbarHeaderWidth + cache.navbarRightWidth + cache.uiActionWidth;
		if (headerSize > navbarWidth) {
			if (cache.$uiActionContainer.parent().get(0) === cache.$primaryContainer.get(0)) {
				cache.$overflowContainer.append(cache.$uiActionContainer.detach());
			}
		} else if (cache.$uiActionContainer.parent().get(0) === cache.$overflowContainer.get(0)) {
			cache.$primaryContainer.append(cache.$uiActionContainer.detach());
		}
	}
})(jQuery);
;
/*! RESOURCE: /scripts/classes/doctype/streamButton.js */
$j(function($) {
	"use strict";
	var closeButtonPadding = 32;
	var isOpen = false;
	var wrapperSelector = '.list_wrap_n_scroll';
	var $listStreamBtn = $('.list_stream_button');
	var $formStreamBtn = $('.form_stream_button');
	
	function toggleStream(shouldAutoFocus) {
		$listStreamBtn.attr("aria-expanded", !isOpen);
		if (!isOpen){
			isOpen = true;
			var table = $('table.list_table[data-list_id]');
			var listid = table.attr('data-list_id');
			var query = table.attr('query');
			query = encodeURIComponent(query);
			var url = "$stream.do?sysparm_table=" + listid + "&sysparm_nostack=yes&sysparm_query=" + query;
			var target = 'parent';
			if (shouldUseFormPane())
				target = 'form_pane';
			url += "&sysparm_link_target=" + target;
			createStreamReader(url, shouldAutoFocus);
		} else {
			isOpen = false;
			var $readerDiv = $('.list_stream_reader');
			closeStreamReader($readerDiv);
		}
	}
	if ($listStreamBtn.attr("aria-expanded") === "true")
setTimeout(function(){ toggleStream(false); }, 500);
	$listStreamBtn.click(function() {
		trackListMetrics();
		toggleStream(true);
	});
	function trackListMetrics() {
		if (!GlideList2)
			return;
		var table = $('table.list_table[data-list_id]');
		var listId = table.attr('data-list_id');
		var list = GlideList2.get(listId);
		GlideListUxMetricsUtils.track('Open List Activity Stream Flyout', list, {});
	};
	$(document).on('click', '.form_stream_button', function() {
		var url = "$stream.do?sysparm_table=" + g_form.getTableName();
		url += "&sysparm_sys_id=" + g_form.getUniqueValue();
		url += "&sysparm_stack=no";
		$formStreamBtn.attr("aria-expanded", true);
		createStreamReader(url, true);
	});
	function shouldUseFormPane() {
		try {
			if (self == top)
				return false;
			if (window.top.g_navManager)
				return !!window.top.g_navManager.options.formTarget;
		} catch (e) {}
		return false;
	}
	function createStreamReader(url, shouldAutoFocus) {
		if ($('.list_stream_reader').length)
			return;
			
		if (NOW && NOW.polaris_page_info && NOW.polaris_page_info.canUsePolarisCSS)
			url += "&sysparm_use_polaris=true";
var frame = '	<iframe src="' + url + '" id="list_stream_reader_frame"></iframe>';
		var closeActivityLabel = getMessage('Close Activity Stream');
		var activityStreamTitle = getMessage('Activity Stream');
		var $div = $('<div class="list_stream_reader" aria-labelledby="stream_header">' +
'<span tabindex="0" id="list_stream_focus_bumper_top"> </span>' +
			'<div class="list_stream_plank_header">'+
			'<span class="list_stream_reader_close"><button id="list_stream_reader_close_button" aria-label="' +
			closeActivityLabel +
'" class="plank_close_button icon-double-chevron-right"></button></span><h2 id="stream_header">'+
activityStreamTitle + '</h2>' +
'</div>' +
			frame +
'<span tabindex="0" id="list_stream_focus_bumper_bottom"> </span>' +
'</div>');
		$('body').append($div);
		$('#list_stream_reader_frame').bind('load', function() {
			if (NOW.compact) {
				$(this).contents().find('html').addClass('compact');
			}
			CustomEvent.observe('compact', function(newValue) {
				var method = newValue ? 'addClass' : 'removeClass';
				$('#list_stream_reader_frame').contents()
					.find('html')[method]('compact');
			})
		});
		var focusOnCloseButton = function() {
			$("#list_stream_reader_close_button")[0].focus();
		};
		var focusLastElementInPanel = function () {
			try {
				var frame = document.getElementById('list_stream_reader_frame');
				window.tabbable(frame.contentDocument.body).pop().focus();
			} catch (e) {
				focusOnCloseButton();
			}
		};
		$('#list_stream_focus_bumper_top').focus(focusLastElementInPanel);
		$('#list_stream_focus_bumper_bottom').focus(focusOnCloseButton);
		if (shouldAutoFocus)
			focusOnCloseButton();
			
		resizeStreamReader($div);
		$(window).bind('resize.streamreader', function() {
			unfreezeTableWidth();
			if ($div.parent().length === 0) {
				$(window).unbind('resize.streamreader');
				return;
			}
			resizeStreamReader($div);
		})
	}
	function setListWrapperStyles(stylesObject) {
		var $listWrapper = $(wrapperSelector);
		if ($listWrapper.length === 0){
			return;
		}
		$listWrapper.closest('body').css(stylesObject);
	}
	function setListStyles(stylesObject) {
		var $listWrapper = $(wrapperSelector);
		if ($listWrapper.length === 0){
			return;
		}
		$listWrapper.find('.list_div_parent').css(stylesObject);
	}
	function resizeStreamReader($div) {
		freezeTableWidth();
		if(isPolarisTemplate()) {
			var width = $div.outerWidth();
			var listWrapperStyles = {
				'padding-inline-end': width
			};
			setListStyles(listWrapperStyles);
		} else {
			var width = $div.outerWidth() + closeButtonPadding;
			var listWrapperStyles = {
				'position': 'absolute',
				'padding-right': width
			};
			setListWrapperStyles(listWrapperStyles);
		}
var top = 50;
		if (typeof g_form == 'undefined')
			top = $('.list_nav_spacer').offset().top;
		else
			top = $('.section_header_content_no_scroll').offset().top;
		$div.css('top', top);
		if ("ontouchstart" in window) {
			$div.css('absolute');
			window.scrollTo(0, top);
		}
	}
	$('body').on('click', '.list_stream_reader_close', function() {
		isOpen = false;
		var $readerDiv = $(this).closest('.list_stream_reader');
		closeStreamReader($readerDiv);
		if ($listStreamBtn.length > 0) {
			$listStreamBtn.attr("aria-expanded", isOpen);
			$listStreamBtn.focus();
		}
		else if ($formStreamBtn.length > 0) {
			$formStreamBtn.attr("aria-expanded", isOpen);
			$formStreamBtn.focus();
		}
	});
	function closeStreamReader($readerDiv) {
		unfreezeTableWidth();
		$readerDiv.remove();
		if(isPolarisTemplate()) {
			var listWrapperStyles = {
				'padding-inline-end': 0
			};
			setListStyles(listWrapperStyles);
		} else {
			var listWrapperStyles = {
				'position': '',
				'padding-right': 0
			};
			setListWrapperStyles(listWrapperStyles);
		}
	}
	function freezeTableWidth() {
		$('table.list_table').each(function(index, el) {
			var $el = $(el);
			var width = $el.width();
			$el.css('width', width);
		})
	}
	function unfreezeTableWidth() {
		$('table.list_table').each(function(index, el) {
			$(el).css('width', '');
		})
	}
});
;
/*! RESOURCE: /scripts/doctype/GlideWebAnalytics.js */
var GlideWebAnalytics = (function() {
		function subscribe() {
			
			window.snWebaConfig = window.snWebaConfig || {};
			
			if (window.snWebaConfig.subscribed && window.snWebaConfig.subscribed == true)
				return;
				
			var ambClient = getAMB();
		
			if (ambClient == undefined || ambClient == "")
				return;
			
var webaChannelId = "/weba/config";
			var webaCh = ambClient.getChannel(webaChannelId);
			webaCh.subscribe(function(response) {
	
				if (window.snWebaConfig == undefined || window.snWebaConfig == null)
					window.snWebaConfig = {};
	
				var oldConfig = {
					siteId : (window.snWebaConfig.siteId)? window.snWebaConfig.siteId: "0" ,
					trackerURL : (window.snWebaConfig.trackerURL)? window.snWebaConfig.trackerURL: ""
				};
	
				window.snWebaConfig.siteId = response.data.weba_site_id;
				window.snWebaConfig.trackerURL = response.data.weba_rx_url;
				window.snWebaConfig.webaScriptPath = response.data.weba_script_path;
	
				handleConfigUpdate(oldConfig, window.snWebaConfig);
			});
			ambClient.connect();
			window.snWebaConfig.subscribed = true;
		}
		
	function getAMB(){
		
		var ambClient = window.snWebaConfig.ambClient;
		if (ambClient)
			return ambClient;
		
		window.snWebaConfig.ambClient = (window.g_ambClient) ? window.g_ambClient : ((window.amb)? window.amb.getClient(): "");
		
		return window.snWebaConfig.ambClient;
	}
	
	function handleConfigUpdate(oldConfig, newConfig) {
		
		if (shouldRemoveTracker(oldConfig, newConfig))
			removeTracker();
		
		else if (shouldUpdateTracker(oldConfig, newConfig))
			updateTracker(oldConfig, newConfig);
		
		else if (shouldInsertTracker(oldConfig, newConfig))
			insertTracker(newConfig);
	}
	
	function shouldRemoveTracker(oldConfig, newConfig){
		if (newConfig.siteId == "0" || newConfig.trackerURL == "")
			return true;
		
		return false;
	}
	
	function shouldUpdateTracker(oldConfig, newConfig){
		
		if (oldConfig.siteId && oldConfig.siteId != "0" && oldConfig.siteId != newConfig.siteId)
			return true;
		
		if (oldConfig.trackerURL && oldConfig.trackerURL != newConfig.trackerURL)
			return true;
		
		return false;
	}
	
	function shouldInsertTracker(oldConfig, newConfig){
		
		if (oldConfig.siteId == undefined || oldConfig.siteId == "0")
			return true;
		
		if (oldConfig.trackerURL == undefined || oldConfig.trackerURL == "")
			return true;
		
		return false;
	}
	
	function removeTracker() {
		
		if (!trackerExists())
			return;
		
		removeWebaTracker();
		removeWebaScript();
		removeWebaElements();
	}
	
	function removeWebaTracker() {
		
		var document =  window.parent.document;
		
		var trackerScriptId = "webaTracker";
		var trackEle = document.getElementById(trackerScriptId);
		trackEle.parentNode.removeChild(trackEle);
	}
	
	function removeWebaScript() {
		
		var document =  window.parent.document;
		var asyncTrackEle = document.getElementById('webaScript');
		
		if (asyncTrackEle == undefined)
			return;
		
		var src = asyncTrackEle.src;
		
		if (src != undefined && src.indexOf("piwik") > 0) 
			asyncTrackEle.parentNode.removeChild(asyncTrackEle);
	}
	
	function removeWebaElements() {
		
		var document =  window.parent.document;
		var webaEle = document.getElementsByClassName("weba");
		var webaSize = webaEle.length - 1;
		
		while (webaSize >= 0){
			webaEle[webaSize].parentNode.removeChild(webaEle[webaSize]);
			webaSize--;
		}
	}
	
	function updateTracker(oldConfig, newConfig) {
		
		if (!trackerExists())
			return;
		
		var document =  window.parent.document;
		var head = document.head || document.getElementsByTagName('head')[0];
		
		var updateScript = "_paq.push(['setSiteId', " + newConfig.siteId + "]);" + "_paq.push(['setTrackerUrl', " + "'" + newConfig.trackerURL + "'" + "]);";
		var uEle = window.document.createElement("script");
		uEle.text = updateScript;
		uEle.className = "weba";
		head.appendChild(uEle);
	}
	
	function insertTracker(newConfig, additionalData) {
		
		var document =  window.parent.document;
		var head = document.head || document.getElementsByTagName('head')[0];
		
		if (trackerExists()) 
			return;
		
		if (!isConfigValid(newConfig))
			return;
		
		var trackerScript = generateTrackerScript(newConfig, additionalData);
		
		var trackerElement = getOrCreateTracker();
		trackerElement.text = trackerScript;
		
		head.appendChild(trackerElement);
	}
			
	function applyTracker(additionalData) {
		insertTracker(window.snWebaConfig, additionalData);
		subscribe();
	}
	function applyTrackEvent(category, key, value, additionalValue) {
		
		insertEventTracker(category, key, value, additionalValue);
		subscribe();
	}
	
	function insertEventTracker(category, key, value, additionalValue) {
		
		if (!isConfigValid(window.snWebaConfig))
			return;
		if (!trackerExists())
			insertTracker(window.snWebaConfig);
		
		if (typeof category != "string" || typeof key != "string" || typeof value != "string")
			return;
		
		if (additionalValue)
			additionalValue = (typeof additionalValue == "number")? additionalValue: 0;
		var eventItems = [ "trackEvent", category, key, value, additionalValue ];
		var eventScript = "_paq.push(" + JSON.stringify(eventItems) + ");";
		
		var document =  window.parent.document;
		var head = document.head || document.getElementsByTagName('head')[0];
		var scriptEle = window.document.createElement("script");
		scriptEle.className = "weba";
		scriptEle.text = eventScript;
		
		head.appendChild(scriptEle);
	}
	
	function trackerExists() {
		
		var document =  window.parent.document;
		
		var trackEle = document.getElementById("webaTracker");
		
		if (trackEle)
			return true;
		
		return false;
	}
	
	function isConfigValid(newConfig) {
		
		var zero = "0";		
		var webaSiteId = (newConfig && newConfig.siteId) ? newConfig.siteId : zero;
		var trackerURL = (newConfig && newConfig.trackerURL) ? newConfig.trackerURL : "";
	
		if (webaSiteId == null || webaSiteId == "")
			return false;
		
		if (webaSiteId == zero )
			return false;
		
		if (trackerURL == null || trackerURL == "")
			return false;
		
		return true;
	}
	
	function getOrCreateTracker() {
		
		var trackerScriptId = "webaTracker";
		
		var document = window.parent.document;
		
		var trackEle = document.getElementById(trackerScriptId);
		
		if (trackEle)
			return trackEle;
			
		trackEle = document.createElement("script");
		trackEle.id = trackerScriptId;
trackEle.type = "text/javascript";
		
		return trackEle;	
	}
	
	function getUserId(additionalData) {
		
		if (window.NOW && window.NOW.user_id && window.NOW.user_id != "")
			return window.NOW.user_id;
		
		else if (additionalData && additionalData.userId){
			
			return additionalData.userId;
		}
		
		else if (window.NOW && window.NOW.session_id)
			return window.NOW.session_id;
		
		else {
			
			var userObj = (window.NOW)? window.NOW.user: null;
			
			if (userObj && userObj.userID)
				return userObj.userID;
		}
		
		return "";
	}
	
	function generateTrackerScript(webaConfig, additionalData) {
		
		var trackerURL = webaConfig.trackerURL;
		
if (trackerURL.endsWith("/"))
			trackerURL = webaConfig.trackerURL.substring(0, trackerURL.length - 1);
		
		var userId = getUserId(additionalData);
			
		var script = "var _paq = _paq || [];";	
		
		if (userId && userId != ""){
			script += "_paq.push(['setUserId', '" + userId + "']);";
		}
		
		script += "_paq.push(['trackPageView']); _paq.push(['enableLinkTracking']);";		
		script += "(function() {_paq.push(['setTrackerUrl','" + trackerURL +  "']);" 
				+ "_paq.push(['setSiteId', " + webaConfig.siteId + "]);" 
+ "var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0]; g.type='text/javascript'; g.async=true; "
				+ "g.defer=true; g.src='" + webaConfig.webaScriptPath + "'; " 
				+ "g.id='webaScript';s.parentNode.insertBefore(g,s); })();";
		
		return script;
	}
	
	var api = {	
			
				trackPage: function(additionalData) {
										
					if (window.document.readyState == "complete") 
						applyTracker(additionalData);
					
					else
						window.addEventListener("load", function() {
							applyTracker(additionalData);
						},	false);
					
				},
			
				trackEvent: function(category, key, value, additionalValue, delayInMs) {
					if (delayInMs == undefined)
						delayInMs = 3000;
					
					window.setTimeout(function() {
						applyTrackEvent(category, key, value, additionalValue);
					}, delayInMs);
					
				}
	}
	
	return api;
})();
;
;
/*! RESOURCE: /scripts/js_includes_weba.js */
/*! RESOURCE: /scripts/now_ux_metrics.js */
var GlideUXMetrics = (function () {
	function setMetaData(eventName, data) {
		var data = data || {};
		if (eventName == 'USER_NAVIGATE'  || eventName == 'EXPERIENCE_START') {
			var meta = data.meta || {};
			meta.url =  meta.url || (meta.pageTitle ? meta.url : window.location.pathname + window.location.search);
meta.pageTitle = meta.pageTitle || (window.document.title || '').split(/\s\|\s/)[0];
			meta.selectedContent = meta.selectedContent || {};
			if (!meta.selectedContent.isSeismicApp)
				meta.selectedContent.isSeismicApp = false;
		}
		return data;
	}
	function track(eventName, data, config) {
		if (!eventName) return;
		var payload = {
			"eventName": eventName, "data": setMetaData(eventName, data), "config": config
		}
		window.top.dispatchEvent(new CustomEvent('GLIDE_UX_METRICS', {detail: payload}));
	}
	function trackPerformance(key, metrics) {
		if (!isPerformanceMonitoringEnabled()) return;
		if (!key || !metrics) return;
		metrics = metrics instanceof Array? metrics: [metrics];
		var payload = {
			eventName: '$PERF-DATA',
			data: {key, metrics},
			config: {level: 5, type: 'usage'}
		};
		window.top.dispatchEvent(new CustomEvent('GLIDE_UX_METRICS', {detail: payload}));
	}
	function isPerformanceMonitoringEnabled() {
		var isGlobalPerfEnabled = !!('true' === 'true');
		var isUi16PerfEnabled = !!('true' === 'true');
		return isGlobalPerfEnabled && isUi16PerfEnabled;
	}
	return {
		track: track,
		trackPerformance: trackPerformance
	};
})();
;
/*! RESOURCE: /scripts/classic/ux_metrics-bundle.js */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("@devsnc/ux-metrics-client-interaction-subscriber")):"function"==typeof define&&define.amd?define(["@devsnc/ux-metrics-client-interaction-subscriber"],e):"object"==typeof exports?exports.ux_metrics_runtime=e(require("@devsnc/ux-metrics-client-interaction-subscriber")):(t.nowUiClassic=t.nowUiClassic||{},t.nowUiClassic.ux_metrics_runtime=e(t["@devsnc/ux-metrics-client-interaction-subscriber"]))}(window,(function(t){return function(t){function e(e){for(var r,o,i=e[0],a=e[1],u=0,s=[];u<i.length;u++)o=i[u],Object.prototype.hasOwnProperty.call(n,o)&&n[o]&&s.push(n[o][0]),n[o]=0;for(r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r]);for(c&&c(e);s.length;)s.shift()()}var r={},n={0:0};function o(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.e=function(){return Promise.resolve()},o.m=t,o.c=r,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(r,n,function(e){return t[e]}.bind(null,n));return r},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o.oe=function(t){throw console.error(t),t};var i=window.webpackJsonp=window.webpackJsonp||[],a=i.push.bind(i);i.push=e,i=i.slice();for(var u=0;u<i.length;u++)e(i[u]);var c=a;return o(o.s=269)}([function(t,e,r){var n=r(1),o=r(24).f,i=r(25),a=r(16),u=r(142),c=r(109),s=r(85);t.exports=function(t,e){var r,f,l,p,d,v=t.target,h=t.global,y=t.stat;if(r=h?n:y?n[v]||u(v,{}):(n[v]||{}).prototype)for(f in e){if(p=e[f],l=t.noTargetGet?(d=o(r,f))&&d.value:r[f],!s(h?f:v+(y?".":"#")+f,t.forced)&&void 0!==l){if(typeof p==typeof l)continue;c(p,l)}(t.sham||l&&l.sham)&&i(p,"sham",!0),a(r,f,p,t)}}},function(t,e,r){(function(e){var r=function(t){return t&&t.Math==Math&&t};t.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof e&&e)||function(){return this}()||Function("return this")()}).call(this,r(181))},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,r){var n=r(81),o=Function.prototype,i=o.bind,a=o.call,u=n&&i.bind(a,a);t.exports=n?function(t){return t&&u(t)}:function(t){return t&&function(){return a.apply(t,arguments)}}},function(t,e,r){var n=r(2);t.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(t,e,r){var n=r(1),o=r(7),i=n.String,a=n.TypeError;t.exports=function(t){if(o(t))return t;throw a(i(t)+" is not an object")}},function(t,e,r){var n=r(81),o=Function.prototype.call;t.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},function(t,e,r){var n=r(9);t.exports=function(t){return"object"==typeof t?null!==t:n(t)}},function(t,e,r){var n=r(1),o=r(67),i=r(11),a=r(68),u=r(65),c=r(182),s=o("wks"),f=n.Symbol,l=f&&f.for,p=c?f:f&&f.withoutSetter||a;t.exports=function(t){if(!i(s,t)||!u&&"string"!=typeof s[t]){var e="Symbol."+t;u&&i(f,t)?s[t]=f[t]:s[t]=c&&l?l(e):p(e)}return s[t]}},function(t,e){t.exports=function(t){return"function"==typeof t}},function(t,e,r){var n=r(1),o=r(55),i=n.String;t.exports=function(t){if("Symbol"===o(t))throw TypeError("Cannot convert a Symbol value to a string");return i(t)}},function(t,e,r){var n=r(3),o=r(14),i=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return i(o(t),e)}},function(t,e,r){"use strict";var n,o,i,a=r(157),u=r(4),c=r(1),s=r(9),f=r(7),l=r(11),p=r(55),d=r(66),v=r(25),h=r(16),y=r(13).f,g=r(35),b=r(37),m=r(39),x=r(8),w=r(68),E=c.Int8Array,S=E&&E.prototype,T=c.Uint8ClampedArray,O=T&&T.prototype,A=E&&b(E),_=S&&b(S),I=Object.prototype,P=c.TypeError,R=x("toStringTag"),j=w("TYPED_ARRAY_TAG"),C=w("TYPED_ARRAY_CONSTRUCTOR"),N=a&&!!m&&"Opera"!==p(c.opera),k=!1,M={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},L={BigInt64Array:8,BigUint64Array:8},D=function(t){if(!f(t))return!1;var e=p(t);return l(M,e)||l(L,e)};for(n in M)(i=(o=c[n])&&o.prototype)?v(i,C,o):N=!1;for(n in L)(i=(o=c[n])&&o.prototype)&&v(i,C,o);if((!N||!s(A)||A===Function.prototype)&&(A=function(){throw P("Incorrect invocation")},N))for(n in M)c[n]&&m(c[n],A);if((!N||!_||_===I)&&(_=A.prototype,N))for(n in M)c[n]&&m(c[n].prototype,_);if(N&&b(O)!==_&&m(O,_),u&&!l(_,R))for(n in k=!0,y(_,R,{get:function(){return f(this)?this[j]:void 0}}),M)c[n]&&v(c[n],j,n);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:N,TYPED_ARRAY_CONSTRUCTOR:C,TYPED_ARRAY_TAG:k&&j,aTypedArray:function(t){if(D(t))return t;throw P("Target is not a typed array")},aTypedArrayConstructor:function(t){if(s(t)&&(!m||g(A,t)))return t;throw P(d(t)+" is not a typed array constructor")},exportTypedArrayMethod:function(t,e,r,n){if(u){if(r)for(var o in M){var i=c[o];if(i&&l(i.prototype,t))try{delete i.prototype[t]}catch(r){try{i.prototype[t]=e}catch(t){}}}_[t]&&!r||h(_,t,r?e:N&&S[t]||e,n)}},exportTypedArrayStaticMethod:function(t,e,r){var n,o;if(u){if(m){if(r)for(n in M)if((o=c[n])&&l(o,t))try{delete o[t]}catch(t){}if(A[t]&&!r)return;try{return h(A,t,r?e:N&&A[t]||e)}catch(t){}}for(n in M)!(o=c[n])||o[t]&&!r||h(o,t,e)}},isView:function(t){if(!f(t))return!1;var e=p(t);return"DataView"===e||l(M,e)||l(L,e)},isTypedArray:D,TypedArray:A,TypedArrayPrototype:_}},function(t,e,r){var n=r(1),o=r(4),i=r(184),a=r(185),u=r(5),c=r(52),s=n.TypeError,f=Object.defineProperty,l=Object.getOwnPropertyDescriptor;e.f=o?a?function(t,e,r){if(u(t),e=c(e),u(r),"function"==typeof t&&"prototype"===e&&"value"in r&&"writable"in r&&!r.writable){var n=l(t,e);n&&n.writable&&(t[e]=r.value,r={configurable:"configurable"in r?r.configurable:n.configurable,enumerable:"enumerable"in r?r.enumerable:n.enumerable,writable:!1})}return f(t,e,r)}:f:function(t,e,r){if(u(t),e=c(e),u(r),i)try{return f(t,e,r)}catch(t){}if("get"in r||"set"in r)throw s("Accessors not supported");return"value"in r&&(t[e]=r.value),t}},function(t,e,r){var n=r(1),o=r(19),i=n.Object;t.exports=function(t){return i(o(t))}},function(t,e,r){var n=r(1),o=r(9),i=function(t){return o(t)?t:void 0};t.exports=function(t,e){return arguments.length<2?i(n[t]):n[t]&&n[t][e]}},function(t,e,r){var n=r(1),o=r(9),i=r(25),a=r(143),u=r(142);t.exports=function(t,e,r,c){var s=!!c&&!!c.unsafe,f=!!c&&!!c.enumerable,l=!!c&&!!c.noTargetGet,p=c&&void 0!==c.name?c.name:e;return o(r)&&a(r,p,c),t===n?(f?t[e]=r:u(e,r),t):(s?!l&&t[e]&&(f=!0):delete t[e],f?t[e]=r:i(t,e,r),t)}},function(t,e,r){var n=r(29);t.exports=function(t){return n(t.length)}},function(t,e){t.exports=!1},function(t,e,r){var n=r(1).TypeError;t.exports=function(t){if(null==t)throw n("Can't call method on "+t);return t}},function(t,e,r){var n=r(1),o=r(9),i=r(66),a=n.TypeError;t.exports=function(t){if(o(t))return t;throw a(i(t)+" is not a function")}},function(t,e,r){var n,o,i,a=r(186),u=r(1),c=r(3),s=r(7),f=r(25),l=r(11),p=r(141),d=r(108),v=r(83),h=u.TypeError,y=u.WeakMap;if(a||p.state){var g=p.state||(p.state=new y),b=c(g.get),m=c(g.has),x=c(g.set);n=function(t,e){if(m(g,t))throw new h("Object already initialized");return e.facade=t,x(g,t,e),e},o=function(t){return b(g,t)||{}},i=function(t){return m(g,t)}}else{var w=d("state");v[w]=!0,n=function(t,e){if(l(t,w))throw new h("Object already initialized");return e.facade=t,f(t,w,e),e},o=function(t){return l(t,w)?t[w]:{}},i=function(t){return l(t,w)}}t.exports={set:n,get:o,has:i,enforce:function(t){return i(t)?o(t):n(t,{})},getterFor:function(t){return function(e){var r;if(!s(e)||(r=o(e)).type!==t)throw h("Incompatible receiver, "+t+" required");return r}}}},function(t,e){var r=Math.ceil,n=Math.floor;t.exports=function(t){var e=+t;return e!=e||0===e?0:(e>0?n:r)(e)}},function(t,e,r){var n=r(38),o=r(3),i=r(82),a=r(14),u=r(17),c=r(88),s=o([].push),f=function(t){var e=1==t,r=2==t,o=3==t,f=4==t,l=6==t,p=7==t,d=5==t||l;return function(v,h,y,g){for(var b,m,x=a(v),w=i(x),E=n(h,y),S=u(w),T=0,O=g||c,A=e?O(v,S):r||p?O(v,0):void 0;S>T;T++)if((d||T in w)&&(m=E(b=w[T],T,x),t))if(e)A[T]=m;else if(m)switch(t){case 3:return!0;case 5:return b;case 6:return T;case 2:s(A,b)}else switch(t){case 4:return!1;case 7:s(A,b)}return l?-1:o||f?f:A}};t.exports={forEach:f(0),map:f(1),filter:f(2),some:f(3),every:f(4),find:f(5),findIndex:f(6),filterReject:f(7)}},function(t,e,r){var n=r(4),o=r(6),i=r(105),a=r(34),u=r(26),c=r(52),s=r(11),f=r(184),l=Object.getOwnPropertyDescriptor;e.f=n?l:function(t,e){if(t=u(t),e=c(e),f)try{return l(t,e)}catch(t){}if(s(t,e))return a(!o(i.f,t,e),t[e])}},function(t,e,r){var n=r(4),o=r(13),i=r(34);t.exports=n?function(t,e,r){return o.f(t,e,i(1,r))}:function(t,e,r){return t[e]=r,t}},function(t,e,r){var n=r(82),o=r(19);t.exports=function(t){return n(o(t))}},function(t,e,r){var n=r(190),o=r(11),i=r(189),a=r(13).f;t.exports=function(t){var e=n.Symbol||(n.Symbol={});o(e,t)||a(e,t,{value:i.f(t)})}},function(t,e,r){var n=r(3),o=n({}.toString),i=n("".slice);t.exports=function(t){return i(o(t),8,-1)}},function(t,e,r){var n=r(22),o=Math.min;t.exports=function(t){return t>0?o(n(t),9007199254740991):0}},function(t,e,r){var n,o=r(5),i=r(147),a=r(145),u=r(83),c=r(188),s=r(106),f=r(108),l=f("IE_PROTO"),p=function(){},d=function(t){return"<script>"+t+"<\/script>"},v=function(t){t.write(d("")),t.close();var e=t.parentWindow.Object;return t=null,e},h=function(){try{n=new ActiveXObject("htmlfile")}catch(t){}var t,e;h="undefined"!=typeof document?document.domain&&n?v(n):((e=s("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(d("document.F=Object")),t.close(),t.F):v(n);for(var r=a.length;r--;)delete h.prototype[a[r]];return h()};u[l]=!0,t.exports=Object.create||function(t,e){var r;return null!==t?(p.prototype=o(t),r=new p,p.prototype=null,r[l]=t):r=h(),void 0===e?r:i.f(r,e)}},function(t,e,r){var n=r(13).f,o=r(11),i=r(8)("toStringTag");t.exports=function(t,e,r){t&&!r&&(t=t.prototype),t&&!o(t,i)&&n(t,i,{configurable:!0,value:e})}},function(t,e,r){var n=r(3),o=r(19),i=r(10),a=/"/g,u=n("".replace);t.exports=function(t,e,r,n){var c=i(o(t)),s="<"+e;return""!==r&&(s+=" "+r+'="'+u(i(n),a,"&quot;")+'"'),s+">"+c+"</"+e+">"}},function(t,e,r){var n=r(2);t.exports=function(t){return n((function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3}))}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,r){var n=r(3);t.exports=n({}.isPrototypeOf)},function(t,e,r){var n=r(81),o=Function.prototype,i=o.apply,a=o.call;t.exports="object"==typeof Reflect&&Reflect.apply||(n?a.bind(i):function(){return a.apply(i,arguments)})},function(t,e,r){var n=r(1),o=r(11),i=r(9),a=r(14),u=r(108),c=r(150),s=u("IE_PROTO"),f=n.Object,l=f.prototype;t.exports=c?f.getPrototypeOf:function(t){var e=a(t);if(o(e,s))return e[s];var r=e.constructor;return i(r)&&e instanceof r?r.prototype:e instanceof f?l:null}},function(t,e,r){var n=r(3),o=r(20),i=r(81),a=n(n.bind);t.exports=function(t,e){return o(t),void 0===e?t:i?a(t,e):function(){return t.apply(e,arguments)}}},function(t,e,r){var n=r(3),o=r(5),i=r(195);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,r={};try{(t=n(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),e=r instanceof Array}catch(t){}return function(r,n){return o(r),i(n),e?t(r,n):r.__proto__=n,r}}():void 0)},function(t,e,r){var n=r(1),o=r(38),i=r(6),a=r(5),u=r(66),c=r(151),s=r(17),f=r(35),l=r(112),p=r(91),d=r(199),v=n.TypeError,h=function(t,e){this.stopped=t,this.result=e},y=h.prototype;t.exports=function(t,e,r){var n,g,b,m,x,w,E,S=r&&r.that,T=!(!r||!r.AS_ENTRIES),O=!(!r||!r.IS_ITERATOR),A=!(!r||!r.INTERRUPTED),_=o(e,S),I=function(t){return n&&d(n,"normal",t),new h(!0,t)},P=function(t){return T?(a(t),A?_(t[0],t[1],I):_(t[0],t[1])):A?_(t,I):_(t)};if(O)n=t;else{if(!(g=p(t)))throw v(u(t)+" is not iterable");if(c(g)){for(b=0,m=s(t);m>b;b++)if((x=P(t[b]))&&f(y,x))return x;return new h(!1)}n=l(t,g)}for(w=n.next;!(E=i(w,n)).done;){try{x=P(E.value)}catch(t){d(n,"throw",t)}if("object"==typeof x&&x&&f(y,x))return x}return new h(!1)}},function(t,e,r){var n=r(1),o=r(35),i=n.TypeError;t.exports=function(t,e){if(o(e,t))return t;throw i("Incorrect invocation")}},function(t,e,r){var n=r(15);t.exports=n("navigator","userAgent")||""},function(t,e,r){var n=r(20);t.exports=function(t,e){var r=t[e];return null==r?void 0:n(r)}},function(t,e,r){var n=r(22),o=Math.max,i=Math.min;t.exports=function(t,e){var r=n(t);return r<0?o(r+e,0):i(r,e)}},function(t,e,r){"use strict";var n=r(52),o=r(13),i=r(34);t.exports=function(t,e,r){var a=n(e);a in t?o.f(t,a,i(0,r)):t[a]=r}},function(t,e,r){var n=r(8),o=r(30),i=r(13),a=n("unscopables"),u=Array.prototype;null==u[a]&&i.f(u,a,{configurable:!0,value:o(null)}),t.exports=function(t){u[a][t]=!0}},function(t,e,r){"use strict";var n=r(2);t.exports=function(t,e){var r=[][t];return!!r&&n((function(){r.call(null,e||function(){return 1},1)}))}},function(t,e,r){"use strict";var n=r(0),o=r(127);n({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(6),a=r(4),u=r(172),c=r(12),s=r(116),f=r(41),l=r(34),p=r(25),d=r(164),v=r(29),h=r(210),y=r(239),g=r(52),b=r(11),m=r(55),x=r(7),w=r(59),E=r(30),S=r(35),T=r(39),O=r(54).f,A=r(240),_=r(23).forEach,I=r(74),P=r(13),R=r(24),j=r(21),C=r(71),N=j.get,k=j.set,M=P.f,L=R.f,D=Math.round,U=o.RangeError,F=s.ArrayBuffer,B=F.prototype,G=s.DataView,V=c.NATIVE_ARRAY_BUFFER_VIEWS,H=c.TYPED_ARRAY_CONSTRUCTOR,z=c.TYPED_ARRAY_TAG,W=c.TypedArray,Y=c.TypedArrayPrototype,q=c.aTypedArrayConstructor,K=c.isTypedArray,$=function(t,e){q(t);for(var r=0,n=e.length,o=new t(n);n>r;)o[r]=e[r++];return o},X=function(t,e){M(t,e,{get:function(){return N(this)[e]}})},J=function(t){var e;return S(B,t)||"ArrayBuffer"==(e=m(t))||"SharedArrayBuffer"==e},Q=function(t,e){return K(t)&&!w(e)&&e in t&&d(+e)&&e>=0},Z=function(t,e){return e=g(e),Q(t,e)?l(2,t[e]):L(t,e)},tt=function(t,e,r){return e=g(e),!(Q(t,e)&&x(r)&&b(r,"value"))||b(r,"get")||b(r,"set")||r.configurable||b(r,"writable")&&!r.writable||b(r,"enumerable")&&!r.enumerable?M(t,e,r):(t[e]=r.value,t)};a?(V||(R.f=Z,P.f=tt,X(Y,"buffer"),X(Y,"byteOffset"),X(Y,"byteLength"),X(Y,"length")),n({target:"Object",stat:!0,forced:!V},{getOwnPropertyDescriptor:Z,defineProperty:tt}),t.exports=function(t,e,r){var a=t.match(/\d+$/)[0]/8,c=t+(r?"Clamped":"")+"Array",s="get"+t,l="set"+t,d=o[c],g=d,b=g&&g.prototype,m={},w=function(t,e){M(t,e,{get:function(){return function(t,e){var r=N(t);return r.view[s](e*a+r.byteOffset,!0)}(this,e)},set:function(t){return function(t,e,n){var o=N(t);r&&(n=(n=D(n))<0?0:n>255?255:255&n),o.view[l](e*a+o.byteOffset,n,!0)}(this,e,t)},enumerable:!0})};V?u&&(g=e((function(t,e,r,n){return f(t,b),C(x(e)?J(e)?void 0!==n?new d(e,y(r,a),n):void 0!==r?new d(e,y(r,a)):new d(e):K(e)?$(g,e):i(A,g,e):new d(h(e)),t,g)})),T&&T(g,W),_(O(d),(function(t){t in g||p(g,t,d[t])})),g.prototype=b):(g=e((function(t,e,r,n){f(t,b);var o,u,c,s=0,l=0;if(x(e)){if(!J(e))return K(e)?$(g,e):i(A,g,e);o=e,l=y(r,a);var p=e.byteLength;if(void 0===n){if(p%a)throw U("Wrong length");if((u=p-l)<0)throw U("Wrong length")}else if((u=v(n)*a)+l>p)throw U("Wrong length");c=u/a}else c=h(e),o=new F(u=c*a);for(k(t,{buffer:o,byteOffset:l,byteLength:u,length:c,view:new G(o)});s<c;)w(t,s++)})),T&&T(g,W),b=g.prototype=E(Y)),b.constructor!==g&&p(b,"constructor",g),p(b,H,g),z&&p(b,z,c);var S=g!=d;m[c]=g,n({global:!0,constructor:!0,forced:S,sham:!V},m),"BYTES_PER_ELEMENT"in g||p(g,"BYTES_PER_ELEMENT",a),"BYTES_PER_ELEMENT"in b||p(b,"BYTES_PER_ELEMENT",a),I(c)}):t.exports=function(){}},function(t,e){var r=Array.isArray;t.exports=r},function(t,e,r){var n=r(253),o="object"==typeof self&&self&&self.Object===Object&&self,i=n||o||Function("return this")();t.exports=i},function(t,e,r){var n=r(140),o=r(59);t.exports=function(t){var e=n(t,"string");return o(e)?e:e+""}},function(t,e,r){var n,o,i=r(1),a=r(42),u=i.process,c=i.Deno,s=u&&u.versions||c&&c.version,f=s&&s.v8;f&&(o=(n=f.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(o=+n[1]),t.exports=o},function(t,e,r){var n=r(187),o=r(145).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return n(t,o)}},function(t,e,r){var n=r(1),o=r(146),i=r(9),a=r(28),u=r(8)("toStringTag"),c=n.Object,s="Arguments"==a(function(){return arguments}());t.exports=o?a:function(t){var e,r,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=c(t),u))?r:s?a(e):"Object"==(n=a(e))&&i(e.callee)?"Arguments":n}},function(t,e,r){var n=r(1).TypeError;t.exports=function(t,e){if(t<e)throw n("Not enough arguments");return t}},function(t,e,r){"use strict";r.r(e),r.d(e,"markTypes",(function(){return n})),r.d(e,"DEFAULT_LEVEL",(function(){return o}));var n={all:"all",usage:"usage",performance:"performance"},o=5},function(t,e,r){(function(e){t.exports=function(){var t={36486:function(t,e,r){var n,o;n=function(){"use strict";function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function e(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function n(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function o(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&a(t,e)}function i(t){return(i=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function a(t,e){return(a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t})(t,e)}function u(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function c(t,e){if(e&&("object"==typeof e||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return u(t)}function s(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=i(t);if(e){var o=i(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return c(this,r)}}function f(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=i(t)););return t}function l(){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=f(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}}).apply(this,arguments)}var p=function(){function e(){t(this,e),Object.defineProperty(this,"listeners",{value:{},writable:!0,configurable:!0})}return n(e,[{key:"addEventListener",value:function(t,e,r){t in this.listeners||(this.listeners[t]=[]),this.listeners[t].push({callback:e,options:r})}},{key:"removeEventListener",value:function(t,e){if(t in this.listeners)for(var r=this.listeners[t],n=0,o=r.length;n<o;n++)if(r[n].callback===e)return void r.splice(n,1)}},{key:"dispatchEvent",value:function(t){if(t.type in this.listeners){for(var e=this.listeners[t.type].slice(),r=0,n=e.length;r<n;r++){var o=e[r];try{o.callback.call(this,t)}catch(t){Promise.resolve().then((function(){throw t}))}o.options&&o.options.once&&this.removeEventListener(t.type,o.callback)}return!t.defaultPrevented}}}]),e}(),d=function(e){o(a,e);var r=s(a);function a(){var e;return t(this,a),(e=r.call(this)).listeners||p.call(u(e)),Object.defineProperty(u(e),"aborted",{value:!1,writable:!0,configurable:!0}),Object.defineProperty(u(e),"onabort",{value:null,writable:!0,configurable:!0}),Object.defineProperty(u(e),"reason",{value:void 0,writable:!0,configurable:!0}),e}return n(a,[{key:"toString",value:function(){return"[object AbortSignal]"}},{key:"dispatchEvent",value:function(t){"abort"===t.type&&(this.aborted=!0,"function"==typeof this.onabort&&this.onabort.call(this,t)),l(i(a.prototype),"dispatchEvent",this).call(this,t)}}]),a}(p),v=function(){function e(){t(this,e),Object.defineProperty(this,"signal",{value:new d,writable:!0,configurable:!0})}return n(e,[{key:"abort",value:function(t){var e;try{e=new Event("abort")}catch(t){"undefined"!=typeof document?document.createEvent?(e=document.createEvent("Event")).initEvent("abort",!1,!1):(e=document.createEventObject()).type="abort":e={type:"abort",bubbles:!1,cancelable:!1}}var r=t;if(void 0===r)if("undefined"==typeof document)(r=new Error("This operation was aborted")).name="AbortError";else try{r=new DOMException("signal is aborted without reason")}catch(t){(r=new Error("This operation was aborted")).name="AbortError"}this.signal.reason=r,this.signal.dispatchEvent(e)}},{key:"toString",value:function(){return"[object AbortController]"}}]),e}();"undefined"!=typeof Symbol&&Symbol.toStringTag&&(v.prototype[Symbol.toStringTag]="AbortController",d.prototype[Symbol.toStringTag]="AbortSignal"),function(t){(function(t){return t.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL?(console.log("__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill"),!0):"function"==typeof t.Request&&!t.Request.prototype.hasOwnProperty("signal")||!t.AbortController})(t)&&(t.AbortController=v,t.AbortSignal=d)}("undefined"!=typeof self?self:r.g)},void 0===(o=n.call(e,r,e,t))||(t.exports=o)},72933:function(t,e,r){"use strict";var n=r(17907)(r(96718));(0,n.default)(e,"__esModule",{value:!0});var o=r(7398),i=r(29484),a=r(19645),u=r(40355),c=function(){function t(){}return(0,n.default)(t,"baseUrl",{get:function(){return this.baseServerUrl},set:function(t){if(!(0,o.isNonEmptyString)(t))throw new a.SNTypeError("Server endpoint cannot be empty");this.baseServerUrl=(0,u.removeTrailingSlash)(t)},enumerable:!1,configurable:!0}),t.baseServerUrl="https://api-appsee.service-now.com",t.IS_PRODUCTION=!0,t.VERSION="2.2.0",t.DEFAULT_CLIENT_ID="0",t.DEFAULT_LOG_LEVEL=t.IS_PRODUCTION?i.LogLevel.error:i.LogLevel.debug,t.DEFAULT_TRACKING_CONSENT=i.TrackingLevel.Disabled,t.MAX_HEARTBEAT_CALL_ATTEMPTS=2,t.SYSTEM_PROPERTY_PREFIX="SN_",t.LOGGER_PREFIX="[SNAnalytics]",t}();e.default=c},10730:function(t,e,r){"use strict";var n=r(17907);r(41539),r(39714),(0,n(r(96718)).default)(e,"__esModule",{value:!0}),e.CatchAll=e.CatchAllAndReturn=e.Catch=void 0;var o=function(t){return t&&t.__esModule?t:{default:t}}(r(62870)),i=r(7398),a=function(t,e,r,n,o){if((0,i.isFunction)(r)&&n instanceof e)return r(n,t,o.toString());throw n};e.Catch=function(t,e){return function(r,n,o){var u=o.value;return o.value=function(){for(var r=this,o=[],c=0;c<arguments.length;c++)o[c]=arguments[c];try{var s=u.apply(this,o);return(0,i.isPromise)(s)?s.catch((function(o){return a(r,t,e,o,n)})):s}catch(r){return a(this,t,e,r,n)}},o}},e.CatchAllAndReturn=function(t){return(0,e.Catch)(Error,(function(e,r,n){return o.default.error("Fatal error in SNAnalytics:".concat(n,"."),e.message),t}))},e.CatchAll=(0,e.CatchAllAndReturn)(void 0)},23524:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0});var n=function(){function t(){}return t.getScreenDimension=function(){var t=window.screen;return{height:t.height||0,width:t.width||0}},t.getSystemLocale=function(){return window.navigator.language.toLowerCase()},t}();e.default=n},19645:function(t,e,r){"use strict";var n=r(17907);r(68309);var o,i=n(r(96776)),a=n(r(97499)),u=n(r(96718)),c=(o=function(t,e){return(o=i.default||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}o(t,e),t.prototype=null===e?(0,a.default)(e):(r.prototype=e.prototype,new r)});function s(t,e){(0,i.default)(t,e.prototype),t.name=t.constructor.name}(0,u.default)(e,"__esModule",{value:!0}),e.HttpError=e.SNTypeError=e.SNError=void 0;var f=function(t){function e(r){var n=t.call(this,"[SNAnalytics] ".concat(r))||this;return s(n,e),n}return c(e,t),e}(Error);e.SNError=f;var l=function(t){function e(r){var n=t.call(this,r)||this;return s(n,e),n}return c(e,t),e}(f);e.SNTypeError=l;var p=function(t){function e(r){var n=t.call(this,"Server call failed: ".concat(r))||this;return s(n,e),n.errorCode=r,n}return c(e,t),e}(f);e.HttpError=p},71736:function(t,e,r){"use strict";var n=r(17907);r(41539),r(39714);var o=n(r(6226)),i=n(r(33733)),a=n(r(57672)),u=n(r(96718)),c=n(r(24278)),s=n(r(87198)),f=n(r(39022)),l=n(r(11189)),p=n(r(35627)),d=function(t,e,r,n){return new(r||(r=o.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))},v=function(t,e){var r,n,o,u,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return u={next:s(0),throw:s(1),return:s(2)},"function"==typeof i.default&&(u[a.default]=function(){return this}),u;function s(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;u&&(u=0,i[0]&&(c=0)),c;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,n=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=e.call(t,c)}catch(t){i=[6,t],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}};(0,u.default)(e,"__esModule",{value:!0});var h=r(19645),y=function(t){return t&&t.__esModule?t:{default:t}}(r(62870)),g=r(43633),b=function(t){return void 0===t&&(t=0),new o.default((function(e){return(0,s.default)(e,t)}))},m=function(){function t(t,e){if(void 0===e&&(e=3e3),this.key=t,this.expiry=e,this.id=function t(){var e,r=Math.random();return r?(0,c.default)(e=r.toString(36)).call(e,2):t()}(),this.localStorage=window.localStorage,this.expiry<100)throw new Error("Lock should have a minimum expiry of ".concat(100,"ms"))}return t.prototype.lockName=function(t){var e;return(0,f.default)(e="sn:".concat(this.key)).call(e,t)},(0,u.default)(t.prototype,"outerLock",{get:function(){return this.lockName(":X")},enumerable:!1,configurable:!0}),(0,u.default)(t.prototype,"innerLock",{get:function(){return this.lockName(":Y")},enumerable:!1,configurable:!0}),t.prototype.tryGetLock=function(){return d(this,void 0,void 0,(function(){return v(this,(function(t){switch(t.label){case 0:return this.setLockHolder(this.outerLock),this.getLockHolderIdAndRemoveExpired(this.innerLock)?[2,!1]:(this.setLockHolder(this.innerLock),[4,b()]);case 1:return t.sent(),this.getLockHolderIdAndRemoveExpired(this.outerLock)===this.id?[2,!0]:[4,b(50)];case 2:return t.sent(),[2,this.getLockHolderIdAndRemoveExpired(this.innerLock)===this.id]}}))}))},t.prototype.acquire=function(){return d(this,void 0,void 0,(function(){var t;return v(this,(function(e){switch(e.label){case 0:t=(0,g.getTime)(),e.label=1;case 1:return(0,g.getTime)()-t<this.expiry?[4,this.tryGetLock()]:[3,4];case 2:var r;return e.sent()?(y.default.debug("Lock '".concat(this.key,"' acquired")),[2,{release:(0,l.default)(r=this.release).call(r,this)}]):[4,b(25*Math.random())];case 3:return e.sent(),[3,1];case 4:throw new h.SNError("Lock could not be acquired within ".concat(this.expiry,"ms"))}}))}))},t.prototype.release=function(){this.localStorage.removeItem(this.outerLock),this.localStorage.removeItem(this.innerLock),y.default.debug("Lock '".concat(this.key,"' released"))},t.prototype.setLockHolder=function(t){var e={id:this.id,expiresAt:(0,g.getTime)()+this.expiry};this.localStorage.setItem(t,(0,p.default)(e))},t.prototype.getLockHolderIdAndRemoveExpired=function(t){var e=this.localStorage.getItem(t);if(e){var r=JSON.parse(e);if(!((0,g.getTime)()>r.expiresAt))return r.id;this.localStorage.removeItem(t)}},t}();e.default=m},62870:function(t,e,r){"use strict";var n=r(17907);r(41539);var o=n(r(20474)),i=n(r(8446)),a=n(r(96718)),u=n(r(11189)),c=n(r(2018)),s=n(r(80040));(0,a.default)(e,"__esModule",{value:!0});var f=function(t){return t&&t.__esModule?t:{default:t}}(r(72933)),l=r(29484),p=r(7398),d=r(1483),v=r(10730),h=function(){function t(){this.logMethods={0:["debug"],1:["info"],2:["warn"],3:["error"]},this.handleLogLevel(f.default.DEFAULT_LOG_LEVEL);try{var t;this.channel=new BroadcastChannel("SNAnalytics.Logger"),this.channel.onmessage=(0,u.default)(t=this.onBroadcastMessage).call(t,this)}catch(t){this.debug("Broadcast channel is not supported")}}return t.prototype.onBroadcastMessage=function(t){this.handleLogLevel(t.data.logLevel)},t.prototype.notify=function(t){var e;return null===(e=this.channel)||void 0===e?void 0:e.postMessage({logLevel:t})},t.prototype.handleLogLevel=function(t,e){void 0===e&&(e=!1);var r=(0,d.tryGetEnumValue)(t,l.LogLevel,!0);if((0,p.isUndefined)(r))this.warn("Ignoring invalid log level:",t);else if(this.logLevel!==r){for(var n=0,o=(0,c.default)(this.logMethods);n<o.length;n++)for(var i=o[n],a=i[0],v=0,h=i[1];v<h.length;v++){var y,g=h[v];this[g]=(0,s.default)(a,10)>=r?(0,u.default)(y=console[g]).call(y,console,f.default.LOGGER_PREFIX):function(){}}e&&this.notify(r),this.logLevel=r}},t.prototype.setDebugLevel=function(t){this.handleLogLevel(t,!0)},t.prototype.debug=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r]},t.prototype.info=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r]},t.prototype.warn=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r]},t.prototype.error=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r]},function(t,e,r,n){var u,c=arguments.length,s=c<3?e:null===n?n=(0,i.default)(e,r):n;if("object"===("undefined"==typeof Reflect?"undefined":(0,o.default)(Reflect))&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,r,n);else for(var f=t.length-1;f>=0;f--)(u=t[f])&&(s=(c<3?u(s):c>3?u(e,r,s):u(e,r))||s);c>3&&s&&(0,a.default)(e,r,s)}([(0,v.Catch)(Error,(function(){}))],t.prototype,"onBroadcastMessage",null),t}();e.default=new h},29484:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0}),e.TrackingLevel=e.LogLevel=void 0,function(t){t[t.debug=0]="debug",t[t.info=1]="info",t[t.warn=2]="warn",t[t.error=3]="error"}(e.LogLevel||(e.LogLevel={})),function(t){t.Disabled="Disabled",t.Basic="Basic",t.Full="Full"}(e.TrackingLevel||(e.TrackingLevel={}))},61525:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0}),e.last=void 0,e.last=function(t){return t[t.length-1]}},43633:function(t,e,r){"use strict";var n=r(17907);r(74916),r(15306),(0,n(r(96718)).default)(e,"__esModule",{value:!0}),e.getUniqueTime=e.getTime=e.toDateString=e.toISOString=void 0,e.toISOString=function(t){return new Date(t).toISOString()},e.toDateString=function(t){return t.toLocaleString("en-GB",{timeZone:"UTC"}).replace(/,/g,"")},e.getTime=function(){return(new Date).getTime()};var o=(0,e.getTime)();e.getUniqueTime=function(){var t=(0,e.getTime)();return o=o>=t?o+1:t}},1483:function(t,e,r){"use strict";var n=r(17907),o=n(r(96718)),i=n(r(28222)),a=n(r(82865)),u=n(r(14418)),c=n(r(2018)),s=n(r(97606)),f=n(r(18492)),l=n(r(86)),p=n(r(80040));(0,o.default)(e,"__esModule",{value:!0}),e.getValuesOrDefaults=e.getValueOrDefault=e.tryGetEnumValue=e.mapValues=e.mapKeys=e.removeFalsyEntries=e.isEmptyObject=void 0;var d=r(7398);e.isEmptyObject=function(t){return 0===(0,i.default)(t).length},e.removeFalsyEntries=function(t){var e;return(0,a.default)((0,u.default)(e=(0,c.default)(t)).call(e,(function(t){var e=t[1];return Boolean(e)})))},e.mapKeys=function(t,e){var r;return(0,a.default)((0,s.default)(r=(0,c.default)(t)).call(r,(function(t){var r=t[0],n=t[1];return[e(n,r),n]})))},e.mapValues=function(t,e){var r;return(0,a.default)((0,s.default)(r=(0,c.default)(t)).call(r,(function(t){var r=t[0],n=t[1];return[r,e(n,r)]})))},e.tryGetEnumValue=function(t,e,r){var n;void 0===r&&(r=!1);try{var o,i=new f.default,a=new f.default;(0,l.default)(o=(0,c.default)(e)).call(o,(function(t){var e=t[0],n=t[1];(0,d.isNumber)((0,p.default)(e,10))||(i.set(r?e.toLowerCase():e,n),a.set(r&&(0,d.isString)(n)?n.toLowerCase():n,n))}));var u=r&&(0,d.isString)(t)?t.toLowerCase():t;return null!==(n=i.get(u))&&void 0!==n?n:a.get(u)}catch(t){return}},e.getValueOrDefault=function(t,e,r){return r(t)?t:e},e.getValuesOrDefaults=function(t,r,n){return(0,e.mapValues)(r,(function(r,o){return(0,e.getValueOrDefault)(t[o],r,n[o])}))}},64266:function(t,e,r){"use strict";var n=r(17907);r(41539),r(39714);var o=n(r(96718)),i=n(r(27043)),a=n(r(2018)),u=function(t){return t&&t.__esModule?t:{default:t}};(0,o.default)(e,"__esModule",{value:!0}),e.getValidProperties=e.isSystemPropertyKey=e.addSystemPropertyPrefix=void 0;var c=r(7398),s=u(r(62870)),f=r(43633),l=u(r(72933));e.addSystemPropertyPrefix=function(t){return l.default.SYSTEM_PROPERTY_PREFIX+t},e.isSystemPropertyKey=function(t){return(0,i.default)(t).call(t,l.default.SYSTEM_PROPERTY_PREFIX)};var p=function(t,e){return null===t||((0,c.isArray)(t)?e:(0,c.isNumber)(t)?t!==1/0&&t!==-1/0:(0,c.isString)(t)||(0,c.isDate)(t)||(0,c.isBoolean)(t))},d=function(t){return(0,c.isDate)(t)?(0,f.toDateString)(t):(0,c.isBoolean)(t)?t.toString():t};e.getValidProperties=function(t,r,n){for(var o={},i=0,u=(0,a.default)(t);i<u.length;i++){var f=u[i],l=f[0],v=f[1];if((0,c.isNonEmptyString)(l))if((0,e.isSystemPropertyKey)(l))s.default.error("Invalid property prefix for name:",l);else if(p(v=null!=v?v:n?null:"",r))if((0,c.isArray)(v)){for(var h=[],y=0,g=v;y<g.length;y++){var b=g[y];(0,c.isString)(b)?h.push(b):s.default.error("Invalid value",b,"for list",l)}o[l]=h}else o[l]=d(v);else s.default.error("Invalid value",v,"for property",l);else s.default.error("Invalid property name:",l)}return o}},40355:function(t,e,r){"use strict";var n=r(17907);r(74916),r(15306),r(66992),r(39575),r(41539),r(82472),r(92990),r(18927),r(33105),r(35035),r(74345),r(7174),r(32846),r(44731),r(77209),r(96319),r(58867),r(37789),r(33739),r(29368),r(14483),r(12056),r(3462),r(30678),r(27462),r(33824),r(55021),r(12974),r(15016),r(69600),r(39714),r(9653),(0,n(r(96718)).default)(e,"__esModule",{value:!0}),e.getGuid=e.removeTrailingSlash=void 0,e.removeTrailingSlash=function(t){return t.replace(/\/+$/,"")},e.getGuid=function(){return[1e7,1e3,4e3,8e3,1e11].join("-").replace(/[018]/g,(function(t){return(Number(t)^(window.crypto?15&window.crypto.getRandomValues(new Uint8Array(1))[0]:16*Math.random()|0)>>Number(t)/4).toString(16)})).replace(/-/g,"").toLowerCase()}},27250:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0}),e.normalizeAppUserId=void 0;var n=r(19645),o=r(7398);e.normalizeAppUserId=function(t){if(!(0,o.isNullOrUndefined)(t)&&!(0,o.isString)(t))throw new n.SNTypeError("User id must be a non empty string");return t||void 0}},7398:function(t,e,r){"use strict";var n=r(17907),o=n(r(96718)),i=n(r(81607)),a=n(r(8888)),u=n(r(58309)),c=n(r(58118)),s=n(r(3665));(0,o.default)(e,"__esModule",{value:!0}),e.isEnum=e.isPromise=e.isFunction=e.isArray=e.isObject=e.isDate=e.isBoolean=e.isPositiveInteger=e.isInteger=e.isNumber=e.isNonEmptyString=e.isString=e.isNullOrUndefined=e.isDefined=e.isUndefined=void 0,e.isUndefined=function(t){return void 0===t},e.isDefined=function(t){return!(0,e.isUndefined)(t)},e.isNullOrUndefined=function(t){return(0,e.isUndefined)(t)||null===t},e.isString=function(t){return"string"==typeof t},e.isNonEmptyString=function(t){return(0,e.isString)(t)&&Boolean((0,i.default)(t).call(t))},e.isNumber=function(t){return"number"==typeof t&&!(0,a.default)(t)},e.isInteger=function(t){return(0,e.isNumber)(t)&&t%1==0},e.isPositiveInteger=function(t,r){return void 0===r&&(r=!1),(0,e.isInteger)(t)&&(t>0||r&&0===t)},e.isBoolean=function(t){return"boolean"==typeof t},e.isDate=function(t){return t instanceof Date},e.isObject=function(t){return t===Object(t)&&t.constructor===Object},e.isArray=function(t){return(0,u.default)(t)},e.isFunction=function(t){return"function"==typeof t},e.isPromise=function(t){return!!t&&(0,e.isFunction)(t.then)&&(0,e.isFunction)(t.catch)},e.isEnum=function(t,e){var r;return(0,c.default)(r=(0,s.default)(t)).call(r,e)}},46737:function(t,e,r){"use strict";var n=r(17907)(r(96718)),o=function(t){return t&&t.__esModule?t:{default:t}};(0,n.default)(e,"__esModule",{value:!0});var i=o(r(32213)),a=o(r(18629)),u=o(r(48606)),c=o(r(49107)),s=o(r(83660)),f=o(r(30185)),l=o(r(81706)),p=r(19645),d=o(r(72933)),v=r(97981),h=function(){function t(){}return t.prototype.validate=function(t){if(!t)throw new p.SNError("Need to call setKeys with a valid apiKey");return t},t.prototype.setKeys=function(t,e){var r=new s.default(t);this.appUserIdProvider=(0,v.createBasicProvider)(r,"user"),this.browserIdProvider=new u.default(r),this.clientIdProvider=(0,v.createBasicProvider)(r,"client",d.default.DEFAULT_CLIENT_ID),this.trackingConsentProvider=(0,v.createBasicProvider)(r,"consent",d.default.DEFAULT_TRACKING_CONSENT);var n=new f.default(t),o=new l.default(t,n);this.configurationProvider=new i.default(o,t,e,this.appUserIdProvider),this.tabIdProvider=new c.default(o),this.currentPageProvider=(0,v.createBasicProvider)(o,"page",""),this.domainProvider=(0,v.createBasicProvider)(o,"domain",{}),this.appContextProvider=(0,v.createBasicProvider)(o,"app",{}),this.dataPointsProvider=new a.default(o,this.configurationProvider,this.appContextProvider)},(0,n.default)(t.prototype,"appContext",{get:function(){return this.validate(this.appContextProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"appUserId",{get:function(){return this.validate(this.appUserIdProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"browserId",{get:function(){return this.validate(this.browserIdProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"clientId",{get:function(){return this.validate(this.clientIdProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"configuration",{get:function(){return this.validate(this.configurationProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"currentPage",{get:function(){return this.validate(this.currentPageProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"dataPoints",{get:function(){return this.validate(this.dataPointsProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"domain",{get:function(){return this.validate(this.domainProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"tabId",{get:function(){return this.validate(this.tabIdProvider)},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"trackingConsent",{get:function(){return this.validate(this.trackingConsentProvider)},enumerable:!1,configurable:!0}),t}();e.default=new h},83660:function(t,e,r){"use strict";var n,o=r(17907),i=o(r(96776)),a=o(r(97499)),u=o(r(96718)),c=(n=function(t,e){return(n=i.default||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?(0,a.default)(e):(r.prototype=e.prototype,new r)});(0,u.default)(e,"__esModule",{value:!0});var s=function(t){function e(e){return t.call(this,e,window.localStorage)||this}return c(e,t),e}(function(t){return t&&t.__esModule?t:{default:t}}(r(42529)).default);e.default=s},81706:function(t,e,r){"use strict";var n,o=r(17907),i=o(r(96776)),a=o(r(97499)),u=o(r(96718)),c=o(r(18492)),s=o(r(25110)),f=o(r(8712)),l=o(r(74386)),p=o(r(86)),d=(n=function(t,e){return(n=i.default||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?(0,a.default)(e):(r.prototype=e.prototype,new r)}),v=function(t){return t&&t.__esModule?t:{default:t}};(0,u.default)(e,"__esModule",{value:!0});var h=v(r(62870)),y=v(r(42529)),g=new(function(){function t(){this.store=new c.default}return(0,u.default)(t.prototype,"length",{get:function(){return this.store.size},enumerable:!1,configurable:!0}),t.prototype.key=function(t){var e,r;return null!==(r=(0,s.default)((0,f.default)(e=this.store).call(e))[t])&&void 0!==r?r:null},t.prototype.clear=function(){this.store.clear()},t.prototype.getItem=function(t){var e;return null!==(e=this.store.get(t))&&void 0!==e?e:null},t.prototype.removeItem=function(t){this.store.delete(t)},t.prototype.setItem=function(t,e){this.store.set(t,e)},t.prototype.getAllEntries=function(){var t;return(0,s.default)((0,l.default)(t=this.store).call(t))},t.prototype.loadEntries=function(t){if(t){h.default.info("Loading backup data to store");for(var e=0,r=t;e<r.length;e++){var n=r[e];this.store.set(n[0],n[1])}}},t}()),b=function(t){function e(e,r){var n=t.call(this,e,g,!0)||this;return n.backupStore=r,n.loadBackup(),n.registerBackupBeforeUnload(),n}return d(e,t),e.prototype.loadBackup=function(){try{g.loadEntries(this.backupStore.get("all"))}catch(t){h.default.error("Unable to load backup from session storage",t)}this.backupStore.remove("all")},e.prototype.registerBackupBeforeUnload=function(){var t,e=this,r=function(){try{e.backupStore.set("all",g.getAllEntries())}catch(t){h.default.error("Unable to save backup on unload",t)}};(0,p.default)(t=["beforeunload","unload"]).call(t,(function(t){window.addEventListener(t,r,!0)}))},e}(y.default);e.default=b},30185:function(t,e,r){"use strict";var n,o=r(17907),i=o(r(96776)),a=o(r(97499)),u=o(r(96718)),c=(n=function(t,e){return(n=i.default||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?(0,a.default)(e):(r.prototype=e.prototype,new r)});(0,u.default)(e,"__esModule",{value:!0});var s=function(t){function e(e){return t.call(this,e,window.sessionStorage)||this}return c(e,t),e}(function(t){return t&&t.__esModule?t:{default:t}}(r(42529)).default);e.default=s},42529:function(t,e,r){"use strict";var n=r(17907),o=n(r(96718)),i=n(r(39022)),a=n(r(35627));(0,o.default)(e,"__esModule",{value:!0});var u=r(19645),c=r(7398),s=function(){function t(t,e,r){if(void 0===r&&(r=!1),this.apiKey=t,this.storage=e,this.disableSerialization=r,!(0,c.isNonEmptyString)(this.apiKey))throw new u.SNError("Must supply an API key to initialize a store instance");try{var n=this.getStoreKey("test");this.storage.setItem(n,"ok"),this.storage.removeItem(n)}catch(t){throw new u.SNError("Web storage is not supported")}}return t.prototype.getStoreKey=function(t){var e;return(0,i.default)(e="".concat("sn",":").concat(this.apiKey,":")).call(e,t)},t.prototype.serializeItem=function(t){return this.disableSerialization?t:(0,a.default)(t)},t.prototype.deserializeItem=function(t){return this.disableSerialization?t:JSON.parse(t)},t.prototype.set=function(t,e){return(0,c.isNullOrUndefined)(e)?this.remove(t):this.storage.setItem(this.getStoreKey(t),this.serializeItem(e))},t.prototype.get=function(t){var e=this.storage.getItem(this.getStoreKey(t));return null===e?void 0:this.deserializeItem(e)},t.prototype.remove=function(t){this.storage.removeItem(this.getStoreKey(t))},t}();e.default=s},31231:function(t,e,r){"use strict";var n=r(17907),o=n(r(6226)),i=n(r(33733)),a=n(r(57672)),u=n(r(96718)),c=n(r(87198)),s=n(r(39022)),f=function(t,e,r,n){return new(r||(r=o.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))},l=function(t,e){var r,n,o,u,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return u={next:s(0),throw:s(1),return:s(2)},"function"==typeof i.default&&(u[a.default]=function(){return this}),u;function s(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;u&&(u=0,i[0]&&(c=0)),c;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,n=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=e.call(t,c)}catch(t){i=[6,t],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}},p=function(t){return t&&t.__esModule?t:{default:t}};(0,u.default)(e,"__esModule",{value:!0});var d=p(r(62870)),v=p(r(46737)),h=p(r(59060)),y=p(r(72933)),g=r(24983),b=function(){function t(t){this.sessionLifecycleManager=t,this.heartbeatTimeoutId=0,this.heartbeatErrorCounter=0}return t.prototype.startHeartbeats=function(){var t=this;this.heartbeatTimeoutId||(d.default.info("Starting heartbeats"),this.heartbeatTimeoutId=(0,c.default)((function e(){return f(t,void 0,void 0,(function(){var t;return l(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this.sendHeartbeat()];case 1:return r.sent(),[3,3];case 2:return t=r.sent(),d.default.warn("Heartbeat failed",t),[3,3];case 3:return this.heartbeatTimeoutId=(0,c.default)(e,v.default.configuration.get("HeartbeatInterval")),[2]}}))}))})))},t.prototype.stopHeartbeats=function(){d.default.info("Stop heartbeats"),clearTimeout(this.heartbeatTimeoutId),this.heartbeatTimeoutId=0},t.prototype.sendHeartbeat=function(){return f(this,void 0,void 0,(function(){var t,e;return l(this,(function(r){switch(r.label){case 0:return(null==(t=v.default.dataPoints.select(v.default.configuration.get("MaxDataPointsPerHeartbeat")))?void 0:t.dataPoints.length)?(d.default.info("Send heartbeat:",t),[4,h.default.sendHeartbeat(t)]):(d.default.debug("Heartbeat skipped: No data points to send"),[2]);case 1:if((e=r.sent()).ok)d.default.info("Heartbeat sent successfully"),v.default.dataPoints.deleteByCount(t.dataPoints.length),this.heartbeatErrorCounter=0;else if(1===e.errorCode)d.default.info("Session ".concat(t.sessionId," not found for heartbeat, deleting session configuration and data")),v.default.configuration.deleteSessionData(t.sessionId),v.default.dataPoints.deleteBySessionId(t.sessionId),this.heartbeatErrorCounter=0;else if(t.sessionId!==v.default.configuration.get("SessionId")||this.sessionLifecycleManager.getCurrentState()===g.SessionState.Ended){var n;this.heartbeatErrorCounter<y.default.MAX_HEARTBEAT_CALL_ATTEMPTS?(this.heartbeatErrorCounter++,d.default.info("Heartbeat failed for a session that was ended ".concat(t.sessionId,","),(0,s.default)(n="will try again later (attempt ".concat(this.heartbeatErrorCounter,"/")).call(n,y.default.MAX_HEARTBEAT_CALL_ATTEMPTS,")"))):(d.default.info("Heartbeat failed for a session that was ended",t.sessionId,"deleting its data"),v.default.dataPoints.deleteBySessionId(t.sessionId),v.default.configuration.deleteSessionData(t.sessionId),this.heartbeatErrorCounter=0)}else d.default.info("Heartbeat failed for alive session, will try again later");return[2]}}))}))},t}();e.default=b},29820:function(t,e,r){"use strict";var n=r(17907),o=n(r(6226)),i=n(r(33733)),a=n(r(57672)),u=n(r(96718));(0,u.default)(e,"__esModule",{value:!0});var c=function(t){return t&&t.__esModule?t:{default:t}}(r(23703)),s=function(){function t(){}return t.start=function(t,e,r){c.default.start(t,e,r)},t.startPage=function(t,e){c.default.startPage(t,e)},t.addEvent=function(t,e,r){c.default.addEvent(t,e,r)},t.setUserId=function(t){c.default.setUserId(t)},t.setUserProperty=function(t,e){c.default.setUserProperty(t,e)},t.setUserProperties=function(t){c.default.setUserProperties(t)},t.removeUserProperty=function(t){c.default.removeUserProperty(t)},t.incUserProperty=function(t,e){c.default.incUserProperty(t,e)},t.appendToUserProperty=function(t,e){c.default.appendToUserProperty(t,e)},t.startPerformanceTrace=function(t,e){return c.default.startPerformanceTrace(t,e)},t.addPerformanceTrace=function(t,e,r,n,o){c.default.addPerformanceTrace(t,e,r,n,o)},t.setTrackingConsent=function(t){c.default.setTrackingConsent(t)},t.getTrackingConsent=function(){return c.default.getTrackingConsent()},t.deleteCurrentUserData=function(){return function(t,e,r,n){return new(r||(r=o.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){return function(t,e){var r,n,o,u,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return u={next:s(0),throw:s(1),return:s(2)},"function"==typeof i.default&&(u[a.default]=function(){return this}),u;function s(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;u&&(u=0,i[0]&&(c=0)),c;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,n=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=e.call(t,c)}catch(t){i=[6,t],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(t){return[2,c.default.deleteCurrentUserData()]}))}))},t.setDebugLevel=function(t){c.default.setDebugLevel(t)},t}();e.default=s},23703:function(t,e,r){"use strict";var n=r(17907);r(41539),r(69600);var o=n(r(20474)),i=n(r(97499)),a=n(r(8446)),u=n(r(96718)),c=n(r(6226)),s=n(r(33733)),f=n(r(57672)),l=n(r(28222)),p=i.default?function(t,e,r,n){void 0===n&&(n=r);var o=(0,a.default)(e,r);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[r]}}),(0,u.default)(t,n,o)}:function(t,e,r,n){void 0===n&&(n=r),t[n]=e[r]},d=i.default?function(t,e){(0,u.default)(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e},v=function(t,e,r,n){var i,c=arguments.length,s=c<3?e:null===n?n=(0,a.default)(e,r):n;if("object"===("undefined"==typeof Reflect?"undefined":(0,o.default)(Reflect))&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,r,n);else for(var f=t.length-1;f>=0;f--)(i=t[f])&&(s=(c<3?i(s):c>3?i(e,r,s):i(e,r))||s);return c>3&&s&&(0,u.default)(e,r,s),s},h=function(t,e,r,n){return new(r||(r=c.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))},y=function(t,e){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof s.default&&(i[f.default]=function(){return this}),i;function u(u){return function(c){return function(u){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(r=1,n&&(o=2&u[0]?n.return:u[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,u[1])).done)return o;switch(n=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,n=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=e.call(t,a)}catch(t){u=[6,t],n=0}finally{r=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},g=function(t){return t&&t.__esModule?t:{default:t}};(0,u.default)(e,"__esModule",{value:!0});var b=r(29484),m=g(r(62870)),x=g(r(46737)),w=r(10730),E=g(r(19686)),S=g(r(31231)),T=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&p(e,t,r);return d(e,t),e}(r(24983)),O=g(r(72933)),A=r(7398),_=r(19645),I=g(r(59060)),P=r(1483),R=r(40355),j=r(43633),C=r(27250),N=function(){function t(){this.isWired=!1,this.sessionLifecycleManager=new T.default,this.heartbeatManager=new S.default(this.sessionLifecycleManager),this.metadataRecorder=new E.default}return t.prototype.start=function(t,e,r){if(m.default.info("Start session - API Key:",t,", API Auth:",e,", Options:",r),this.isWired){if(m.default.info("Session is already running"),t!==x.default.configuration.get("ApiKey")||e!==x.default.configuration.get("ApiAuth"))return void m.default.error("SDK already started with different API Key and Auth")}else{if(!(0,A.isNonEmptyString)(t))throw new _.SNTypeError('"apiKey" must be a string and cannot be empty');if(!(0,A.isNonEmptyString)(e))throw new _.SNTypeError('"apiAuth" must be a string and cannot be empty');if((0,A.isDefined)(r)){if(!(0,A.isObject)(r))throw new _.SNTypeError('"options" must be an object');(0,A.isDefined)(r.serverEndpoint)&&(O.default.baseUrl=r.serverEndpoint)}try{this.wire(t,e)}catch(t){return m.default.error("SDK wiring failed",t),void this.unwire()}}if((0,A.isObject)(r)){if((0,A.isDefined)(r.userId))try{m.default.info("Set user id before config");var n=(0,C.normalizeAppUserId)(r.userId);x.default.appUserId.set(n)}catch(t){m.default.error(t instanceof Error?t.message:t)}this.saveDomain(r),this.saveAppContext(r),(0,A.isDefined)(r.trackingConsent)&&this.setTrackingConsent(r.trackingConsent)}this.startNewSessionIfNeeded()},t.prototype.startPage=function(t,e){m.default.info("Start page - Name:",t,", Description:",e),this.metadataRecorder.page.start(t,e)},t.prototype.addEvent=function(t,e,r){m.default.info("Add event - Name:",t,", Properties:",e,", Type:",r),this.metadataRecorder.event.add(t,e,r)},t.prototype.setUserId=function(t){if(this.validateSdkReady()){m.default.info("Set user id:",t);var e=(0,C.normalizeAppUserId)(t);x.default.appUserId.set(e),this.startNewSessionIfNeeded()}},t.prototype.setUserProperty=function(t,e){m.default.info("Set user property:",t,"-",e),this.metadataRecorder.user.setProperty(t,e)},t.prototype.setUserProperties=function(t){m.default.info("Set user properties:",t),this.metadataRecorder.user.setProperties(t)},t.prototype.removeUserProperty=function(t){m.default.info("Remove user property:",t),this.metadataRecorder.user.removeProperty(t)},t.prototype.incUserProperty=function(t,e){m.default.info("Increment user property:",t,"-",e),this.metadataRecorder.user.incProperty(t,e)},t.prototype.appendToUserProperty=function(t,e){m.default.info("Append to user property:",t,"-",e),this.metadataRecorder.user.appendToProperty(t,e)},t.prototype.startPerformanceTrace=function(t,e){return m.default.info("Started Performance Trace:",t,"-",e),this.metadataRecorder.performance.start(t,e)},t.prototype.addPerformanceTrace=function(t,e,r,n,o){m.default.info("Added Performance Trace:",t,"-",e),this.metadataRecorder.performance.add(t,e,r,n,o)},t.prototype.setTrackingConsent=function(t){m.default.info("Set tracking consent level to:",t);var e=(0,P.tryGetEnumValue)(t,b.TrackingLevel,!0);if(!(0,A.isDefined)(e)){if(!(0,A.isBoolean)(t))throw new _.SNError("Tracking consent Level must be one of: ".concat((0,l.default)(b.TrackingLevel).join(" | ")));e=t?b.TrackingLevel.Full:b.TrackingLevel.Disabled,m.default.warn("Boolean tracking consent level is deprecated")}var r=x.default.trackingConsent.get();if(e!==r){x.default.trackingConsent.set(e),m.default.info("Tracking consent level is now:",e);var n=this.sessionLifecycleManager.getCurrentState();e===b.TrackingLevel.Basic||e===b.TrackingLevel.Full?this.startNewSessionIfNeeded()&&this.metadataRecorder.event.addConsentChange(e,r):n!==T.SessionState.Created&&n!==T.SessionState.Started||(this.metadataRecorder.event.addConsentChange(e,r),this.stopSession())}else m.default.info("Tracking consent level is the same:",e)},t.prototype.getTrackingConsent=function(){return m.default.info("Get tracking consent"),x.default.trackingConsent.get()},t.prototype.deleteCurrentUserData=function(){return h(this,void 0,void 0,(function(){var t,e;return y(this,(function(r){switch(r.label){case 0:return m.default.info("Deleting current user data"),this.setTrackingConsent(b.TrackingLevel.Disabled),(t=x.default.clientId.get())&&t!==O.default.DEFAULT_CLIENT_ID?(e=x.default.appUserId.get(),[4,I.default.deleteUserData(e)]):(m.default.warn("SNAnalytics was never started on the device"),[2,!0]);case 1:if(!r.sent().ok)throw new _.SNError("Server could not delete user ".concat(e));return x.default.appUserId.remove(),this.stopSession(!0),[2,!0]}}))}))},t.prototype.setDebugLevel=function(t){m.default.info("Set debug level:",t),m.default.setDebugLevel(t)},t.prototype.StartSession=function(t,e,r){var n=r.value;return r.value=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.startNewSessionIfNeeded()?n.apply(this,t):void 0},r},(0,u.default)(t,"StartSession",{get:function(){return t.prototype.StartSession},enumerable:!1,configurable:!0}),t.prototype.EnsureWired=function(t,e,r){var n=r.value;return r.value=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(this.isWired)return n.apply(this,t);throw new _.SNError("Must call SNAnalytics.start beforehand")},r},(0,u.default)(t,"EnsureWired",{get:function(){return t.prototype.EnsureWired},enumerable:!1,configurable:!0}),t.prototype.validateSdkReady=function(){return this.isWired?x.default.trackingConsent.get()!==b.TrackingLevel.Disabled||(m.default.warn("No tracking consent given"),!1):(m.default.warn("Must call SNAnalytics.start beforehand"),!1)},t.prototype.startNewSessionIfNeeded=function(){try{return!!this.validateSdkReady()&&(this.sessionLifecycleManager.getCurrentState()===T.SessionState.Ended&&(this.stopSession(),this.startNewSession()),x.default.configuration.get("RecordMetadata"))}catch(t){return m.default.error("Could not start a session:",t),!1}},t.prototype.wire=function(t,e){m.default.info("Wiring SDK..."),x.default.setKeys(t,e),x.default.dataPoints.deletePreSessionItems(),this.heartbeatManager.startHeartbeats(),this.isWired=!0,m.default.info("SDK is Wired")},t.prototype.unwire=function(){this.isWired=!1,this.heartbeatManager.stopHeartbeats()},t.prototype.stopSession=function(t){void 0===t&&(t=!1),t&&x.default.dataPoints.deleteBySessionId(x.default.configuration.get("SessionId")),x.default.configuration.deleteData()},t.prototype.startNewSession=function(){return h(this,void 0,void 0,(function(){var t,e,r;return y(this,(function(n){switch(n.label){case 0:return t=(0,R.getGuid)(),m.default.info("Starting new session with request id",t),x.default.configuration.startNewSession(t),this.sessionLifecycleManager.setIsGettingConfiguration(t,!0),[4,I.default.getConfiguration(t)];case 1:return e=n.sent(),this.sessionLifecycleManager.setIsGettingConfiguration(t,!1),e.ok?this.gotConfiguration(t):1===e.errorCode?(r=e.data,m.default.warn("Got bad config response for request id",t,", session finished",r),x.default.dataPoints.assignPreSessionItems(t,r,(0,j.getTime)()),x.default.configuration.deleteSessionData(r)):(m.default.warn("Got bad config response for request id",t),x.default.dataPoints.deletePreSessionItems(t)),[2]}}))}))},t.prototype.gotConfiguration=function(t){m.default.info("Got session id:",x.default.configuration.get("SessionId")),x.default.dataPoints.assignPreSessionItems(t,x.default.configuration.get("SessionId"),x.default.configuration.get("ConfigReceivedTime"));var e=x.default.configuration.get("LogLevel");(0,A.isDefined)(e)&&(O.default.IS_PRODUCTION?m.default.setDebugLevel(e):m.default.warn("Log level can be changed from config response only in production")),x.default.clientId.set(x.default.configuration.get("ClientId")),x.default.configuration.get("RecordMetadata")?this.metadataRecorder.user.setAppUserId(x.default.configuration.get("AppUserId")):m.default.info("Record metadata is false so no data points will be collected")},t.prototype.saveDomain=function(t){if((0,A.isUndefined)(t.domainId)&&(0,A.isUndefined)(t.domainName))x.default.domain.remove();else{if((0,A.isDefined)(t.domainId)&&!(0,A.isString)(t.domainId))throw new _.SNTypeError('"domainId" must be string');if((0,A.isDefined)(t.domainName)&&!(0,A.isString)(t.domainName))throw new _.SNTypeError('"domainName" must be string');x.default.domain.set({id:t.domainId,name:t.domainName})}},t.prototype.saveAppContext=function(t){if((0,A.isUndefined)(t.appContextId)&&(0,A.isUndefined)(t.appContextName))x.default.appContext.remove();else{if((0,A.isDefined)(t.appContextId)&&!(0,A.isString)(t.appContextId))throw new _.SNTypeError('"appContextId" must be string');if((0,A.isDefined)(t.appContextName)&&!(0,A.isString)(t.appContextName))throw new _.SNTypeError('"appContextName" must be string');x.default.appContext.set({id:t.appContextId,name:t.appContextName})}},v([w.CatchAll,t.StartSession],t.prototype,"startPage",null),v([w.CatchAll,t.StartSession],t.prototype,"addEvent",null),v([w.CatchAll],t.prototype,"setUserId",null),v([w.CatchAll,t.StartSession],t.prototype,"setUserProperty",null),v([w.CatchAll,t.StartSession],t.prototype,"setUserProperties",null),v([w.CatchAll,t.StartSession],t.prototype,"removeUserProperty",null),v([w.CatchAll,t.StartSession],t.prototype,"incUserProperty",null),v([w.CatchAll,t.StartSession],t.prototype,"appendToUserProperty",null),v([w.CatchAll,t.StartSession],t.prototype,"startPerformanceTrace",null),v([w.CatchAll,t.StartSession],t.prototype,"addPerformanceTrace",null),v([w.CatchAll,t.EnsureWired],t.prototype,"setTrackingConsent",null),v([(0,w.CatchAllAndReturn)(b.TrackingLevel.Disabled),t.EnsureWired],t.prototype,"getTrackingConsent",null),v([(0,w.CatchAllAndReturn)(!1),t.EnsureWired],t.prototype,"deleteCurrentUserData",null),v([w.CatchAll],t.prototype,"setDebugLevel",null),v([w.CatchAll],t.prototype,"unwire",null),v([w.CatchAll],t.prototype,"startNewSession",null),t}();e.default=new N},16343:function(t,e,r){"use strict";var n=r(17907);r(68309),(0,n(r(96718)).default)(e,"__esModule",{value:!0}),e.DataPointField=void 0,function(t){t.type="t",t.timestamp="d",t.name="n",t.properties="p"}(e.DataPointField||(e.DataPointField={}))},97981:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0}),e.createBasicProvider=void 0,e.createBasicProvider=function(t,e,r){return{set:function(r){return t.set(e,r)},get:function(){var n;return null!==(n=t.get(e))&&void 0!==n?n:r},remove:function(){return t.remove(e)}}}},48606:function(t,e,r){"use strict";var n=r(17907),o=n(r(6226)),i=n(r(33733)),a=n(r(57672)),u=n(r(96718));(0,u.default)(e,"__esModule",{value:!0});var c=function(t){return t&&t.__esModule?t:{default:t}}(r(71736)),s=r(40355),f=new c.default("create-browser-id"),l=function(){function t(t){this.store=t}return t.prototype.get=function(){return this.store.get("browser")},t.prototype.getOrCreate=function(){return function(t,e,r,n){return new(r||(r=o.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var t,e;return function(t,e){var r,n,o,u,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return u={next:s(0),throw:s(1),return:s(2)},"function"==typeof i.default&&(u[a.default]=function(){return this}),u;function s(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;u&&(u=0,i[0]&&(c=0)),c;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,n=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=e.call(t,c)}catch(t){i=[6,t],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}(this,(function(r){switch(r.label){case 0:return(t=this.get())?[3,2]:[4,f.acquire()];case 1:e=r.sent(),(t=this.get())||(t=(0,s.getGuid)(),this.store.set("browser",t)),e.release(),r.label=2;case 2:return[2,t]}}))}))},t}();e.default=l},32213:function(t,e,r){"use strict";var n,o=r(17907),i=o(r(76986)),a=o(r(96718)),u=o(r(11189)),c=function(){return(c=i.default||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};(0,a.default)(e,"__esModule",{value:!0});var s=r(7398),f=r(29484),l=function(t){return t&&t.__esModule?t:{default:t}}(r(72933)),p=r(1483),d=r(43633),v={ClientId:l.default.DEFAULT_CLIENT_ID,SessionId:"",LogLevel:void 0,MaxDataPointsPerHeartbeat:1e3,HeartbeatInterval:5e3,SessionTimeout:18e5,RecordMetadata:!0,RequestId:"",ConfigReceivedTime:0,AppUserId:void 0,IgnorePerformanceData:!1},h={ClientId:s.isString,SessionId:s.isString,LogLevel:(0,u.default)(n=s.isEnum).call(n,null,f.LogLevel),MaxDataPointsPerHeartbeat:s.isPositiveInteger,HeartbeatInterval:s.isPositiveInteger,SessionTimeout:s.isPositiveInteger,RecordMetadata:s.isBoolean,RequestId:s.isString,ConfigReceivedTime:s.isInteger,AppUserId:s.isString,IgnorePerformanceData:s.isBoolean},y=function(){function t(t,e,r,n){this.store=t,this.apiKey=e,this.apiAuth=r,this.appUserIdProvider=n,this.configuration=this.buildConfiguration()}return t.prototype.buildConfiguration=function(){return c(c({},(0,p.getValuesOrDefaults)(this.store.get("config")||{},v,h)),{LastServerResponseTime:(0,p.getValueOrDefault)(this.store.get("srt"),0,s.isInteger),ApiKey:this.apiKey,ApiAuth:this.apiAuth})},t.prototype.get=function(t){return this.configuration[t]},t.prototype.startNewSession=function(t){this.deleteData(),this.configuration.RequestId=t,this.configuration.AppUserId=this.appUserIdProvider.get()},t.prototype.isValidConfigResponse=function(t){for(var e=0,r=["SessionId","ClientId","HeartbeatInterval","SessionTimeout","MaxDataPointsPerHeartbeat"];e<r.length;e++)if(!(r[e]in t))return!1;return!0},t.prototype.fillWithJson=function(t){var e=c(c({},t),{RequestId:this.configuration.RequestId,AppUserId:this.configuration.AppUserId,ConfigReceivedTime:(0,d.getTime)()});this.store.set("config",e),this.configuration=this.buildConfiguration()},t.prototype.updateServerResponseTime=function(){var t=(0,d.getTime)();this.configuration.LastServerResponseTime=t,this.store.set("srt",t)},t.prototype.deleteData=function(){this.store.remove("srt"),this.store.remove("config"),this.configuration=this.buildConfiguration()},t.prototype.deleteSessionData=function(t){t===this.configuration.SessionId&&this.deleteData()},t}();e.default=y},18629:function(t,e,r){"use strict";var n=r(17907);r(68309);var o=n(r(76986)),i=n(r(96718)),a=n(r(39940)),u=n(r(97606)),c=n(r(14418)),s=n(r(24278)),f=function(){return(f=o.default||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};(0,i.default)(e,"__esModule",{value:!0});var l=r(16343),p=r(43633),d=r(61525),v=r(7398),h=r(1483),y=r(64266),g=function(){function t(t,e,r){this.store=t,this.configurationProvider=e,this.appContextProvider=r}return t.prototype.remove=function(){this.store.remove("data")},t.prototype.get=function(){return this.store.get("data")||[]},t.prototype.set=function(t){t.length?this.store.set("data",t):this.remove()},t.prototype.add=function(t,e,r){var n,o=void 0===r?{}:r,i=o.properties,a=o.systemProperties,u=o.timestamp,c=((n={})[l.DataPointField.type]=t,n[l.DataPointField.timestamp]=null!=u?u:(0,p.getUniqueTime)(),n[l.DataPointField.name]=e,n);(0,v.isDefined)(a)&&(a=f({},(0,h.mapKeys)(a,(function(t,e){return(0,y.addSystemPropertyPrefix)(e)}))));var s=f(f({},a),i);(0,h.isEmptyObject)(s)||(c[l.DataPointField.properties]=s);var g=this.get();this.prepareQueueToInsert(g),(0,d.last)((0,d.last)(g).ctx).data.push(c),this.set(g)},t.prototype.prepareQueueToInsert=function(t){var e=this.configurationProvider.get("RequestId"),r=this.configurationProvider.get("SessionId"),n=this.configurationProvider.get("ConfigReceivedTime"),o=this.appContextProvider.get();t.length&&(0,d.last)(t).rid===e||t.push({rid:e,sid:r,time:n,ctx:[]});var i=(0,d.last)(t),a=(0,d.last)(i.ctx);i.ctx.length&&a.id===o.id&&a.name===o.name||i.ctx.push({id:o.id,name:o.name,data:[]})},t.prototype.deleteByCount=function(t){var e,r,n,o,i,u,c,s,f,l,p=this.get();null===(n=null===(r=null===(e=p[0])||void 0===e?void 0:e.ctx[0])||void 0===r?void 0:r.data)||void 0===n||(0,a.default)(n).call(n,0,t),(null===(u=null===(i=null===(o=p[0])||void 0===o?void 0:o.ctx[0])||void 0===i?void 0:i.data)||void 0===u?void 0:u.length)||null===(s=null===(c=p[0])||void 0===c?void 0:c.ctx)||void 0===s||s.shift(),(null===(l=null===(f=p[0])||void 0===f?void 0:f.ctx)||void 0===l?void 0:l.length)||null==p||p.shift(),this.set(p)},t.prototype.assignPreSessionItems=function(t,e,r){var n;this.set((0,u.default)(n=this.get()).call(n,(function(n){return n.sid||n.rid!==t||(n.sid=e,n.time=r),n})))},t.prototype.deletePreSessionItems=function(t){var e;this.set((0,c.default)(e=this.get()).call(e,(function(e){return t?e.rid!==t:e.sid})))},t.prototype.deleteBySessionId=function(t){var e;this.set((0,c.default)(e=this.get()).call(e,(function(e){return e.sid!==t})))},t.prototype.select=function(t){var e,r,n,o,i=this.get()[0];return(null==i?void 0:i.sid)?{sessionId:i.sid,configReceivedTime:i.time,appContextId:null===(r=i.ctx[0])||void 0===r?void 0:r.id,appContextName:null===(n=i.ctx[0])||void 0===n?void 0:n.name,dataPoints:(null===(o=i.ctx[0])||void 0===o?void 0:(0,s.default)(e=o.data).call(e,0,t))||[]}:void 0},t}();e.default=g},49107:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0});var n=r(40355),o=function(){function t(t){this.store=t}return t.prototype.getOrCreate=function(){var t=this.store.get("tab");return t||(t=(0,n.getGuid)(),this.store.set("tab",t)),t},t}();e.default=o},29178:function(t,e,r){"use strict";(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0}),r(57147),r(36486)},59060:function(t,e,r){"use strict";var n=r(17907);r(41539),r(68309);var o=n(r(20474)),i=n(r(8446)),a=n(r(96718)),u=n(r(6226)),c=n(r(33733)),s=n(r(57672)),f=function(t,e,r,n){var u,c=arguments.length,s=c<3?e:null===n?n=(0,i.default)(e,r):n;if("object"===("undefined"==typeof Reflect?"undefined":(0,o.default)(Reflect))&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,r,n);else for(var f=t.length-1;f>=0;f--)(u=t[f])&&(s=(c<3?u(s):c>3?u(e,r,s):u(e,r))||s);return c>3&&s&&(0,a.default)(e,r,s),s},l=function(t,e,r,n){return new(r||(r=u.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))},p=function(t,e){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof c.default&&(i[s.default]=function(){return this}),i;function u(u){return function(c){return function(u){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(r=1,n&&(o=2&u[0]?n.return:u[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,u[1])).done)return o;switch(n=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,n=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=e.call(t,a)}catch(t){u=[6,t],n=0}finally{r=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},d=function(t){return t&&t.__esModule?t:{default:t}};(0,a.default)(e,"__esModule",{value:!0});var v=d(r(46737)),h=d(r(23524)),y=r(89236),g=r(19645),b=r(43633),m=r(10730),x=d(r(62870)),w=function(t,e){return{ok:!1,errorCode:t,data:e}},E=6e4,S=function(){function t(){}return t.getConfiguration=function(t){return l(this,void 0,void 0,(function(){var e,r,n,o,i;return p(this,(function(a){switch(a.label){case 0:return e=h.default.getScreenDimension(),r=e.height,n=e.width,o=v.default.domain.get(),[4,(0,y.postData)("config",{RequestId:t,TabId:v.default.tabId.getOrCreate(),SystemLocale:h.default.getSystemLocale(),AppUserId:v.default.appUserId.get(),ScreenHeight:r,ScreenWidth:n,ClientTime:(0,b.toISOString)((0,b.getTime)()),DomainId:null==o?void 0:o.id,DomainName:null==o?void 0:o.name,TrackingLevel:v.default.trackingConsent.get()},E)];case 1:return i=a.sent(),v.default.configuration.isValidConfigResponse(i)?t!==v.default.configuration.get("RequestId")?(x.default.warn("Ignoring old configuration with request id",t,"and session id",i.SessionId),[2,w(1,i.SessionId)]):(v.default.configuration.fillWithJson(i),v.default.configuration.updateServerResponseTime(),x.default.debug("Networker got valid configuration response",i),[2,{ok:!0}]):(x.default.warn("Configuration response for request id",t,"is not valid:",i),[2,w()])}}))}))},t.sendHeartbeat=function(t){return l(this,void 0,void 0,(function(){return p(this,(function(e){switch(e.label){case 0:return[4,(0,y.postData)("heartbeat",{SessionId:t.sessionId,DataPoints:t.dataPoints,TabId:v.default.tabId.getOrCreate(),ClientTime:(0,b.toISOString)((0,b.getTime)()),ConfigReceivedTime:(0,b.toISOString)(t.configReceivedTime),AppContextId:t.appContextId,AppContextName:t.appContextName},E)];case 1:return e.sent(),v.default.configuration.updateServerResponseTime(),x.default.debug("Networker sent heartbeat"),[2,{ok:!0}]}}))}))},t.deleteUserData=function(t){return l(this,void 0,void 0,(function(){return p(this,(function(e){switch(e.label){case 0:return[4,(0,y.postData)("delete-data",{AppUserId:t},E)];case 1:return e.sent(),x.default.debug("Networker deleted user"),[2,{ok:!0}]}}))}))},f([(0,m.Catch)(Error,(function(){return w()}))],t,"getConfiguration",null),f([(0,m.Catch)(Error,(function(){return w()})),(0,m.Catch)(g.HttpError,(function(t){return w(t.errorCode)}))],t,"sendHeartbeat",null),f([(0,m.Catch)(Error,(function(){return w()}))],t,"deleteUserData",null),t}();e.default=S},89236:function(t,e,r){"use strict";var n=r(17907);r(41539),r(88674);var o=n(r(76986)),i=n(r(6226)),a=n(r(33733)),u=n(r(57672)),c=n(r(96718)),s=n(r(39022)),f=n(r(35627)),l=n(r(87198)),p=function(){return(p=o.default||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},d=function(t,e,r,n){return new(r||(r=i.default))((function(o,i){function a(t){try{c(n.next(t))}catch(t){i(t)}}function u(t){try{c(n.throw(t))}catch(t){i(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,u)}c((n=n.apply(t,e||[])).next())}))},v=function(t,e){var r,n,o,i,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof a.default&&(i[u.default]=function(){return this}),i;function s(a){return function(u){return function(a){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,a[0]&&(c=0)),c;)try{if(r=1,n&&(o=2&a[0]?n.return:a[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,a[1])).done)return o;switch(n=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return c.label++,{value:a[1],done:!1};case 5:c.label++,n=a[1],a=[0];continue;case 7:a=c.ops.pop(),c.trys.pop();continue;default:if(!((o=(o=c.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){c=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){c.label=a[1];break}if(6===a[0]&&c.label<o[1]){c.label=o[1],o=a;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(a);break}o[2]&&c.ops.pop(),c.trys.pop();continue}a=e.call(t,c)}catch(t){a=[6,t],n=0}finally{r=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},h=function(t){return t&&t.__esModule?t:{default:t}};(0,c.default)(e,"__esModule",{value:!0}),e.postData=void 0,r(29178);var y=h(r(62870)),g=h(r(46737)),b=h(r(72933)),m=r(19645),x=r(1483),w=r(43633),E=function(t,e,r){return d(void 0,void 0,void 0,(function(){var n,o,a,u,c,h,w,E,S,T,O,A;return v(this,(function(_){var I;switch(_.label){case 0:n=0,_.label=1;case 1:return _.trys.push([1,8,9,10]),o=new AbortController,a=o.signal,c=fetch,h=[(0,s.default)(I="".concat(b.default.baseUrl,"/web/")).call(I,t)],A={method:"POST",mode:"cors",cache:"no-cache"},w=[{}],[4,d(void 0,void 0,void 0,(function(){var t,e;return v(this,(function(r){switch(r.label){case 0:return t=x.removeFalsyEntries,e={Version:b.default.VERSION,APIKey:g.default.configuration.get("ApiKey"),APIAuth:g.default.configuration.get("ApiAuth")},[4,g.default.browserId.getOrCreate()];case 1:return[2,t.apply(void 0,[(e.BrowserId=r.sent(),e.ClientId=g.default.clientId.get(),e)])]}}))}))];case 2:return u=c.apply(void 0,(0,s.default)(h).call(h,[(A.headers=p.apply(void 0,[p.apply(void 0,(0,s.default)(w).call(w,[_.sent()])),{"Content-Type":"application/json"}]),A.referrer="no-referrer",A.body=(0,f.default)(e),A.signal=a,A)])),n=(0,l.default)((function(){return o.abort()}),r),[4,u];case 3:E=_.sent(),_.label=4;case 4:return _.trys.push([4,6,,7]),[4,E.json()];case 5:return S=_.sent(),E.ok?[2,S]:(y.default.warn("Server call to '".concat(t,"' failed. Response is"),E.status,":",S.Error),[2,i.default.reject(new m.HttpError(S.ErrorCode))]);case 6:return T=_.sent(),y.default.warn("Server call to '".concat(t,"' failed. Response is"),E.status,T),[2,i.default.reject(new m.HttpError)];case 7:return[3,10];case 8:return O=_.sent(),y.default.warn("Server call to '".concat(t,"' failed."),O),[2,i.default.reject(new m.HttpError)];case 9:return clearTimeout(n),[7];case 10:return[2]}}))}))};e.postData=function(t,e,r){return d(void 0,void 0,void 0,(function(){var n,o;return v(this,(function(i){switch(i.label){case 0:return n=(0,w.getTime)(),[4,E(t,e,r)];case 1:return o=i.sent(),y.default.debug("Profiler: '".concat(t,"' request took"),(0,w.getTime)()-n,"ms"),[2,o]}}))}))}},83992:function(t,e,r){"use strict";var n=function(t){return t&&t.__esModule?t:{default:t}};(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0});var o=r(7398),i=r(19645),a=n(r(46737)),u=r(64266),c=n(r(62870)),s=function(){function t(){}return t.prototype.add=function(t,e,r){if(!(0,o.isNonEmptyString)(t))throw new i.SNTypeError("Invalid event name: ''");(0,o.isDefined)(e)&&((0,o.isObject)(e)?e=(0,u.getValidProperties)(e,!1,!1):(e=void 0,c.default.error("Invalid event properties for event",t)));var n={Page:a.default.currentPage.get()};(0,o.isDefined)(r)&&((0,o.isString)(r)?n.Type=r:c.default.error("Invalid type",r,"for event",t)),a.default.dataPoints.add(1,t,{properties:e,systemProperties:n})},t.prototype.addConsentChange=function(t,e){this.add("SNAnalyticsTrackingTriggered",{Value:t,PreviousValue:e})},t}();e.default=s},19686:function(t,e,r){"use strict";var n=r(17907)(r(96718)),o=function(t){return t&&t.__esModule?t:{default:t}};(0,n.default)(e,"__esModule",{value:!0});var i=o(r(83992)),a=o(r(72991)),u=o(r(9103)),c=o(r(30584)),s=function(){function t(){this.eventRecorder=new i.default,this.pageRecorder=new a.default,this.userRecorder=new u.default,this.performanceRecorder=new c.default}return(0,n.default)(t.prototype,"event",{get:function(){return this.eventRecorder},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"page",{get:function(){return this.pageRecorder},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"user",{get:function(){return this.userRecorder},enumerable:!1,configurable:!0}),(0,n.default)(t.prototype,"performance",{get:function(){return this.performanceRecorder},enumerable:!1,configurable:!0}),t}();e.default=s},72991:function(t,e,r){"use strict";var n=function(t){return t&&t.__esModule?t:{default:t}};(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0});var o=r(7398),i=r(19645),a=n(r(62870)),u=n(r(46737)),c=function(){function t(){}return t.prototype.start=function(t,e){if(t=null!=t?t:"",!(0,o.isString)(t))throw new i.SNTypeError("Page name must be a string");var r={};(0,o.isDefined)(e)&&((0,o.isNonEmptyString)(e)?e.length>100?a.default.error("Ignoring description too long (greater than ".concat(100,")")):r.Description=e:a.default.error("Ignoring empty page description")),u.default.currentPage.set(t),u.default.dataPoints.add(0,t,{systemProperties:r})},t}();e.default=c},30584:function(t,e,r){"use strict";var n=r(17907),o=n(r(96718)),i=n(r(70586)),a=n(r(28222)),u=n(r(2018)),c=function(t){return t&&t.__esModule?t:{default:t}};(0,o.default)(e,"__esModule",{value:!0});var s=c(r(62870)),f=r(7398),l=c(r(46737)),p=144e5;function d(t){if(p<t)return s.default.warn("Duration exceeded maximum limit, it has been trimmed to ",p,"milliseconds"),p;var e=Math.round(t);return e!==t?(s.default.warn("Performance duration",t,"was given in decimal and it was rounded to",e),e):t}function v(t,e){if(t.length>e){var r=t.substring(0,e);return s.default.warn("Maximum string length is",e,"but length is",t.length,". The string",t,"will be trimmed to",r),r}return t}var h=function(){function t(t,e,r,n,o){void 0===n&&(n=-1),void 0===o&&(o={}),this.key=t,this.type=e,this.startTime=r,this.duration=n,this.properties=o,this.key=v(t,255),this.type=v(e,100)}return(0,o.default)(t.prototype,"traceEnded",{get:function(){return-1!==this.duration},enumerable:!1,configurable:!0}),t.prototype.send=function(){if(l.default.configuration.get("IgnorePerformanceData"))s.default.info("Ignoring performance traces according to config");else{var t={Duration:this.duration,TraceType:this.type};l.default.dataPoints.add(3,this.key,{properties:this.properties,systemProperties:t,timestamp:this.startTime})}},t.prototype.end=function(){this.traceEnded?s.default.warn("Trace already ended"):(s.default.info("End Performance Trace:",this.key,"-",this.type,"-",this.duration,"-",this.properties),this.duration=d((0,i.default)()-this.startTime),this.send())},t.prototype.setProperty=function(t,e){this.traceEnded?s.default.warn("Ignoring set property since trace already ended"):(0,f.isNonEmptyString)(t)?(0,f.isNullOrUndefined)(e)?this.removeProperty(t):(0,f.isString)(e)?(t=v(t,255),e=v(e,255),(0,a.default)(this.properties).length>=20&&!(t in this.properties)?s.default.error("Ignoring property",t,"since each trace is limited to",20,"properties"):(s.default.info("Setting performance property:",t,"with value:",e),this.properties[t]=e)):s.default.error("Invalid performance value",e,"for property with key",t):s.default.error("Invalid performance key",t)},t.prototype.setProperties=function(t){if(this.traceEnded)s.default.warn("Ignoring set properties since trace already ended");else for(var e=0,r=(0,u.default)(t);e<r.length;e++){var n=r[e][0];this.setProperty(n,t[n])}},t.prototype.removeProperty=function(t){this.traceEnded?s.default.warn("Ignoring remove property since trace already ended"):(t=v(t,255),delete this.properties[t])},t}(),y=function(){function t(){}return t.prototype.start=function(t,e){if(this.validateTrace(t,e))return new h(t,e,(0,i.default)())},t.prototype.add=function(t,e,r,n,o){this.validateTrace(t,e)&&(!(0,f.isNumber)(r)||r<0?s.default.error("Invalid durationMS for performance trace"):(r=d(r),o=o instanceof Date?o.getTime():null!=o?o:(0,i.default)()-r,(0,f.isPositiveInteger)(o,!0)?new h(t,e,o,r,n).send():s.default.error("Invalid startTime for performance trace")))},t.prototype.validateTrace=function(t,e){return(0,f.isNonEmptyString)(t)?!!(0,f.isNonEmptyString)(e)||(s.default.warn("Invalid type for performance trace"),!1):(s.default.warn("Invalid key for performance trace"),!1)},t}();e.default=y},9103:function(t,e,r){"use strict";var n=function(t){return t&&t.__esModule?t:{default:t}};(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0});var o=r(7398),i=r(19645),a=n(r(62870)),u=n(r(46737)),c=r(64266),s=function(){function t(){}return t.prototype.getAppUserIdOrNull=function(){return u.default.appUserId.get()||null},t.prototype.setAppUserId=function(t){u.default.dataPoints.add(2,t||null)},t.prototype.removeProperty=function(t){this.setProperty(t,null)},t.prototype.setProperty=function(t,e){var r;this.setProperties(((r={})[t]=e,r))},t.prototype.setProperties=function(t){(0,o.isObject)(t)?(t=(0,c.getValidProperties)(t,!0,!0),u.default.dataPoints.add(2,this.getAppUserIdOrNull(),{properties:t})):a.default.error("Invalid user properties")},t.prototype.incProperty=function(t,e){if(!(0,o.isNumber)(e))throw new i.SNTypeError("Property value must be a number");e?this.operationToProperty(t,e,"$inc"):a.default.debug("Ignoring inc user property by zero")},t.prototype.appendToProperty=function(t,e){if(!(0,o.isString)(e))throw new i.SNTypeError("Property value must be a string");this.operationToProperty(t,[e],"$appendToList")},t.prototype.operationToProperty=function(t,e,r){var n,a;if(!(0,o.isNonEmptyString)(t))throw new i.SNTypeError("Property name must be a string");if((0,c.isSystemPropertyKey)(t))throw new i.SNTypeError("Property name has invalid prefix");u.default.dataPoints.add(2,this.getAppUserIdOrNull(),{properties:(n={},n[t]=(a={},a.op=r,a.val=e,a),n)})},t}();e.default=s},24983:function(t,e,r){"use strict";var n=function(t){return t&&t.__esModule?t:{default:t}};(0,r(17907)(r(96718)).default)(e,"__esModule",{value:!0}),e.SessionState=void 0;var o,i=n(r(46737)),a=r(43633),u=n(r(62870)),c=r(7398);!function(t){t[t.Created=0]="Created",t[t.Started=1]="Started",t[t.Ended=2]="Ended"}(o=e.SessionState||(e.SessionState={}));var s=function(){function t(){this.isGettingCurrSessionConfig=!1}return t.prototype.setIsGettingConfiguration=function(t,e){t===i.default.configuration.get("RequestId")&&(this.isGettingCurrSessionConfig=e)},t.prototype.isSessionTimedOut=function(){return(0,a.getTime)()-i.default.configuration.get("LastServerResponseTime")>i.default.configuration.get("SessionTimeout")},t.prototype.isUserChanged=function(){return i.default.configuration.get("AppUserId")!==i.default.appUserId.get()},t.prototype.isSessionIdExist=function(){return(0,c.isNonEmptyString)(i.default.configuration.get("SessionId"))},t.prototype.getCurrentState=function(){var t;if(this.isUserChanged())u.default.debug("Session Lifecycle: User switched from",i.default.appUserId.get(),"to",i.default.configuration.get("AppUserId")),t=o.Ended;else if(this.isSessionIdExist()){var e=this.isSessionTimedOut();u.default.debug("Session Lifecycle: Session timed out - ",e),t=e?o.Ended:o.Started}else u.default.debug("Session Lifecycle: Getting config for current session - ",this.isGettingCurrSessionConfig),t=this.isGettingCurrSessionConfig?o.Created:o.Ended;return t},t}();e.default=s},80281:function(t,e,r){var n=r(92547);r(43975),t.exports=n},40031:function(t,e,r){var n=r(46509);t.exports=n},54493:function(t,e,r){r(77971),r(53242);var n=r(54058);t.exports=n.Array.from},24034:function(t,e,r){r(92737);var n=r(54058);t.exports=n.Array.isArray},15367:function(t,e,r){r(85906);var n=r(35703);t.exports=n("Array").concat},12710:function(t,e,r){r(66274),r(55967);var n=r(35703);t.exports=n("Array").entries},62383:function(t,e,r){r(21501);var n=r(35703);t.exports=n("Array").filter},99324:function(t,e,r){r(2437);var n=r(35703);t.exports=n("Array").forEach},80991:function(t,e,r){r(97690);var n=r(35703);t.exports=n("Array").includes},95909:function(t,e,r){r(66274),r(55967);var n=r(35703);t.exports=n("Array").keys},23866:function(t,e,r){r(68787);var n=r(35703);t.exports=n("Array").map},24900:function(t,e,r){r(60186);var n=r(35703);t.exports=n("Array").slice},78209:function(t,e,r){r(98611);var n=r(35703);t.exports=n("Array").splice},81103:function(t,e,r){r(95160);var n=r(54058);t.exports=n.Date.now},27700:function(t,e,r){r(73381);var n=r(35703);t.exports=n("Function").bind},16246:function(t,e,r){var n=r(7046),o=r(27700),i=Function.prototype;t.exports=function(t){var e=t.bind;return t===i||n(i,t)&&e===i.bind?o:e}},56043:function(t,e,r){var n=r(7046),o=r(15367),i=Array.prototype;t.exports=function(t){var e=t.concat;return t===i||n(i,t)&&e===i.concat?o:e}},2480:function(t,e,r){var n=r(7046),o=r(62383),i=Array.prototype;t.exports=function(t){var e=t.filter;return t===i||n(i,t)&&e===i.filter?o:e}},58557:function(t,e,r){var n=r(7046),o=r(80991),i=r(21631),a=Array.prototype,u=String.prototype;t.exports=function(t){var e=t.includes;return t===a||n(a,t)&&e===a.includes?o:"string"==typeof t||t===u||n(u,t)&&e===u.includes?i:e}},88287:function(t,e,r){var n=r(7046),o=r(23866),i=Array.prototype;t.exports=function(t){var e=t.map;return t===i||n(i,t)&&e===i.map?o:e}},69601:function(t,e,r){var n=r(7046),o=r(24900),i=Array.prototype;t.exports=function(t){var e=t.slice;return t===i||n(i,t)&&e===i.slice?o:e}},18339:function(t,e,r){var n=r(7046),o=r(78209),i=Array.prototype;t.exports=function(t){var e=t.splice;return t===i||n(i,t)&&e===i.splice?o:e}},71611:function(t,e,r){var n=r(7046),o=r(3269),i=String.prototype;t.exports=function(t){var e=t.startsWith;return"string"==typeof t||t===i||n(i,t)&&e===i.startsWith?o:e}},62774:function(t,e,r){var n=r(7046),o=r(13348),i=String.prototype;t.exports=function(t){var e=t.trim;return"string"==typeof t||t===i||n(i,t)&&e===i.trim?o:e}},84426:function(t,e,r){r(32619);var n=r(54058),o=r(79730);n.JSON||(n.JSON={stringify:JSON.stringify}),t.exports=function(t,e,r){return o(n.JSON.stringify,null,arguments)}},91018:function(t,e,r){r(66274),r(37501),r(55967),r(77971);var n=r(54058);t.exports=n.Map},70063:function(t,e,r){r(89622);var n=r(54058);t.exports=n.Number.isNaN},45999:function(t,e,r){r(49221);var n=r(54058);t.exports=n.Object.assign},35254:function(t,e,r){r(53882);var n=r(54058).Object;t.exports=function(t,e){return n.create(t,e)}},48171:function(t,e,r){r(86450);var n=r(54058).Object,o=t.exports=function(t,e,r){return n.defineProperty(t,e,r)};n.defineProperty.sham&&(o.sham=!0)},73081:function(t,e,r){r(21078);var n=r(54058);t.exports=n.Object.entries},7699:function(t,e,r){r(66274),r(28387);var n=r(54058);t.exports=n.Object.fromEntries},286:function(t,e,r){r(46924);var n=r(54058).Object,o=t.exports=function(t,e){return n.getOwnPropertyDescriptor(t,e)};n.getOwnPropertyDescriptor.sham&&(o.sham=!0)},48494:function(t,e,r){r(21724);var n=r(54058);t.exports=n.Object.keys},3065:function(t,e,r){r(90108);var n=r(54058);t.exports=n.Object.setPrototypeOf},98430:function(t,e,r){r(26614);var n=r(54058);t.exports=n.Object.values},98524:function(t,e,r){r(14038);var n=r(54058);t.exports=n.parseInt},52956:function(t,e,r){r(47627),r(66274),r(55967),r(98881),r(4560),r(91302),r(44349),r(77971);var n=r(54058);t.exports=n.Promise},21631:function(t,e,r){r(11035);var n=r(35703);t.exports=n("String").includes},3269:function(t,e,r){r(94761);var n=r(35703);t.exports=n("String").startsWith},13348:function(t,e,r){r(57398);var n=r(35703);t.exports=n("String").trim},57473:function(t,e,r){r(85906),r(55967),r(35824),r(8555),r(52615),r(21732),r(35903),r(1825),r(28394),r(45915),r(61766),r(62737),r(89911),r(74315),r(63131),r(64714),r(70659),r(69120),r(79413),r(1502);var n=r(54058);t.exports=n.Symbol},24227:function(t,e,r){r(66274),r(55967),r(77971),r(1825);var n=r(11477);t.exports=n.f("iterator")},86600:function(t,e,r){t.exports=r(52201)},9759:function(t,e,r){t.exports=r(27398)},52201:function(t,e,r){var n=r(80281);r(28783),r(22731),r(85605),r(65799),r(31943),r(46774),r(45414),r(80620),r(36172),t.exports=n},27398:function(t,e,r){var n=r(40031);t.exports=n},24883:function(t,e,r){var n=r(57475),o=r(69826),i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not a function")}},174:function(t,e,r){var n=r(24284),o=r(69826),i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not a constructor")}},11851:function(t,e,r){var n=r(57475),o=String,i=TypeError;t.exports=function(t){if("object"==typeof t||n(t))return t;throw i("Can't set "+o(t)+" as a prototype")}},18479:function(t){t.exports=function(){}},5743:function(t,e,r){var n=r(7046),o=TypeError;t.exports=function(t,e){if(n(e,t))return t;throw o("Incorrect invocation")}},96059:function(t,e,r){var n=r(10941),o=String,i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not an object")}},97135:function(t,e,r){var n=r(95981);t.exports=n((function(){if("function"==typeof ArrayBuffer){var t=new ArrayBuffer(8);Object.isExtensible(t)&&Object.defineProperty(t,"a",{value:8})}}))},56837:function(t,e,r){"use strict";var n=r(3610).forEach,o=r(34194)("forEach");t.exports=o?[].forEach:function(t){return n(this,t,arguments.length>1?arguments[1]:void 0)}},11354:function(t,e,r){"use strict";var n=r(86843),o=r(78834),i=r(89678),a=r(75196),u=r(6782),c=r(24284),s=r(10623),f=r(55449),l=r(53476),p=r(22902),d=Array;t.exports=function(t){var e=i(t),r=c(this),v=arguments.length,h=v>1?arguments[1]:void 0,y=void 0!==h;y&&(h=n(h,v>2?arguments[2]:void 0));var g,b,m,x,w,E,S=p(e),T=0;if(!S||this===d&&u(S))for(g=s(e),b=r?new this(g):d(g);g>T;T++)E=y?h(e[T],T):e[T],f(b,T,E);else for(w=(x=l(e,S)).next,b=r?new this:[];!(m=o(w,x)).done;T++)E=y?a(x,h,[m.value,T],!0):m.value,f(b,T,E);return b.length=T,b}},31692:function(t,e,r){var n=r(74529),o=r(59413),i=r(10623),a=function(t){return function(e,r,a){var u,c=n(e),s=i(c),f=o(a,s);if(t&&r!=r){for(;s>f;)if((u=c[f++])!=u)return!0}else for(;s>f;f++)if((t||f in c)&&c[f]===r)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},3610:function(t,e,r){var n=r(86843),o=r(95329),i=r(37026),a=r(89678),u=r(10623),c=r(64692),s=o([].push),f=function(t){var e=1==t,r=2==t,o=3==t,f=4==t,l=6==t,p=7==t,d=5==t||l;return function(v,h,y,g){for(var b,m,x=a(v),w=i(x),E=n(h,y),S=u(w),T=0,O=g||c,A=e?O(v,S):r||p?O(v,0):void 0;S>T;T++)if((d||T in w)&&(m=E(b=w[T],T,x),t))if(e)A[T]=m;else if(m)switch(t){case 3:return!0;case 5:return b;case 6:return T;case 2:s(A,b)}else switch(t){case 4:return!1;case 7:s(A,b)}return l?-1:o||f?f:A}};t.exports={forEach:f(0),map:f(1),filter:f(2),some:f(3),every:f(4),find:f(5),findIndex:f(6),filterReject:f(7)}},50568:function(t,e,r){var n=r(95981),o=r(99813),i=r(53385),a=o("species");t.exports=function(t){return i>=51||!n((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},34194:function(t,e,r){"use strict";var n=r(95981);t.exports=function(t,e){var r=[][t];return!!r&&n((function(){r.call(null,e||function(){return 1},1)}))}},89779:function(t,e,r){"use strict";var n=r(55746),o=r(1052),i=TypeError,a=Object.getOwnPropertyDescriptor,u=n&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(t){return t instanceof TypeError}}();t.exports=u?function(t,e){if(o(t)&&!a(t,"length").writable)throw i("Cannot set read only .length");return t.length=e}:function(t,e){return t.length=e}},15790:function(t,e,r){var n=r(59413),o=r(10623),i=r(55449),a=Array,u=Math.max;t.exports=function(t,e,r){for(var c=o(t),s=n(e,c),f=n(void 0===r?c:r,c),l=a(u(f-s,0)),p=0;s<f;s++,p++)i(l,p,t[s]);return l.length=p,l}},93765:function(t,e,r){var n=r(95329);t.exports=n([].slice)},5693:function(t,e,r){var n=r(1052),o=r(24284),i=r(10941),a=r(99813)("species"),u=Array;t.exports=function(t){var e;return n(t)&&(e=t.constructor,(o(e)&&(e===u||n(e.prototype))||i(e)&&null===(e=e[a]))&&(e=void 0)),void 0===e?u:e}},64692:function(t,e,r){var n=r(5693);t.exports=function(t,e){return new(n(t))(0===e?0:e)}},75196:function(t,e,r){var n=r(96059),o=r(7609);t.exports=function(t,e,r,i){try{return i?e(n(r)[0],r[1]):e(r)}catch(e){o(t,"throw",e)}}},21385:function(t,e,r){var n=r(99813)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var r=!1;try{var i={};i[n]=function(){return{next:function(){return{done:r=!0}}}},t(i)}catch(t){}return r}},82532:function(t,e,r){var n=r(95329),o=n({}.toString),i=n("".slice);t.exports=function(t){return i(o(t),8,-1)}},9697:function(t,e,r){var n=r(22885),o=r(57475),i=r(82532),a=r(99813)("toStringTag"),u=Object,c="Arguments"==i(function(){return arguments}());t.exports=n?i:function(t){var e,r,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=u(t),a))?r:c?i(e):"Object"==(n=i(e))&&o(e.callee)?"Arguments":n}},85616:function(t,e,r){"use strict";var n=r(29290),o=r(29202),i=r(94380),a=r(86843),u=r(5743),c=r(82119),s=r(93091),f=r(75105),l=r(23538),p=r(94431),d=r(55746),v=r(21647).fastKey,h=r(45402),y=h.set,g=h.getterFor;t.exports={getConstructor:function(t,e,r,f){var l=t((function(t,o){u(t,p),y(t,{type:e,index:n(null),first:void 0,last:void 0,size:0}),d||(t.size=0),c(o)||s(o,t[f],{that:t,AS_ENTRIES:r})})),p=l.prototype,h=g(e),b=function(t,e,r){var n,o,i=h(t),a=m(t,e);return a?a.value=r:(i.last=a={index:o=v(e,!0),key:e,value:r,previous:n=i.last,next:void 0,removed:!1},i.first||(i.first=a),n&&(n.next=a),d?i.size++:t.size++,"F"!==o&&(i.index[o]=a)),t},m=function(t,e){var r,n=h(t),o=v(e);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==e)return r};return i(p,{clear:function(){for(var t=h(this),e=t.index,r=t.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete e[r.index],r=r.next;t.first=t.last=void 0,d?t.size=0:this.size=0},delete:function(t){var e=this,r=h(e),n=m(e,t);if(n){var o=n.next,i=n.previous;delete r.index[n.index],n.removed=!0,i&&(i.next=o),o&&(o.previous=i),r.first==n&&(r.first=o),r.last==n&&(r.last=i),d?r.size--:e.size--}return!!n},forEach:function(t){for(var e,r=h(this),n=a(t,arguments.length>1?arguments[1]:void 0);e=e?e.next:r.first;)for(n(e.value,e.key,this);e&&e.removed;)e=e.previous},has:function(t){return!!m(this,t)}}),i(p,r?{get:function(t){var e=m(this,t);return e&&e.value},set:function(t,e){return b(this,0===t?0:t,e)}}:{add:function(t){return b(this,t=0===t?0:t,t)}}),d&&o(p,"size",{configurable:!0,get:function(){return h(this).size}}),l},setStrong:function(t,e,r){var n=e+" Iterator",o=g(e),i=g(n);f(t,e,(function(t,e){y(this,{type:n,target:t,state:o(t),kind:e,last:void 0})}),(function(){for(var t=i(this),e=t.kind,r=t.last;r&&r.removed;)r=r.previous;return t.target&&(t.last=r=r?r.next:t.state.first)?l("keys"==e?r.key:"values"==e?r.value:[r.key,r.value],!1):(t.target=void 0,l(void 0,!0))}),r?"entries":"values",!r,!0),p(e)}}},24683:function(t,e,r){"use strict";var n=r(76887),o=r(21899),i=r(21647),a=r(95981),u=r(32029),c=r(93091),s=r(5743),f=r(57475),l=r(10941),p=r(90904),d=r(65988).f,v=r(3610).forEach,h=r(55746),y=r(45402),g=y.set,b=y.getterFor;t.exports=function(t,e,r){var y,m=-1!==t.indexOf("Map"),x=-1!==t.indexOf("Weak"),w=m?"set":"add",E=o[t],S=E&&E.prototype,T={};if(h&&f(E)&&(x||S.forEach&&!a((function(){(new E).entries().next()})))){var O=(y=e((function(e,r){g(s(e,O),{type:t,collection:new E}),null!=r&&c(r,e[w],{that:e,AS_ENTRIES:m})}))).prototype,A=b(t);v(["add","clear","delete","forEach","get","has","set","keys","values","entries"],(function(t){var e="add"==t||"set"==t;!(t in S)||x&&"clear"==t||u(O,t,(function(r,n){var o=A(this).collection;if(!e&&x&&!l(r))return"get"==t&&void 0;var i=o[t](0===r?0:r,n);return e?this:i}))})),x||d(O,"size",{configurable:!0,get:function(){return A(this).collection.size}})}else y=r.getConstructor(e,t,m,w),i.enable();return p(y,t,!1,!0),T[t]=y,n({global:!0,forced:!0},T),x||r.setStrong(y,t,m),y}},23489:function(t,e,r){var n=r(90953),o=r(31136),i=r(49677),a=r(65988);t.exports=function(t,e,r){for(var u=o(e),c=a.f,s=i.f,f=0;f<u.length;f++){var l=u[f];n(t,l)||r&&n(r,l)||c(t,l,s(e,l))}}},67772:function(t,e,r){var n=r(99813)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(r){try{return e[n]=!1,"/./"[t](e)}catch(t){}}return!1}},64160:function(t,e,r){var n=r(95981);t.exports=!n((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},23538:function(t){t.exports=function(t,e){return{value:t,done:e}}},32029:function(t,e,r){var n=r(55746),o=r(65988),i=r(31887);t.exports=n?function(t,e,r){return o.f(t,e,i(1,r))}:function(t,e,r){return t[e]=r,t}},31887:function(t){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},55449:function(t,e,r){"use strict";var n=r(83894),o=r(65988),i=r(31887);t.exports=function(t,e,r){var a=n(e);a in t?o.f(t,a,i(0,r)):t[a]=r}},29202:function(t,e,r){var n=r(65988);t.exports=function(t,e,r){return n.f(t,e,r)}},95929:function(t,e,r){var n=r(32029);t.exports=function(t,e,r,o){return o&&o.enumerable?t[e]=r:n(t,e,r),t}},94380:function(t,e,r){var n=r(95929);t.exports=function(t,e,r){for(var o in e)r&&r.unsafe&&t[o]?t[o]=e[o]:n(t,o,e[o],r);return t}},75609:function(t,e,r){var n=r(21899),o=Object.defineProperty;t.exports=function(t,e){try{o(n,t,{value:e,configurable:!0,writable:!0})}catch(r){n[t]=e}return e}},15863:function(t,e,r){"use strict";var n=r(69826),o=TypeError;t.exports=function(t,e){if(!delete t[e])throw o("Cannot delete property "+n(e)+" of "+n(t))}},55746:function(t,e,r){var n=r(95981);t.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},76616:function(t){var e="object"==typeof document&&document.all,r=void 0===e&&void 0!==e;t.exports={all:e,IS_HTMLDDA:r}},61333:function(t,e,r){var n=r(21899),o=r(10941),i=n.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},66796:function(t){var e=TypeError;t.exports=function(t){if(t>9007199254740991)throw e("Maximum allowed index exceeded");return t}},63281:function(t){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},23321:function(t,e,r){var n=r(48501),o=r(6049);t.exports=!n&&!o&&"object"==typeof window&&"object"==typeof document},56491:function(t){t.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},48501:function(t){t.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},4470:function(t,e,r){var n=r(2861);t.exports=/ipad|iphone|ipod/i.test(n)&&"undefined"!=typeof Pebble},22749:function(t,e,r){var n=r(2861);t.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(n)},6049:function(t,r,n){var o=n(82532);t.exports=void 0!==e&&"process"==o(e)},58045:function(t,e,r){var n=r(2861);t.exports=/web0s(?!.*chrome)/i.test(n)},2861:function(t){t.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},53385:function(t,e,r){var n,o,i=r(21899),a=r(2861),u=i.process,c=i.Deno,s=u&&u.versions||c&&c.version,f=s&&s.v8;f&&(o=(n=f.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(o=+n[1]),t.exports=o},35703:function(t,e,r){var n=r(54058);t.exports=function(t){return n[t+"Prototype"]}},56759:function(t){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},53995:function(t,e,r){var n=r(95329),o=Error,i=n("".replace),a=String(o("zxcasd").stack),u=/\n\s*at [^:]*:[^\n]*/,c=u.test(a);t.exports=function(t,e){if(c&&"string"==typeof t&&!o.prepareStackTrace)for(;e--;)t=i(t,u,"");return t}},79585:function(t,e,r){var n=r(32029),o=r(53995),i=r(18780),a=Error.captureStackTrace;t.exports=function(t,e,r,u){i&&(a?a(t,e):n(t,"stack",o(r,u)))}},18780:function(t,e,r){var n=r(95981),o=r(31887);t.exports=!n((function(){var t=Error("a");return!("stack"in t)||(Object.defineProperty(t,"stack",o(1,7)),7!==t.stack)}))},76887:function(t,e,r){"use strict";var n=r(21899),o=r(79730),i=r(97484),a=r(57475),u=r(49677).f,c=r(37252),s=r(54058),f=r(86843),l=r(32029),p=r(90953),d=function(t){var e=function(r,n,i){if(this instanceof e){switch(arguments.length){case 0:return new t;case 1:return new t(r);case 2:return new t(r,n)}return new t(r,n,i)}return o(t,this,arguments)};return e.prototype=t.prototype,e};t.exports=function(t,e){var r,o,v,h,y,g,b,m,x,w=t.target,E=t.global,S=t.stat,T=t.proto,O=E?n:S?n[w]:(n[w]||{}).prototype,A=E?s:s[w]||l(s,w,{})[w],_=A.prototype;for(h in e)o=!(r=c(E?h:w+(S?".":"#")+h,t.forced))&&O&&p(O,h),g=A[h],o&&(b=t.dontCallGetSet?(x=u(O,h))&&x.value:O[h]),y=o&&b?b:e[h],o&&typeof g==typeof y||(m=t.bind&&o?f(y,n):t.wrap&&o?d(y):T&&a(y)?i(y):y,(t.sham||y&&y.sham||g&&g.sham)&&l(m,"sham",!0),l(A,h,m),T&&(p(s,v=w+"Prototype")||l(s,v,{}),l(s[v],h,y),t.real&&_&&(r||!_[h])&&l(_,h,y)))}},95981:function(t){t.exports=function(t){try{return!!t()}catch(t){return!0}}},45602:function(t,e,r){var n=r(95981);t.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},79730:function(t,e,r){var n=r(18285),o=Function.prototype,i=o.apply,a=o.call;t.exports="object"==typeof Reflect&&Reflect.apply||(n?a.bind(i):function(){return a.apply(i,arguments)})},86843:function(t,e,r){var n=r(97484),o=r(24883),i=r(18285),a=n(n.bind);t.exports=function(t,e){return o(t),void 0===e?t:i?a(t,e):function(){return t.apply(e,arguments)}}},18285:function(t,e,r){var n=r(95981);t.exports=!n((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},98308:function(t,e,r){"use strict";var n=r(95329),o=r(24883),i=r(10941),a=r(90953),u=r(93765),c=r(18285),s=Function,f=n([].concat),l=n([].join),p={},d=function(t,e,r){if(!a(p,e)){for(var n=[],o=0;o<e;o++)n[o]="a["+o+"]";p[e]=s("C,a","return new C("+l(n,",")+")")}return p[e](t,r)};t.exports=c?s.bind:function(t){var e=o(this),r=e.prototype,n=u(arguments,1),a=function(){var r=f(n,u(arguments));return this instanceof a?d(e,r.length,r):e.apply(t,r)};return i(r)&&(a.prototype=r),a}},78834:function(t,e,r){var n=r(18285),o=Function.prototype.call;t.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},79417:function(t,e,r){var n=r(55746),o=r(90953),i=Function.prototype,a=n&&Object.getOwnPropertyDescriptor,u=o(i,"name"),c=u&&"something"===function(){}.name,s=u&&(!n||n&&a(i,"name").configurable);t.exports={EXISTS:u,PROPER:c,CONFIGURABLE:s}},45526:function(t,e,r){var n=r(95329),o=r(24883);t.exports=function(t,e,r){try{return n(o(Object.getOwnPropertyDescriptor(t,e)[r]))}catch(t){}}},97484:function(t,e,r){var n=r(82532),o=r(95329);t.exports=function(t){if("Function"===n(t))return o(t)}},95329:function(t,e,r){var n=r(18285),o=Function.prototype,i=o.call,a=n&&o.bind.bind(i,i);t.exports=n?a:function(t){return function(){return i.apply(t,arguments)}}},626:function(t,e,r){var n=r(54058),o=r(21899),i=r(57475),a=function(t){return i(t)?t:void 0};t.exports=function(t,e){return arguments.length<2?a(n[t])||a(o[t]):n[t]&&n[t][e]||o[t]&&o[t][e]}},22902:function(t,e,r){var n=r(9697),o=r(14229),i=r(82119),a=r(12077),u=r(99813)("iterator");t.exports=function(t){if(!i(t))return o(t,u)||o(t,"@@iterator")||a[n(t)]}},53476:function(t,e,r){var n=r(78834),o=r(24883),i=r(96059),a=r(69826),u=r(22902),c=TypeError;t.exports=function(t,e){var r=arguments.length<2?u(t):e;if(o(r))return i(n(r,t));throw c(a(t)+" is not iterable")}},33323:function(t,e,r){var n=r(95329),o=r(1052),i=r(57475),a=r(82532),u=r(85803),c=n([].push);t.exports=function(t){if(i(t))return t;if(o(t)){for(var e=t.length,r=[],n=0;n<e;n++){var s=t[n];"string"==typeof s?c(r,s):"number"!=typeof s&&"Number"!=a(s)&&"String"!=a(s)||c(r,u(s))}var f=r.length,l=!0;return function(t,e){if(l)return l=!1,e;if(o(this))return e;for(var n=0;n<f;n++)if(r[n]===t)return e}}}},14229:function(t,e,r){var n=r(24883),o=r(82119);t.exports=function(t,e){var r=t[e];return o(r)?void 0:n(r)}},21899:function(t,e,r){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof r.g&&r.g)||function(){return this}()||Function("return this")()},90953:function(t,e,r){var n=r(95329),o=r(89678),i=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return i(o(t),e)}},27748:function(t){t.exports={}},34845:function(t){t.exports=function(t,e){try{1==arguments.length?console.error(t):console.error(t,e)}catch(t){}}},15463:function(t,e,r){var n=r(626);t.exports=n("document","documentElement")},2840:function(t,e,r){var n=r(55746),o=r(95981),i=r(61333);t.exports=!n&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},37026:function(t,e,r){var n=r(95329),o=r(95981),i=r(82532),a=Object,u=n("".split);t.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"==i(t)?u(t,""):a(t)}:a},81302:function(t,e,r){var n=r(95329),o=r(57475),i=r(63030),a=n(Function.toString);o(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},53794:function(t,e,r){var n=r(10941),o=r(32029);t.exports=function(t,e){n(e)&&"cause"in e&&o(t,"cause",e.cause)}},21647:function(t,e,r){var n=r(76887),o=r(95329),i=r(27748),a=r(10941),u=r(90953),c=r(65988).f,s=r(10946),f=r(684),l=r(91584),p=r(99418),d=r(45602),v=!1,h=p("meta"),y=0,g=function(t){c(t,h,{value:{objectID:"O"+y++,weakData:{}}})},b=t.exports={enable:function(){b.enable=function(){},v=!0;var t=s.f,e=o([].splice),r={};r[h]=1,t(r).length&&(s.f=function(r){for(var n=t(r),o=0,i=n.length;o<i;o++)if(n[o]===h){e(n,o,1);break}return n},n({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:f.f}))},fastKey:function(t,e){if(!a(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!u(t,h)){if(!l(t))return"F";if(!e)return"E";g(t)}return t[h].objectID},getWeakData:function(t,e){if(!u(t,h)){if(!l(t))return!0;if(!e)return!1;g(t)}return t[h].weakData},onFreeze:function(t){return d&&v&&l(t)&&!u(t,h)&&g(t),t}};i[h]=!0},45402:function(t,e,r){var n,o,i,a=r(47093),u=r(21899),c=r(10941),s=r(32029),f=r(90953),l=r(63030),p=r(44262),d=r(27748),v="Object already initialized",h=u.TypeError,y=u.WeakMap;if(a||l.state){var g=l.state||(l.state=new y);g.get=g.get,g.has=g.has,g.set=g.set,n=function(t,e){if(g.has(t))throw h(v);return e.facade=t,g.set(t,e),e},o=function(t){return g.get(t)||{}},i=function(t){return g.has(t)}}else{var b=p("state");d[b]=!0,n=function(t,e){if(f(t,b))throw h(v);return e.facade=t,s(t,b,e),e},o=function(t){return f(t,b)?t[b]:{}},i=function(t){return f(t,b)}}t.exports={set:n,get:o,has:i,enforce:function(t){return i(t)?o(t):n(t,{})},getterFor:function(t){return function(e){var r;if(!c(e)||(r=o(e)).type!==t)throw h("Incompatible receiver, "+t+" required");return r}}}},6782:function(t,e,r){var n=r(99813),o=r(12077),i=n("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(o.Array===t||a[i]===t)}},1052:function(t,e,r){var n=r(82532);t.exports=Array.isArray||function(t){return"Array"==n(t)}},57475:function(t,e,r){var n=r(76616),o=n.all;t.exports=n.IS_HTMLDDA?function(t){return"function"==typeof t||t===o}:function(t){return"function"==typeof t}},24284:function(t,e,r){var n=r(95329),o=r(95981),i=r(57475),a=r(9697),u=r(626),c=r(81302),s=function(){},f=[],l=u("Reflect","construct"),p=/^\s*(?:class|function)\b/,d=n(p.exec),v=!p.exec(s),h=function(t){if(!i(t))return!1;try{return l(s,f,t),!0}catch(t){return!1}},y=function(t){if(!i(t))return!1;switch(a(t)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return v||!!d(p,c(t))}catch(t){return!0}};y.sham=!0,t.exports=!l||o((function(){var t;return h(h.call)||!h(Object)||!h((function(){t=!0}))||t}))?y:h},37252:function(t,e,r){var n=r(95981),o=r(57475),i=/#|\.prototype\./,a=function(t,e){var r=c[u(t)];return r==f||r!=s&&(o(e)?n(e):!!e)},u=a.normalize=function(t){return String(t).replace(i,".").toLowerCase()},c=a.data={},s=a.NATIVE="N",f=a.POLYFILL="P";t.exports=a},82119:function(t){t.exports=function(t){return null==t}},10941:function(t,e,r){var n=r(57475),o=r(76616),i=o.all;t.exports=o.IS_HTMLDDA?function(t){return"object"==typeof t?null!==t:n(t)||t===i}:function(t){return"object"==typeof t?null!==t:n(t)}},82529:function(t){t.exports=!0},60685:function(t,e,r){var n=r(10941),o=r(82532),i=r(99813)("match");t.exports=function(t){var e;return n(t)&&(void 0!==(e=t[i])?!!e:"RegExp"==o(t))}},56664:function(t,e,r){var n=r(626),o=r(57475),i=r(7046),a=r(32302),u=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var e=n("Symbol");return o(e)&&i(e.prototype,u(t))}},93091:function(t,e,r){var n=r(86843),o=r(78834),i=r(96059),a=r(69826),u=r(6782),c=r(10623),s=r(7046),f=r(53476),l=r(22902),p=r(7609),d=TypeError,v=function(t,e){this.stopped=t,this.result=e},h=v.prototype;t.exports=function(t,e,r){var y,g,b,m,x,w,E,S=r&&r.that,T=!(!r||!r.AS_ENTRIES),O=!(!r||!r.IS_RECORD),A=!(!r||!r.IS_ITERATOR),_=!(!r||!r.INTERRUPTED),I=n(e,S),P=function(t){return y&&p(y,"normal",t),new v(!0,t)},R=function(t){return T?(i(t),_?I(t[0],t[1],P):I(t[0],t[1])):_?I(t,P):I(t)};if(O)y=t.iterator;else if(A)y=t;else{if(!(g=l(t)))throw d(a(t)+" is not iterable");if(u(g)){for(b=0,m=c(t);m>b;b++)if((x=R(t[b]))&&s(h,x))return x;return new v(!1)}y=f(t,g)}for(w=O?t.next:y.next;!(E=o(w,y)).done;){try{x=R(E.value)}catch(t){p(y,"throw",t)}if("object"==typeof x&&x&&s(h,x))return x}return new v(!1)}},7609:function(t,e,r){var n=r(78834),o=r(96059),i=r(14229);t.exports=function(t,e,r){var a,u;o(t);try{if(!(a=i(t,"return"))){if("throw"===e)throw r;return r}a=n(a,t)}catch(t){u=!0,a=t}if("throw"===e)throw r;if(u)throw a;return o(a),r}},53847:function(t,e,r){"use strict";var n=r(35143).IteratorPrototype,o=r(29290),i=r(31887),a=r(90904),u=r(12077),c=function(){return this};t.exports=function(t,e,r,s){var f=e+" Iterator";return t.prototype=o(n,{next:i(+!s,r)}),a(t,f,!1,!0),u[f]=c,t}},75105:function(t,e,r){"use strict";var n=r(76887),o=r(78834),i=r(82529),a=r(79417),u=r(57475),c=r(53847),s=r(249),f=r(88929),l=r(90904),p=r(32029),d=r(95929),v=r(99813),h=r(12077),y=r(35143),g=a.PROPER,b=a.CONFIGURABLE,m=y.IteratorPrototype,x=y.BUGGY_SAFARI_ITERATORS,w=v("iterator"),E="keys",S="values",T="entries",O=function(){return this};t.exports=function(t,e,r,a,v,y,A){c(r,e,a);var _,I,P,R=function(t){if(t===v&&M)return M;if(!x&&t in N)return N[t];switch(t){case E:case S:case T:return function(){return new r(this,t)}}return function(){return new r(this)}},j=e+" Iterator",C=!1,N=t.prototype,k=N[w]||N["@@iterator"]||v&&N[v],M=!x&&k||R(v),L="Array"==e&&N.entries||k;if(L&&(_=s(L.call(new t)))!==Object.prototype&&_.next&&(i||s(_)===m||(f?f(_,m):u(_[w])||d(_,w,O)),l(_,j,!0,!0),i&&(h[j]=O)),g&&v==S&&k&&k.name!==S&&(!i&&b?p(N,"name",S):(C=!0,M=function(){return o(k,this)})),v)if(I={values:R(S),keys:y?M:R(E),entries:R(T)},A)for(P in I)(x||C||!(P in N))&&d(N,P,I[P]);else n({target:e,proto:!0,forced:x||C},I);return i&&!A||N[w]===M||d(N,w,M,{name:v}),h[e]=M,I}},35143:function(t,e,r){"use strict";var n,o,i,a=r(95981),u=r(57475),c=r(10941),s=r(29290),f=r(249),l=r(95929),p=r(99813),d=r(82529),v=p("iterator"),h=!1;[].keys&&("next"in(i=[].keys())?(o=f(f(i)))!==Object.prototype&&(n=o):h=!0),!c(n)||a((function(){var t={};return n[v].call(t)!==t}))?n={}:d&&(n=s(n)),u(n[v])||l(n,v,(function(){return this})),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:h}},12077:function(t){t.exports={}},10623:function(t,e,r){var n=r(43057);t.exports=function(t){return n(t.length)}},35331:function(t){var e=Math.ceil,r=Math.floor;t.exports=Math.trunc||function(t){var n=+t;return(n>0?r:e)(n)}},66132:function(t,e,r){var n,o,i,a,u,c=r(21899),s=r(86843),f=r(49677).f,l=r(42941).set,p=r(18397),d=r(22749),v=r(4470),h=r(58045),y=r(6049),g=c.MutationObserver||c.WebKitMutationObserver,b=c.document,m=c.process,x=c.Promise,w=f(c,"queueMicrotask"),E=w&&w.value;if(!E){var S=new p,T=function(){var t,e;for(y&&(t=m.domain)&&t.exit();e=S.get();)try{e()}catch(t){throw S.head&&n(),t}t&&t.enter()};d||y||h||!g||!b?!v&&x&&x.resolve?((a=x.resolve(void 0)).constructor=x,u=s(a.then,a),n=function(){u(T)}):y?n=function(){m.nextTick(T)}:(l=s(l,c),n=function(){l(T)}):(o=!0,i=b.createTextNode(""),new g(T).observe(i,{characterData:!0}),n=function(){i.data=o=!o}),E=function(t){S.head||n(),S.add(t)}}t.exports=E},69520:function(t,e,r){"use strict";var n=r(24883),o=TypeError,i=function(t){var e,r;this.promise=new t((function(t,n){if(void 0!==e||void 0!==r)throw o("Bad Promise constructor");e=t,r=n})),this.resolve=n(e),this.reject=n(r)};t.exports.f=function(t){return new i(t)}},14649:function(t,e,r){var n=r(85803);t.exports=function(t,e){return void 0===t?arguments.length<2?"":e:n(t)}},70344:function(t,e,r){var n=r(60685),o=TypeError;t.exports=function(t){if(n(t))throw o("The method doesn't accept regular expressions");return t}},29806:function(t,e,r){var n=r(21899),o=r(95981),i=r(95329),a=r(85803),u=r(74853).trim,c=r(73483),s=n.parseInt,f=n.Symbol,l=f&&f.iterator,p=/^[+-]?0x/i,d=i(p.exec),v=8!==s(c+"08")||22!==s(c+"0x16")||l&&!o((function(){s(Object(l))}));t.exports=v?function(t,e){var r=u(a(t));return s(r,e>>>0||(d(p,r)?16:10))}:s},24420:function(t,e,r){"use strict";var n=r(55746),o=r(95329),i=r(78834),a=r(95981),u=r(14771),c=r(87857),s=r(36760),f=r(89678),l=r(37026),p=Object.assign,d=Object.defineProperty,v=o([].concat);t.exports=!p||a((function(){if(n&&1!==p({b:1},p(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},r=Symbol(),o="abcdefghijklmnopqrst";return t[r]=7,o.split("").forEach((function(t){e[t]=t})),7!=p({},t)[r]||u(p({},e)).join("")!=o}))?function(t,e){for(var r=f(t),o=arguments.length,a=1,p=c.f,d=s.f;o>a;)for(var h,y=l(arguments[a++]),g=p?v(u(y),p(y)):u(y),b=g.length,m=0;b>m;)h=g[m++],n&&!i(d,y,h)||(r[h]=y[h]);return r}:p},29290:function(t,e,r){var n,o=r(96059),i=r(59938),a=r(56759),u=r(27748),c=r(15463),s=r(61333),f=r(44262),l="prototype",p="script",d=f("IE_PROTO"),v=function(){},h=function(t){return"<script>"+t+"</"+p+">"},y=function(t){t.write(h("")),t.close();var e=t.parentWindow.Object;return t=null,e},g=function(){try{n=new ActiveXObject("htmlfile")}catch(t){}var t,e;g="undefined"!=typeof document?document.domain&&n?y(n):((e=s("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F):y(n);for(var r=a.length;r--;)delete g[l][a[r]];return g()};u[d]=!0,t.exports=Object.create||function(t,e){var r;return null!==t?(v[l]=o(t),r=new v,v[l]=null,r[d]=t):r=g(),void 0===e?r:i.f(r,e)}},59938:function(t,e,r){var n=r(55746),o=r(83937),i=r(65988),a=r(96059),u=r(74529),c=r(14771);e.f=n&&!o?Object.defineProperties:function(t,e){a(t);for(var r,n=u(e),o=c(e),s=o.length,f=0;s>f;)i.f(t,r=o[f++],n[r]);return t}},65988:function(t,e,r){var n=r(55746),o=r(2840),i=r(83937),a=r(96059),u=r(83894),c=TypeError,s=Object.defineProperty,f=Object.getOwnPropertyDescriptor,l="enumerable",p="configurable",d="writable";e.f=n?i?function(t,e,r){if(a(t),e=u(e),a(r),"function"==typeof t&&"prototype"===e&&"value"in r&&d in r&&!r[d]){var n=f(t,e);n&&n[d]&&(t[e]=r.value,r={configurable:p in r?r[p]:n[p],enumerable:l in r?r[l]:n[l],writable:!1})}return s(t,e,r)}:s:function(t,e,r){if(a(t),e=u(e),a(r),o)try{return s(t,e,r)}catch(t){}if("get"in r||"set"in r)throw c("Accessors not supported");return"value"in r&&(t[e]=r.value),t}},49677:function(t,e,r){var n=r(55746),o=r(78834),i=r(36760),a=r(31887),u=r(74529),c=r(83894),s=r(90953),f=r(2840),l=Object.getOwnPropertyDescriptor;e.f=n?l:function(t,e){if(t=u(t),e=c(e),f)try{return l(t,e)}catch(t){}if(s(t,e))return a(!o(i.f,t,e),t[e])}},684:function(t,e,r){var n=r(82532),o=r(74529),i=r(10946).f,a=r(15790),u="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return u&&"Window"==n(t)?function(t){try{return i(t)}catch(t){return a(u)}}(t):i(o(t))}},10946:function(t,e,r){var n=r(55629),o=r(56759).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return n(t,o)}},87857:function(t,e){e.f=Object.getOwnPropertySymbols},249:function(t,e,r){var n=r(90953),o=r(57475),i=r(89678),a=r(44262),u=r(64160),c=a("IE_PROTO"),s=Object,f=s.prototype;t.exports=u?s.getPrototypeOf:function(t){var e=i(t);if(n(e,c))return e[c];var r=e.constructor;return o(r)&&e instanceof r?r.prototype:e instanceof s?f:null}},91584:function(t,e,r){var n=r(95981),o=r(10941),i=r(82532),a=r(97135),u=Object.isExtensible,c=n((function(){u(1)}));t.exports=c||a?function(t){return!!o(t)&&(!a||"ArrayBuffer"!=i(t))&&(!u||u(t))}:u},7046:function(t,e,r){var n=r(95329);t.exports=n({}.isPrototypeOf)},55629:function(t,e,r){var n=r(95329),o=r(90953),i=r(74529),a=r(31692).indexOf,u=r(27748),c=n([].push);t.exports=function(t,e){var r,n=i(t),s=0,f=[];for(r in n)!o(u,r)&&o(n,r)&&c(f,r);for(;e.length>s;)o(n,r=e[s++])&&(~a(f,r)||c(f,r));return f}},14771:function(t,e,r){var n=r(55629),o=r(56759);t.exports=Object.keys||function(t){return n(t,o)}},36760:function(t,e){"use strict";var r={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!r.call({1:2},1);e.f=o?function(t){var e=n(this,t);return!!e&&e.enumerable}:r},88929:function(t,e,r){var n=r(45526),o=r(96059),i=r(11851);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,r={};try{(t=n(Object.prototype,"__proto__","set"))(r,[]),e=r instanceof Array}catch(t){}return function(r,n){return o(r),i(n),e?t(r,n):r.__proto__=n,r}}():void 0)},88810:function(t,e,r){var n=r(55746),o=r(95329),i=r(14771),a=r(74529),u=o(r(36760).f),c=o([].push),s=function(t){return function(e){for(var r,o=a(e),s=i(o),f=s.length,l=0,p=[];f>l;)r=s[l++],n&&!u(o,r)||c(p,t?[r,o[r]]:o[r]);return p}};t.exports={entries:s(!0),values:s(!1)}},95623:function(t,e,r){"use strict";var n=r(22885),o=r(9697);t.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},39811:function(t,e,r){var n=r(78834),o=r(57475),i=r(10941),a=TypeError;t.exports=function(t,e){var r,u;if("string"===e&&o(r=t.toString)&&!i(u=n(r,t)))return u;if(o(r=t.valueOf)&&!i(u=n(r,t)))return u;if("string"!==e&&o(r=t.toString)&&!i(u=n(r,t)))return u;throw a("Can't convert object to primitive value")}},31136:function(t,e,r){var n=r(626),o=r(95329),i=r(10946),a=r(87857),u=r(96059),c=o([].concat);t.exports=n("Reflect","ownKeys")||function(t){var e=i.f(u(t)),r=a.f;return r?c(e,r(t)):e}},54058:function(t){t.exports={}},40002:function(t){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},67742:function(t,e,r){var n=r(21899),o=r(6991),i=r(57475),a=r(37252),u=r(81302),c=r(99813),s=r(23321),f=r(48501),l=r(82529),p=r(53385),d=o&&o.prototype,v=c("species"),h=!1,y=i(n.PromiseRejectionEvent),g=a("Promise",(function(){var t=u(o),e=t!==String(o);if(!e&&66===p)return!0;if(l&&(!d.catch||!d.finally))return!0;if(!p||p<51||!/native code/.test(t)){var r=new o((function(t){t(1)})),n=function(t){t((function(){}),(function(){}))};if((r.constructor={})[v]=n,!(h=r.then((function(){}))instanceof n))return!0}return!e&&(s||f)&&!y}));t.exports={CONSTRUCTOR:g,REJECTION_EVENT:y,SUBCLASSING:h}},6991:function(t,e,r){var n=r(21899);t.exports=n.Promise},56584:function(t,e,r){var n=r(96059),o=r(10941),i=r(69520);t.exports=function(t,e){if(n(t),o(e)&&e.constructor===t)return e;var r=i.f(t);return(0,r.resolve)(e),r.promise}},31542:function(t,e,r){var n=r(6991),o=r(21385),i=r(67742).CONSTRUCTOR;t.exports=i||!o((function(t){n.all(t).then(void 0,(function(){}))}))},18397:function(t){var e=function(){this.head=null,this.tail=null};e.prototype={add:function(t){var e={item:t,next:null},r=this.tail;r?r.next=e:this.head=e,this.tail=e},get:function(){var t=this.head;if(t)return null===(this.head=t.next)&&(this.tail=null),t.item}},t.exports=e},48219:function(t,e,r){var n=r(82119),o=TypeError;t.exports=function(t){if(n(t))throw o("Can't call method on "+t);return t}},37620:function(t,e,r){"use strict";var n,o=r(21899),i=r(79730),a=r(57475),u=r(56491),c=r(2861),s=r(93765),f=r(18348),l=o.Function,p=/MSIE .\./.test(c)||u&&((n=o.Bun.version.split(".")).length<3||0==n[0]&&(n[1]<3||3==n[1]&&0==n[2]));t.exports=function(t,e){var r=e?2:1;return p?function(n,o){var u=f(arguments.length,1)>r,c=a(n)?n:l(n),p=u?s(arguments,r):[],d=u?function(){i(c,this,p)}:c;return e?t(d,o):t(d)}:t}},94431:function(t,e,r){"use strict";var n=r(626),o=r(29202),i=r(99813),a=r(55746),u=i("species");t.exports=function(t){var e=n(t);a&&e&&!e[u]&&o(e,u,{configurable:!0,get:function(){return this}})}},90904:function(t,e,r){var n=r(22885),o=r(65988).f,i=r(32029),a=r(90953),u=r(95623),c=r(99813)("toStringTag");t.exports=function(t,e,r,s){if(t){var f=r?t:t.prototype;a(f,c)||o(f,c,{configurable:!0,value:e}),s&&!n&&i(f,"toString",u)}}},44262:function(t,e,r){var n=r(68726),o=r(99418),i=n("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},63030:function(t,e,r){var n=r(21899),o=r(75609),i="__core-js_shared__",a=n[i]||o(i,{});t.exports=a},68726:function(t,e,r){var n=r(82529),o=r(63030);(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.29.0",mode:n?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.29.0/LICENSE",source:"https://github.com/zloirock/core-js"})},70487:function(t,e,r){var n=r(96059),o=r(174),i=r(82119),a=r(99813)("species");t.exports=function(t,e){var r,u=n(t).constructor;return void 0===u||i(r=n(u)[a])?e:o(r)}},64620:function(t,e,r){var n=r(95329),o=r(62435),i=r(85803),a=r(48219),u=n("".charAt),c=n("".charCodeAt),s=n("".slice),f=function(t){return function(e,r){var n,f,l=i(a(e)),p=o(r),d=l.length;return p<0||p>=d?t?"":void 0:(n=c(l,p))<55296||n>56319||p+1===d||(f=c(l,p+1))<56320||f>57343?t?u(l,p):n:t?s(l,p,p+2):f-56320+(n-55296<<10)+65536}};t.exports={codeAt:f(!1),charAt:f(!0)}},93093:function(t,e,r){var n=r(79417).PROPER,o=r(95981),i=r(73483);t.exports=function(t){return o((function(){return!!i[t]()||"​᠎"!=="​᠎"[t]()||n&&i[t].name!==t}))}},74853:function(t,e,r){var n=r(95329),o=r(48219),i=r(85803),a=r(73483),u=n("".replace),c=RegExp("^["+a+"]+"),s=RegExp("(^|[^"+a+"])["+a+"]+$"),f=function(t){return function(e){var r=i(o(e));return 1&t&&(r=u(r,c,"")),2&t&&(r=u(r,s,"$1")),r}};t.exports={start:f(1),end:f(2),trim:f(3)}},63405:function(t,e,r){var n=r(53385),o=r(95981);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},29630:function(t,e,r){var n=r(78834),o=r(626),i=r(99813),a=r(95929);t.exports=function(){var t=o("Symbol"),e=t&&t.prototype,r=e&&e.valueOf,u=i("toPrimitive");e&&!e[u]&&a(e,u,(function(t){return n(r,this)}),{arity:1})}},34680:function(t,e,r){var n=r(63405);t.exports=n&&!!Symbol.for&&!!Symbol.keyFor},42941:function(t,e,r){var n,o,i,a,u=r(21899),c=r(79730),s=r(86843),f=r(57475),l=r(90953),p=r(95981),d=r(15463),v=r(93765),h=r(61333),y=r(18348),g=r(22749),b=r(6049),m=u.setImmediate,x=u.clearImmediate,w=u.process,E=u.Dispatch,S=u.Function,T=u.MessageChannel,O=u.String,A=0,_={},I="onreadystatechange";p((function(){n=u.location}));var P=function(t){if(l(_,t)){var e=_[t];delete _[t],e()}},R=function(t){return function(){P(t)}},j=function(t){P(t.data)},C=function(t){u.postMessage(O(t),n.protocol+"//"+n.host)};m&&x||(m=function(t){y(arguments.length,1);var e=f(t)?t:S(t),r=v(arguments,1);return _[++A]=function(){c(e,void 0,r)},o(A),A},x=function(t){delete _[t]},b?o=function(t){w.nextTick(R(t))}:E&&E.now?o=function(t){E.now(R(t))}:T&&!g?(a=(i=new T).port2,i.port1.onmessage=j,o=s(a.postMessage,a)):u.addEventListener&&f(u.postMessage)&&!u.importScripts&&n&&"file:"!==n.protocol&&!p(C)?(o=C,u.addEventListener("message",j,!1)):o=I in h("script")?function(t){d.appendChild(h("script"))[I]=function(){d.removeChild(this),P(t)}}:function(t){setTimeout(R(t),0)}),t.exports={set:m,clear:x}},59413:function(t,e,r){var n=r(62435),o=Math.max,i=Math.min;t.exports=function(t,e){var r=n(t);return r<0?o(r+e,0):i(r,e)}},74529:function(t,e,r){var n=r(37026),o=r(48219);t.exports=function(t){return n(o(t))}},62435:function(t,e,r){var n=r(35331);t.exports=function(t){var e=+t;return e!=e||0===e?0:n(e)}},43057:function(t,e,r){var n=r(62435),o=Math.min;t.exports=function(t){return t>0?o(n(t),9007199254740991):0}},89678:function(t,e,r){var n=r(48219),o=Object;t.exports=function(t){return o(n(t))}},46935:function(t,e,r){var n=r(78834),o=r(10941),i=r(56664),a=r(14229),u=r(39811),c=r(99813),s=TypeError,f=c("toPrimitive");t.exports=function(t,e){if(!o(t)||i(t))return t;var r,c=a(t,f);if(c){if(void 0===e&&(e="default"),r=n(c,t,e),!o(r)||i(r))return r;throw s("Can't convert object to primitive value")}return void 0===e&&(e="number"),u(t,e)}},83894:function(t,e,r){var n=r(46935),o=r(56664);t.exports=function(t){var e=n(t,"string");return o(e)?e:e+""}},22885:function(t,e,r){var n={};n[r(99813)("toStringTag")]="z",t.exports="[object z]"===String(n)},85803:function(t,e,r){var n=r(9697),o=String;t.exports=function(t){if("Symbol"===n(t))throw TypeError("Cannot convert a Symbol value to a string");return o(t)}},69826:function(t){var e=String;t.exports=function(t){try{return e(t)}catch(t){return"Object"}}},99418:function(t,e,r){var n=r(95329),o=0,i=Math.random(),a=n(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++o+i,36)}},32302:function(t,e,r){var n=r(63405);t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},83937:function(t,e,r){var n=r(55746),o=r(95981);t.exports=n&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},18348:function(t){var e=TypeError;t.exports=function(t,r){if(t<r)throw e("Not enough arguments");return t}},47093:function(t,e,r){var n=r(21899),o=r(57475),i=n.WeakMap;t.exports=o(i)&&/native code/.test(String(i))},73464:function(t,e,r){var n=r(54058),o=r(90953),i=r(11477),a=r(65988).f;t.exports=function(t){var e=n.Symbol||(n.Symbol={});o(e,t)||a(e,t,{value:i.f(t)})}},11477:function(t,e,r){var n=r(99813);e.f=n},99813:function(t,e,r){var n=r(21899),o=r(68726),i=r(90953),a=r(99418),u=r(63405),c=r(32302),s=n.Symbol,f=o("wks"),l=c?s.for||s:s&&s.withoutSetter||a;t.exports=function(t){return i(f,t)||(f[t]=u&&i(s,t)?s[t]:l("Symbol."+t)),f[t]}},73483:function(t){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},49812:function(t,e,r){"use strict";var n=r(76887),o=r(7046),i=r(249),a=r(88929),u=r(23489),c=r(29290),s=r(32029),f=r(31887),l=r(53794),p=r(79585),d=r(93091),v=r(14649),h=r(99813)("toStringTag"),y=Error,g=[].push,b=function(t,e){var r,n=o(m,this);a?r=a(y(),n?i(this):m):(r=n?this:c(m),s(r,h,"Error")),void 0!==e&&s(r,"message",v(e)),p(r,b,r.stack,1),arguments.length>2&&l(r,arguments[2]);var u=[];return d(t,g,{that:u}),s(r,"errors",u),r};a?a(b,y):u(b,y,{name:!0});var m=b.prototype=c(y.prototype,{constructor:f(1,b),message:f(1,""),name:f(1,"AggregateError")});n({global:!0,constructor:!0,arity:2},{AggregateError:b})},47627:function(t,e,r){r(49812)},85906:function(t,e,r){"use strict";var n=r(76887),o=r(95981),i=r(1052),a=r(10941),u=r(89678),c=r(10623),s=r(66796),f=r(55449),l=r(64692),p=r(50568),d=r(99813),v=r(53385),h=d("isConcatSpreadable"),y=v>=51||!o((function(){var t=[];return t[h]=!1,t.concat()[0]!==t})),g=function(t){if(!a(t))return!1;var e=t[h];return void 0!==e?!!e:i(t)};n({target:"Array",proto:!0,arity:1,forced:!y||!p("concat")},{concat:function(t){var e,r,n,o,i,a=u(this),p=l(a,0),d=0;for(e=-1,n=arguments.length;e<n;e++)if(g(i=-1===e?a:arguments[e]))for(o=c(i),s(d+o),r=0;r<o;r++,d++)r in i&&f(p,d,i[r]);else s(d+1),f(p,d++,i);return p.length=d,p}})},21501:function(t,e,r){"use strict";var n=r(76887),o=r(3610).filter;n({target:"Array",proto:!0,forced:!r(50568)("filter")},{filter:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},2437:function(t,e,r){"use strict";var n=r(76887),o=r(56837);n({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},53242:function(t,e,r){var n=r(76887),o=r(11354);n({target:"Array",stat:!0,forced:!r(21385)((function(t){Array.from(t)}))},{from:o})},97690:function(t,e,r){"use strict";var n=r(76887),o=r(31692).includes,i=r(95981),a=r(18479);n({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),a("includes")},92737:function(t,e,r){r(76887)({target:"Array",stat:!0},{isArray:r(1052)})},66274:function(t,e,r){"use strict";var n=r(74529),o=r(18479),i=r(12077),a=r(45402),u=r(65988).f,c=r(75105),s=r(23538),f=r(82529),l=r(55746),p="Array Iterator",d=a.set,v=a.getterFor(p);t.exports=c(Array,"Array",(function(t,e){d(this,{type:p,target:n(t),index:0,kind:e})}),(function(){var t=v(this),e=t.target,r=t.kind,n=t.index++;return!e||n>=e.length?(t.target=void 0,s(void 0,!0)):s("keys"==r?n:"values"==r?e[n]:[n,e[n]],!1)}),"values");var h=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!f&&l&&"values"!==h.name)try{u(h,"name",{value:"values"})}catch(t){}},68787:function(t,e,r){"use strict";var n=r(76887),o=r(3610).map;n({target:"Array",proto:!0,forced:!r(50568)("map")},{map:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},60186:function(t,e,r){"use strict";var n=r(76887),o=r(1052),i=r(24284),a=r(10941),u=r(59413),c=r(10623),s=r(74529),f=r(55449),l=r(99813),p=r(50568),d=r(93765),v=p("slice"),h=l("species"),y=Array,g=Math.max;n({target:"Array",proto:!0,forced:!v},{slice:function(t,e){var r,n,l,p=s(this),v=c(p),b=u(t,v),m=u(void 0===e?v:e,v);if(o(p)&&(r=p.constructor,(i(r)&&(r===y||o(r.prototype))||a(r)&&null===(r=r[h]))&&(r=void 0),r===y||void 0===r))return d(p,b,m);for(n=new(void 0===r?y:r)(g(m-b,0)),l=0;b<m;b++,l++)b in p&&f(n,l,p[b]);return n.length=l,n}})},98611:function(t,e,r){"use strict";var n=r(76887),o=r(89678),i=r(59413),a=r(62435),u=r(10623),c=r(89779),s=r(66796),f=r(64692),l=r(55449),p=r(15863),d=r(50568)("splice"),v=Math.max,h=Math.min;n({target:"Array",proto:!0,forced:!d},{splice:function(t,e){var r,n,d,y,g,b,m=o(this),x=u(m),w=i(t,x),E=arguments.length;for(0===E?r=n=0:1===E?(r=0,n=x-w):(r=E-2,n=h(v(a(e),0),x-w)),s(x+r-n),d=f(m,n),y=0;y<n;y++)(g=w+y)in m&&l(d,y,m[g]);if(d.length=n,r<n){for(y=w;y<x-n;y++)b=y+r,(g=y+n)in m?m[b]=m[g]:p(m,b);for(y=x;y>x-n+r;y--)p(m,y-1)}else if(r>n)for(y=x-n;y>w;y--)b=y+r-1,(g=y+n-1)in m?m[b]=m[g]:p(m,b);for(y=0;y<r;y++)m[y+w]=arguments[y+2];return c(m,x-n+r),d}})},95160:function(t,e,r){var n=r(76887),o=r(95329),i=Date,a=o(i.prototype.getTime);n({target:"Date",stat:!0},{now:function(){return a(new i)}})},73381:function(t,e,r){var n=r(76887),o=r(98308);n({target:"Function",proto:!0,forced:Function.bind!==o},{bind:o})},32619:function(t,e,r){var n=r(76887),o=r(626),i=r(79730),a=r(78834),u=r(95329),c=r(95981),s=r(57475),f=r(56664),l=r(93765),p=r(33323),d=r(63405),v=String,h=o("JSON","stringify"),y=u(/./.exec),g=u("".charAt),b=u("".charCodeAt),m=u("".replace),x=u(1..toString),w=/[\uD800-\uDFFF]/g,E=/^[\uD800-\uDBFF]$/,S=/^[\uDC00-\uDFFF]$/,T=!d||c((function(){var t=o("Symbol")();return"[null]"!=h([t])||"{}"!=h({a:t})||"{}"!=h(Object(t))})),O=c((function(){return'"\\udf06\\ud834"'!==h("\udf06\ud834")||'"\\udead"'!==h("\udead")})),A=function(t,e){var r=l(arguments),n=p(e);if(s(n)||void 0!==t&&!f(t))return r[1]=function(t,e){if(s(n)&&(e=a(n,this,v(t),e)),!f(e))return e},i(h,null,r)},_=function(t,e,r){var n=g(r,e-1),o=g(r,e+1);return y(E,t)&&!y(S,o)||y(S,t)&&!y(E,n)?"\\u"+x(b(t,0),16):t};h&&n({target:"JSON",stat:!0,arity:3,forced:T||O},{stringify:function(t,e,r){var n=l(arguments),o=i(T?A:h,null,n);return O&&"string"==typeof o?m(o,w,_):o}})},69120:function(t,e,r){var n=r(21899);r(90904)(n.JSON,"JSON",!0)},23112:function(t,e,r){"use strict";r(24683)("Map",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),r(85616))},37501:function(t,e,r){r(23112)},79413:function(){},89622:function(t,e,r){r(76887)({target:"Number",stat:!0},{isNaN:function(t){return t!=t}})},49221:function(t,e,r){var n=r(76887),o=r(24420);n({target:"Object",stat:!0,arity:2,forced:Object.assign!==o},{assign:o})},53882:function(t,e,r){r(76887)({target:"Object",stat:!0,sham:!r(55746)},{create:r(29290)})},86450:function(t,e,r){var n=r(76887),o=r(55746),i=r(65988).f;n({target:"Object",stat:!0,forced:Object.defineProperty!==i,sham:!o},{defineProperty:i})},21078:function(t,e,r){var n=r(76887),o=r(88810).entries;n({target:"Object",stat:!0},{entries:function(t){return o(t)}})},28387:function(t,e,r){var n=r(76887),o=r(93091),i=r(55449);n({target:"Object",stat:!0},{fromEntries:function(t){var e={};return o(t,(function(t,r){i(e,t,r)}),{AS_ENTRIES:!0}),e}})},46924:function(t,e,r){var n=r(76887),o=r(95981),i=r(74529),a=r(49677).f,u=r(55746);n({target:"Object",stat:!0,forced:!u||o((function(){a(1)})),sham:!u},{getOwnPropertyDescriptor:function(t,e){return a(i(t),e)}})},37144:function(t,e,r){var n=r(76887),o=r(63405),i=r(95981),a=r(87857),u=r(89678);n({target:"Object",stat:!0,forced:!o||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(t){var e=a.f;return e?e(u(t)):[]}})},21724:function(t,e,r){var n=r(76887),o=r(89678),i=r(14771);n({target:"Object",stat:!0,forced:r(95981)((function(){i(1)}))},{keys:function(t){return i(o(t))}})},90108:function(t,e,r){r(76887)({target:"Object",stat:!0},{setPrototypeOf:r(88929)})},55967:function(){},26614:function(t,e,r){var n=r(76887),o=r(88810).values;n({target:"Object",stat:!0},{values:function(t){return o(t)}})},14038:function(t,e,r){var n=r(76887),o=r(29806);n({global:!0,forced:parseInt!=o},{parseInt:o})},4560:function(t,e,r){"use strict";var n=r(76887),o=r(78834),i=r(24883),a=r(69520),u=r(40002),c=r(93091);n({target:"Promise",stat:!0,forced:r(31542)},{allSettled:function(t){var e=this,r=a.f(e),n=r.resolve,s=r.reject,f=u((function(){var r=i(e.resolve),a=[],u=0,s=1;c(t,(function(t){var i=u++,c=!1;s++,o(r,e,t).then((function(t){c||(c=!0,a[i]={status:"fulfilled",value:t},--s||n(a))}),(function(t){c||(c=!0,a[i]={status:"rejected",reason:t},--s||n(a))}))})),--s||n(a)}));return f.error&&s(f.value),r.promise}})},16890:function(t,e,r){"use strict";var n=r(76887),o=r(78834),i=r(24883),a=r(69520),u=r(40002),c=r(93091);n({target:"Promise",stat:!0,forced:r(31542)},{all:function(t){var e=this,r=a.f(e),n=r.resolve,s=r.reject,f=u((function(){var r=i(e.resolve),a=[],u=0,f=1;c(t,(function(t){var i=u++,c=!1;f++,o(r,e,t).then((function(t){c||(c=!0,a[i]=t,--f||n(a))}),s)})),--f||n(a)}));return f.error&&s(f.value),r.promise}})},91302:function(t,e,r){"use strict";var n=r(76887),o=r(78834),i=r(24883),a=r(626),u=r(69520),c=r(40002),s=r(93091),f=r(31542),l="No one promise resolved";n({target:"Promise",stat:!0,forced:f},{any:function(t){var e=this,r=a("AggregateError"),n=u.f(e),f=n.resolve,p=n.reject,d=c((function(){var n=i(e.resolve),a=[],u=0,c=1,d=!1;s(t,(function(t){var i=u++,s=!1;c++,o(n,e,t).then((function(t){s||d||(d=!0,f(t))}),(function(t){s||d||(s=!0,a[i]=t,--c||p(new r(a,l)))}))})),--c||p(new r(a,l))}));return d.error&&p(d.value),n.promise}})},83376:function(t,e,r){"use strict";var n=r(76887),o=r(82529),i=r(67742).CONSTRUCTOR,a=r(6991),u=r(626),c=r(57475),s=r(95929),f=a&&a.prototype;if(n({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(t){return this.then(void 0,t)}}),!o&&c(a)){var l=u("Promise").prototype.catch;f.catch!==l&&s(f,"catch",l,{unsafe:!0})}},26934:function(t,e,r){"use strict";var n,o,i,a=r(76887),u=r(82529),c=r(6049),s=r(21899),f=r(78834),l=r(95929),p=r(88929),d=r(90904),v=r(94431),h=r(24883),y=r(57475),g=r(10941),b=r(5743),m=r(70487),x=r(42941).set,w=r(66132),E=r(34845),S=r(40002),T=r(18397),O=r(45402),A=r(6991),_=r(67742),I=r(69520),P="Promise",R=_.CONSTRUCTOR,j=_.REJECTION_EVENT,C=_.SUBCLASSING,N=O.getterFor(P),k=O.set,M=A&&A.prototype,L=A,D=M,U=s.TypeError,F=s.document,B=s.process,G=I.f,V=G,H=!!(F&&F.createEvent&&s.dispatchEvent),z="unhandledrejection",W=function(t){var e;return!(!g(t)||!y(e=t.then))&&e},Y=function(t,e){var r,n,o,i=e.value,a=1==e.state,u=a?t.ok:t.fail,c=t.resolve,s=t.reject,l=t.domain;try{u?(a||(2===e.rejection&&J(e),e.rejection=1),!0===u?r=i:(l&&l.enter(),r=u(i),l&&(l.exit(),o=!0)),r===t.promise?s(U("Promise-chain cycle")):(n=W(r))?f(n,r,c,s):c(r)):s(i)}catch(t){l&&!o&&l.exit(),s(t)}},q=function(t,e){t.notified||(t.notified=!0,w((function(){for(var r,n=t.reactions;r=n.get();)Y(r,t);t.notified=!1,e&&!t.rejection&&$(t)})))},K=function(t,e,r){var n,o;H?((n=F.createEvent("Event")).promise=e,n.reason=r,n.initEvent(t,!1,!0),s.dispatchEvent(n)):n={promise:e,reason:r},!j&&(o=s["on"+t])?o(n):t===z&&E("Unhandled promise rejection",r)},$=function(t){f(x,s,(function(){var e,r=t.facade,n=t.value;if(X(t)&&(e=S((function(){c?B.emit("unhandledRejection",n,r):K(z,r,n)})),t.rejection=c||X(t)?2:1,e.error))throw e.value}))},X=function(t){return 1!==t.rejection&&!t.parent},J=function(t){f(x,s,(function(){var e=t.facade;c?B.emit("rejectionHandled",e):K("rejectionhandled",e,t.value)}))},Q=function(t,e,r){return function(n){t(e,n,r)}},Z=function(t,e,r){t.done||(t.done=!0,r&&(t=r),t.value=e,t.state=2,q(t,!0))},tt=function(t,e,r){if(!t.done){t.done=!0,r&&(t=r);try{if(t.facade===e)throw U("Promise can't be resolved itself");var n=W(e);n?w((function(){var r={done:!1};try{f(n,e,Q(tt,r,t),Q(Z,r,t))}catch(e){Z(r,e,t)}})):(t.value=e,t.state=1,q(t,!1))}catch(e){Z({done:!1},e,t)}}};if(R&&(D=(L=function(t){b(this,D),h(t),f(n,this);var e=N(this);try{t(Q(tt,e),Q(Z,e))}catch(t){Z(e,t)}}).prototype,(n=function(t){k(this,{type:P,done:!1,notified:!1,parent:!1,reactions:new T,rejection:!1,state:0,value:void 0})}).prototype=l(D,"then",(function(t,e){var r=N(this),n=G(m(this,L));return r.parent=!0,n.ok=!y(t)||t,n.fail=y(e)&&e,n.domain=c?B.domain:void 0,0==r.state?r.reactions.add(n):w((function(){Y(n,r)})),n.promise})),o=function(){var t=new n,e=N(t);this.promise=t,this.resolve=Q(tt,e),this.reject=Q(Z,e)},I.f=G=function(t){return t===L||void 0===t?new o(t):V(t)},!u&&y(A)&&M!==Object.prototype)){i=M.then,C||l(M,"then",(function(t,e){var r=this;return new L((function(t,e){f(i,r,t,e)})).then(t,e)}),{unsafe:!0});try{delete M.constructor}catch(t){}p&&p(M,D)}a({global:!0,constructor:!0,wrap:!0,forced:R},{Promise:L}),d(L,P,!1,!0),v(P)},44349:function(t,e,r){"use strict";var n=r(76887),o=r(82529),i=r(6991),a=r(95981),u=r(626),c=r(57475),s=r(70487),f=r(56584),l=r(95929),p=i&&i.prototype;if(n({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){p.finally.call({then:function(){}},(function(){}))}))},{finally:function(t){var e=s(this,u("Promise")),r=c(t);return this.then(r?function(r){return f(e,t()).then((function(){return r}))}:t,r?function(r){return f(e,t()).then((function(){throw r}))}:t)}}),!o&&c(i)){var d=u("Promise").prototype.finally;p.finally!==d&&l(p,"finally",d,{unsafe:!0})}},98881:function(t,e,r){r(26934),r(16890),r(83376),r(55921),r(64069),r(14482)},55921:function(t,e,r){"use strict";var n=r(76887),o=r(78834),i=r(24883),a=r(69520),u=r(40002),c=r(93091);n({target:"Promise",stat:!0,forced:r(31542)},{race:function(t){var e=this,r=a.f(e),n=r.reject,s=u((function(){var a=i(e.resolve);c(t,(function(t){o(a,e,t).then(r.resolve,n)}))}));return s.error&&n(s.value),r.promise}})},64069:function(t,e,r){"use strict";var n=r(76887),o=r(78834),i=r(69520);n({target:"Promise",stat:!0,forced:r(67742).CONSTRUCTOR},{reject:function(t){var e=i.f(this);return o(e.reject,void 0,t),e.promise}})},14482:function(t,e,r){"use strict";var n=r(76887),o=r(626),i=r(82529),a=r(6991),u=r(67742).CONSTRUCTOR,c=r(56584),s=o("Promise"),f=i&&!u;n({target:"Promise",stat:!0,forced:i||u},{resolve:function(t){return c(f&&this===s?a:this,t)}})},1502:function(){},11035:function(t,e,r){"use strict";var n=r(76887),o=r(95329),i=r(70344),a=r(48219),u=r(85803),c=r(67772),s=o("".indexOf);n({target:"String",proto:!0,forced:!c("includes")},{includes:function(t){return!!~s(u(a(this)),u(i(t)),arguments.length>1?arguments[1]:void 0)}})},77971:function(t,e,r){"use strict";var n=r(64620).charAt,o=r(85803),i=r(45402),a=r(75105),u=r(23538),c="String Iterator",s=i.set,f=i.getterFor(c);a(String,"String",(function(t){s(this,{type:c,string:o(t),index:0})}),(function(){var t,e=f(this),r=e.string,o=e.index;return o>=r.length?u(void 0,!0):(t=n(r,o),e.index+=t.length,u(t,!1))}))},94761:function(t,e,r){"use strict";var n,o=r(76887),i=r(97484),a=r(49677).f,u=r(43057),c=r(85803),s=r(70344),f=r(48219),l=r(67772),p=r(82529),d=i("".startsWith),v=i("".slice),h=Math.min,y=l("startsWith");o({target:"String",proto:!0,forced:!(!p&&!y&&(n=a(String.prototype,"startsWith"),n&&!n.writable)||y)},{startsWith:function(t){var e=c(f(this));s(t);var r=u(h(arguments.length>1?arguments[1]:void 0,e.length)),n=c(t);return d?d(e,n,r):v(e,r,r+n.length)===n}})},57398:function(t,e,r){"use strict";var n=r(76887),o=r(74853).trim;n({target:"String",proto:!0,forced:r(93093)("trim")},{trim:function(){return o(this)}})},8555:function(t,e,r){r(73464)("asyncIterator")},48616:function(t,e,r){"use strict";var n=r(76887),o=r(21899),i=r(78834),a=r(95329),u=r(82529),c=r(55746),s=r(63405),f=r(95981),l=r(90953),p=r(7046),d=r(96059),v=r(74529),h=r(83894),y=r(85803),g=r(31887),b=r(29290),m=r(14771),x=r(10946),w=r(684),E=r(87857),S=r(49677),T=r(65988),O=r(59938),A=r(36760),_=r(95929),I=r(29202),P=r(68726),R=r(44262),j=r(27748),C=r(99418),N=r(99813),k=r(11477),M=r(73464),L=r(29630),D=r(90904),U=r(45402),F=r(3610).forEach,B=R("hidden"),G="Symbol",V="prototype",H=U.set,z=U.getterFor(G),W=Object[V],Y=o.Symbol,q=Y&&Y[V],K=o.TypeError,$=o.QObject,X=S.f,J=T.f,Q=w.f,Z=A.f,tt=a([].push),et=P("symbols"),rt=P("op-symbols"),nt=P("wks"),ot=!$||!$[V]||!$[V].findChild,it=c&&f((function(){return 7!=b(J({},"a",{get:function(){return J(this,"a",{value:7}).a}})).a}))?function(t,e,r){var n=X(W,e);n&&delete W[e],J(t,e,r),n&&t!==W&&J(W,e,n)}:J,at=function(t,e){var r=et[t]=b(q);return H(r,{type:G,tag:t,description:e}),c||(r.description=e),r},ut=function(t,e,r){t===W&&ut(rt,e,r),d(t);var n=h(e);return d(r),l(et,n)?(r.enumerable?(l(t,B)&&t[B][n]&&(t[B][n]=!1),r=b(r,{enumerable:g(0,!1)})):(l(t,B)||J(t,B,g(1,{})),t[B][n]=!0),it(t,n,r)):J(t,n,r)},ct=function(t,e){d(t);var r=v(e),n=m(r).concat(pt(r));return F(n,(function(e){c&&!i(st,r,e)||ut(t,e,r[e])})),t},st=function(t){var e=h(t),r=i(Z,this,e);return!(this===W&&l(et,e)&&!l(rt,e))&&(!(r||!l(this,e)||!l(et,e)||l(this,B)&&this[B][e])||r)},ft=function(t,e){var r=v(t),n=h(e);if(r!==W||!l(et,n)||l(rt,n)){var o=X(r,n);return!o||!l(et,n)||l(r,B)&&r[B][n]||(o.enumerable=!0),o}},lt=function(t){var e=Q(v(t)),r=[];return F(e,(function(t){l(et,t)||l(j,t)||tt(r,t)})),r},pt=function(t){var e=t===W,r=Q(e?rt:v(t)),n=[];return F(r,(function(t){!l(et,t)||e&&!l(W,t)||tt(n,et[t])})),n};s||(_(q=(Y=function(){if(p(q,this))throw K("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,e=C(t),r=function(t){this===W&&i(r,rt,t),l(this,B)&&l(this[B],e)&&(this[B][e]=!1),it(this,e,g(1,t))};return c&&ot&&it(W,e,{configurable:!0,set:r}),at(e,t)})[V],"toString",(function(){return z(this).tag})),_(Y,"withoutSetter",(function(t){return at(C(t),t)})),A.f=st,T.f=ut,O.f=ct,S.f=ft,x.f=w.f=lt,E.f=pt,k.f=function(t){return at(N(t),t)},c&&(I(q,"description",{configurable:!0,get:function(){return z(this).description}}),u||_(W,"propertyIsEnumerable",st,{unsafe:!0}))),n({global:!0,constructor:!0,wrap:!0,forced:!s,sham:!s},{Symbol:Y}),F(m(nt),(function(t){M(t)})),n({target:G,stat:!0,forced:!s},{useSetter:function(){ot=!0},useSimple:function(){ot=!1}}),n({target:"Object",stat:!0,forced:!s,sham:!c},{create:function(t,e){return void 0===e?b(t):ct(b(t),e)},defineProperty:ut,defineProperties:ct,getOwnPropertyDescriptor:ft}),n({target:"Object",stat:!0,forced:!s},{getOwnPropertyNames:lt}),L(),D(Y,G),j[B]=!0},52615:function(){},64523:function(t,e,r){var n=r(76887),o=r(626),i=r(90953),a=r(85803),u=r(68726),c=r(34680),s=u("string-to-symbol-registry"),f=u("symbol-to-string-registry");n({target:"Symbol",stat:!0,forced:!c},{for:function(t){var e=a(t);if(i(s,e))return s[e];var r=o("Symbol")(e);return s[e]=r,f[r]=e,r}})},21732:function(t,e,r){r(73464)("hasInstance")},35903:function(t,e,r){r(73464)("isConcatSpreadable")},1825:function(t,e,r){r(73464)("iterator")},35824:function(t,e,r){r(48616),r(64523),r(38608),r(32619),r(37144)},38608:function(t,e,r){var n=r(76887),o=r(90953),i=r(56664),a=r(69826),u=r(68726),c=r(34680),s=u("symbol-to-string-registry");n({target:"Symbol",stat:!0,forced:!c},{keyFor:function(t){if(!i(t))throw TypeError(a(t)+" is not a symbol");if(o(s,t))return s[t]}})},45915:function(t,e,r){r(73464)("matchAll")},28394:function(t,e,r){r(73464)("match")},61766:function(t,e,r){r(73464)("replace")},62737:function(t,e,r){r(73464)("search")},89911:function(t,e,r){r(73464)("species")},74315:function(t,e,r){r(73464)("split")},63131:function(t,e,r){var n=r(73464),o=r(29630);n("toPrimitive"),o()},64714:function(t,e,r){var n=r(626),o=r(73464),i=r(90904);o("toStringTag"),i(n("Symbol"),"Symbol")},70659:function(t,e,r){r(73464)("unscopables")},28783:function(t,e,r){r(73464)("asyncDispose")},43975:function(t,e,r){r(73464)("dispose")},22731:function(t,e,r){var n=r(76887),o=r(626),i=r(95329),a=o("Symbol"),u=a.keyFor,c=i(a.prototype.valueOf);n({target:"Symbol",stat:!0},{isRegistered:function(t){try{return void 0!==u(c(t))}catch(t){return!1}}})},85605:function(t,e,r){for(var n=r(76887),o=r(68726),i=r(626),a=r(95329),u=r(56664),c=r(99813),s=i("Symbol"),f=s.isWellKnown,l=i("Object","getOwnPropertyNames"),p=a(s.prototype.valueOf),d=o("wks"),v=0,h=l(s),y=h.length;v<y;v++)try{var g=h[v];u(s[g])&&c(g)}catch(t){}n({target:"Symbol",stat:!0,forced:!0},{isWellKnown:function(t){if(f&&f(t))return!0;try{for(var e=p(t),r=0,n=l(d),o=n.length;r<o;r++)if(d[n[r]]==e)return!0}catch(t){}return!1}})},65799:function(t,e,r){r(73464)("matcher")},31943:function(t,e,r){r(73464)("metadataKey")},45414:function(t,e,r){r(73464)("metadata")},46774:function(t,e,r){r(73464)("observable")},80620:function(t,e,r){r(73464)("patternMatch")},36172:function(t,e,r){r(73464)("replaceAll")},7634:function(t,e,r){r(66274);var n=r(63281),o=r(21899),i=r(9697),a=r(32029),u=r(12077),c=r(99813)("toStringTag");for(var s in n){var f=o[s],l=f&&f.prototype;l&&i(l)!==c&&a(l,c,s),u[s]=u.Array}},79229:function(t,e,r){var n=r(76887),o=r(21899),i=r(37620)(o.setInterval,!0);n({global:!0,bind:!0,forced:o.setInterval!==i},{setInterval:i})},17749:function(t,e,r){var n=r(76887),o=r(21899),i=r(37620)(o.setTimeout,!0);n({global:!0,bind:!0,forced:o.setTimeout!==i},{setTimeout:i})},71249:function(t,e,r){r(79229),r(17749)},27698:function(t,e,r){var n=r(54493);t.exports=n},83363:function(t,e,r){var n=r(24034);t.exports=n},62908:function(t,e,r){var n=r(12710);t.exports=n},49216:function(t,e,r){var n=r(99324);t.exports=n},56668:function(t,e,r){var n=r(95909);t.exports=n},57784:function(t,e,r){var n=r(81103);t.exports=n},28196:function(t,e,r){var n=r(16246);t.exports=n},8065:function(t,e,r){var n=r(56043);t.exports=n},57448:function(t,e,r){r(7634);var n=r(9697),o=r(90953),i=r(7046),a=r(62908),u=Array.prototype,c={DOMTokenList:!0,NodeList:!0};t.exports=function(t){var e=t.entries;return t===u||i(u,t)&&e===u.entries||o(c,n(t))?a:e}},11955:function(t,e,r){var n=r(2480);t.exports=n},46279:function(t,e,r){r(7634);var n=r(9697),o=r(90953),i=r(7046),a=r(49216),u=Array.prototype,c={DOMTokenList:!0,NodeList:!0};t.exports=function(t){var e=t.forEach;return t===u||i(u,t)&&e===u.forEach||o(c,n(t))?a:e}},33778:function(t,e,r){var n=r(58557);t.exports=n},73819:function(t,e,r){r(7634);var n=r(9697),o=r(90953),i=r(7046),a=r(56668),u=Array.prototype,c={DOMTokenList:!0,NodeList:!0};t.exports=function(t){var e=t.keys;return t===u||i(u,t)&&e===u.keys||o(c,n(t))?a:e}},61798:function(t,e,r){var n=r(88287);t.exports=n},82073:function(t,e,r){var n=r(69601);t.exports=n},2348:function(t,e,r){var n=r(18339);t.exports=n},35178:function(t,e,r){var n=r(71611);t.exports=n},76361:function(t,e,r){var n=r(62774);t.exports=n},8933:function(t,e,r){var n=r(84426);t.exports=n},15868:function(t,e,r){var n=r(91018);r(7634),t.exports=n},76258:function(t,e,r){var n=r(70063);t.exports=n},63383:function(t,e,r){var n=r(45999);t.exports=n},14471:function(t,e,r){var n=r(35254);t.exports=n},41910:function(t,e,r){var n=r(48171);t.exports=n},86209:function(t,e,r){var n=r(73081);t.exports=n},53402:function(t,e,r){var n=r(7699);r(7634),t.exports=n},79427:function(t,e,r){var n=r(286);t.exports=n},23059:function(t,e,r){var n=r(48494);t.exports=n},16670:function(t,e,r){var n=r(3065);t.exports=n},47795:function(t,e,r){var n=r(98430);t.exports=n},74888:function(t,e,r){var n=r(98524);t.exports=n},27460:function(t,e,r){var n=r(52956);r(7634),t.exports=n},27989:function(t,e,r){r(71249);var n=r(54058);t.exports=n.setTimeout},92547:function(t,e,r){var n=r(57473);r(7634),t.exports=n},46509:function(t,e,r){var n=r(24227);r(7634),t.exports=n},19662:function(t,e,r){var n=r(60614),o=r(66330),i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not a function")}},39483:function(t,e,r){var n=r(4411),o=r(66330),i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not a constructor")}},96077:function(t,e,r){var n=r(60614),o=String,i=TypeError;t.exports=function(t){if("object"==typeof t||n(t))return t;throw i("Can't set "+o(t)+" as a prototype")}},51223:function(t,e,r){var n=r(5112),o=r(70030),i=r(3070).f,a=n("unscopables"),u=Array.prototype;null==u[a]&&i(u,a,{configurable:!0,value:o(null)}),t.exports=function(t){u[a][t]=!0}},31530:function(t,e,r){"use strict";var n=r(28710).charAt;t.exports=function(t,e,r){return e+(r?n(t,e).length:1)}},25787:function(t,e,r){var n=r(47976),o=TypeError;t.exports=function(t,e){if(n(e,t))return t;throw o("Incorrect invocation")}},19670:function(t,e,r){var n=r(70111),o=String,i=TypeError;t.exports=function(t){if(n(t))return t;throw i(o(t)+" is not an object")}},23013:function(t){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},90260:function(t,e,r){"use strict";var n,o,i,a=r(23013),u=r(19781),c=r(17854),s=r(60614),f=r(70111),l=r(92597),p=r(70648),d=r(66330),v=r(68880),h=r(98052),y=r(47045),g=r(47976),b=r(79518),m=r(27674),x=r(5112),w=r(69711),E=r(29909),S=E.enforce,T=E.get,O=c.Int8Array,A=O&&O.prototype,_=c.Uint8ClampedArray,I=_&&_.prototype,P=O&&b(O),R=A&&b(A),j=Object.prototype,C=c.TypeError,N=x("toStringTag"),k=w("TYPED_ARRAY_TAG"),M="TypedArrayConstructor",L=a&&!!m&&"Opera"!==p(c.opera),D=!1,U={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},F={BigInt64Array:8,BigUint64Array:8},B=function(t){var e=b(t);if(f(e)){var r=T(e);return r&&l(r,M)?r[M]:B(e)}},G=function(t){if(!f(t))return!1;var e=p(t);return l(U,e)||l(F,e)};for(n in U)(i=(o=c[n])&&o.prototype)?S(i)[M]=o:L=!1;for(n in F)(i=(o=c[n])&&o.prototype)&&(S(i)[M]=o);if((!L||!s(P)||P===Function.prototype)&&(P=function(){throw C("Incorrect invocation")},L))for(n in U)c[n]&&m(c[n],P);if((!L||!R||R===j)&&(R=P.prototype,L))for(n in U)c[n]&&m(c[n].prototype,R);if(L&&b(I)!==R&&m(I,R),u&&!l(R,N))for(n in D=!0,y(R,N,{configurable:!0,get:function(){return f(this)?this[k]:void 0}}),U)c[n]&&v(c[n],k,n);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:L,TYPED_ARRAY_TAG:D&&k,aTypedArray:function(t){if(G(t))return t;throw C("Target is not a typed array")},aTypedArrayConstructor:function(t){if(s(t)&&(!m||g(P,t)))return t;throw C(d(t)+" is not a typed array constructor")},exportTypedArrayMethod:function(t,e,r,n){if(u){if(r)for(var o in U){var i=c[o];if(i&&l(i.prototype,t))try{delete i.prototype[t]}catch(r){try{i.prototype[t]=e}catch(t){}}}R[t]&&!r||h(R,t,r?e:L&&A[t]||e,n)}},exportTypedArrayStaticMethod:function(t,e,r){var n,o;if(u){if(m){if(r)for(n in U)if((o=c[n])&&l(o,t))try{delete o[t]}catch(t){}if(P[t]&&!r)return;try{return h(P,t,r?e:L&&P[t]||e)}catch(t){}}for(n in U)!(o=c[n])||o[t]&&!r||h(o,t,e)}},getTypedArrayConstructor:B,isView:function(t){if(!f(t))return!1;var e=p(t);return"DataView"===e||l(U,e)||l(F,e)},isTypedArray:G,TypedArray:P,TypedArrayPrototype:R}},13331:function(t,e,r){"use strict";var n=r(17854),o=r(1702),i=r(19781),a=r(23013),u=r(76530),c=r(68880),s=r(47045),f=r(89190),l=r(47293),p=r(25787),d=r(19303),v=r(17466),h=r(57067),y=r(11179),g=r(79518),b=r(27674),m=r(8006).f,x=r(21285),w=r(41589),E=r(58003),S=r(29909),T=u.PROPER,O=u.CONFIGURABLE,A="ArrayBuffer",_="DataView",I="prototype",P="Wrong index",R=S.getterFor(A),j=S.getterFor(_),C=S.set,N=n[A],k=N,M=k&&k[I],L=n[_],D=L&&L[I],U=Object.prototype,F=n.Array,B=n.RangeError,G=o(x),V=o([].reverse),H=y.pack,z=y.unpack,W=function(t){return[255&t]},Y=function(t){return[255&t,t>>8&255]},q=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},K=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},$=function(t){return H(t,23,4)},X=function(t){return H(t,52,8)},J=function(t,e,r){s(t[I],e,{configurable:!0,get:function(){return r(this)[e]}})},Q=function(t,e,r,n){var o=h(r),i=j(t);if(o+e>i.byteLength)throw B(P);var a=i.bytes,u=o+i.byteOffset,c=w(a,u,u+e);return n?c:V(c)},Z=function(t,e,r,n,o,i){var a=h(r),u=j(t);if(a+e>u.byteLength)throw B(P);for(var c=u.bytes,s=a+u.byteOffset,f=n(+o),l=0;l<e;l++)c[s+l]=f[i?l:e-l-1]};if(a){var tt=T&&N.name!==A;if(l((function(){N(1)}))&&l((function(){new N(-1)}))&&!l((function(){return new N,new N(1.5),new N(NaN),1!=N.length||tt&&!O})))tt&&O&&c(N,"name",A);else{(k=function(t){return p(this,M),new N(h(t))})[I]=M;for(var et,rt=m(N),nt=0;rt.length>nt;)(et=rt[nt++])in k||c(k,et,N[et]);M.constructor=k}b&&g(D)!==U&&b(D,U);var ot=new L(new k(2)),it=o(D.setInt8);ot.setInt8(0,2147483648),ot.setInt8(1,2147483649),!ot.getInt8(0)&&ot.getInt8(1)||f(D,{setInt8:function(t,e){it(this,t,e<<24>>24)},setUint8:function(t,e){it(this,t,e<<24>>24)}},{unsafe:!0})}else M=(k=function(t){p(this,M);var e=h(t);C(this,{type:A,bytes:G(F(e),0),byteLength:e}),i||(this.byteLength=e,this.detached=!1)})[I],D=(L=function(t,e,r){p(this,D),p(t,M);var n=R(t),o=n.byteLength,a=d(e);if(a<0||a>o)throw B("Wrong offset");if(a+(r=void 0===r?o-a:v(r))>o)throw B("Wrong length");C(this,{type:_,buffer:t,byteLength:r,byteOffset:a,bytes:n.bytes}),i||(this.buffer=t,this.byteLength=r,this.byteOffset=a)})[I],i&&(J(k,"byteLength",R),J(L,"buffer",j),J(L,"byteLength",j),J(L,"byteOffset",j)),f(D,{getInt8:function(t){return Q(this,1,t)[0]<<24>>24},getUint8:function(t){return Q(this,1,t)[0]},getInt16:function(t){var e=Q(this,2,t,arguments.length>1?arguments[1]:void 0);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=Q(this,2,t,arguments.length>1?arguments[1]:void 0);return e[1]<<8|e[0]},getInt32:function(t){return K(Q(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t){return K(Q(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t){return z(Q(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t){return z(Q(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,e){Z(this,1,t,W,e)},setUint8:function(t,e){Z(this,1,t,W,e)},setInt16:function(t,e){Z(this,2,t,Y,e,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,e){Z(this,2,t,Y,e,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,e){Z(this,4,t,q,e,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,e){Z(this,4,t,q,e,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,e){Z(this,4,t,$,e,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,e){Z(this,8,t,X,e,arguments.length>2?arguments[2]:void 0)}});E(k,A),E(L,_),t.exports={ArrayBuffer:k,DataView:L}},1048:function(t,e,r){"use strict";var n=r(47908),o=r(51400),i=r(26244),a=r(85117),u=Math.min;t.exports=[].copyWithin||function(t,e){var r=n(this),c=i(r),s=o(t,c),f=o(e,c),l=arguments.length>2?arguments[2]:void 0,p=u((void 0===l?c:o(l,c))-f,c-s),d=1;for(f<s&&s<f+p&&(d=-1,f+=p-1,s+=p-1);p-- >0;)f in r?r[s]=r[f]:a(r,s),s+=d,f+=d;return r}},21285:function(t,e,r){"use strict";var n=r(47908),o=r(51400),i=r(26244);t.exports=function(t){for(var e=n(this),r=i(e),a=arguments.length,u=o(a>1?arguments[1]:void 0,r),c=a>2?arguments[2]:void 0,s=void 0===c?r:o(c,r);s>u;)e[u++]=t;return e}},97745:function(t,e,r){var n=r(26244);t.exports=function(t,e){for(var r=0,o=n(e),i=new t(o);o>r;)i[r]=e[r++];return i}},41318:function(t,e,r){var n=r(45656),o=r(51400),i=r(26244),a=function(t){return function(e,r,a){var u,c=n(e),s=i(c),f=o(a,s);if(t&&r!=r){for(;s>f;)if((u=c[f++])!=u)return!0}else for(;s>f;f++)if((t||f in c)&&c[f]===r)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},42092:function(t,e,r){var n=r(49974),o=r(1702),i=r(68361),a=r(47908),u=r(26244),c=r(65417),s=o([].push),f=function(t){var e=1==t,r=2==t,o=3==t,f=4==t,l=6==t,p=7==t,d=5==t||l;return function(v,h,y,g){for(var b,m,x=a(v),w=i(x),E=n(h,y),S=u(w),T=0,O=g||c,A=e?O(v,S):r||p?O(v,0):void 0;S>T;T++)if((d||T in w)&&(m=E(b=w[T],T,x),t))if(e)A[T]=m;else if(m)switch(t){case 3:return!0;case 5:return b;case 6:return T;case 2:s(A,b)}else switch(t){case 4:return!1;case 7:s(A,b)}return l?-1:o||f?f:A}};t.exports={forEach:f(0),map:f(1),filter:f(2),some:f(3),every:f(4),find:f(5),findIndex:f(6),filterReject:f(7)}},86583:function(t,e,r){"use strict";var n=r(22104),o=r(45656),i=r(19303),a=r(26244),u=r(9341),c=Math.min,s=[].lastIndexOf,f=!!s&&1/[1].lastIndexOf(1,-0)<0,l=u("lastIndexOf"),p=f||!l;t.exports=p?function(t){if(f)return n(s,this,arguments)||0;var e=o(this),r=a(e),u=r-1;for(arguments.length>1&&(u=c(u,i(arguments[1]))),u<0&&(u=r+u);u>=0;u--)if(u in e&&e[u]===t)return u||0;return-1}:s},9341:function(t,e,r){"use strict";var n=r(47293);t.exports=function(t,e){var r=[][t];return!!r&&n((function(){r.call(null,e||function(){return 1},1)}))}},53671:function(t,e,r){var n=r(19662),o=r(47908),i=r(68361),a=r(26244),u=TypeError,c=function(t){return function(e,r,c,s){n(r);var f=o(e),l=i(f),p=a(f),d=t?p-1:0,v=t?-1:1;if(c<2)for(;;){if(d in l){s=l[d],d+=v;break}if(d+=v,t?d<0:p<=d)throw u("Reduce of empty array with no initial value")}for(;t?d>=0:p>d;d+=v)d in l&&(s=r(s,l[d],d,f));return s}};t.exports={left:c(!1),right:c(!0)}},41589:function(t,e,r){var n=r(51400),o=r(26244),i=r(86135),a=Array,u=Math.max;t.exports=function(t,e,r){for(var c=o(t),s=n(e,c),f=n(void 0===r?c:r,c),l=a(u(f-s,0)),p=0;s<f;s++,p++)i(l,p,t[s]);return l.length=p,l}},50206:function(t,e,r){var n=r(1702);t.exports=n([].slice)},94362:function(t,e,r){var n=r(41589),o=Math.floor,i=function(t,e){var r=t.length,c=o(r/2);return r<8?a(t,e):u(t,i(n(t,0,c),e),i(n(t,c),e),e)},a=function(t,e){for(var r,n,o=t.length,i=1;i<o;){for(n=i,r=t[i];n&&e(t[n-1],r)>0;)t[n]=t[--n];n!==i++&&(t[n]=r)}return t},u=function(t,e,r,n){for(var o=e.length,i=r.length,a=0,u=0;a<o||u<i;)t[a+u]=a<o&&u<i?n(e[a],r[u])<=0?e[a++]:r[u++]:a<o?e[a++]:r[u++];return t};t.exports=i},77475:function(t,e,r){var n=r(43157),o=r(4411),i=r(70111),a=r(5112)("species"),u=Array;t.exports=function(t){var e;return n(t)&&(e=t.constructor,(o(e)&&(e===u||n(e.prototype))||i(e)&&null===(e=e[a]))&&(e=void 0)),void 0===e?u:e}},65417:function(t,e,r){var n=r(77475);t.exports=function(t,e){return new(n(t))(0===e?0:e)}},17072:function(t,e,r){var n=r(5112)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var r=!1;try{var i={};i[n]=function(){return{next:function(){return{done:r=!0}}}},t(i)}catch(t){}return r}},84326:function(t,e,r){var n=r(1702),o=n({}.toString),i=n("".slice);t.exports=function(t){return i(o(t),8,-1)}},70648:function(t,e,r){var n=r(51694),o=r(60614),i=r(84326),a=r(5112)("toStringTag"),u=Object,c="Arguments"==i(function(){return arguments}());t.exports=n?i:function(t){var e,r,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=u(t),a))?r:c?i(e):"Object"==(n=i(e))&&o(e.callee)?"Arguments":n}},99920:function(t,e,r){var n=r(92597),o=r(53887),i=r(31236),a=r(3070);t.exports=function(t,e,r){for(var u=o(e),c=a.f,s=i.f,f=0;f<u.length;f++){var l=u[f];n(t,l)||r&&n(r,l)||c(t,l,s(e,l))}}},49920:function(t,e,r){var n=r(47293);t.exports=!n((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},76178:function(t){t.exports=function(t,e){return{value:t,done:e}}},68880:function(t,e,r){var n=r(19781),o=r(3070),i=r(79114);t.exports=n?function(t,e,r){return o.f(t,e,i(1,r))}:function(t,e,r){return t[e]=r,t}},79114:function(t){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},86135:function(t,e,r){"use strict";var n=r(34948),o=r(3070),i=r(79114);t.exports=function(t,e,r){var a=n(e);a in t?o.f(t,a,i(0,r)):t[a]=r}},47045:function(t,e,r){var n=r(56339),o=r(3070);t.exports=function(t,e,r){return r.get&&n(r.get,e,{getter:!0}),r.set&&n(r.set,e,{setter:!0}),o.f(t,e,r)}},98052:function(t,e,r){var n=r(60614),o=r(3070),i=r(56339),a=r(13072);t.exports=function(t,e,r,u){u||(u={});var c=u.enumerable,s=void 0!==u.name?u.name:e;if(n(r)&&i(r,s,u),u.global)c?t[e]=r:a(e,r);else{try{u.unsafe?t[e]&&(c=!0):delete t[e]}catch(t){}c?t[e]=r:o.f(t,e,{value:r,enumerable:!1,configurable:!u.nonConfigurable,writable:!u.nonWritable})}return t}},89190:function(t,e,r){var n=r(98052);t.exports=function(t,e,r){for(var o in e)n(t,o,e[o],r);return t}},13072:function(t,e,r){var n=r(17854),o=Object.defineProperty;t.exports=function(t,e){try{o(n,t,{value:e,configurable:!0,writable:!0})}catch(r){n[t]=e}return e}},85117:function(t,e,r){"use strict";var n=r(66330),o=TypeError;t.exports=function(t,e){if(!delete t[e])throw o("Cannot delete property "+n(e)+" of "+n(t))}},19781:function(t,e,r){var n=r(47293);t.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(t){var e="object"==typeof document&&document.all,r=void 0===e&&void 0!==e;t.exports={all:e,IS_HTMLDDA:r}},80317:function(t,e,r){var n=r(17854),o=r(70111),i=n.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},68886:function(t,e,r){var n=r(88113).match(/firefox\/(\d+)/i);t.exports=!!n&&+n[1]},7871:function(t,e,r){var n=r(83823),o=r(35268);t.exports=!n&&!o&&"object"==typeof window&&"object"==typeof document},83823:function(t){t.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},30256:function(t,e,r){var n=r(88113);t.exports=/MSIE|Trident/.test(n)},71528:function(t,e,r){var n=r(88113);t.exports=/ipad|iphone|ipod/i.test(n)&&"undefined"!=typeof Pebble},6833:function(t,e,r){var n=r(88113);t.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(n)},35268:function(t,r,n){var o=n(84326);t.exports=void 0!==e&&"process"==o(e)},71036:function(t,e,r){var n=r(88113);t.exports=/web0s(?!.*chrome)/i.test(n)},88113:function(t){t.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},7392:function(t,e,r){var n,o,i=r(17854),a=r(88113),u=i.process,c=i.Deno,s=u&&u.versions||c&&c.version,f=s&&s.v8;f&&(o=(n=f.split("."))[0]>0&&n[0]<4?1:+(n[0]+n[1])),!o&&a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(o=+n[1]),t.exports=o},98008:function(t,e,r){var n=r(88113).match(/AppleWebKit\/(\d+)\./);t.exports=!!n&&+n[1]},80748:function(t){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},82109:function(t,e,r){var n=r(17854),o=r(31236).f,i=r(68880),a=r(98052),u=r(13072),c=r(99920),s=r(54705);t.exports=function(t,e){var r,f,l,p,d,v=t.target,h=t.global,y=t.stat;if(r=h?n:y?n[v]||u(v,{}):(n[v]||{}).prototype)for(f in e){if(p=e[f],l=t.dontCallGetSet?(d=o(r,f))&&d.value:r[f],!s(h?f:v+(y?".":"#")+f,t.forced)&&void 0!==l){if(typeof p==typeof l)continue;c(p,l)}(t.sham||l&&l.sham)&&i(p,"sham",!0),a(r,f,p,t)}}},47293:function(t){t.exports=function(t){try{return!!t()}catch(t){return!0}}},27007:function(t,e,r){"use strict";r(74916);var n=r(21470),o=r(98052),i=r(22261),a=r(47293),u=r(5112),c=r(68880),s=u("species"),f=RegExp.prototype;t.exports=function(t,e,r,l){var p=u(t),d=!a((function(){var e={};return e[p]=function(){return 7},7!=""[t](e)})),v=d&&!a((function(){var e=!1,r=/a/;return"split"===t&&((r={}).constructor={},r.constructor[s]=function(){return r},r.flags="",r[p]=/./[p]),r.exec=function(){return e=!0,null},r[p](""),!e}));if(!d||!v||r){var h=n(/./[p]),y=e(p,""[t],(function(t,e,r,o,a){var u=n(t),c=e.exec;return c===i||c===f.exec?d&&!a?{done:!0,value:h(e,r,o)}:{done:!0,value:u(r,e,o)}:{done:!1}}));o(String.prototype,t,y[0]),o(f,p,y[1])}l&&c(f[p],"sham",!0)}},22104:function(t,e,r){var n=r(34374),o=Function.prototype,i=o.apply,a=o.call;t.exports="object"==typeof Reflect&&Reflect.apply||(n?a.bind(i):function(){return a.apply(i,arguments)})},49974:function(t,e,r){var n=r(21470),o=r(19662),i=r(34374),a=n(n.bind);t.exports=function(t,e){return o(t),void 0===e?t:i?a(t,e):function(){return t.apply(e,arguments)}}},34374:function(t,e,r){var n=r(47293);t.exports=!n((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},46916:function(t,e,r){var n=r(34374),o=Function.prototype.call;t.exports=n?o.bind(o):function(){return o.apply(o,arguments)}},76530:function(t,e,r){var n=r(19781),o=r(92597),i=Function.prototype,a=n&&Object.getOwnPropertyDescriptor,u=o(i,"name"),c=u&&"something"===function(){}.name,s=u&&(!n||n&&a(i,"name").configurable);t.exports={EXISTS:u,PROPER:c,CONFIGURABLE:s}},75668:function(t,e,r){var n=r(1702),o=r(19662);t.exports=function(t,e,r){try{return n(o(Object.getOwnPropertyDescriptor(t,e)[r]))}catch(t){}}},21470:function(t,e,r){var n=r(84326),o=r(1702);t.exports=function(t){if("Function"===n(t))return o(t)}},1702:function(t,e,r){var n=r(34374),o=Function.prototype,i=o.call,a=n&&o.bind.bind(i,i);t.exports=n?a:function(t){return function(){return i.apply(t,arguments)}}},35005:function(t,e,r){var n=r(17854),o=r(60614),i=function(t){return o(t)?t:void 0};t.exports=function(t,e){return arguments.length<2?i(n[t]):n[t]&&n[t][e]}},71246:function(t,e,r){var n=r(70648),o=r(58173),i=r(68554),a=r(97497),u=r(5112)("iterator");t.exports=function(t){if(!i(t))return o(t,u)||o(t,"@@iterator")||a[n(t)]}},18554:function(t,e,r){var n=r(46916),o=r(19662),i=r(19670),a=r(66330),u=r(71246),c=TypeError;t.exports=function(t,e){var r=arguments.length<2?u(t):e;if(o(r))return i(n(r,t));throw c(a(t)+" is not iterable")}},58173:function(t,e,r){var n=r(19662),o=r(68554);t.exports=function(t,e){var r=t[e];return o(r)?void 0:n(r)}},10647:function(t,e,r){var n=r(1702),o=r(47908),i=Math.floor,a=n("".charAt),u=n("".replace),c=n("".slice),s=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,f=/\$([$&'`]|\d{1,2})/g;t.exports=function(t,e,r,n,l,p){var d=r+t.length,v=n.length,h=f;return void 0!==l&&(l=o(l),h=s),u(p,h,(function(o,u){var s;switch(a(u,0)){case"$":return"$";case"&":return t;case"`":return c(e,0,r);case"'":return c(e,d);case"<":s=l[c(u,1,-1)];break;default:var f=+u;if(0===f)return o;if(f>v){var p=i(f/10);return 0===p?o:p<=v?void 0===n[p-1]?a(u,1):n[p-1]+a(u,1):o}s=n[f-1]}return void 0===s?"":s}))}},17854:function(t,e,r){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof r.g&&r.g)||function(){return this}()||Function("return this")()},92597:function(t,e,r){var n=r(1702),o=r(47908),i=n({}.hasOwnProperty);t.exports=Object.hasOwn||function(t,e){return i(o(t),e)}},3501:function(t){t.exports={}},842:function(t){t.exports=function(t,e){try{1==arguments.length?console.error(t):console.error(t,e)}catch(t){}}},60490:function(t,e,r){var n=r(35005);t.exports=n("document","documentElement")},64664:function(t,e,r){var n=r(19781),o=r(47293),i=r(80317);t.exports=!n&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},11179:function(t){var e=Array,r=Math.abs,n=Math.pow,o=Math.floor,i=Math.log,a=Math.LN2;t.exports={pack:function(t,u,c){var s,f,l,p=e(c),d=8*c-u-1,v=(1<<d)-1,h=v>>1,y=23===u?n(2,-24)-n(2,-77):0,g=t<0||0===t&&1/t<0?1:0,b=0;for((t=r(t))!=t||t===1/0?(f=t!=t?1:0,s=v):(s=o(i(t)/a),t*(l=n(2,-s))<1&&(s--,l*=2),(t+=s+h>=1?y/l:y*n(2,1-h))*l>=2&&(s++,l/=2),s+h>=v?(f=0,s=v):s+h>=1?(f=(t*l-1)*n(2,u),s+=h):(f=t*n(2,h-1)*n(2,u),s=0));u>=8;)p[b++]=255&f,f/=256,u-=8;for(s=s<<u|f,d+=u;d>0;)p[b++]=255&s,s/=256,d-=8;return p[--b]|=128*g,p},unpack:function(t,e){var r,o=t.length,i=8*o-e-1,a=(1<<i)-1,u=a>>1,c=i-7,s=o-1,f=t[s--],l=127&f;for(f>>=7;c>0;)l=256*l+t[s--],c-=8;for(r=l&(1<<-c)-1,l>>=-c,c+=e;c>0;)r=256*r+t[s--],c-=8;if(0===l)l=1-u;else{if(l===a)return r?NaN:f?-1/0:1/0;r+=n(2,e),l-=u}return(f?-1:1)*r*n(2,l-e)}}},68361:function(t,e,r){var n=r(1702),o=r(47293),i=r(84326),a=Object,u=n("".split);t.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(t){return"String"==i(t)?u(t,""):a(t)}:a},79587:function(t,e,r){var n=r(60614),o=r(70111),i=r(27674);t.exports=function(t,e,r){var a,u;return i&&n(a=e.constructor)&&a!==r&&o(u=a.prototype)&&u!==r.prototype&&i(t,u),t}},42788:function(t,e,r){var n=r(1702),o=r(60614),i=r(5465),a=n(Function.toString);o(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},29909:function(t,e,r){var n,o,i,a=r(94811),u=r(17854),c=r(70111),s=r(68880),f=r(92597),l=r(5465),p=r(6200),d=r(3501),v="Object already initialized",h=u.TypeError,y=u.WeakMap;if(a||l.state){var g=l.state||(l.state=new y);g.get=g.get,g.has=g.has,g.set=g.set,n=function(t,e){if(g.has(t))throw h(v);return e.facade=t,g.set(t,e),e},o=function(t){return g.get(t)||{}},i=function(t){return g.has(t)}}else{var b=p("state");d[b]=!0,n=function(t,e){if(f(t,b))throw h(v);return e.facade=t,s(t,b,e),e},o=function(t){return f(t,b)?t[b]:{}},i=function(t){return f(t,b)}}t.exports={set:n,get:o,has:i,enforce:function(t){return i(t)?o(t):n(t,{})},getterFor:function(t){return function(e){var r;if(!c(e)||(r=o(e)).type!==t)throw h("Incompatible receiver, "+t+" required");return r}}}},97659:function(t,e,r){var n=r(5112),o=r(97497),i=n("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(o.Array===t||a[i]===t)}},43157:function(t,e,r){var n=r(84326);t.exports=Array.isArray||function(t){return"Array"==n(t)}},44067:function(t,e,r){var n=r(70648);t.exports=function(t){var e=n(t);return"BigInt64Array"==e||"BigUint64Array"==e}},60614:function(t,e,r){var n=r(4154),o=n.all;t.exports=n.IS_HTMLDDA?function(t){return"function"==typeof t||t===o}:function(t){return"function"==typeof t}},4411:function(t,e,r){var n=r(1702),o=r(47293),i=r(60614),a=r(70648),u=r(35005),c=r(42788),s=function(){},f=[],l=u("Reflect","construct"),p=/^\s*(?:class|function)\b/,d=n(p.exec),v=!p.exec(s),h=function(t){if(!i(t))return!1;try{return l(s,f,t),!0}catch(t){return!1}},y=function(t){if(!i(t))return!1;switch(a(t)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return v||!!d(p,c(t))}catch(t){return!0}};y.sham=!0,t.exports=!l||o((function(){var t;return h(h.call)||!h(Object)||!h((function(){t=!0}))||t}))?y:h},54705:function(t,e,r){var n=r(47293),o=r(60614),i=/#|\.prototype\./,a=function(t,e){var r=c[u(t)];return r==f||r!=s&&(o(e)?n(e):!!e)},u=a.normalize=function(t){return String(t).replace(i,".").toLowerCase()},c=a.data={},s=a.NATIVE="N",f=a.POLYFILL="P";t.exports=a},55988:function(t,e,r){var n=r(70111),o=Math.floor;t.exports=Number.isInteger||function(t){return!n(t)&&isFinite(t)&&o(t)===t}},68554:function(t){t.exports=function(t){return null==t}},70111:function(t,e,r){var n=r(60614),o=r(4154),i=o.all;t.exports=o.IS_HTMLDDA?function(t){return"object"==typeof t?null!==t:n(t)||t===i}:function(t){return"object"==typeof t?null!==t:n(t)}},31913:function(t){t.exports=!1},52190:function(t,e,r){var n=r(35005),o=r(60614),i=r(47976),a=r(43307),u=Object;t.exports=a?function(t){return"symbol"==typeof t}:function(t){var e=n("Symbol");return o(e)&&i(e.prototype,u(t))}},20408:function(t,e,r){var n=r(49974),o=r(46916),i=r(19670),a=r(66330),u=r(97659),c=r(26244),s=r(47976),f=r(18554),l=r(71246),p=r(99212),d=TypeError,v=function(t,e){this.stopped=t,this.result=e},h=v.prototype;t.exports=function(t,e,r){var y,g,b,m,x,w,E,S=r&&r.that,T=!(!r||!r.AS_ENTRIES),O=!(!r||!r.IS_RECORD),A=!(!r||!r.IS_ITERATOR),_=!(!r||!r.INTERRUPTED),I=n(e,S),P=function(t){return y&&p(y,"normal",t),new v(!0,t)},R=function(t){return T?(i(t),_?I(t[0],t[1],P):I(t[0],t[1])):_?I(t,P):I(t)};if(O)y=t.iterator;else if(A)y=t;else{if(!(g=l(t)))throw d(a(t)+" is not iterable");if(u(g)){for(b=0,m=c(t);m>b;b++)if((x=R(t[b]))&&s(h,x))return x;return new v(!1)}y=f(t,g)}for(w=O?t.next:y.next;!(E=o(w,y)).done;){try{x=R(E.value)}catch(t){p(y,"throw",t)}if("object"==typeof x&&x&&s(h,x))return x}return new v(!1)}},99212:function(t,e,r){var n=r(46916),o=r(19670),i=r(58173);t.exports=function(t,e,r){var a,u;o(t);try{if(!(a=i(t,"return"))){if("throw"===e)throw r;return r}a=n(a,t)}catch(t){u=!0,a=t}if("throw"===e)throw r;if(u)throw a;return o(a),r}},63061:function(t,e,r){"use strict";var n=r(13383).IteratorPrototype,o=r(70030),i=r(79114),a=r(58003),u=r(97497),c=function(){return this};t.exports=function(t,e,r,s){var f=e+" Iterator";return t.prototype=o(n,{next:i(+!s,r)}),a(t,f,!1,!0),u[f]=c,t}},51656:function(t,e,r){"use strict";var n=r(82109),o=r(46916),i=r(31913),a=r(76530),u=r(60614),c=r(63061),s=r(79518),f=r(27674),l=r(58003),p=r(68880),d=r(98052),v=r(5112),h=r(97497),y=r(13383),g=a.PROPER,b=a.CONFIGURABLE,m=y.IteratorPrototype,x=y.BUGGY_SAFARI_ITERATORS,w=v("iterator"),E="keys",S="values",T="entries",O=function(){return this};t.exports=function(t,e,r,a,v,y,A){c(r,e,a);var _,I,P,R=function(t){if(t===v&&M)return M;if(!x&&t in N)return N[t];switch(t){case E:case S:case T:return function(){return new r(this,t)}}return function(){return new r(this)}},j=e+" Iterator",C=!1,N=t.prototype,k=N[w]||N["@@iterator"]||v&&N[v],M=!x&&k||R(v),L="Array"==e&&N.entries||k;if(L&&(_=s(L.call(new t)))!==Object.prototype&&_.next&&(i||s(_)===m||(f?f(_,m):u(_[w])||d(_,w,O)),l(_,j,!0,!0),i&&(h[j]=O)),g&&v==S&&k&&k.name!==S&&(!i&&b?p(N,"name",S):(C=!0,M=function(){return o(k,this)})),v)if(I={values:R(S),keys:y?M:R(E),entries:R(T)},A)for(P in I)(x||C||!(P in N))&&d(N,P,I[P]);else n({target:e,proto:!0,forced:x||C},I);return i&&!A||N[w]===M||d(N,w,M,{name:v}),h[e]=M,I}},13383:function(t,e,r){"use strict";var n,o,i,a=r(47293),u=r(60614),c=r(70111),s=r(70030),f=r(79518),l=r(98052),p=r(5112),d=r(31913),v=p("iterator"),h=!1;[].keys&&("next"in(i=[].keys())?(o=f(f(i)))!==Object.prototype&&(n=o):h=!0),!c(n)||a((function(){var t={};return n[v].call(t)!==t}))?n={}:d&&(n=s(n)),u(n[v])||l(n,v,(function(){return this})),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:h}},97497:function(t){t.exports={}},26244:function(t,e,r){var n=r(17466);t.exports=function(t){return n(t.length)}},56339:function(t,e,r){var n=r(1702),o=r(47293),i=r(60614),a=r(92597),u=r(19781),c=r(76530).CONFIGURABLE,s=r(42788),f=r(29909),l=f.enforce,p=f.get,d=String,v=Object.defineProperty,h=n("".slice),y=n("".replace),g=n([].join),b=u&&!o((function(){return 8!==v((function(){}),"length",{value:8}).length})),m=String(String).split("String"),x=t.exports=function(t,e,r){"Symbol("===h(d(e),0,7)&&(e="["+y(d(e),/^Symbol\(([^)]*)\)/,"$1")+"]"),r&&r.getter&&(e="get "+e),r&&r.setter&&(e="set "+e),(!a(t,"name")||c&&t.name!==e)&&(u?v(t,"name",{value:e,configurable:!0}):t.name=e),b&&r&&a(r,"arity")&&t.length!==r.arity&&v(t,"length",{value:r.arity});try{r&&a(r,"constructor")&&r.constructor?u&&v(t,"prototype",{writable:!1}):t.prototype&&(t.prototype=void 0)}catch(t){}var n=l(t);return a(n,"source")||(n.source=g(m,"string"==typeof e?e:"")),t};Function.prototype.toString=x((function(){return i(this)&&p(this).source||s(this)}),"toString")},74758:function(t){var e=Math.ceil,r=Math.floor;t.exports=Math.trunc||function(t){var n=+t;return(n>0?r:e)(n)}},95948:function(t,e,r){var n,o,i,a,u,c=r(17854),s=r(49974),f=r(31236).f,l=r(20261).set,p=r(18572),d=r(6833),v=r(71528),h=r(71036),y=r(35268),g=c.MutationObserver||c.WebKitMutationObserver,b=c.document,m=c.process,x=c.Promise,w=f(c,"queueMicrotask"),E=w&&w.value;if(!E){var S=new p,T=function(){var t,e;for(y&&(t=m.domain)&&t.exit();e=S.get();)try{e()}catch(t){throw S.head&&n(),t}t&&t.enter()};d||y||h||!g||!b?!v&&x&&x.resolve?((a=x.resolve(void 0)).constructor=x,u=s(a.then,a),n=function(){u(T)}):y?n=function(){m.nextTick(T)}:(l=s(l,c),n=function(){l(T)}):(o=!0,i=b.createTextNode(""),new g(T).observe(i,{characterData:!0}),n=function(){i.data=o=!o}),E=function(t){S.head||n(),S.add(t)}}t.exports=E},78523:function(t,e,r){"use strict";var n=r(19662),o=TypeError,i=function(t){var e,r;this.promise=new t((function(t,n){if(void 0!==e||void 0!==r)throw o("Bad Promise constructor");e=t,r=n})),this.resolve=n(e),this.reject=n(r)};t.exports.f=function(t){return new i(t)}},70030:function(t,e,r){var n,o=r(19670),i=r(36048),a=r(80748),u=r(3501),c=r(60490),s=r(80317),f=r(6200),l="prototype",p="script",d=f("IE_PROTO"),v=function(){},h=function(t){return"<script>"+t+"</"+p+">"},y=function(t){t.write(h("")),t.close();var e=t.parentWindow.Object;return t=null,e},g=function(){try{n=new ActiveXObject("htmlfile")}catch(t){}var t,e;g="undefined"!=typeof document?document.domain&&n?y(n):((e=s("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F):y(n);for(var r=a.length;r--;)delete g[l][a[r]];return g()};u[d]=!0,t.exports=Object.create||function(t,e){var r;return null!==t?(v[l]=o(t),r=new v,v[l]=null,r[d]=t):r=g(),void 0===e?r:i.f(r,e)}},36048:function(t,e,r){var n=r(19781),o=r(3353),i=r(3070),a=r(19670),u=r(45656),c=r(81956);e.f=n&&!o?Object.defineProperties:function(t,e){a(t);for(var r,n=u(e),o=c(e),s=o.length,f=0;s>f;)i.f(t,r=o[f++],n[r]);return t}},3070:function(t,e,r){var n=r(19781),o=r(64664),i=r(3353),a=r(19670),u=r(34948),c=TypeError,s=Object.defineProperty,f=Object.getOwnPropertyDescriptor,l="enumerable",p="configurable",d="writable";e.f=n?i?function(t,e,r){if(a(t),e=u(e),a(r),"function"==typeof t&&"prototype"===e&&"value"in r&&d in r&&!r[d]){var n=f(t,e);n&&n[d]&&(t[e]=r.value,r={configurable:p in r?r[p]:n[p],enumerable:l in r?r[l]:n[l],writable:!1})}return s(t,e,r)}:s:function(t,e,r){if(a(t),e=u(e),a(r),o)try{return s(t,e,r)}catch(t){}if("get"in r||"set"in r)throw c("Accessors not supported");return"value"in r&&(t[e]=r.value),t}},31236:function(t,e,r){var n=r(19781),o=r(46916),i=r(55296),a=r(79114),u=r(45656),c=r(34948),s=r(92597),f=r(64664),l=Object.getOwnPropertyDescriptor;e.f=n?l:function(t,e){if(t=u(t),e=c(e),f)try{return l(t,e)}catch(t){}if(s(t,e))return a(!o(i.f,t,e),t[e])}},8006:function(t,e,r){var n=r(16324),o=r(80748).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return n(t,o)}},25181:function(t,e){e.f=Object.getOwnPropertySymbols},79518:function(t,e,r){var n=r(92597),o=r(60614),i=r(47908),a=r(6200),u=r(49920),c=a("IE_PROTO"),s=Object,f=s.prototype;t.exports=u?s.getPrototypeOf:function(t){var e=i(t);if(n(e,c))return e[c];var r=e.constructor;return o(r)&&e instanceof r?r.prototype:e instanceof s?f:null}},47976:function(t,e,r){var n=r(1702);t.exports=n({}.isPrototypeOf)},16324:function(t,e,r){var n=r(1702),o=r(92597),i=r(45656),a=r(41318).indexOf,u=r(3501),c=n([].push);t.exports=function(t,e){var r,n=i(t),s=0,f=[];for(r in n)!o(u,r)&&o(n,r)&&c(f,r);for(;e.length>s;)o(n,r=e[s++])&&(~a(f,r)||c(f,r));return f}},81956:function(t,e,r){var n=r(16324),o=r(80748);t.exports=Object.keys||function(t){return n(t,o)}},55296:function(t,e){"use strict";var r={}.propertyIsEnumerable,n=Object.getOwnPropertyDescriptor,o=n&&!r.call({1:2},1);e.f=o?function(t){var e=n(this,t);return!!e&&e.enumerable}:r},27674:function(t,e,r){var n=r(75668),o=r(19670),i=r(96077);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,r={};try{(t=n(Object.prototype,"__proto__","set"))(r,[]),e=r instanceof Array}catch(t){}return function(r,n){return o(r),i(n),e?t(r,n):r.__proto__=n,r}}():void 0)},90288:function(t,e,r){"use strict";var n=r(51694),o=r(70648);t.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},92140:function(t,e,r){var n=r(46916),o=r(60614),i=r(70111),a=TypeError;t.exports=function(t,e){var r,u;if("string"===e&&o(r=t.toString)&&!i(u=n(r,t)))return u;if(o(r=t.valueOf)&&!i(u=n(r,t)))return u;if("string"!==e&&o(r=t.toString)&&!i(u=n(r,t)))return u;throw a("Can't convert object to primitive value")}},53887:function(t,e,r){var n=r(35005),o=r(1702),i=r(8006),a=r(25181),u=r(19670),c=o([].concat);t.exports=n("Reflect","ownKeys")||function(t){var e=i.f(u(t)),r=a.f;return r?c(e,r(t)):e}},40857:function(t,e,r){var n=r(17854);t.exports=n},12534:function(t){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},63702:function(t,e,r){var n=r(17854),o=r(2492),i=r(60614),a=r(54705),u=r(42788),c=r(5112),s=r(7871),f=r(83823),l=r(31913),p=r(7392),d=o&&o.prototype,v=c("species"),h=!1,y=i(n.PromiseRejectionEvent),g=a("Promise",(function(){var t=u(o),e=t!==String(o);if(!e&&66===p)return!0;if(l&&(!d.catch||!d.finally))return!0;if(!p||p<51||!/native code/.test(t)){var r=new o((function(t){t(1)})),n=function(t){t((function(){}),(function(){}))};if((r.constructor={})[v]=n,!(h=r.then((function(){}))instanceof n))return!0}return!e&&(s||f)&&!y}));t.exports={CONSTRUCTOR:g,REJECTION_EVENT:y,SUBCLASSING:h}},2492:function(t,e,r){var n=r(17854);t.exports=n.Promise},69478:function(t,e,r){var n=r(19670),o=r(70111),i=r(78523);t.exports=function(t,e){if(n(t),o(e)&&e.constructor===t)return e;var r=i.f(t);return(0,r.resolve)(e),r.promise}},80612:function(t,e,r){var n=r(2492),o=r(17072),i=r(63702).CONSTRUCTOR;t.exports=i||!o((function(t){n.all(t).then(void 0,(function(){}))}))},18572:function(t){var e=function(){this.head=null,this.tail=null};e.prototype={add:function(t){var e={item:t,next:null},r=this.tail;r?r.next=e:this.head=e,this.tail=e},get:function(){var t=this.head;if(t)return null===(this.head=t.next)&&(this.tail=null),t.item}},t.exports=e},97651:function(t,e,r){var n=r(46916),o=r(19670),i=r(60614),a=r(84326),u=r(22261),c=TypeError;t.exports=function(t,e){var r=t.exec;if(i(r)){var s=n(r,t,e);return null!==s&&o(s),s}if("RegExp"===a(t))return n(u,t,e);throw c("RegExp#exec called on incompatible receiver")}},22261:function(t,e,r){"use strict";var n,o,i=r(46916),a=r(1702),u=r(41340),c=r(67066),s=r(52999),f=r(72309),l=r(70030),p=r(29909).get,d=r(9441),v=r(38173),h=f("native-string-replace",String.prototype.replace),y=RegExp.prototype.exec,g=y,b=a("".charAt),m=a("".indexOf),x=a("".replace),w=a("".slice),E=(o=/b*/g,i(y,n=/a/,"a"),i(y,o,"a"),0!==n.lastIndex||0!==o.lastIndex),S=s.BROKEN_CARET,T=void 0!==/()??/.exec("")[1];(E||T||S||d||v)&&(g=function(t){var e,r,n,o,a,s,f,d=this,v=p(d),O=u(t),A=v.raw;if(A)return A.lastIndex=d.lastIndex,e=i(g,A,O),d.lastIndex=A.lastIndex,e;var _=v.groups,I=S&&d.sticky,P=i(c,d),R=d.source,j=0,C=O;if(I&&(P=x(P,"y",""),-1===m(P,"g")&&(P+="g"),C=w(O,d.lastIndex),d.lastIndex>0&&(!d.multiline||d.multiline&&"\n"!==b(O,d.lastIndex-1))&&(R="(?: "+R+")",C=" "+C,j++),r=new RegExp("^(?:"+R+")",P)),T&&(r=new RegExp("^"+R+"$(?!\\s)",P)),E&&(n=d.lastIndex),o=i(y,I?r:d,C),I?o?(o.input=w(o.input,j),o[0]=w(o[0],j),o.index=d.lastIndex,d.lastIndex+=o[0].length):d.lastIndex=0:E&&o&&(d.lastIndex=d.global?o.index+o[0].length:n),T&&o&&o.length>1&&i(h,o[0],r,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&_)for(o.groups=s=l(null),a=0;a<_.length;a++)s[(f=_[a])[0]]=o[f[1]];return o}),t.exports=g},67066:function(t,e,r){"use strict";var n=r(19670);t.exports=function(){var t=n(this),e="";return t.hasIndices&&(e+="d"),t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.unicodeSets&&(e+="v"),t.sticky&&(e+="y"),e}},34706:function(t,e,r){var n=r(46916),o=r(92597),i=r(47976),a=r(67066),u=RegExp.prototype;t.exports=function(t){var e=t.flags;return void 0!==e||"flags"in u||o(t,"flags")||!i(u,t)?e:n(a,t)}},52999:function(t,e,r){var n=r(47293),o=r(17854).RegExp,i=n((function(){var t=o("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),a=i||n((function(){return!o("a","y").sticky})),u=i||n((function(){var t=o("^r","gy");return t.lastIndex=2,null!=t.exec("str")}));t.exports={BROKEN_CARET:u,MISSED_STICKY:a,UNSUPPORTED_Y:i}},9441:function(t,e,r){var n=r(47293),o=r(17854).RegExp;t.exports=n((function(){var t=o(".","s");return!(t.dotAll&&t.exec("\n")&&"s"===t.flags)}))},38173:function(t,e,r){var n=r(47293),o=r(17854).RegExp;t.exports=n((function(){var t=o("(?<a>b)","g");return"b"!==t.exec("b").groups.a||"bc"!=="b".replace(t,"$<a>c")}))},84488:function(t,e,r){var n=r(68554),o=TypeError;t.exports=function(t){if(n(t))throw o("Can't call method on "+t);return t}},96340:function(t,e,r){"use strict";var n=r(35005),o=r(47045),i=r(5112),a=r(19781),u=i("species");t.exports=function(t){var e=n(t);a&&e&&!e[u]&&o(e,u,{configurable:!0,get:function(){return this}})}},58003:function(t,e,r){var n=r(3070).f,o=r(92597),i=r(5112)("toStringTag");t.exports=function(t,e,r){t&&!r&&(t=t.prototype),t&&!o(t,i)&&n(t,i,{configurable:!0,value:e})}},6200:function(t,e,r){var n=r(72309),o=r(69711),i=n("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},5465:function(t,e,r){var n=r(17854),o=r(13072),i="__core-js_shared__",a=n[i]||o(i,{});t.exports=a},72309:function(t,e,r){var n=r(31913),o=r(5465);(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.29.0",mode:n?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.29.0/LICENSE",source:"https://github.com/zloirock/core-js"})},36707:function(t,e,r){var n=r(19670),o=r(39483),i=r(68554),a=r(5112)("species");t.exports=function(t,e){var r,u=n(t).constructor;return void 0===u||i(r=n(u)[a])?e:o(r)}},28710:function(t,e,r){var n=r(1702),o=r(19303),i=r(41340),a=r(84488),u=n("".charAt),c=n("".charCodeAt),s=n("".slice),f=function(t){return function(e,r){var n,f,l=i(a(e)),p=o(r),d=l.length;return p<0||p>=d?t?"":void 0:(n=c(l,p))<55296||n>56319||p+1===d||(f=c(l,p+1))<56320||f>57343?t?u(l,p):n:t?s(l,p,p+2):f-56320+(n-55296<<10)+65536}};t.exports={codeAt:f(!1),charAt:f(!0)}},53111:function(t,e,r){var n=r(1702),o=r(84488),i=r(41340),a=r(81361),u=n("".replace),c=RegExp("^["+a+"]+"),s=RegExp("(^|[^"+a+"])["+a+"]+$"),f=function(t){return function(e){var r=i(o(e));return 1&t&&(r=u(r,c,"")),2&t&&(r=u(r,s,"$1")),r}};t.exports={start:f(1),end:f(2),trim:f(3)}},36293:function(t,e,r){var n=r(7392),o=r(47293);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},20261:function(t,e,r){var n,o,i,a,u=r(17854),c=r(22104),s=r(49974),f=r(60614),l=r(92597),p=r(47293),d=r(60490),v=r(50206),h=r(80317),y=r(48053),g=r(6833),b=r(35268),m=u.setImmediate,x=u.clearImmediate,w=u.process,E=u.Dispatch,S=u.Function,T=u.MessageChannel,O=u.String,A=0,_={},I="onreadystatechange";p((function(){n=u.location}));var P=function(t){if(l(_,t)){var e=_[t];delete _[t],e()}},R=function(t){return function(){P(t)}},j=function(t){P(t.data)},C=function(t){u.postMessage(O(t),n.protocol+"//"+n.host)};m&&x||(m=function(t){y(arguments.length,1);var e=f(t)?t:S(t),r=v(arguments,1);return _[++A]=function(){c(e,void 0,r)},o(A),A},x=function(t){delete _[t]},b?o=function(t){w.nextTick(R(t))}:E&&E.now?o=function(t){E.now(R(t))}:T&&!g?(a=(i=new T).port2,i.port1.onmessage=j,o=s(a.postMessage,a)):u.addEventListener&&f(u.postMessage)&&!u.importScripts&&n&&"file:"!==n.protocol&&!p(C)?(o=C,u.addEventListener("message",j,!1)):o=I in h("script")?function(t){d.appendChild(h("script"))[I]=function(){d.removeChild(this),P(t)}}:function(t){setTimeout(R(t),0)}),t.exports={set:m,clear:x}},50863:function(t,e,r){var n=r(1702);t.exports=n(1..valueOf)},51400:function(t,e,r){var n=r(19303),o=Math.max,i=Math.min;t.exports=function(t,e){var r=n(t);return r<0?o(r+e,0):i(r,e)}},64599:function(t,e,r){var n=r(57593),o=TypeError;t.exports=function(t){var e=n(t,"number");if("number"==typeof e)throw o("Can't convert number to bigint");return BigInt(e)}},57067:function(t,e,r){var n=r(19303),o=r(17466),i=RangeError;t.exports=function(t){if(void 0===t)return 0;var e=n(t),r=o(e);if(e!==r)throw i("Wrong length or index");return r}},45656:function(t,e,r){var n=r(68361),o=r(84488);t.exports=function(t){return n(o(t))}},19303:function(t,e,r){var n=r(74758);t.exports=function(t){var e=+t;return e!=e||0===e?0:n(e)}},17466:function(t,e,r){var n=r(19303),o=Math.min;t.exports=function(t){return t>0?o(n(t),9007199254740991):0}},47908:function(t,e,r){var n=r(84488),o=Object;t.exports=function(t){return o(n(t))}},84590:function(t,e,r){var n=r(73002),o=RangeError;t.exports=function(t,e){var r=n(t);if(r%e)throw o("Wrong offset");return r}},73002:function(t,e,r){var n=r(19303),o=RangeError;t.exports=function(t){var e=n(t);if(e<0)throw o("The argument can't be less than 0");return e}},57593:function(t,e,r){var n=r(46916),o=r(70111),i=r(52190),a=r(58173),u=r(92140),c=r(5112),s=TypeError,f=c("toPrimitive");t.exports=function(t,e){if(!o(t)||i(t))return t;var r,c=a(t,f);if(c){if(void 0===e&&(e="default"),r=n(c,t,e),!o(r)||i(r))return r;throw s("Can't convert object to primitive value")}return void 0===e&&(e="number"),u(t,e)}},34948:function(t,e,r){var n=r(57593),o=r(52190);t.exports=function(t){var e=n(t,"string");return o(e)?e:e+""}},51694:function(t,e,r){var n={};n[r(5112)("toStringTag")]="z",t.exports="[object z]"===String(n)},41340:function(t,e,r){var n=r(70648),o=String;t.exports=function(t){if("Symbol"===n(t))throw TypeError("Cannot convert a Symbol value to a string");return o(t)}},66330:function(t){var e=String;t.exports=function(t){try{return e(t)}catch(t){return"Object"}}},19843:function(t,e,r){"use strict";var n=r(82109),o=r(17854),i=r(46916),a=r(19781),u=r(63832),c=r(90260),s=r(13331),f=r(25787),l=r(79114),p=r(68880),d=r(55988),v=r(17466),h=r(57067),y=r(84590),g=r(34948),b=r(92597),m=r(70648),x=r(70111),w=r(52190),E=r(70030),S=r(47976),T=r(27674),O=r(8006).f,A=r(97321),_=r(42092).forEach,I=r(96340),P=r(47045),R=r(3070),j=r(31236),C=r(29909),N=r(79587),k=C.get,M=C.set,L=C.enforce,D=R.f,U=j.f,F=Math.round,B=o.RangeError,G=s.ArrayBuffer,V=G.prototype,H=s.DataView,z=c.NATIVE_ARRAY_BUFFER_VIEWS,W=c.TYPED_ARRAY_TAG,Y=c.TypedArray,q=c.TypedArrayPrototype,K=c.aTypedArrayConstructor,$=c.isTypedArray,X="BYTES_PER_ELEMENT",J="Wrong length",Q=function(t,e){K(t);for(var r=0,n=e.length,o=new t(n);n>r;)o[r]=e[r++];return o},Z=function(t,e){P(t,e,{configurable:!0,get:function(){return k(this)[e]}})},tt=function(t){var e;return S(V,t)||"ArrayBuffer"==(e=m(t))||"SharedArrayBuffer"==e},et=function(t,e){return $(t)&&!w(e)&&e in t&&d(+e)&&e>=0},rt=function(t,e){return e=g(e),et(t,e)?l(2,t[e]):U(t,e)},nt=function(t,e,r){return e=g(e),!(et(t,e)&&x(r)&&b(r,"value"))||b(r,"get")||b(r,"set")||r.configurable||b(r,"writable")&&!r.writable||b(r,"enumerable")&&!r.enumerable?D(t,e,r):(t[e]=r.value,t)};a?(z||(j.f=rt,R.f=nt,Z(q,"buffer"),Z(q,"byteOffset"),Z(q,"byteLength"),Z(q,"length")),n({target:"Object",stat:!0,forced:!z},{getOwnPropertyDescriptor:rt,defineProperty:nt}),t.exports=function(t,e,r){var a=t.match(/\d+/)[0]/8,c=t+(r?"Clamped":"")+"Array",s="get"+t,l="set"+t,d=o[c],g=d,b=g&&g.prototype,m={},w=function(t,e){D(t,e,{get:function(){return function(t,e){var r=k(t);return r.view[s](e*a+r.byteOffset,!0)}(this,e)},set:function(t){return function(t,e,n){var o=k(t);r&&(n=(n=F(n))<0?0:n>255?255:255&n),o.view[l](e*a+o.byteOffset,n,!0)}(this,e,t)},enumerable:!0})};z?u&&(g=e((function(t,e,r,n){return f(t,b),N(x(e)?tt(e)?void 0!==n?new d(e,y(r,a),n):void 0!==r?new d(e,y(r,a)):new d(e):$(e)?Q(g,e):i(A,g,e):new d(h(e)),t,g)})),T&&T(g,Y),_(O(d),(function(t){t in g||p(g,t,d[t])})),g.prototype=b):(g=e((function(t,e,r,n){f(t,b);var o,u,c,s=0,l=0;if(x(e)){if(!tt(e))return $(e)?Q(g,e):i(A,g,e);o=e,l=y(r,a);var p=e.byteLength;if(void 0===n){if(p%a)throw B(J);if((u=p-l)<0)throw B(J)}else if((u=v(n)*a)+l>p)throw B(J);c=u/a}else c=h(e),o=new G(u=c*a);for(M(t,{buffer:o,byteOffset:l,byteLength:u,length:c,view:new H(o)});s<c;)w(t,s++)})),T&&T(g,Y),b=g.prototype=E(q)),b.constructor!==g&&p(b,"constructor",g),L(b).TypedArrayConstructor=g,W&&p(b,W,c);var S=g!=d;m[c]=g,n({global:!0,constructor:!0,forced:S,sham:!z},m),X in g||p(g,X,a),X in b||p(b,X,a),I(c)}):t.exports=function(){}},63832:function(t,e,r){var n=r(17854),o=r(47293),i=r(17072),a=r(90260).NATIVE_ARRAY_BUFFER_VIEWS,u=n.ArrayBuffer,c=n.Int8Array;t.exports=!a||!o((function(){c(1)}))||!o((function(){new c(-1)}))||!i((function(t){new c,new c(null),new c(1.5),new c(t)}),!0)||o((function(){return 1!==new c(new u(2),1,void 0).length}))},43074:function(t,e,r){var n=r(97745),o=r(66304);t.exports=function(t,e){return n(o(t),e)}},97321:function(t,e,r){var n=r(49974),o=r(46916),i=r(39483),a=r(47908),u=r(26244),c=r(18554),s=r(71246),f=r(97659),l=r(44067),p=r(90260).aTypedArrayConstructor,d=r(64599);t.exports=function(t){var e,r,v,h,y,g,b,m,x=i(this),w=a(t),E=arguments.length,S=E>1?arguments[1]:void 0,T=void 0!==S,O=s(w);if(O&&!f(O))for(m=(b=c(w,O)).next,w=[];!(g=o(m,b)).done;)w.push(g.value);for(T&&E>2&&(S=n(S,arguments[2])),r=u(w),v=new(p(x))(r),h=l(v),e=0;r>e;e++)y=T?S(w[e],e):w[e],v[e]=h?d(y):+y;return v}},66304:function(t,e,r){var n=r(90260),o=r(36707),i=n.aTypedArrayConstructor,a=n.getTypedArrayConstructor;t.exports=function(t){return i(o(t,a(t)))}},69711:function(t,e,r){var n=r(1702),o=0,i=Math.random(),a=n(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++o+i,36)}},43307:function(t,e,r){var n=r(36293);t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:function(t,e,r){var n=r(19781),o=r(47293);t.exports=n&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},48053:function(t){var e=TypeError;t.exports=function(t,r){if(t<r)throw e("Not enough arguments");return t}},94811:function(t,e,r){var n=r(17854),o=r(60614),i=n.WeakMap;t.exports=o(i)&&/native code/.test(String(i))},5112:function(t,e,r){var n=r(17854),o=r(72309),i=r(92597),a=r(69711),u=r(36293),c=r(43307),s=n.Symbol,f=o("wks"),l=c?s.for||s:s&&s.withoutSetter||a;t.exports=function(t){return i(f,t)||(f[t]=u&&i(s,t)?s[t]:l("Symbol."+t)),f[t]}},81361:function(t){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},39575:function(t,e,r){"use strict";var n=r(82109),o=r(21470),i=r(47293),a=r(13331),u=r(19670),c=r(51400),s=r(17466),f=r(36707),l=a.ArrayBuffer,p=a.DataView,d=p.prototype,v=o(l.prototype.slice),h=o(d.getUint8),y=o(d.setUint8);n({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:i((function(){return!new l(2).slice(1,void 0).byteLength}))},{slice:function(t,e){if(v&&void 0===e)return v(u(this),t);for(var r=u(this).byteLength,n=c(t,r),o=c(void 0===e?r:e,r),i=new(f(this,l))(s(o-n)),a=new p(this),d=new p(i),g=0;n<o;)y(d,g++,h(a,n++));return i}})},66992:function(t,e,r){"use strict";var n=r(45656),o=r(51223),i=r(97497),a=r(29909),u=r(3070).f,c=r(51656),s=r(76178),f=r(31913),l=r(19781),p="Array Iterator",d=a.set,v=a.getterFor(p);t.exports=c(Array,"Array",(function(t,e){d(this,{type:p,target:n(t),index:0,kind:e})}),(function(){var t=v(this),e=t.target,r=t.kind,n=t.index++;return!e||n>=e.length?(t.target=void 0,s(void 0,!0)):s("keys"==r?n:"values"==r?e[n]:[n,e[n]],!1)}),"values");var h=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!f&&l&&"values"!==h.name)try{u(h,"name",{value:"values"})}catch(t){}},69600:function(t,e,r){"use strict";var n=r(82109),o=r(1702),i=r(68361),a=r(45656),u=r(9341),c=o([].join);n({target:"Array",proto:!0,forced:i!=Object||!u("join",",")},{join:function(t){return c(a(this),void 0===t?",":t)}})},68309:function(t,e,r){var n=r(19781),o=r(76530).EXISTS,i=r(1702),a=r(47045),u=Function.prototype,c=i(u.toString),s=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,f=i(s.exec);n&&!o&&a(u,"name",{configurable:!0,get:function(){try{return f(s,c(this))[1]}catch(t){return""}}})},9653:function(t,e,r){"use strict";var n=r(82109),o=r(31913),i=r(19781),a=r(17854),u=r(40857),c=r(1702),s=r(54705),f=r(92597),l=r(79587),p=r(47976),d=r(52190),v=r(57593),h=r(47293),y=r(8006).f,g=r(31236).f,b=r(3070).f,m=r(50863),x=r(53111).trim,w="Number",E=a[w],S=u[w],T=E.prototype,O=a.TypeError,A=c("".slice),_=c("".charCodeAt),I=function(t){var e=v(t,"number");return"bigint"==typeof e?e:P(e)},P=function(t){var e,r,n,o,i,a,u,c,s=v(t,"number");if(d(s))throw O("Cannot convert a Symbol value to a number");if("string"==typeof s&&s.length>2)if(s=x(s),43===(e=_(s,0))||45===e){if(88===(r=_(s,2))||120===r)return NaN}else if(48===e){switch(_(s,1)){case 66:case 98:n=2,o=49;break;case 79:case 111:n=8,o=55;break;default:return+s}for(a=(i=A(s,2)).length,u=0;u<a;u++)if((c=_(i,u))<48||c>o)return NaN;return parseInt(i,n)}return+s},R=s(w,!E(" 0o1")||!E("0b1")||E("+0x1")),j=function(t){return p(T,t)&&h((function(){m(t)}))},C=function(t){var e=arguments.length<1?0:E(I(t));return j(this)?l(Object(e),this,C):e};C.prototype=T,R&&!o&&(T.constructor=C),n({global:!0,constructor:!0,wrap:!0,forced:R},{Number:C});var N=function(t,e){for(var r,n=i?y(e):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),o=0;n.length>o;o++)f(e,r=n[o])&&!f(t,r)&&b(t,r,g(e,r))};o&&S&&N(u[w],S),(R||o)&&N(u[w],E)},41539:function(t,e,r){var n=r(51694),o=r(98052),i=r(90288);n||o(Object.prototype,"toString",i,{unsafe:!0})},70821:function(t,e,r){"use strict";var n=r(82109),o=r(46916),i=r(19662),a=r(78523),u=r(12534),c=r(20408);n({target:"Promise",stat:!0,forced:r(80612)},{all:function(t){var e=this,r=a.f(e),n=r.resolve,s=r.reject,f=u((function(){var r=i(e.resolve),a=[],u=0,f=1;c(t,(function(t){var i=u++,c=!1;f++,o(r,e,t).then((function(t){c||(c=!0,a[i]=t,--f||n(a))}),s)})),--f||n(a)}));return f.error&&s(f.value),r.promise}})},94164:function(t,e,r){"use strict";var n=r(82109),o=r(31913),i=r(63702).CONSTRUCTOR,a=r(2492),u=r(35005),c=r(60614),s=r(98052),f=a&&a.prototype;if(n({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(t){return this.then(void 0,t)}}),!o&&c(a)){var l=u("Promise").prototype.catch;f.catch!==l&&s(f,"catch",l,{unsafe:!0})}},43401:function(t,e,r){"use strict";var n,o,i,a=r(82109),u=r(31913),c=r(35268),s=r(17854),f=r(46916),l=r(98052),p=r(27674),d=r(58003),v=r(96340),h=r(19662),y=r(60614),g=r(70111),b=r(25787),m=r(36707),x=r(20261).set,w=r(95948),E=r(842),S=r(12534),T=r(18572),O=r(29909),A=r(2492),_=r(63702),I=r(78523),P="Promise",R=_.CONSTRUCTOR,j=_.REJECTION_EVENT,C=_.SUBCLASSING,N=O.getterFor(P),k=O.set,M=A&&A.prototype,L=A,D=M,U=s.TypeError,F=s.document,B=s.process,G=I.f,V=G,H=!!(F&&F.createEvent&&s.dispatchEvent),z="unhandledrejection",W=function(t){var e;return!(!g(t)||!y(e=t.then))&&e},Y=function(t,e){var r,n,o,i=e.value,a=1==e.state,u=a?t.ok:t.fail,c=t.resolve,s=t.reject,l=t.domain;try{u?(a||(2===e.rejection&&J(e),e.rejection=1),!0===u?r=i:(l&&l.enter(),r=u(i),l&&(l.exit(),o=!0)),r===t.promise?s(U("Promise-chain cycle")):(n=W(r))?f(n,r,c,s):c(r)):s(i)}catch(t){l&&!o&&l.exit(),s(t)}},q=function(t,e){t.notified||(t.notified=!0,w((function(){for(var r,n=t.reactions;r=n.get();)Y(r,t);t.notified=!1,e&&!t.rejection&&$(t)})))},K=function(t,e,r){var n,o;H?((n=F.createEvent("Event")).promise=e,n.reason=r,n.initEvent(t,!1,!0),s.dispatchEvent(n)):n={promise:e,reason:r},!j&&(o=s["on"+t])?o(n):t===z&&E("Unhandled promise rejection",r)},$=function(t){f(x,s,(function(){var e,r=t.facade,n=t.value;if(X(t)&&(e=S((function(){c?B.emit("unhandledRejection",n,r):K(z,r,n)})),t.rejection=c||X(t)?2:1,e.error))throw e.value}))},X=function(t){return 1!==t.rejection&&!t.parent},J=function(t){f(x,s,(function(){var e=t.facade;c?B.emit("rejectionHandled",e):K("rejectionhandled",e,t.value)}))},Q=function(t,e,r){return function(n){t(e,n,r)}},Z=function(t,e,r){t.done||(t.done=!0,r&&(t=r),t.value=e,t.state=2,q(t,!0))},tt=function(t,e,r){if(!t.done){t.done=!0,r&&(t=r);try{if(t.facade===e)throw U("Promise can't be resolved itself");var n=W(e);n?w((function(){var r={done:!1};try{f(n,e,Q(tt,r,t),Q(Z,r,t))}catch(e){Z(r,e,t)}})):(t.value=e,t.state=1,q(t,!1))}catch(e){Z({done:!1},e,t)}}};if(R&&(D=(L=function(t){b(this,D),h(t),f(n,this);var e=N(this);try{t(Q(tt,e),Q(Z,e))}catch(t){Z(e,t)}}).prototype,(n=function(t){k(this,{type:P,done:!1,notified:!1,parent:!1,reactions:new T,rejection:!1,state:0,value:void 0})}).prototype=l(D,"then",(function(t,e){var r=N(this),n=G(m(this,L));return r.parent=!0,n.ok=!y(t)||t,n.fail=y(e)&&e,n.domain=c?B.domain:void 0,0==r.state?r.reactions.add(n):w((function(){Y(n,r)})),n.promise})),o=function(){var t=new n,e=N(t);this.promise=t,this.resolve=Q(tt,e),this.reject=Q(Z,e)},I.f=G=function(t){return t===L||void 0===t?new o(t):V(t)},!u&&y(A)&&M!==Object.prototype)){i=M.then,C||l(M,"then",(function(t,e){var r=this;return new L((function(t,e){f(i,r,t,e)})).then(t,e)}),{unsafe:!0});try{delete M.constructor}catch(t){}p&&p(M,D)}a({global:!0,constructor:!0,wrap:!0,forced:R},{Promise:L}),d(L,P,!1,!0),v(P)},88674:function(t,e,r){r(43401),r(70821),r(94164),r(6027),r(60683),r(96294)},6027:function(t,e,r){"use strict";var n=r(82109),o=r(46916),i=r(19662),a=r(78523),u=r(12534),c=r(20408);n({target:"Promise",stat:!0,forced:r(80612)},{race:function(t){var e=this,r=a.f(e),n=r.reject,s=u((function(){var a=i(e.resolve);c(t,(function(t){o(a,e,t).then(r.resolve,n)}))}));return s.error&&n(s.value),r.promise}})},60683:function(t,e,r){"use strict";var n=r(82109),o=r(46916),i=r(78523);n({target:"Promise",stat:!0,forced:r(63702).CONSTRUCTOR},{reject:function(t){var e=i.f(this);return o(e.reject,void 0,t),e.promise}})},96294:function(t,e,r){"use strict";var n=r(82109),o=r(35005),i=r(31913),a=r(2492),u=r(63702).CONSTRUCTOR,c=r(69478),s=o("Promise"),f=i&&!u;n({target:"Promise",stat:!0,forced:i||u},{resolve:function(t){return c(f&&this===s?a:this,t)}})},74916:function(t,e,r){"use strict";var n=r(82109),o=r(22261);n({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},39714:function(t,e,r){"use strict";var n=r(76530).PROPER,o=r(98052),i=r(19670),a=r(41340),u=r(47293),c=r(34706),s="toString",f=RegExp.prototype[s],l=u((function(){return"/a/b"!=f.call({source:"a",flags:"b"})})),p=n&&f.name!=s;(l||p)&&o(RegExp.prototype,s,(function(){var t=i(this);return"/"+a(t.source)+"/"+a(c(t))}),{unsafe:!0})},15306:function(t,e,r){"use strict";var n=r(22104),o=r(46916),i=r(1702),a=r(27007),u=r(47293),c=r(19670),s=r(60614),f=r(68554),l=r(19303),p=r(17466),d=r(41340),v=r(84488),h=r(31530),y=r(58173),g=r(10647),b=r(97651),m=r(5112)("replace"),x=Math.max,w=Math.min,E=i([].concat),S=i([].push),T=i("".indexOf),O=i("".slice),A="$0"==="a".replace(/./,"$0"),_=!!/./[m]&&""===/./[m]("a","$0");a("replace",(function(t,e,r){var i=_?"$":"$0";return[function(t,r){var n=v(this),i=f(t)?void 0:y(t,m);return i?o(i,t,n,r):o(e,d(n),t,r)},function(t,o){var a=c(this),u=d(t);if("string"==typeof o&&-1===T(o,i)&&-1===T(o,"$<")){var f=r(e,a,u,o);if(f.done)return f.value}var v=s(o);v||(o=d(o));var y=a.global;if(y){var m=a.unicode;a.lastIndex=0}for(var A=[];;){var _=b(a,u);if(null===_)break;if(S(A,_),!y)break;""===d(_[0])&&(a.lastIndex=h(u,p(a.lastIndex),m))}for(var I,P="",R=0,j=0;j<A.length;j++){for(var C=d((_=A[j])[0]),N=x(w(l(_.index),u.length),0),k=[],M=1;M<_.length;M++)S(k,void 0===(I=_[M])?I:String(I));var L=_.groups;if(v){var D=E([C],k,N,u);void 0!==L&&S(D,L);var U=d(n(o,void 0,D))}else U=g(C,u,N,k,L,o);N>=R&&(P+=O(u,R,N)+U,R=N+C.length)}return P+O(u,R)}]}),!!u((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}))||!A||_)},92990:function(t,e,r){"use strict";var n=r(1702),o=r(90260),i=n(r(1048)),a=o.aTypedArray;(0,o.exportTypedArrayMethod)("copyWithin",(function(t,e){return i(a(this),t,e,arguments.length>2?arguments[2]:void 0)}))},18927:function(t,e,r){"use strict";var n=r(90260),o=r(42092).every,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("every",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},33105:function(t,e,r){"use strict";var n=r(90260),o=r(21285),i=r(64599),a=r(70648),u=r(46916),c=r(1702),s=r(47293),f=n.aTypedArray,l=n.exportTypedArrayMethod,p=c("".slice);l("fill",(function(t){var e=arguments.length;f(this);var r="Big"===p(a(this),0,3)?i(t):+t;return u(o,this,r,e>1?arguments[1]:void 0,e>2?arguments[2]:void 0)}),s((function(){var t=0;return new Int8Array(2).fill({valueOf:function(){return t++}}),1!==t})))},35035:function(t,e,r){"use strict";var n=r(90260),o=r(42092).filter,i=r(43074),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("filter",(function(t){var e=o(a(this),t,arguments.length>1?arguments[1]:void 0);return i(this,e)}))},7174:function(t,e,r){"use strict";var n=r(90260),o=r(42092).findIndex,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("findIndex",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},74345:function(t,e,r){"use strict";var n=r(90260),o=r(42092).find,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("find",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},32846:function(t,e,r){"use strict";var n=r(90260),o=r(42092).forEach,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("forEach",(function(t){o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},44731:function(t,e,r){"use strict";var n=r(90260),o=r(41318).includes,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("includes",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},77209:function(t,e,r){"use strict";var n=r(90260),o=r(41318).indexOf,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("indexOf",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},96319:function(t,e,r){"use strict";var n=r(17854),o=r(47293),i=r(1702),a=r(90260),u=r(66992),c=r(5112)("iterator"),s=n.Uint8Array,f=i(u.values),l=i(u.keys),p=i(u.entries),d=a.aTypedArray,v=a.exportTypedArrayMethod,h=s&&s.prototype,y=!o((function(){h[c].call([1])})),g=!!h&&h.values&&h[c]===h.values&&"values"===h.values.name,b=function(){return f(d(this))};v("entries",(function(){return p(d(this))}),y),v("keys",(function(){return l(d(this))}),y),v("values",b,y||!g,{name:"values"}),v(c,b,y||!g,{name:"values"})},58867:function(t,e,r){"use strict";var n=r(90260),o=r(1702),i=n.aTypedArray,a=n.exportTypedArrayMethod,u=o([].join);a("join",(function(t){return u(i(this),t)}))},37789:function(t,e,r){"use strict";var n=r(90260),o=r(22104),i=r(86583),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("lastIndexOf",(function(t){var e=arguments.length;return o(i,a(this),e>1?[t,arguments[1]]:[t])}))},33739:function(t,e,r){"use strict";var n=r(90260),o=r(42092).map,i=r(66304),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("map",(function(t){return o(a(this),t,arguments.length>1?arguments[1]:void 0,(function(t,e){return new(i(t))(e)}))}))},14483:function(t,e,r){"use strict";var n=r(90260),o=r(53671).right,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduceRight",(function(t){var e=arguments.length;return o(i(this),t,e,e>1?arguments[1]:void 0)}))},29368:function(t,e,r){"use strict";var n=r(90260),o=r(53671).left,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduce",(function(t){var e=arguments.length;return o(i(this),t,e,e>1?arguments[1]:void 0)}))},12056:function(t,e,r){"use strict";var n=r(90260),o=n.aTypedArray,i=n.exportTypedArrayMethod,a=Math.floor;i("reverse",(function(){for(var t,e=this,r=o(e).length,n=a(r/2),i=0;i<n;)t=e[i],e[i++]=e[--r],e[r]=t;return e}))},3462:function(t,e,r){"use strict";var n=r(17854),o=r(46916),i=r(90260),a=r(26244),u=r(84590),c=r(47908),s=r(47293),f=n.RangeError,l=n.Int8Array,p=l&&l.prototype,d=p&&p.set,v=i.aTypedArray,h=i.exportTypedArrayMethod,y=!s((function(){var t=new Uint8ClampedArray(2);return o(d,t,{length:1,0:3},1),3!==t[1]})),g=y&&i.NATIVE_ARRAY_BUFFER_VIEWS&&s((function(){var t=new l(2);return t.set(1),t.set("2",1),0!==t[0]||2!==t[1]}));h("set",(function(t){v(this);var e=u(arguments.length>1?arguments[1]:void 0,1),r=c(t);if(y)return o(d,this,r,e);var n=this.length,i=a(r),s=0;if(i+e>n)throw f("Wrong length");for(;s<i;)this[e+s]=r[s++]}),!y||g)},30678:function(t,e,r){"use strict";var n=r(90260),o=r(66304),i=r(47293),a=r(50206),u=n.aTypedArray;(0,n.exportTypedArrayMethod)("slice",(function(t,e){for(var r=a(u(this),t,e),n=o(this),i=0,c=r.length,s=new n(c);c>i;)s[i]=r[i++];return s}),i((function(){new Int8Array(1).slice()})))},27462:function(t,e,r){"use strict";var n=r(90260),o=r(42092).some,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("some",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},33824:function(t,e,r){"use strict";var n=r(17854),o=r(21470),i=r(47293),a=r(19662),u=r(94362),c=r(90260),s=r(68886),f=r(30256),l=r(7392),p=r(98008),d=c.aTypedArray,v=c.exportTypedArrayMethod,h=n.Uint16Array,y=h&&o(h.prototype.sort),g=!(!y||i((function(){y(new h(2),null)}))&&i((function(){y(new h(2),{})}))),b=!!y&&!i((function(){if(l)return l<74;if(s)return s<67;if(f)return!0;if(p)return p<602;var t,e,r=new h(516),n=Array(516);for(t=0;t<516;t++)e=t%4,r[t]=515-t,n[t]=t-2*e+3;for(y(r,(function(t,e){return(t/4|0)-(e/4|0)})),t=0;t<516;t++)if(r[t]!==n[t])return!0}));v("sort",(function(t){return void 0!==t&&a(t),b?y(this,t):u(d(this),function(t){return function(e,r){return void 0!==t?+t(e,r)||0:r!=r?-1:e!=e?1:0===e&&0===r?1/e>0&&1/r<0?1:-1:e>r}}(t))}),!b||g)},55021:function(t,e,r){"use strict";var n=r(90260),o=r(17466),i=r(51400),a=r(66304),u=n.aTypedArray;(0,n.exportTypedArrayMethod)("subarray",(function(t,e){var r=u(this),n=r.length,c=i(t,n);return new(a(r))(r.buffer,r.byteOffset+c*r.BYTES_PER_ELEMENT,o((void 0===e?n:i(e,n))-c))}))},12974:function(t,e,r){"use strict";var n=r(17854),o=r(22104),i=r(90260),a=r(47293),u=r(50206),c=n.Int8Array,s=i.aTypedArray,f=i.exportTypedArrayMethod,l=[].toLocaleString,p=!!c&&a((function(){l.call(new c(1))}));f("toLocaleString",(function(){return o(l,p?u(s(this)):s(this),u(arguments))}),a((function(){return[1,2].toLocaleString()!=new c([1,2]).toLocaleString()}))||!a((function(){c.prototype.toLocaleString.call([1,2])})))},15016:function(t,e,r){"use strict";var n=r(90260).exportTypedArrayMethod,o=r(47293),i=r(17854),a=r(1702),u=i.Uint8Array,c=u&&u.prototype||{},s=[].toString,f=a([].join);o((function(){s.call({})}))&&(s=function(){return f(this)});var l=c.toString!=s;n("toString",s,l)},82472:function(t,e,r){r(19843)("Uint8",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},57147:function(t,e,r){"use strict";r.r(e),r.d(e,{DOMException:function(){return O},Headers:function(){return v},Request:function(){return w},Response:function(){return S},fetch:function(){return A}});var n="undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof self&&self||void 0!==n&&n,o="URLSearchParams"in n,i="Symbol"in n&&"iterator"in Symbol,a="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(t){return!1}}(),u="FormData"in n,c="ArrayBuffer"in n;if(c)var s=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],f=ArrayBuffer.isView||function(t){return t&&s.indexOf(Object.prototype.toString.call(t))>-1};function l(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(t)||""===t)throw new TypeError('Invalid character in header field name: "'+t+'"');return t.toLowerCase()}function p(t){return"string"!=typeof t&&(t=String(t)),t}function d(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return i&&(e[Symbol.iterator]=function(){return e}),e}function v(t){this.map={},t instanceof v?t.forEach((function(t,e){this.append(e,t)}),this):Array.isArray(t)?t.forEach((function(t){this.append(t[0],t[1])}),this):t&&Object.getOwnPropertyNames(t).forEach((function(e){this.append(e,t[e])}),this)}function h(t){if(t.bodyUsed)return Promise.reject(new TypeError("Already read"));t.bodyUsed=!0}function y(t){return new Promise((function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}}))}function g(t){var e=new FileReader,r=y(e);return e.readAsArrayBuffer(t),r}function b(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function m(){return this.bodyUsed=!1,this._initBody=function(t){var e;this.bodyUsed=this.bodyUsed,this._bodyInit=t,t?"string"==typeof t?this._bodyText=t:a&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:u&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:o&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():c&&a&&(e=t)&&DataView.prototype.isPrototypeOf(e)?(this._bodyArrayBuffer=b(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):c&&(ArrayBuffer.prototype.isPrototypeOf(t)||f(t))?this._bodyArrayBuffer=b(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText="",this.headers.get("content-type")||("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):o&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},a&&(this.blob=function(){var t=h(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?h(this)||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer)):this.blob().then(g)}),this.text=function(){var t,e,r,n=h(this);if(n)return n;if(this._bodyBlob)return t=this._bodyBlob,r=y(e=new FileReader),e.readAsText(t),r;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),n=0;n<e.length;n++)r[n]=String.fromCharCode(e[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},u&&(this.formData=function(){return this.text().then(E)}),this.json=function(){return this.text().then(JSON.parse)},this}v.prototype.append=function(t,e){t=l(t),e=p(e);var r=this.map[t];this.map[t]=r?r+", "+e:e},v.prototype.delete=function(t){delete this.map[l(t)]},v.prototype.get=function(t){return t=l(t),this.has(t)?this.map[t]:null},v.prototype.has=function(t){return this.map.hasOwnProperty(l(t))},v.prototype.set=function(t,e){this.map[l(t)]=p(e)},v.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},v.prototype.keys=function(){var t=[];return this.forEach((function(e,r){t.push(r)})),d(t)},v.prototype.values=function(){var t=[];return this.forEach((function(e){t.push(e)})),d(t)},v.prototype.entries=function(){var t=[];return this.forEach((function(e,r){t.push([r,e])})),d(t)},i&&(v.prototype[Symbol.iterator]=v.prototype.entries);var x=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function w(t,e){if(!(this instanceof w))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');var r,n,o=(e=e||{}).body;if(t instanceof w){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new v(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,o||null==t._bodyInit||(o=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||"same-origin",!e.headers&&this.headers||(this.headers=new v(e.headers)),this.method=(n=(r=e.method||this.method||"GET").toUpperCase(),x.indexOf(n)>-1?n:r),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),!("GET"!==this.method&&"HEAD"!==this.method||"no-store"!==e.cache&&"no-cache"!==e.cache)){var i=/([?&])_=[^&]*/;i.test(this.url)?this.url=this.url.replace(i,"$1_="+(new Date).getTime()):this.url+=(/\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}function E(t){var e=new FormData;return t.trim().split("&").forEach((function(t){if(t){var r=t.split("="),n=r.shift().replace(/\+/g," "),o=r.join("=").replace(/\+/g," ");e.append(decodeURIComponent(n),decodeURIComponent(o))}})),e}function S(t,e){if(!(this instanceof S))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');e||(e={}),this.type="default",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=void 0===e.statusText?"":""+e.statusText,this.headers=new v(e.headers),this.url=e.url||"",this._initBody(t)}w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},m.call(w.prototype),m.call(S.prototype),S.prototype.clone=function(){return new S(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new v(this.headers),url:this.url})},S.error=function(){var t=new S(null,{status:0,statusText:""});return t.type="error",t};var T=[301,302,303,307,308];S.redirect=function(t,e){if(-1===T.indexOf(e))throw new RangeError("Invalid status code");return new S(null,{status:e,headers:{location:t}})};var O=n.DOMException;try{new O}catch(t){(O=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack}).prototype=Object.create(Error.prototype),O.prototype.constructor=O}function A(t,e){return new Promise((function(r,o){var i=new w(t,e);if(i.signal&&i.signal.aborted)return o(new O("Aborted","AbortError"));var u=new XMLHttpRequest;function s(){u.abort()}u.onload=function(){var t,e,n={status:u.status,statusText:u.statusText,headers:(t=u.getAllResponseHeaders()||"",e=new v,t.replace(/\r?\n[\t ]+/g," ").split("\r").map((function(t){return 0===t.indexOf("\n")?t.substr(1,t.length):t})).forEach((function(t){var r=t.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();e.append(n,o)}})),e)};n.url="responseURL"in u?u.responseURL:n.headers.get("X-Request-URL");var o="response"in u?u.response:u.responseText;setTimeout((function(){r(new S(o,n))}),0)},u.onerror=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},u.ontimeout=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},u.onabort=function(){setTimeout((function(){o(new O("Aborted","AbortError"))}),0)},u.open(i.method,function(t){try{return""===t&&n.location.href?n.location.href:t}catch(e){return t}}(i.url),!0),"include"===i.credentials?u.withCredentials=!0:"omit"===i.credentials&&(u.withCredentials=!1),"responseType"in u&&(a?u.responseType="blob":c&&i.headers.get("Content-Type")&&-1!==i.headers.get("Content-Type").indexOf("application/octet-stream")&&(u.responseType="arraybuffer")),!e||"object"!=typeof e.headers||e.headers instanceof v?i.headers.forEach((function(t,e){u.setRequestHeader(e,t)})):Object.getOwnPropertyNames(e.headers).forEach((function(t){u.setRequestHeader(t,p(e.headers[t]))})),i.signal&&(i.signal.addEventListener("abort",s),u.onreadystatechange=function(){4===u.readyState&&i.signal.removeEventListener("abort",s)}),u.send(void 0===i._bodyInit?null:i._bodyInit)}))}A.polyfill=!0,n.fetch||(n.fetch=A,n.Headers=v,n.Request=w,n.Response=S)},25110:function(t,e,r){t.exports=r(27698)},58309:function(t,e,r){t.exports=r(83363)},70586:function(t,e,r){t.exports=r(57784)},11189:function(t,e,r){t.exports=r(28196)},39022:function(t,e,r){t.exports=r(8065)},74386:function(t,e,r){t.exports=r(57448)},14418:function(t,e,r){t.exports=r(11955)},86:function(t,e,r){t.exports=r(46279)},58118:function(t,e,r){t.exports=r(33778)},8712:function(t,e,r){t.exports=r(73819)},97606:function(t,e,r){t.exports=r(61798)},24278:function(t,e,r){t.exports=r(82073)},39940:function(t,e,r){t.exports=r(2348)},27043:function(t,e,r){t.exports=r(35178)},81607:function(t,e,r){t.exports=r(76361)},35627:function(t,e,r){t.exports=r(8933)},18492:function(t,e,r){t.exports=r(15868)},8888:function(t,e,r){t.exports=r(76258)},76986:function(t,e,r){t.exports=r(63383)},97499:function(t,e,r){t.exports=r(14471)},96718:function(t,e,r){t.exports=r(41910)},2018:function(t,e,r){t.exports=r(86209)},82865:function(t,e,r){t.exports=r(53402)},8446:function(t,e,r){t.exports=r(79427)},28222:function(t,e,r){t.exports=r(23059)},96776:function(t,e,r){t.exports=r(16670)},3665:function(t,e,r){t.exports=r(47795)},80040:function(t,e,r){t.exports=r(74888)},6226:function(t,e,r){t.exports=r(27460)},87198:function(t,e,r){t.exports=r(27989)},33733:function(t,e,r){t.exports=r(92547)},57672:function(t,e,r){t.exports=r(46509)},52472:function(t,e,r){t.exports=r(86600)},48994:function(t,e,r){t.exports=r(9759)},17907:function(t){t.exports=function(t){return t&&t.__esModule?t:{default:t}},t.exports.__esModule=!0,t.exports.default=t.exports},20474:function(t,e,r){var n=r(52472),o=r(48994);function i(e){return t.exports=i="function"==typeof n&&"symbol"==typeof o?function(t){return typeof t}:function(t){return t&&"function"==typeof n&&t.constructor===n&&t!==n.prototype?"symbol":typeof t},t.exports.__esModule=!0,t.exports.default=t.exports,i(e)}t.exports=i,t.exports.__esModule=!0,t.exports.default=t.exports}},r={};function n(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={exports:{}};return t[e](i,i.exports,n),i.exports}n.d=function(t,e){for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o=n(29820);return o.default}()}).call(this,r(524))},function(t,e,r){var n=r(1),o=r(15),i=r(9),a=r(35),u=r(182),c=n.Object;t.exports=u?function(t){return"symbol"==typeof t}:function(t){var e=o("Symbol");return i(e)&&a(e.prototype,c(t))}},function(t,e,r){var n=r(28);t.exports=Array.isArray||function(t){return"Array"==n(t)}},function(t,e,r){var n=r(3);t.exports=n([].slice)},function(t,e,r){var n=r(28),o=r(1);t.exports="process"==n(o.process)},function(t,e,r){var n=r(0),o=r(3),i=r(83),a=r(7),u=r(11),c=r(13).f,s=r(54),f=r(148),l=r(119),p=r(68),d=r(94),v=!1,h=p("meta"),y=0,g=function(t){c(t,h,{value:{objectID:"O"+y++,weakData:{}}})},b=t.exports={enable:function(){b.enable=function(){},v=!0;var t=s.f,e=o([].splice),r={};r[h]=1,t(r).length&&(s.f=function(r){for(var n=t(r),o=0,i=n.length;o<i;o++)if(n[o]===h){e(n,o,1);break}return n},n({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:f.f}))},fastKey:function(t,e){if(!a(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!u(t,h)){if(!l(t))return"F";if(!e)return"E";g(t)}return t[h].objectID},getWeakData:function(t,e){if(!u(t,h)){if(!l(t))return!0;if(!e)return!1;g(t)}return t[h].weakData},onFreeze:function(t){return d&&v&&l(t)&&!u(t,h)&&g(t),t}};i[h]=!0},function(t,e,r){"use strict";var n=r(20),o=function(t){var e,r;this.promise=new t((function(t,n){if(void 0!==e||void 0!==r)throw TypeError("Bad Promise constructor");e=t,r=n})),this.resolve=n(e),this.reject=n(r)};t.exports.f=function(t){return new o(t)}},function(t,e,r){var n=r(53),o=r(2);t.exports=!!Object.getOwnPropertySymbols&&!o((function(){var t=Symbol();return!String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&n&&n<41}))},function(t,e,r){var n=r(1).String;t.exports=function(t){try{return n(t)}catch(t){return"Object"}}},function(t,e,r){var n=r(18),o=r(141);(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.22.5",mode:n?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.22.5/LICENSE",source:"https://github.com/zloirock/core-js"})},function(t,e,r){var n=r(3),o=0,i=Math.random(),a=n(1..toString);t.exports=function(t){return"Symbol("+(void 0===t?"":t)+")_"+a(++o+i,36)}},function(t,e,r){var n=r(4),o=r(11),i=Function.prototype,a=n&&Object.getOwnPropertyDescriptor,u=o(i,"name"),c=u&&"something"===function(){}.name,s=u&&(!n||n&&a(i,"name").configurable);t.exports={EXISTS:u,PROPER:c,CONFIGURABLE:s}},function(t,e,r){var n=r(3),o=r(2),i=r(9),a=r(55),u=r(15),c=r(107),s=function(){},f=[],l=u("Reflect","construct"),p=/^\s*(?:class|function)\b/,d=n(p.exec),v=!p.exec(s),h=function(t){if(!i(t))return!1;try{return l(s,f,t),!0}catch(t){return!1}},y=function(t){if(!i(t))return!1;switch(a(t)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return v||!!d(p,c(t))}catch(t){return!0}};y.sham=!0,t.exports=!l||o((function(){var t;return h(h.call)||!h(Object)||!h((function(){t=!0}))||t}))?y:h},function(t,e,r){var n=r(9),o=r(7),i=r(39);t.exports=function(t,e,r){var a,u;return i&&n(a=e.constructor)&&a!==r&&o(u=a.prototype)&&u!==r.prototype&&i(t,u),t}},function(t,e,r){"use strict";var n=r(0),o=r(84).includes,i=r(2),a=r(46);n({target:"Array",proto:!0,forced:i((function(){return!Array(1).includes()}))},{includes:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(t,e,r){"use strict";var n=r(26),o=r(46),i=r(90),a=r(21),u=r(13).f,c=r(153),s=r(18),f=r(4),l=a.set,p=a.getterFor("Array Iterator");t.exports=c(Array,"Array",(function(t,e){l(this,{type:"Array Iterator",target:n(t),index:0,kind:e})}),(function(){var t=p(this),e=t.target,r=t.kind,n=t.index++;return!e||n>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:e[n],done:!1}:{value:[n,e[n]],done:!1}}),"values");var d=i.Arguments=i.Array;if(o("keys"),o("values"),o("entries"),!s&&f&&"values"!==d.name)try{u(d,"name",{value:"values"})}catch(t){}},function(t,e,r){"use strict";var n=r(15),o=r(13),i=r(8),a=r(4),u=i("species");t.exports=function(t){var e=n(t),r=o.f;a&&e&&!e[u]&&r(e,u,{configurable:!0,get:function(){return this}})}},function(t,e,r){var n=r(5),o=r(158),i=r(8)("species");t.exports=function(t,e){var r,a=n(t).constructor;return void 0===a||null==(r=n(a)[i])?e:o(r)}},function(t,e,r){var n=r(3),o=r(19),i=r(10),a=r(122),u=n("".replace),c="["+a+"]",s=RegExp("^"+c+c+"*"),f=RegExp(c+c+"*$"),l=function(t){return function(e){var r=i(o(e));return 1&t&&(r=u(r,s,"")),2&t&&(r=u(r,f,"")),r}};t.exports={start:l(1),end:l(2),trim:l(3)}},function(t,e,r){var n=r(146),o=r(16),i=r(397);n||o(Object.prototype,"toString",i,{unsafe:!0})},function(t,e,r){var n=r(1);t.exports=n.Promise},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(168),a=r(19),u=r(10),c=r(169),s=o("".indexOf);n({target:"String",proto:!0,forced:!c("includes")},{includes:function(t){return!!~s(u(a(this)),u(i(t)),arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){var n=r(533),o=r(536);t.exports=function(t,e){var r=o(t,e);return n(r)?r:void 0}},function(t,e,r){var n=r(2);t.exports=!n((function(){var t=function(){}.bind();return"function"!=typeof t||t.hasOwnProperty("prototype")}))},function(t,e,r){var n=r(1),o=r(3),i=r(2),a=r(28),u=n.Object,c=o("".split);t.exports=i((function(){return!u("z").propertyIsEnumerable(0)}))?function(t){return"String"==a(t)?c(t,""):u(t)}:u},function(t,e){t.exports={}},function(t,e,r){var n=r(26),o=r(44),i=r(17),a=function(t){return function(e,r,a){var u,c=n(e),s=i(c),f=o(a,s);if(t&&r!=r){for(;s>f;)if((u=c[f++])!=u)return!0}else for(;s>f;f++)if((t||f in c)&&c[f]===r)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},function(t,e,r){var n=r(2),o=r(9),i=/#|\.prototype\./,a=function(t,e){var r=c[u(t)];return r==f||r!=s&&(o(e)?n(e):!!e)},u=a.normalize=function(t){return String(t).replace(i,".").toLowerCase()},c=a.data={},s=a.NATIVE="N",f=a.POLYFILL="P";t.exports=a},function(t,e,r){var n=r(187),o=r(145);t.exports=Object.keys||function(t){return n(t,o)}},function(t,e,r){var n=r(1),o=r(44),i=r(17),a=r(45),u=n.Array,c=Math.max;t.exports=function(t,e,r){for(var n=i(t),s=o(e,n),f=o(void 0===r?n:r,n),l=u(c(f-s,0)),p=0;s<f;s++,p++)a(l,p,t[s]);return l.length=p,l}},function(t,e,r){var n=r(273);t.exports=function(t,e){return new(n(t))(0===e?0:e)}},function(t,e,r){var n=r(10);t.exports=function(t,e){return void 0===t?arguments.length<2?"":e:n(t)}},function(t,e){t.exports={}},function(t,e,r){var n=r(55),o=r(43),i=r(90),a=r(8)("iterator");t.exports=function(t){if(null!=t)return o(t,a)||o(t,"@@iterator")||i[n(t)]}},function(t,e,r){var n=r(2),o=r(8),i=r(53),a=o("species");t.exports=function(t){return i>=51||!n((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},function(t,e,r){var n=r(16);t.exports=function(t,e,r){for(var o in e)n(t,o,e[o],r);return t}},function(t,e,r){var n=r(2);t.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},function(t,e,r){var n=r(1),o=r(78),i=r(9),a=r(85),u=r(107),c=r(8),s=r(405),f=r(18),l=r(53),p=o&&o.prototype,d=c("species"),v=!1,h=i(n.PromiseRejectionEvent),y=a("Promise",(function(){var t=u(o),e=t!==String(o);if(!e&&66===l)return!0;if(f&&(!p.catch||!p.finally))return!0;if(l>=51&&/native code/.test(t))return!1;var r=new o((function(t){t(1)})),n=function(t){t((function(){}),(function(){}))};return(r.constructor={})[d]=n,!(v=r.then((function(){}))instanceof n)||!e&&s&&!h}));t.exports={CONSTRUCTOR:y,REJECTION_EVENT:h,SUBCLASSING:v}},function(t,e,r){var n=r(7),o=r(28),i=r(8)("match");t.exports=function(t){var e;return n(t)&&(void 0!==(e=t[i])?!!e:"RegExp"==o(t))}},function(t,e,r){var n=r(6),o=r(11),i=r(35),a=r(166),u=RegExp.prototype;t.exports=function(t){var e=t.flags;return void 0!==e||"flags"in u||o(t,"flags")||!i(u,t)?e:n(a,t)}},function(t,e,r){var n=r(143),o=r(13);t.exports=function(t,e,r){return r.get&&n(r.get,e,{getter:!0}),r.set&&n(r.set,e,{setter:!0}),o.f(t,e,r)}},function(t,e,r){var n=r(1),o=r(6),i=r(5),a=r(9),u=r(28),c=r(127),s=n.TypeError;t.exports=function(t,e){var r=t.exec;if(a(r)){var n=o(r,t,e);return null!==n&&i(n),n}if("RegExp"===u(t))return o(c,t,e);throw s("RegExp#exec called on incompatible receiver")}},function(t,e,r){"use strict";var n=r(36),o=r(6),i=r(3),a=r(130),u=r(97),c=r(5),s=r(19),f=r(75),l=r(131),p=r(29),d=r(10),v=r(43),h=r(87),y=r(100),g=r(127),b=r(126),m=r(2),x=b.UNSUPPORTED_Y,w=Math.min,E=[].push,S=i(/./.exec),T=i(E),O=i("".slice);a("split",(function(t,e,r){var i;return i="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,r){var i=d(s(this)),a=void 0===r?4294967295:r>>>0;if(0===a)return[];if(void 0===t)return[i];if(!u(t))return o(e,i,t,a);for(var c,f,l,p=[],v=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),y=0,b=new RegExp(t.source,v+"g");(c=o(g,b,i))&&!((f=b.lastIndex)>y&&(T(p,O(i,y,c.index)),c.length>1&&c.index<i.length&&n(E,p,h(c,1)),l=c[0].length,y=f,p.length>=a));)b.lastIndex===c.index&&b.lastIndex++;return y===i.length?!l&&S(b,"")||T(p,""):T(p,O(i,y)),p.length>a?h(p,0,a):p}:"0".split(void 0,0).length?function(t,r){return void 0===t&&0===r?[]:o(e,this,t,r)}:e,[function(e,r){var n=s(this),a=null==e?void 0:v(e,t);return a?o(a,e,n,r):o(i,d(n),e,r)},function(t,n){var o=c(this),a=d(t),u=r(i,o,a,n,i!==e);if(u.done)return u.value;var s=f(o,RegExp),v=o.unicode,h=(o.ignoreCase?"i":"")+(o.multiline?"m":"")+(o.unicode?"u":"")+(x?"g":"y"),g=new s(x?"^(?:"+o.source+")":o,h),b=void 0===n?4294967295:n>>>0;if(0===b)return[];if(0===a.length)return null===y(g,a)?[a]:[];for(var m=0,E=0,S=[];E<a.length;){g.lastIndex=x?0:E;var A,_=y(g,x?O(a,E):a);if(null===_||(A=w(p(g.lastIndex+(x?E:0)),a.length))===m)E=l(a,E,v);else{if(T(S,O(a,m,E)),S.length===b)return S;for(var I=1;I<=_.length-1;I++)if(T(S,_[I]),S.length===b)return S;E=m=A}}return T(S,O(a,m)),S}]}),!!m((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var r="ab".split(t);return 2!==r.length||"a"!==r[0]||"b"!==r[1]})),x)},function(t,e,r){var n=r(1),o=r(243),i=r(244),a=r(203),u=r(25),c=function(t){if(t&&t.forEach!==a)try{u(t,"forEach",a)}catch(e){t.forEach=a}};for(var s in o)o[s]&&c(n[s]&&n[s].prototype);c(i)},function(t,e,r){var n=r(133),o=r(525),i=r(526),a=n?n.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":a&&a in Object(t)?o(t):i(t)}},function(t,e){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,e,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!n.call({1:2},1);e.f=i?function(t){var e=o(this,t);return!!e&&e.enumerable}:n},function(t,e,r){var n=r(1),o=r(7),i=n.document,a=o(i)&&o(i.createElement);t.exports=function(t){return a?i.createElement(t):{}}},function(t,e,r){var n=r(3),o=r(9),i=r(141),a=n(Function.toString);o(i.inspectSource)||(i.inspectSource=function(t){return a(t)}),t.exports=i.inspectSource},function(t,e,r){var n=r(67),o=r(68),i=n("keys");t.exports=function(t){return i[t]||(i[t]=o(t))}},function(t,e,r){var n=r(11),o=r(144),i=r(24),a=r(13);t.exports=function(t,e,r){for(var u=o(e),c=a.f,s=i.f,f=0;f<u.length;f++){var l=u[f];n(t,l)||r&&n(r,l)||c(t,l,s(e,l))}}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,r){var n=r(3),o=Error,i=n("".replace),a=String(o("zxcasd").stack),u=/\n\s*at [^:]*:[^\n]*/,c=u.test(a);t.exports=function(t,e){if(c&&"string"==typeof t&&!o.prepareStackTrace)for(;e--;)t=i(t,u,"");return t}},function(t,e,r){var n=r(1),o=r(6),i=r(20),a=r(5),u=r(66),c=r(91),s=n.TypeError;t.exports=function(t,e){var r=arguments.length<2?c(t):e;if(i(r))return a(o(r,t));throw s(u(t)+" is not iterable")}},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(2),a=r(60),u=r(7),c=r(14),s=r(17),f=r(45),l=r(88),p=r(92),d=r(8),v=r(53),h=d("isConcatSpreadable"),y=o.TypeError,g=v>=51||!i((function(){var t=[];return t[h]=!1,t.concat()[0]!==t})),b=p("concat"),m=function(t){if(!u(t))return!1;var e=t[h];return void 0!==e?!!e:a(t)};n({target:"Array",proto:!0,arity:1,forced:!g||!b},{concat:function(t){var e,r,n,o,i,a=c(this),u=l(a,0),p=0;for(e=-1,n=arguments.length;e<n;e++)if(m(i=-1===e?a:arguments[e])){if(p+(o=s(i))>9007199254740991)throw y("Maximum allowed index exceeded");for(r=0;r<o;r++,p++)r in i&&f(u,p,i[r])}else{if(p>=9007199254740991)throw y("Maximum allowed index exceeded");f(u,p++,i)}return u.length=p,u}})},function(t,e,r){var n=r(8)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var r=!1;try{var i={};i[n]=function(){return{next:function(){return{done:r=!0}}}},t(i)}catch(t){}return r}},function(t,e,r){var n=r(1),o=r(20),i=r(14),a=r(82),u=r(17),c=n.TypeError,s=function(t){return function(e,r,n,s){o(r);var f=i(e),l=a(f),p=u(f),d=t?p-1:0,v=t?-1:1;if(n<2)for(;;){if(d in l){s=l[d],d+=v;break}if(d+=v,t?d<0:p<=d)throw c("Reduce of empty array with no initial value")}for(;t?d>=0:p>d;d+=v)d in l&&(s=r(s,l[d],d,f));return s}};t.exports={left:s(!1),right:s(!0)}},function(t,e,r){"use strict";var n=r(1),o=r(3),i=r(4),a=r(157),u=r(69),c=r(25),s=r(93),f=r(2),l=r(41),p=r(22),d=r(29),v=r(210),h=r(323),y=r(37),g=r(39),b=r(54).f,m=r(13).f,x=r(152),w=r(87),E=r(31),S=r(21),T=u.PROPER,O=u.CONFIGURABLE,A=S.get,_=S.set,I=n.ArrayBuffer,P=I,R=P&&P.prototype,j=n.DataView,C=j&&j.prototype,N=Object.prototype,k=n.Array,M=n.RangeError,L=o(x),D=o([].reverse),U=h.pack,F=h.unpack,B=function(t){return[255&t]},G=function(t){return[255&t,t>>8&255]},V=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},H=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},z=function(t){return U(t,23,4)},W=function(t){return U(t,52,8)},Y=function(t,e){m(t.prototype,e,{get:function(){return A(this)[e]}})},q=function(t,e,r,n){var o=v(r),i=A(t);if(o+e>i.byteLength)throw M("Wrong index");var a=A(i.buffer).bytes,u=o+i.byteOffset,c=w(a,u,u+e);return n?c:D(c)},K=function(t,e,r,n,o,i){var a=v(r),u=A(t);if(a+e>u.byteLength)throw M("Wrong index");for(var c=A(u.buffer).bytes,s=a+u.byteOffset,f=n(+o),l=0;l<e;l++)c[s+l]=f[i?l:e-l-1]};if(a){var $=T&&"ArrayBuffer"!==I.name;if(f((function(){I(1)}))&&f((function(){new I(-1)}))&&!f((function(){return new I,new I(1.5),new I(NaN),$&&!O})))$&&O&&c(I,"name","ArrayBuffer");else{(P=function(t){return l(this,R),new I(v(t))}).prototype=R;for(var X,J=b(I),Q=0;J.length>Q;)(X=J[Q++])in P||c(P,X,I[X]);R.constructor=P}g&&y(C)!==N&&g(C,N);var Z=new j(new P(2)),tt=o(C.setInt8);Z.setInt8(0,2147483648),Z.setInt8(1,2147483649),!Z.getInt8(0)&&Z.getInt8(1)||s(C,{setInt8:function(t,e){tt(this,t,e<<24>>24)},setUint8:function(t,e){tt(this,t,e<<24>>24)}},{unsafe:!0})}else R=(P=function(t){l(this,R);var e=v(t);_(this,{bytes:L(k(e),0),byteLength:e}),i||(this.byteLength=e)}).prototype,C=(j=function(t,e,r){l(this,C),l(t,R);var n=A(t).byteLength,o=p(e);if(o<0||o>n)throw M("Wrong offset");if(o+(r=void 0===r?n-o:d(r))>n)throw M("Wrong length");_(this,{buffer:t,byteLength:r,byteOffset:o}),i||(this.buffer=t,this.byteLength=r,this.byteOffset=o)}).prototype,i&&(Y(P,"byteLength"),Y(j,"buffer"),Y(j,"byteLength"),Y(j,"byteOffset")),s(C,{getInt8:function(t){return q(this,1,t)[0]<<24>>24},getUint8:function(t){return q(this,1,t)[0]},getInt16:function(t){var e=q(this,2,t,arguments.length>1?arguments[1]:void 0);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=q(this,2,t,arguments.length>1?arguments[1]:void 0);return e[1]<<8|e[0]},getInt32:function(t){return H(q(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t){return H(q(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t){return F(q(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t){return F(q(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,e){K(this,1,t,B,e)},setUint8:function(t,e){K(this,1,t,B,e)},setInt16:function(t,e){K(this,2,t,G,e,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,e){K(this,2,t,G,e,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,e){K(this,4,t,V,e,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,e){K(this,4,t,V,e,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,e){K(this,4,t,z,e,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,e){K(this,8,t,W,e,arguments.length>2?arguments[2]:void 0)}});E(P,"ArrayBuffer"),E(j,"DataView"),t.exports={ArrayBuffer:P,DataView:j}},function(t,e,r){"use strict";var n=r(1),o=r(22),i=r(10),a=r(19),u=n.RangeError;t.exports=function(t){var e=i(a(this)),r="",n=o(t);if(n<0||n==1/0)throw u("Wrong number of repetitions");for(;n>0;(n>>>=1)&&(e+=e))1&n&&(r+=e);return r}},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(3),a=r(85),u=r(16),c=r(63),s=r(40),f=r(41),l=r(9),p=r(7),d=r(2),v=r(114),h=r(31),y=r(71);t.exports=function(t,e,r){var g=-1!==t.indexOf("Map"),b=-1!==t.indexOf("Weak"),m=g?"set":"add",x=o[t],w=x&&x.prototype,E=x,S={},T=function(t){var e=i(w[t]);u(w,t,"add"==t?function(t){return e(this,0===t?0:t),this}:"delete"==t?function(t){return!(b&&!p(t))&&e(this,0===t?0:t)}:"get"==t?function(t){return b&&!p(t)?void 0:e(this,0===t?0:t)}:"has"==t?function(t){return!(b&&!p(t))&&e(this,0===t?0:t)}:function(t,r){return e(this,0===t?0:t,r),this})};if(a(t,!l(x)||!(b||w.forEach&&!d((function(){(new x).entries().next()})))))E=r.getConstructor(e,t,g,m),c.enable();else if(a(t,!0)){var O=new E,A=O[m](b?{}:-0,1)!=O,_=d((function(){O.has(1)})),I=v((function(t){new x(t)})),P=!b&&d((function(){for(var t=new x,e=5;e--;)t[m](e,e);return!t.has(-0)}));I||((E=e((function(t,e){f(t,w);var r=y(new x,t,E);return null!=e&&s(e,r[m],{that:r,AS_ENTRIES:g}),r}))).prototype=w,w.constructor=E),(_||P)&&(T("delete"),T("has"),g&&T("get")),(P||A)&&T(m),b&&w.clear&&delete w.clear}return S[t]=E,n({global:!0,constructor:!0,forced:E!=x},S),h(E,t),b||r.setStrong(E,t,g),E}},function(t,e,r){var n=r(2),o=r(7),i=r(28),a=r(161),u=Object.isExtensible,c=n((function(){u(1)}));t.exports=c||a?function(t){return!!o(t)&&((!a||"ArrayBuffer"!=i(t))&&(!u||u(t)))}:u},function(t,e){var r=Math.expm1,n=Math.exp;t.exports=!r||r(10)>22025.465794806718||r(10)<22025.465794806718||-2e-17!=r(-2e-17)?function(t){return 0==(t=+t)?t:t>-1e-6&&t<1e-6?t+t*t/2:n(t)-1}:r},function(t,e,r){var n=r(3);t.exports=n(1..valueOf)},function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(t,e,r){"use strict";var n=r(18),o=r(1),i=r(2),a=r(156);t.exports=n||!i((function(){if(!(a&&a<535)){var t=Math.random();__defineSetter__.call(null,t,(function(){})),delete o[t]}}))},function(t,e,r){r(400),r(406),r(407),r(408),r(409),r(410)},function(t,e,r){var n,o,i,a,u=r(1),c=r(36),s=r(38),f=r(9),l=r(11),p=r(2),d=r(188),v=r(61),h=r(106),y=r(56),g=r(224),b=r(62),m=u.setImmediate,x=u.clearImmediate,w=u.process,E=u.Dispatch,S=u.Function,T=u.MessageChannel,O=u.String,A=0,_={};try{n=u.location}catch(t){}var I=function(t){if(l(_,t)){var e=_[t];delete _[t],e()}},P=function(t){return function(){I(t)}},R=function(t){I(t.data)},j=function(t){u.postMessage(O(t),n.protocol+"//"+n.host)};m&&x||(m=function(t){y(arguments.length,1);var e=f(t)?t:S(t),r=v(arguments,1);return _[++A]=function(){c(e,void 0,r)},o(A),A},x=function(t){delete _[t]},b?o=function(t){w.nextTick(P(t))}:E&&E.now?o=function(t){E.now(P(t))}:T&&!g?(a=(i=new T).port2,i.port1.onmessage=R,o=s(a.postMessage,a)):u.addEventListener&&f(u.postMessage)&&!u.importScripts&&n&&"file:"!==n.protocol&&!p(j)?(o=j,u.addEventListener("message",R,!1)):o="onreadystatechange"in h("script")?function(t){d.appendChild(h("script")).onreadystatechange=function(){d.removeChild(this),I(t)}}:function(t){setTimeout(P(t),0)}),t.exports={set:m,clear:x}},function(t,e,r){var n=r(2),o=r(1).RegExp,i=n((function(){var t=o("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),a=i||n((function(){return!o("a","y").sticky})),u=i||n((function(){var t=o("^r","gy");return t.lastIndex=2,null!=t.exec("str")}));t.exports={BROKEN_CARET:u,MISSED_STICKY:a,UNSUPPORTED_Y:i}},function(t,e,r){"use strict";var n,o,i=r(6),a=r(3),u=r(10),c=r(166),s=r(126),f=r(67),l=r(30),p=r(21).get,d=r(167),v=r(230),h=f("native-string-replace",String.prototype.replace),y=RegExp.prototype.exec,g=y,b=a("".charAt),m=a("".indexOf),x=a("".replace),w=a("".slice),E=(o=/b*/g,i(y,n=/a/,"a"),i(y,o,"a"),0!==n.lastIndex||0!==o.lastIndex),S=s.BROKEN_CARET,T=void 0!==/()??/.exec("")[1];(E||T||S||d||v)&&(g=function(t){var e,r,n,o,a,s,f,d=this,v=p(d),O=u(t),A=v.raw;if(A)return A.lastIndex=d.lastIndex,e=i(g,A,O),d.lastIndex=A.lastIndex,e;var _=v.groups,I=S&&d.sticky,P=i(c,d),R=d.source,j=0,C=O;if(I&&(P=x(P,"y",""),-1===m(P,"g")&&(P+="g"),C=w(O,d.lastIndex),d.lastIndex>0&&(!d.multiline||d.multiline&&"\n"!==b(O,d.lastIndex-1))&&(R="(?: "+R+")",C=" "+C,j++),r=new RegExp("^(?:"+R+")",P)),T&&(r=new RegExp("^"+R+"$(?!\\s)",P)),E&&(n=d.lastIndex),o=i(y,I?r:d,C),I?o?(o.input=w(o.input,j),o[0]=w(o[0],j),o.index=d.lastIndex,d.lastIndex+=o[0].length):d.lastIndex=0:E&&o&&(d.lastIndex=d.global?o.index+o[0].length:n),T&&o&&o.length>1&&i(h,o[0],r,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(o[a]=void 0)})),o&&_)for(o.groups=s=l(null),a=0;a<_.length;a++)s[(f=_[a])[0]]=o[f[1]];return o}),t.exports=g},function(t,e,r){var n=r(3),o=r(22),i=r(10),a=r(19),u=n("".charAt),c=n("".charCodeAt),s=n("".slice),f=function(t){return function(e,r){var n,f,l=i(a(e)),p=o(r),d=l.length;return p<0||p>=d?t?"":void 0:(n=c(l,p))<55296||n>56319||p+1===d||(f=c(l,p+1))<56320||f>57343?t?u(l,p):n:t?s(l,p,p+2):f-56320+(n-55296<<10)+65536}};t.exports={codeAt:f(!1),charAt:f(!0)}},function(t,e,r){"use strict";var n=r(128).charAt,o=r(10),i=r(21),a=r(153),u=i.set,c=i.getterFor("String Iterator");a(String,"String",(function(t){u(this,{type:"String Iterator",string:o(t),index:0})}),(function(){var t,e=c(this),r=e.string,o=e.index;return o>=r.length?{value:void 0,done:!0}:(t=n(r,o),e.index+=t.length,{value:t,done:!1})}))},function(t,e,r){"use strict";r(48);var n=r(3),o=r(16),i=r(127),a=r(2),u=r(8),c=r(25),s=u("species"),f=RegExp.prototype;t.exports=function(t,e,r,l){var p=u(t),d=!a((function(){var e={};return e[p]=function(){return 7},7!=""[t](e)})),v=d&&!a((function(){var e=!1,r=/a/;return"split"===t&&((r={}).constructor={},r.constructor[s]=function(){return r},r.flags="",r[p]=/./[p]),r.exec=function(){return e=!0,null},r[p](""),!e}));if(!d||!v||r){var h=n(/./[p]),y=e(p,""[t],(function(t,e,r,o,a){var u=n(t),c=e.exec;return c===i||c===f.exec?d&&!a?{done:!0,value:h(e,r,o)}:{done:!0,value:u(r,e,o)}:{done:!1}}));o(String.prototype,t,y[0]),o(f,p,y[1])}l&&c(f[p],"sham",!0)}},function(t,e,r){"use strict";var n=r(128).charAt;t.exports=function(t,e,r){return e+(r?n(t,e).length:1)}},function(t,e,r){var n=r(12),o=r(75),i=n.TYPED_ARRAY_CONSTRUCTOR,a=n.aTypedArrayConstructor;t.exports=function(t){return a(o(t,t[i]))}},function(t,e,r){var n=r(51).Symbol;t.exports=n},function(t,e,r){var n=r(80)(Object,"create");t.exports=n},function(t,e,r){var n=r(541),o=r(542),i=r(543),a=r(544),u=r(545);function c(t){var e=-1,r=null==t?0:t.length;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=u,t.exports=c},function(t,e,r){var n=r(256);t.exports=function(t,e){for(var r=t.length;r--;)if(n(t[r][0],e))return r;return-1}},function(t,e,r){var n=r(547);t.exports=function(t,e){var r=t.__data__;return n(e)?r["string"==typeof e?"string":"hash"]:r.map}},function(t,e,r){var n=r(175);t.exports=function(t){if("string"==typeof t||n(t))return t;var e=t+"";return"0"==e&&1/t==-1/0?"-0":e}},function(t,e,r){var n=r(251);t.exports=function(t,e,r){var o=null==t?void 0:n(t,e);return void 0===o?r:o}},function(t,e,r){var n=r(1),o=r(6),i=r(7),a=r(59),u=r(43),c=r(183),s=r(8),f=n.TypeError,l=s("toPrimitive");t.exports=function(t,e){if(!i(t)||a(t))return t;var r,n=u(t,l);if(n){if(void 0===e&&(e="default"),r=o(n,t,e),!i(r)||a(r))return r;throw f("Can't convert object to primitive value")}return void 0===e&&(e="number"),c(t,e)}},function(t,e,r){var n=r(1),o=r(142),i=n["__core-js_shared__"]||o("__core-js_shared__",{});t.exports=i},function(t,e,r){var n=r(1),o=Object.defineProperty;t.exports=function(t,e){try{o(n,t,{value:e,configurable:!0,writable:!0})}catch(r){n[t]=e}return e}},function(t,e,r){var n=r(2),o=r(9),i=r(11),a=r(4),u=r(69).CONFIGURABLE,c=r(107),s=r(21),f=s.enforce,l=s.get,p=Object.defineProperty,d=a&&!n((function(){return 8!==p((function(){}),"length",{value:8}).length})),v=String(String).split("String"),h=t.exports=function(t,e,r){if("Symbol("===String(e).slice(0,7)&&(e="["+String(e).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),r&&r.getter&&(e="get "+e),r&&r.setter&&(e="set "+e),(!i(t,"name")||u&&t.name!==e)&&p(t,"name",{value:e,configurable:!0}),d&&r&&i(r,"arity")&&t.length!==r.arity&&p(t,"length",{value:r.arity}),r&&i(r,"constructor")&&r.constructor){if(a)try{p(t,"prototype",{writable:!1})}catch(t){}}else t.prototype=void 0;var n=f(t);return i(n,"source")||(n.source=v.join("string"==typeof e?e:"")),t};Function.prototype.toString=h((function(){return o(this)&&l(this).source||c(this)}),"toString")},function(t,e,r){var n=r(15),o=r(3),i=r(54),a=r(110),u=r(5),c=o([].concat);t.exports=n("Reflect","ownKeys")||function(t){var e=i.f(u(t)),r=a.f;return r?c(e,r(t)):e}},function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e,r){var n={};n[r(8)("toStringTag")]="z",t.exports="[object z]"===String(n)},function(t,e,r){var n=r(4),o=r(185),i=r(13),a=r(5),u=r(26),c=r(86);e.f=n&&!o?Object.defineProperties:function(t,e){a(t);for(var r,n=u(e),o=c(e),s=o.length,f=0;s>f;)i.f(t,r=o[f++],n[r]);return t}},function(t,e,r){var n=r(28),o=r(26),i=r(54).f,a=r(87),u="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return u&&"Window"==n(t)?function(t){try{return i(t)}catch(t){return a(u)}}(t):i(o(t))}},function(t,e,r){var n=r(2),o=r(34);t.exports=!n((function(){var t=Error("a");return!("stack"in t)||(Object.defineProperty(t,"stack",o(1,7)),7!==t.stack)}))},function(t,e,r){var n=r(2);t.exports=!n((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},function(t,e,r){var n=r(8),o=r(90),i=n("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(o.Array===t||a[i]===t)}},function(t,e,r){"use strict";var n=r(14),o=r(44),i=r(17);t.exports=function(t){for(var e=n(this),r=i(e),a=arguments.length,u=o(a>1?arguments[1]:void 0,r),c=a>2?arguments[2]:void 0,s=void 0===c?r:o(c,r);s>u;)e[u++]=t;return e}},function(t,e,r){"use strict";var n=r(0),o=r(6),i=r(18),a=r(69),u=r(9),c=r(154),s=r(37),f=r(39),l=r(31),p=r(25),d=r(16),v=r(8),h=r(90),y=r(205),g=a.PROPER,b=a.CONFIGURABLE,m=y.IteratorPrototype,x=y.BUGGY_SAFARI_ITERATORS,w=v("iterator"),E=function(){return this};t.exports=function(t,e,r,a,v,y,S){c(r,e,a);var T,O,A,_=function(t){if(t===v&&C)return C;if(!x&&t in R)return R[t];switch(t){case"keys":case"values":case"entries":return function(){return new r(this,t)}}return function(){return new r(this)}},I=e+" Iterator",P=!1,R=t.prototype,j=R[w]||R["@@iterator"]||v&&R[v],C=!x&&j||_(v),N="Array"==e&&R.entries||j;if(N&&(T=s(N.call(new t)))!==Object.prototype&&T.next&&(i||s(T)===m||(f?f(T,m):u(T[w])||d(T,w,E)),l(T,I,!0,!0),i&&(h[I]=E)),g&&"values"==v&&j&&"values"!==j.name&&(!i&&b?p(R,"name","values"):(P=!0,C=function(){return o(j,this)})),v)if(O={values:_("values"),keys:y?C:_("keys"),entries:_("entries")},S)for(A in O)(x||P||!(A in R))&&d(R,A,O[A]);else n({target:e,proto:!0,forced:x||P},O);return i&&!S||R[w]===C||d(R,w,C,{name:v}),h[e]=C,O}},function(t,e,r){"use strict";var n=r(205).IteratorPrototype,o=r(30),i=r(34),a=r(31),u=r(90),c=function(){return this};t.exports=function(t,e,r,s){var f=e+" Iterator";return t.prototype=o(n,{next:i(+!s,r)}),a(t,f,!1,!0),u[f]=c,t}},function(t,e,r){var n=r(87),o=Math.floor,i=function(t,e){var r=t.length,c=o(r/2);return r<8?a(t,e):u(t,i(n(t,0,c),e),i(n(t,c),e),e)},a=function(t,e){for(var r,n,o=t.length,i=1;i<o;){for(n=i,r=t[i];n&&e(t[n-1],r)>0;)t[n]=t[--n];n!==i++&&(t[n]=r)}return t},u=function(t,e,r,n){for(var o=e.length,i=r.length,a=0,u=0;a<o||u<i;)t[a+u]=a<o&&u<i?n(e[a],r[u])<=0?e[a++]:r[u++]:a<o?e[a++]:r[u++];return t};t.exports=i},function(t,e,r){var n=r(42).match(/AppleWebKit\/(\d+)\./);t.exports=!!n&&+n[1]},function(t,e){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},function(t,e,r){var n=r(1),o=r(70),i=r(66),a=n.TypeError;t.exports=function(t){if(o(t))return t;throw a(i(t)+" is not a constructor")}},function(t,e,r){var n=r(3),o=r(29),i=r(10),a=r(117),u=r(19),c=n(a),s=n("".slice),f=Math.ceil,l=function(t){return function(e,r,n){var a,l,p=i(u(e)),d=o(r),v=p.length,h=void 0===n?" ":i(n);return d<=v||""==h?p:((l=c(h,f((a=d-v)/h.length))).length>a&&(l=s(l,0,a)),t?p+l:l+p)}};t.exports={start:l(!1),end:l(!0)}},function(t,e,r){var n=r(4),o=r(69).EXISTS,i=r(3),a=r(13).f,u=Function.prototype,c=i(u.toString),s=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,f=i(s.exec);n&&!o&&a(u,"name",{configurable:!0,get:function(){try{return f(s,c(this))[1]}catch(t){return""}}})},function(t,e,r){var n=r(2);t.exports=n((function(){if("function"==typeof ArrayBuffer){var t=new ArrayBuffer(8);Object.isExtensible(t)&&Object.defineProperty(t,"a",{value:8})}}))},function(t,e){t.exports=Math.sign||function(t){return 0==(t=+t)||t!=t?t:t<0?-1:1}},function(t,e,r){"use strict";var n=r(4),o=r(1),i=r(3),a=r(85),u=r(16),c=r(11),s=r(71),f=r(35),l=r(59),p=r(140),d=r(2),v=r(54).f,h=r(24).f,y=r(13).f,g=r(121),b=r(76).trim,m=o.Number,x=m.prototype,w=o.TypeError,E=i("".slice),S=i("".charCodeAt),T=function(t){var e=p(t,"number");return"bigint"==typeof e?e:O(e)},O=function(t){var e,r,n,o,i,a,u,c,s=p(t,"number");if(l(s))throw w("Cannot convert a Symbol value to a number");if("string"==typeof s&&s.length>2)if(s=b(s),43===(e=S(s,0))||45===e){if(88===(r=S(s,2))||120===r)return NaN}else if(48===e){switch(S(s,1)){case 66:case 98:n=2,o=49;break;case 79:case 111:n=8,o=55;break;default:return+s}for(a=(i=E(s,2)).length,u=0;u<a;u++)if((c=S(i,u))<48||c>o)return NaN;return parseInt(i,n)}return+s};if(a("Number",!m(" 0o1")||!m("0b1")||m("+0x1"))){for(var A,_=function(t){var e=arguments.length<1?0:m(T(t)),r=this;return f(x,r)&&d((function(){g(r)}))?s(Object(e),r,_):e},I=n?v(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),P=0;I.length>P;P++)c(m,A=I[P])&&!c(_,A)&&y(_,A,h(m,A));_.prototype=x,x.constructor=_,u(o,"Number",_,{constructor:!0})}},function(t,e,r){var n=r(7),o=Math.floor;t.exports=Number.isInteger||function(t){return!n(t)&&isFinite(t)&&o(t)===t}},function(t,e,r){var n=r(0),o=r(14),i=r(86);n({target:"Object",stat:!0,forced:r(2)((function(){i(1)}))},{keys:function(t){return i(o(t))}})},function(t,e,r){"use strict";var n=r(5);t.exports=function(){var t=n(this),e="";return t.hasIndices&&(e+="d"),t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,r){var n=r(2),o=r(1).RegExp;t.exports=n((function(){var t=o(".","s");return!(t.dotAll&&t.exec("\n")&&"s"===t.flags)}))},function(t,e,r){var n=r(1),o=r(97),i=n.TypeError;t.exports=function(t){if(o(t))throw i("The method doesn't accept regular expressions");return t}},function(t,e,r){var n=r(8)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(r){try{return e[n]=!1,"/./"[t](e)}catch(t){}}return!1}},function(t,e,r){"use strict";var n=r(36),o=r(6),i=r(3),a=r(130),u=r(2),c=r(5),s=r(9),f=r(22),l=r(29),p=r(10),d=r(19),v=r(131),h=r(43),y=r(234),g=r(100),b=r(8)("replace"),m=Math.max,x=Math.min,w=i([].concat),E=i([].push),S=i("".indexOf),T=i("".slice),O="$0"==="a".replace(/./,"$0"),A=!!/./[b]&&""===/./[b]("a","$0");a("replace",(function(t,e,r){var i=A?"$":"$0";return[function(t,r){var n=d(this),i=null==t?void 0:h(t,b);return i?o(i,t,n,r):o(e,p(n),t,r)},function(t,o){var a=c(this),u=p(t);if("string"==typeof o&&-1===S(o,i)&&-1===S(o,"$<")){var d=r(e,a,u,o);if(d.done)return d.value}var h=s(o);h||(o=p(o));var b=a.global;if(b){var O=a.unicode;a.lastIndex=0}for(var A=[];;){var _=g(a,u);if(null===_)break;if(E(A,_),!b)break;""===p(_[0])&&(a.lastIndex=v(u,l(a.lastIndex),O))}for(var I,P="",R=0,j=0;j<A.length;j++){for(var C=p((_=A[j])[0]),N=m(x(f(_.index),u.length),0),k=[],M=1;M<_.length;M++)E(k,void 0===(I=_[M])?I:String(I));var L=_.groups;if(h){var D=w([C],k,N,u);void 0!==L&&E(D,L);var U=p(n(o,void 0,D))}else U=y(C,u,N,k,L,o);N>=R&&(P+=T(u,R,N)+U,R=N+C.length)}return P+T(u,R)}]}),!!u((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}))||!O||A)},function(t,e,r){var n=r(69).PROPER,o=r(2),i=r(122);t.exports=function(t){return o((function(){return!!i[t]()||"​᠎"!=="​᠎"[t]()||n&&i[t].name!==t}))}},function(t,e,r){var n=r(1),o=r(2),i=r(114),a=r(12).NATIVE_ARRAY_BUFFER_VIEWS,u=n.ArrayBuffer,c=n.Int8Array;t.exports=!a||!o((function(){c(1)}))||!o((function(){new c(-1)}))||!i((function(t){new c,new c(null),new c(1.5),new c(t)}),!0)||o((function(){return 1!==new c(new u(2),1,void 0).length}))},function(t,e,r){var n=r(1),o=r(243),i=r(244),a=r(73),u=r(25),c=r(8),s=c("iterator"),f=c("toStringTag"),l=a.values,p=function(t,e){if(t){if(t[s]!==l)try{u(t,s,l)}catch(e){t[s]=l}if(t[f]||u(t,f,e),o[e])for(var r in a)if(t[r]!==a[r])try{u(t,r,a[r])}catch(e){t[r]=a[r]}}};for(var d in o)p(n[d]&&n[d].prototype,d);p(i,"DOMTokenList")},function(t,e,r){var n=r(50),o=r(175),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;t.exports=function(t,e){if(n(t))return!1;var r=typeof t;return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=t&&!o(t))||(a.test(t)||!i.test(t)||null!=e&&t in Object(e))}},function(t,e,r){var n=r(103),o=r(104);t.exports=function(t){return"symbol"==typeof t||o(t)&&"[object Symbol]"==n(t)}},function(t,e,r){var n=r(530),o=r(546),i=r(548),a=r(549),u=r(550);function c(t){var e=-1,r=null==t?0:t.length;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=u,t.exports=c},function(t,e){t.exports=function(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}},function(t,e,r){var n=r(80)(r(51),"Map");t.exports=n},function(t,e,r){var n=r(559),o=r(566),i=r(262);t.exports=function(t){return i(t)?n(t):o(t)}},function(t,e){t.exports=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e,r){var n=r(65);t.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,e,r){var n=r(1),o=r(6),i=r(9),a=r(7),u=n.TypeError;t.exports=function(t,e){var r,n;if("string"===e&&i(r=t.toString)&&!a(n=o(r,t)))return n;if(i(r=t.valueOf)&&!a(n=o(r,t)))return n;if("string"!==e&&i(r=t.toString)&&!a(n=o(r,t)))return n;throw u("Can't convert object to primitive value")}},function(t,e,r){var n=r(4),o=r(2),i=r(106);t.exports=!n&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(t,e,r){var n=r(4),o=r(2);t.exports=n&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(t,e,r){var n=r(1),o=r(9),i=r(107),a=n.WeakMap;t.exports=o(a)&&/native code/.test(i(a))},function(t,e,r){var n=r(3),o=r(11),i=r(26),a=r(84).indexOf,u=r(83),c=n([].push);t.exports=function(t,e){var r,n=i(t),s=0,f=[];for(r in n)!o(u,r)&&o(n,r)&&c(f,r);for(;e.length>s;)o(n,r=e[s++])&&(~a(f,r)||c(f,r));return f}},function(t,e,r){var n=r(15);t.exports=n("document","documentElement")},function(t,e,r){var n=r(8);e.f=n},function(t,e,r){var n=r(1);t.exports=n},function(t,e,r){var n=r(6),o=r(15),i=r(8),a=r(16);t.exports=function(){var t=o("Symbol"),e=t&&t.prototype,r=e&&e.valueOf,u=i("toPrimitive");e&&!e[u]&&a(e,u,(function(t){return n(r,this)}),{arity:1})}},function(t,e,r){var n=r(65);t.exports=n&&!!Symbol.for&&!!Symbol.keyFor},function(t,e,r){var n=r(0),o=r(15),i=r(36),a=r(6),u=r(3),c=r(2),s=r(60),f=r(9),l=r(7),p=r(59),d=r(61),v=r(65),h=o("JSON","stringify"),y=u(/./.exec),g=u("".charAt),b=u("".charCodeAt),m=u("".replace),x=u(1..toString),w=/[\uD800-\uDFFF]/g,E=/^[\uD800-\uDBFF]$/,S=/^[\uDC00-\uDFFF]$/,T=!v||c((function(){var t=o("Symbol")();return"[null]"!=h([t])||"{}"!=h({a:t})||"{}"!=h(Object(t))})),O=c((function(){return'"\\udf06\\ud834"'!==h("\udf06\ud834")||'"\\udead"'!==h("\udead")})),A=function(t,e){var r=d(arguments),n=e;if((l(e)||void 0!==t)&&!p(t))return s(e)||(e=function(t,e){if(f(n)&&(e=a(n,this,t,e)),!p(e))return e}),r[1]=e,i(h,null,r)},_=function(t,e,r){var n=g(r,e-1),o=g(r,e+1);return y(E,t)&&!y(S,o)||y(S,t)&&!y(E,n)?"\\u"+x(b(t,0),16):t};h&&n({target:"JSON",stat:!0,arity:3,forced:T||O},{stringify:function(t,e,r){var n=d(arguments),o=i(T?A:h,null,n);return O&&"string"==typeof o?m(o,w,_):o}})},function(t,e,r){"use strict";var n=r(15),o=r(11),i=r(25),a=r(35),u=r(39),c=r(109),s=r(196),f=r(71),l=r(89),p=r(197),d=r(111),v=r(149),h=r(4),y=r(18);t.exports=function(t,e,r,g){var b=g?2:1,m=t.split("."),x=m[m.length-1],w=n.apply(null,m);if(w){var E=w.prototype;if(!y&&o(E,"cause")&&delete E.cause,!r)return w;var S=n("Error"),T=e((function(t,e){var r=l(g?e:t,void 0),n=g?new w(t):new w;return void 0!==r&&i(n,"message",r),v&&i(n,"stack",d(n.stack,2)),this&&a(E,this)&&f(n,this,T),arguments.length>b&&p(n,arguments[b]),n}));if(T.prototype=E,"Error"!==x?u?u(T,S):c(T,S,{name:!0}):h&&"stackTraceLimit"in w&&(s(T,w,"stackTraceLimit"),s(T,w,"prepareStackTrace")),c(T,w),!y)try{E.name!==x&&i(E,"name",x),E.constructor=T}catch(t){}return T}}},function(t,e,r){var n=r(1),o=r(9),i=n.String,a=n.TypeError;t.exports=function(t){if("object"==typeof t||o(t))return t;throw a("Can't set "+i(t)+" as a prototype")}},function(t,e,r){var n=r(13).f;t.exports=function(t,e,r){r in t||n(t,r,{configurable:!0,get:function(){return e[r]},set:function(t){e[r]=t}})}},function(t,e,r){var n=r(7),o=r(25);t.exports=function(t,e){n(e)&&"cause"in e&&o(t,"cause",e.cause)}},function(t,e,r){"use strict";var n=r(4),o=r(2),i=r(5),a=r(30),u=r(89),c=Error.prototype.toString,s=o((function(){if(n){var t=a(Object.defineProperty({},"name",{get:function(){return this===t}}));if("true"!==c.call(t))return!0}return"2: 1"!==c.call({message:1,name:2})||"Error"!==c.call({})}));t.exports=s?function(){var t=i(this),e=u(t.name,"Error"),r=u(t.message);return e?r?e+": "+r:e:r}:c},function(t,e,r){var n=r(6),o=r(5),i=r(43);t.exports=function(t,e,r){var a,u;o(t);try{if(!(a=i(t,"return"))){if("throw"===e)throw r;return r}a=n(a,t)}catch(t){u=!0,a=t}if("throw"===e)throw r;if(u)throw a;return o(a),r}},function(t,e,r){"use strict";var n=r(14),o=r(44),i=r(17),a=Math.min;t.exports=[].copyWithin||function(t,e){var r=n(this),u=i(r),c=o(t,u),s=o(e,u),f=arguments.length>2?arguments[2]:void 0,l=a((void 0===f?u:o(f,u))-s,u-c),p=1;for(s<c&&c<s+l&&(p=-1,s+=l-1,c+=l-1);l-- >0;)s in r?r[c]=r[s]:delete r[c],c+=p,s+=p;return r}},function(t,e,r){"use strict";var n=r(0),o=r(23).filter;n({target:"Array",proto:!0,forced:!r(92)("filter")},{filter:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){"use strict";var n=r(1),o=r(60),i=r(17),a=r(38),u=n.TypeError,c=function(t,e,r,n,s,f,l,p){for(var d,v,h=s,y=0,g=!!l&&a(l,p);y<n;){if(y in r){if(d=g?g(r[y],y,e):r[y],f>0&&o(d))v=i(d),h=c(t,e,d,v,h,f-1)-1;else{if(h>=9007199254740991)throw u("Exceed the acceptable array length");t[h]=d}h++}y++}return h};t.exports=c},function(t,e,r){"use strict";var n=r(23).forEach,o=r(47)("forEach");t.exports=o?[].forEach:function(t){return n(this,t,arguments.length>1?arguments[1]:void 0)}},function(t,e,r){"use strict";var n=r(1),o=r(38),i=r(6),a=r(14),u=r(306),c=r(151),s=r(70),f=r(17),l=r(45),p=r(112),d=r(91),v=n.Array;t.exports=function(t){var e=a(t),r=s(this),n=arguments.length,h=n>1?arguments[1]:void 0,y=void 0!==h;y&&(h=o(h,n>2?arguments[2]:void 0));var g,b,m,x,w,E,S=d(e),T=0;if(!S||this==v&&c(S))for(g=f(e),b=r?new this(g):v(g);g>T;T++)E=y?h(e[T],T):e[T],l(b,T,E);else for(w=(x=p(e,S)).next,b=r?new this:[];!(m=i(w,x)).done;T++)E=y?u(x,h,[m.value,T],!0):m.value,l(b,T,E);return b.length=T,b}},function(t,e,r){"use strict";var n,o,i,a=r(2),u=r(9),c=r(30),s=r(37),f=r(16),l=r(8),p=r(18),d=l("iterator"),v=!1;[].keys&&("next"in(i=[].keys())?(o=s(s(i)))!==Object.prototype&&(n=o):v=!0),null==n||a((function(){var t={};return n[d].call(t)!==t}))?n={}:p&&(n=c(n)),u(n[d])||f(n,d,(function(){return this})),t.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:v}},function(t,e,r){"use strict";var n=r(36),o=r(26),i=r(22),a=r(17),u=r(47),c=Math.min,s=[].lastIndexOf,f=!!s&&1/[1].lastIndexOf(1,-0)<0,l=u("lastIndexOf"),p=f||!l;t.exports=p?function(t){if(f)return n(s,this,arguments)||0;var e=o(this),r=a(e),u=r-1;for(arguments.length>1&&(u=c(u,i(arguments[1]))),u<0&&(u=r+u);u>=0;u--)if(u in e&&e[u]===t)return u||0;return-1}:s},function(t,e,r){"use strict";var n=r(0),o=r(23).map;n({target:"Array",proto:!0,forced:!r(92)("map")},{map:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){var n=r(42).match(/firefox\/(\d+)/i);t.exports=!!n&&+n[1]},function(t,e,r){var n=r(42);t.exports=/MSIE|Trident/.test(n)},function(t,e,r){var n=r(1),o=r(22),i=r(29),a=n.RangeError;t.exports=function(t){if(void 0===t)return 0;var e=o(t),r=i(e);if(e!==r)throw a("Wrong length or index");return r}},function(t,e,r){"use strict";var n=r(1),o=r(3),i=r(20),a=r(7),u=r(11),c=r(61),s=r(81),f=n.Function,l=o([].concat),p=o([].join),d={},v=function(t,e,r){if(!u(d,e)){for(var n=[],o=0;o<e;o++)n[o]="a["+o+"]";d[e]=f("C,a","return new C("+p(n,",")+")")}return d[e](t,r)};t.exports=s?f.bind:function(t){var e=i(this),r=e.prototype,n=c(arguments,1),o=function(){var r=l(n,c(arguments));return this instanceof o?v(e,r.length,r):e.apply(t,r)};return a(r)&&(o.prototype=r),o}},function(t,e,r){"use strict";var n=r(13).f,o=r(30),i=r(93),a=r(38),u=r(41),c=r(40),s=r(153),f=r(74),l=r(4),p=r(63).fastKey,d=r(21),v=d.set,h=d.getterFor;t.exports={getConstructor:function(t,e,r,s){var f=t((function(t,n){u(t,d),v(t,{type:e,index:o(null),first:void 0,last:void 0,size:0}),l||(t.size=0),null!=n&&c(n,t[s],{that:t,AS_ENTRIES:r})})),d=f.prototype,y=h(e),g=function(t,e,r){var n,o,i=y(t),a=b(t,e);return a?a.value=r:(i.last=a={index:o=p(e,!0),key:e,value:r,previous:n=i.last,next:void 0,removed:!1},i.first||(i.first=a),n&&(n.next=a),l?i.size++:t.size++,"F"!==o&&(i.index[o]=a)),t},b=function(t,e){var r,n=y(t),o=p(e);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==e)return r};return i(d,{clear:function(){for(var t=y(this),e=t.index,r=t.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete e[r.index],r=r.next;t.first=t.last=void 0,l?t.size=0:this.size=0},delete:function(t){var e=y(this),r=b(this,t);if(r){var n=r.next,o=r.previous;delete e.index[r.index],r.removed=!0,o&&(o.next=n),n&&(n.previous=o),e.first==r&&(e.first=n),e.last==r&&(e.last=o),l?e.size--:this.size--}return!!r},forEach:function(t){for(var e,r=y(this),n=a(t,arguments.length>1?arguments[1]:void 0);e=e?e.next:r.first;)for(n(e.value,e.key,this);e&&e.removed;)e=e.previous},has:function(t){return!!b(this,t)}}),i(d,r?{get:function(t){var e=b(this,t);return e&&e.value},set:function(t,e){return g(this,0===t?0:t,e)}}:{add:function(t){return g(this,t=0===t?0:t,t)}}),l&&n(d,"size",{get:function(){return y(this).size}}),f},setStrong:function(t,e,r){var n=e+" Iterator",o=h(e),i=h(n);s(t,e,(function(t,e){v(this,{type:n,target:t,state:o(t),kind:e,last:void 0})}),(function(){for(var t=i(this),e=t.kind,r=t.last;r&&r.removed;)r=r.previous;return t.target&&(t.last=r=r?r.next:t.state.first)?"keys"==e?{value:r.key,done:!1}:"values"==e?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(t.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),f(e)}}},function(t,e){var r=Math.log;t.exports=Math.log1p||function(t){return(t=+t)>-1e-8&&t<1e-8?t-t*t/2:r(1+t)}},function(t,e){var r=Math.log,n=Math.LOG10E;t.exports=Math.log10||function(t){return r(t)*n}},function(t,e,r){r(0)({target:"Number",stat:!0},{isInteger:r(164)})},function(t,e,r){r(0)({target:"Number",stat:!0},{isNaN:function(t){return t!=t}})},function(t,e,r){var n=r(1),o=r(2),i=r(3),a=r(10),u=r(76).trim,c=r(122),s=i("".charAt),f=n.parseFloat,l=n.Symbol,p=l&&l.iterator,d=1/f(c+"-0")!=-1/0||p&&!o((function(){f(Object(p))}));t.exports=d?function(t){var e=u(a(t)),r=f(e);return 0===r&&"-"==s(e,0)?-0:r}:f},function(t,e,r){var n=r(1),o=r(2),i=r(3),a=r(10),u=r(76).trim,c=r(122),s=n.parseInt,f=n.Symbol,l=f&&f.iterator,p=/^[+-]?0x/i,d=i(p.exec),v=8!==s(c+"08")||22!==s(c+"0x16")||l&&!o((function(){s(Object(l))}));t.exports=v?function(t,e){var r=u(a(t));return s(r,e>>>0||(d(p,r)?16:10))}:s},function(t,e,r){"use strict";var n=r(4),o=r(3),i=r(6),a=r(2),u=r(86),c=r(110),s=r(105),f=r(14),l=r(82),p=Object.assign,d=Object.defineProperty,v=o([].concat);t.exports=!p||a((function(){if(n&&1!==p({b:1},p(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},r=Symbol();return t[r]=7,"abcdefghijklmnopqrst".split("").forEach((function(t){e[t]=t})),7!=p({},t)[r]||"abcdefghijklmnopqrst"!=u(p({},e)).join("")}))?function(t,e){for(var r=f(t),o=arguments.length,a=1,p=c.f,d=s.f;o>a;)for(var h,y=l(arguments[a++]),g=p?v(u(y),p(y)):u(y),b=g.length,m=0;b>m;)h=g[m++],n&&!i(d,y,h)||(r[h]=y[h]);return r}:p},function(t,e,r){var n=r(4),o=r(3),i=r(86),a=r(26),u=o(r(105).f),c=o([].push),s=function(t){return function(e){for(var r,o=a(e),s=i(o),f=s.length,l=0,p=[];f>l;)r=s[l++],n&&!u(o,r)||c(p,t?[r,o[r]]:o[r]);return p}};t.exports={entries:s(!0),values:s(!1)}},function(t,e,r){var n=r(0),o=r(94),i=r(2),a=r(7),u=r(63).onFreeze,c=Object.freeze;n({target:"Object",stat:!0,forced:i((function(){c(1)})),sham:!o},{freeze:function(t){return c&&a(t)?c(u(t)):t}})},function(t,e){t.exports=Object.is||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}},function(t,e,r){var n=r(0),o=r(220).values;n({target:"Object",stat:!0},{values:function(t){return o(t)}})},function(t,e,r){var n=r(42);t.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(n)},function(t,e,r){var n,o,i,a,u,c,s,f,l=r(1),p=r(38),d=r(24).f,v=r(125).set,h=r(224),y=r(401),g=r(402),b=r(62),m=l.MutationObserver||l.WebKitMutationObserver,x=l.document,w=l.process,E=l.Promise,S=d(l,"queueMicrotask"),T=S&&S.value;T||(n=function(){var t,e;for(b&&(t=w.domain)&&t.exit();o;){e=o.fn,o=o.next;try{e()}catch(t){throw o?a():i=void 0,t}}i=void 0,t&&t.enter()},h||b||g||!m||!x?!y&&E&&E.resolve?((s=E.resolve(void 0)).constructor=E,f=p(s.then,s),a=function(){f(n)}):b?a=function(){w.nextTick(n)}:(v=p(v,l),a=function(){v(n)}):(u=!0,c=x.createTextNode(""),new m(n).observe(c,{characterData:!0}),a=function(){c.data=u=!u})),t.exports=T||function(t){var e={fn:t,next:void 0};i&&(i.next=e),o||(o=e,a()),i=e}},function(t,e,r){var n=r(78),o=r(114),i=r(96).CONSTRUCTOR;t.exports=i||!o((function(t){n.all(t).then(void 0,(function(){}))}))},function(t,e,r){var n=r(5),o=r(7),i=r(64);t.exports=function(t,e){if(n(t),o(e)&&e.constructor===t)return e;var r=i.f(t);return(0,r.resolve)(e),r.promise}},function(t,e,r){"use strict";var n=r(0),o=r(18),i=r(78),a=r(2),u=r(15),c=r(9),s=r(75),f=r(227),l=r(16),p=i&&i.prototype;if(n({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){p.finally.call({then:function(){}},(function(){}))}))},{finally:function(t){var e=s(this,u("Promise")),r=c(t);return this.then(r?function(r){return f(e,t()).then((function(){return r}))}:t,r?function(r){return f(e,t()).then((function(){throw r}))}:t)}}),!o&&c(i)){var d=u("Promise").prototype.finally;p.finally!==d&&l(p,"finally",d,{unsafe:!0})}},function(t,e,r){var n=r(11);t.exports=function(t){return void 0!==t&&(n(t,"value")||n(t,"writable"))}},function(t,e,r){var n=r(2),o=r(1).RegExp;t.exports=n((function(){var t=o("(?<a>b)","g");return"b"!==t.exec("b").groups.a||"bc"!=="b".replace(t,"$<a>c")}))},function(t,e,r){"use strict";var n=r(69).PROPER,o=r(16),i=r(5),a=r(10),u=r(2),c=r(98),s=RegExp.prototype.toString,f=u((function(){return"/a/b"!=s.call({source:"a",flags:"b"})})),l=n&&"toString"!=s.name;(f||l)&&o(RegExp.prototype,"toString",(function(){var t=i(this);return"/"+a(t.source)+"/"+a(c(t))}),{unsafe:!0})},function(t,e,r){"use strict";var n=r(6),o=r(130),i=r(5),a=r(29),u=r(10),c=r(19),s=r(43),f=r(131),l=r(100);o("match",(function(t,e,r){return[function(e){var r=c(this),o=null==e?void 0:s(e,t);return o?n(o,e,r):new RegExp(e)[t](u(r))},function(t){var n=i(this),o=u(t),c=r(e,n,o);if(c.done)return c.value;if(!n.global)return l(n,o);var s=n.unicode;n.lastIndex=0;for(var p,d=[],v=0;null!==(p=l(n,o));){var h=u(p[0]);d[v]=h,""===h&&(n.lastIndex=f(o,a(n.lastIndex),s)),v++}return 0===v?null:d}]}))},function(t,e,r){var n=r(42);t.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(n)},function(t,e,r){var n=r(3),o=r(14),i=Math.floor,a=n("".charAt),u=n("".replace),c=n("".slice),s=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,f=/\$([$&'`]|\d{1,2})/g;t.exports=function(t,e,r,n,l,p){var d=r+t.length,v=n.length,h=f;return void 0!==l&&(l=o(l),h=s),u(p,h,(function(o,u){var s;switch(a(u,0)){case"$":return"$";case"&":return t;case"`":return c(e,0,r);case"'":return c(e,d);case"<":s=l[c(u,1,-1)];break;default:var f=+u;if(0===f)return o;if(f>v){var p=i(f/10);return 0===p?o:p<=v?void 0===n[p-1]?a(u,1):n[p-1]+a(u,1):o}s=n[f-1]}return void 0===s?"":s}))}},function(t,e,r){"use strict";var n,o=r(0),i=r(3),a=r(24).f,u=r(29),c=r(10),s=r(168),f=r(19),l=r(169),p=r(18),d=i("".startsWith),v=i("".slice),h=Math.min,y=l("startsWith");o({target:"String",proto:!0,forced:!!(p||y||(n=a(String.prototype,"startsWith"),!n||n.writable))&&!y},{startsWith:function(t){var e=c(f(this));s(t);var r=u(h(arguments.length>1?arguments[1]:void 0,e.length)),n=c(t);return d?d(e,n,r):v(e,r,r+n.length)===n}})},function(t,e,r){"use strict";var n=r(0),o=r(76).trim;n({target:"String",proto:!0,forced:r(171)("trim")},{trim:function(){return o(this)}})},function(t,e,r){"use strict";var n=r(76).end,o=r(171);t.exports=o("trimEnd")?function(){return n(this)}:"".trimEnd},function(t,e,r){"use strict";var n=r(76).start,o=r(171);t.exports=o("trimStart")?function(){return n(this)}:"".trimStart},function(t,e,r){var n=r(1),o=r(464),i=n.RangeError;t.exports=function(t,e){var r=o(t);if(r%e)throw i("Wrong offset");return r}},function(t,e,r){var n=r(38),o=r(6),i=r(158),a=r(14),u=r(17),c=r(112),s=r(91),f=r(151),l=r(12).aTypedArrayConstructor;t.exports=function(t){var e,r,p,d,v,h,y=i(this),g=a(t),b=arguments.length,m=b>1?arguments[1]:void 0,x=void 0!==m,w=s(g);if(w&&!f(w))for(h=(v=c(g,w)).next,g=[];!(d=o(h,v)).done;)g.push(d.value);for(x&&b>2&&(m=n(m,arguments[2])),r=u(g),p=new(l(y))(r),e=0;r>e;e++)p[e]=x?m(g[e],e):g[e];return p}},function(t,e,r){"use strict";var n=r(3),o=r(93),i=r(63).getWeakData,a=r(5),u=r(7),c=r(41),s=r(40),f=r(23),l=r(11),p=r(21),d=p.set,v=p.getterFor,h=f.find,y=f.findIndex,g=n([].splice),b=0,m=function(t){return t.frozen||(t.frozen=new x)},x=function(){this.entries=[]},w=function(t,e){return h(t.entries,(function(t){return t[0]===e}))};x.prototype={get:function(t){var e=w(this,t);if(e)return e[1]},has:function(t){return!!w(this,t)},set:function(t,e){var r=w(this,t);r?r[1]=e:this.entries.push([t,e])},delete:function(t){var e=y(this.entries,(function(e){return e[0]===t}));return~e&&g(this.entries,e,1),!!~e}},t.exports={getConstructor:function(t,e,r,n){var f=t((function(t,o){c(t,p),d(t,{type:e,id:b++,frozen:void 0}),null!=o&&s(o,t[n],{that:t,AS_ENTRIES:r})})),p=f.prototype,h=v(e),y=function(t,e,r){var n=h(t),o=i(a(e),!0);return!0===o?m(n).set(e,r):o[n.id]=r,t};return o(p,{delete:function(t){var e=h(this);if(!u(t))return!1;var r=i(t);return!0===r?m(e).delete(t):r&&l(r,e.id)&&delete r[e.id]},has:function(t){var e=h(this);if(!u(t))return!1;var r=i(t);return!0===r?m(e).has(t):r&&l(r,e.id)}}),o(p,r?{get:function(t){var e=h(this);if(u(t)){var r=i(t);return!0===r?m(e).get(t):r?r[e.id]:void 0}},set:function(t,e){return y(this,t,e)}}:{add:function(t){return y(this,t,!0)}}),f}}},function(t,e){for(var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n={},o=0;o<66;o++)n[r.charAt(o)]=o;t.exports={itoc:r,ctoi:n}},function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(t,e,r){var n=r(106)("span").classList,o=n&&n.constructor&&n.constructor.prototype;t.exports=o===Object.prototype?void 0:o},function(t,e){t.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},function(t,e,r){var n=r(1),o=r(36),i=r(9),a=r(42),u=r(61),c=r(56),s=/MSIE .\./.test(a),f=n.Function,l=function(t){return s?function(e,r){var n=c(arguments.length,1)>2,a=i(e)?e:f(e),s=n?u(arguments,2):void 0;return t(n?function(){o(a,this,s)}:a,r)}:t};t.exports={setTimeout:l(n.setTimeout),setInterval:l(n.setInterval)}},function(t,e,r){r(520)},function(t,e,r){var n=r(2),o=r(8),i=r(18),a=o("iterator");t.exports=!n((function(){var t=new URL("b?a=1&b=2&c=3","http://a"),e=t.searchParams,r="";return t.pathname="c%20d",e.forEach((function(t,n){e.delete("b"),r+=n+t})),i&&!t.toJSON||!e.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==e.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!e[a]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==r||"x"!==new URL("http://x",void 0).host}))},function(t,e,r){"use strict";r(73);var n=r(0),o=r(1),i=r(6),a=r(3),u=r(4),c=r(248),s=r(16),f=r(93),l=r(31),p=r(154),d=r(21),v=r(41),h=r(9),y=r(11),g=r(38),b=r(55),m=r(5),x=r(7),w=r(10),E=r(30),S=r(34),T=r(112),O=r(91),A=r(56),_=r(8),I=r(155),P=_("iterator"),R=d.set,j=d.getterFor("URLSearchParams"),C=d.getterFor("URLSearchParamsIterator"),N=Object.getOwnPropertyDescriptor,k=function(t){if(!u)return o[t];var e=N(o,t);return e&&e.value},M=k("fetch"),L=k("Request"),D=k("Headers"),U=L&&L.prototype,F=D&&D.prototype,B=o.RegExp,G=o.TypeError,V=o.decodeURIComponent,H=o.encodeURIComponent,z=a("".charAt),W=a([].join),Y=a([].push),q=a("".replace),K=a([].shift),$=a([].splice),X=a("".split),J=a("".slice),Q=/\+/g,Z=Array(4),tt=function(t){return Z[t-1]||(Z[t-1]=B("((?:%[\\da-f]{2}){"+t+"})","gi"))},et=function(t){try{return V(t)}catch(e){return t}},rt=function(t){var e=q(t,Q," "),r=4;try{return V(e)}catch(t){for(;r;)e=q(e,tt(r--),et);return e}},nt=/[!'()~]|%20/g,ot={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},it=function(t){return ot[t]},at=function(t){return q(H(t),nt,it)},ut=p((function(t,e){R(this,{type:"URLSearchParamsIterator",iterator:T(j(t).entries),kind:e})}),"Iterator",(function(){var t=C(this),e=t.kind,r=t.iterator.next(),n=r.value;return r.done||(r.value="keys"===e?n.key:"values"===e?n.value:[n.key,n.value]),r}),!0),ct=function(t){this.entries=[],this.url=null,void 0!==t&&(x(t)?this.parseObject(t):this.parseQuery("string"==typeof t?"?"===z(t,0)?J(t,1):t:w(t)))};ct.prototype={type:"URLSearchParams",bindURL:function(t){this.url=t,this.update()},parseObject:function(t){var e,r,n,o,a,u,c,s=O(t);if(s)for(r=(e=T(t,s)).next;!(n=i(r,e)).done;){if(a=(o=T(m(n.value))).next,(u=i(a,o)).done||(c=i(a,o)).done||!i(a,o).done)throw G("Expected sequence with length 2");Y(this.entries,{key:w(u.value),value:w(c.value)})}else for(var f in t)y(t,f)&&Y(this.entries,{key:f,value:w(t[f])})},parseQuery:function(t){if(t)for(var e,r,n=X(t,"&"),o=0;o<n.length;)(e=n[o++]).length&&(r=X(e,"="),Y(this.entries,{key:rt(K(r)),value:rt(W(r,"="))}))},serialize:function(){for(var t,e=this.entries,r=[],n=0;n<e.length;)t=e[n++],Y(r,at(t.key)+"="+at(t.value));return W(r,"&")},update:function(){this.entries.length=0,this.parseQuery(this.url.query)},updateURL:function(){this.url&&this.url.update()}};var st=function(){v(this,ft);var t=arguments.length>0?arguments[0]:void 0;R(this,new ct(t))},ft=st.prototype;if(f(ft,{append:function(t,e){A(arguments.length,2);var r=j(this);Y(r.entries,{key:w(t),value:w(e)}),r.updateURL()},delete:function(t){A(arguments.length,1);for(var e=j(this),r=e.entries,n=w(t),o=0;o<r.length;)r[o].key===n?$(r,o,1):o++;e.updateURL()},get:function(t){A(arguments.length,1);for(var e=j(this).entries,r=w(t),n=0;n<e.length;n++)if(e[n].key===r)return e[n].value;return null},getAll:function(t){A(arguments.length,1);for(var e=j(this).entries,r=w(t),n=[],o=0;o<e.length;o++)e[o].key===r&&Y(n,e[o].value);return n},has:function(t){A(arguments.length,1);for(var e=j(this).entries,r=w(t),n=0;n<e.length;)if(e[n++].key===r)return!0;return!1},set:function(t,e){A(arguments.length,1);for(var r,n=j(this),o=n.entries,i=!1,a=w(t),u=w(e),c=0;c<o.length;c++)(r=o[c]).key===a&&(i?$(o,c--,1):(i=!0,r.value=u));i||Y(o,{key:a,value:u}),n.updateURL()},sort:function(){var t=j(this);I(t.entries,(function(t,e){return t.key>e.key?1:-1})),t.updateURL()},forEach:function(t){for(var e,r=j(this).entries,n=g(t,arguments.length>1?arguments[1]:void 0),o=0;o<r.length;)n((e=r[o++]).value,e.key,this)},keys:function(){return new ut(this,"keys")},values:function(){return new ut(this,"values")},entries:function(){return new ut(this,"entries")}},{enumerable:!0}),s(ft,P,ft.entries,{name:"entries"}),s(ft,"toString",(function(){return j(this).serialize()}),{enumerable:!0}),l(st,"URLSearchParams"),n({global:!0,constructor:!0,forced:!c},{URLSearchParams:st}),!c&&h(D)){var lt=a(F.has),pt=a(F.set),dt=function(t){if(x(t)){var e,r=t.body;if("URLSearchParams"===b(r))return e=t.headers?new D(t.headers):new D,lt(e,"content-type")||pt(e,"content-type","application/x-www-form-urlencoded;charset=UTF-8"),E(t,{body:S(0,w(r)),headers:S(0,e)})}return t};if(h(M)&&n({global:!0,enumerable:!0,noTargetGet:!0,forced:!0},{fetch:function(t){return M(t,arguments.length>1?dt(arguments[1]):{})}}),h(L)){var vt=function(t){return v(this,U),new L(t,arguments.length>1?dt(arguments[1]):{})};U.constructor=vt,vt.prototype=U,n({global:!0,constructor:!0,noTargetGet:!0,forced:!0},{Request:vt})}}t.exports={URLSearchParams:st,getState:j}},function(t,e,r){var n=function(t){"use strict";var e=Object.prototype,r=e.hasOwnProperty,n="function"==typeof Symbol?Symbol:{},o=n.iterator||"@@iterator",i=n.asyncIterator||"@@asyncIterator",a=n.toStringTag||"@@toStringTag";function u(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{u({},"")}catch(t){u=function(t,e,r){return t[e]=r}}function c(t,e,r,n){var o=e&&e.prototype instanceof l?e:l,i=Object.create(o.prototype),a=new S(n||[]);return i._invoke=function(t,e,r){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return O()}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var u=x(a,r);if(u){if(u===f)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var c=s(t,e,r);if("normal"===c.type){if(n=r.done?"completed":"suspendedYield",c.arg===f)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(n="completed",r.method="throw",r.arg=c.arg)}}}(t,r,a),i}function s(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=c;var f={};function l(){}function p(){}function d(){}var v={};u(v,o,(function(){return this}));var h=Object.getPrototypeOf,y=h&&h(h(T([])));y&&y!==e&&r.call(y,o)&&(v=y);var g=d.prototype=l.prototype=Object.create(v);function b(t){["next","throw","return"].forEach((function(e){u(t,e,(function(t){return this._invoke(e,t)}))}))}function m(t,e){var n;this._invoke=function(o,i){function a(){return new e((function(n,a){!function n(o,i,a,u){var c=s(t[o],t,i);if("throw"!==c.type){var f=c.arg,l=f.value;return l&&"object"==typeof l&&r.call(l,"__await")?e.resolve(l.__await).then((function(t){n("next",t,a,u)}),(function(t){n("throw",t,a,u)})):e.resolve(l).then((function(t){f.value=t,a(f)}),(function(t){return n("throw",t,a,u)}))}u(c.arg)}(o,i,n,a)}))}return n=n?n.then(a,a):a()}}function x(t,e){var r=t.iterator[e.method];if(void 0===r){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,x(t,e),"throw"===e.method))return f;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var n=s(r,t.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,f;var o=n.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,f):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,f)}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function S(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function T(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function e(){for(;++n<t.length;)if(r.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:O}}function O(){return{value:void 0,done:!0}}return p.prototype=d,u(g,"constructor",d),u(d,"constructor",p),p.displayName=u(d,a,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,u(t,a,"GeneratorFunction")),t.prototype=Object.create(g),t},t.awrap=function(t){return{__await:t}},b(m.prototype),u(m.prototype,i,(function(){return this})),t.AsyncIterator=m,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new m(c(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},b(g),u(g,a,"Generator"),u(g,o,(function(){return this})),u(g,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function r(){for(;e.length;){var n=e.pop();if(n in t)return r.value=n,r.done=!1,r}return r.done=!0,r}},t.values=T,S.prototype={constructor:S,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(r,n){return a.type="throw",a.arg=t,e.next=r,n&&(e.method="next",e.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),c=r.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,f):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),E(r),f}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;E(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:T(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),f}},t}(t.exports);try{regeneratorRuntime=n}catch(t){"object"==typeof globalThis?globalThis.regeneratorRuntime=n:Function("r","regeneratorRuntime = r")(n)}},function(t,e,r){var n=r(252),o=r(138);t.exports=function(t,e){for(var r=0,i=(e=n(e,t)).length;null!=t&&r<i;)t=t[o(e[r++])];return r&&r==i?t:void 0}},function(t,e,r){var n=r(50),o=r(174),i=r(527),a=r(551);t.exports=function(t,e){return n(t)?t:o(t,e)?[t]:i(a(t))}},function(t,e,r){(function(e){var r="object"==typeof e&&e&&e.Object===Object&&e;t.exports=r}).call(this,r(181))},function(t,e,r){var n=r(103),o=r(177);t.exports=function(t){if(!o(t))return!1;var e=n(t);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(t,e){var r=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return r.call(t)}catch(t){}try{return t+""}catch(t){}}return""}},function(t,e){t.exports=function(t,e){return t===e||t!=t&&e!=e}},function(t,e,r){var n=r(561),o=r(104),i=Object.prototype,a=i.hasOwnProperty,u=i.propertyIsEnumerable,c=n(function(){return arguments}())?n:function(t){return o(t)&&a.call(t,"callee")&&!u.call(t,"callee")};t.exports=c},function(t,e,r){(function(t){var n=r(51),o=r(562),i=e&&!e.nodeType&&e,a=i&&"object"==typeof t&&t&&!t.nodeType&&t,u=a&&a.exports===i?n.Buffer:void 0,c=(u?u.isBuffer:void 0)||o;t.exports=c}).call(this,r(259)(t))},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){var r=/^(?:0|[1-9]\d*)$/;t.exports=function(t,e){var n=typeof t;return!!(e=null==e?9007199254740991:e)&&("number"==n||"symbol"!=n&&r.test(t))&&t>-1&&t%1==0&&t<e}},function(t,e,r){var n=r(563),o=r(564),i=r(565),a=i&&i.isTypedArray,u=a?o(a):n;t.exports=u},function(t,e,r){var n=r(254),o=r(180);t.exports=function(t){return null!=t&&o(t.length)&&!n(t)}},function(t,e,r){var n=r(135),o=r(574),i=r(575),a=r(576),u=r(577),c=r(578);function s(t){var e=this.__data__=new n(t);this.size=e.size}s.prototype.clear=o,s.prototype.delete=i,s.prototype.get=a,s.prototype.has=u,s.prototype.set=c,t.exports=s},function(t,e,r){var n=r(579),o=r(104);t.exports=function t(e,r,i,a,u){return e===r||(null==e||null==r||!o(e)&&!o(r)?e!=e&&r!=r:n(e,r,i,a,t,u))}},function(t,e,r){var n=r(580),o=r(583),i=r(584);t.exports=function(t,e,r,a,u,c){var s=1&r,f=t.length,l=e.length;if(f!=l&&!(s&&l>f))return!1;var p=c.get(t);if(p&&c.get(e))return p==e;var d=-1,v=!0,h=2&r?new n:void 0;for(c.set(t,e),c.set(e,t);++d<f;){var y=t[d],g=e[d];if(a)var b=s?a(g,y,d,e,t,c):a(y,g,d,t,e,c);if(void 0!==b){if(b)continue;v=!1;break}if(h){if(!o(e,(function(t,e){if(!i(h,e)&&(y===t||u(y,t,r,a,c)))return h.push(e)}))){v=!1;break}}else if(y!==g&&!u(y,g,r,a,c)){v=!1;break}}return c.delete(t),c.delete(e),v}},function(t,e,r){var n=r(177);t.exports=function(t){return t==t&&!n(t)}},function(t,e){t.exports=function(t,e){return function(r){return null!=r&&(r[t]===e&&(void 0!==e||t in Object(r)))}}},function(t,e,r){var n=r(554),o=r(555),i=r(571),a=r(610),u=r(50);t.exports=function(t,e,r){var c=u(t)?n:a,s=arguments.length<3;return c(t,i(e,4),r,s,o)}},function(t,e,r){r(270),t.exports=r(611)},function(t,e,r){r(271),r(277),r(278),r(279),r(280),r(281),r(282),r(283),r(284),r(285),r(286),r(287),r(288),r(289),r(290),r(291),r(292),r(293),r(295),r(296),r(113),r(297),r(298),r(299),r(201),r(300),r(301),r(302),r(303),r(304),r(305),r(72),r(307),r(308),r(73),r(309),r(310),r(207),r(311),r(312),r(313),r(314),r(315),r(316),r(317),r(318),r(319),r(320),r(321),r(322),r(324),r(325),r(326),r(328),r(329),r(330),r(331),r(332),r(334),r(335),r(337),r(338),r(339),r(340),r(160),r(341),r(193),r(342),r(343),r(345),r(346),r(347),r(348),r(349),r(350),r(351),r(352),r(354),r(355),r(356),r(357),r(358),r(359),r(360),r(361),r(362),r(363),r(163),r(364),r(365),r(215),r(216),r(367),r(368),r(369),r(370),r(371),r(372),r(373),r(374),r(375),r(376),r(377),r(378),r(379),r(380),r(381),r(221),r(382),r(383),r(384),r(385),r(386),r(387),r(388),r(389),r(390),r(391),r(165),r(392),r(393),r(394),r(395),r(396),r(77),r(223),r(398),r(399),r(124),r(411),r(412),r(228),r(413),r(414),r(415),r(416),r(417),r(418),r(419),r(420),r(421),r(422),r(423),r(424),r(425),r(426),r(427),r(428),r(48),r(429),r(430),r(431),r(231),r(432),r(434),r(435),r(436),r(437),r(79),r(129),r(232),r(438),r(439),r(440),r(441),r(442),r(170),r(443),r(444),r(101),r(235),r(445),r(236),r(446),r(448),r(450),r(451),r(452),r(453),r(454),r(455),r(456),r(457),r(458),r(459),r(460),r(461),r(462),r(463),r(465),r(466),r(467),r(468),r(469),r(470),r(471),r(472),r(473),r(474),r(475),r(476),r(477),r(480),r(481),r(482),r(483),r(484),r(485),r(486),r(487),r(488),r(489),r(490),r(491),r(492),r(493),r(494),r(495),r(496),r(497),r(498),r(499),r(500),r(501),r(502),r(504),r(506),r(507),r(102),r(173),r(508),r(510),r(511),r(512),r(515),r(516),r(517),r(247),r(522),r(523),t.exports=r(190)},function(t,e,r){r(272),r(274),r(275),r(193),r(276)},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(6),a=r(3),u=r(18),c=r(4),s=r(65),f=r(2),l=r(11),p=r(35),d=r(5),v=r(26),h=r(52),y=r(10),g=r(34),b=r(30),m=r(86),x=r(54),w=r(148),E=r(110),S=r(24),T=r(13),O=r(147),A=r(105),_=r(16),I=r(67),P=r(108),R=r(83),j=r(68),C=r(8),N=r(189),k=r(27),M=r(191),L=r(31),D=r(21),U=r(23).forEach,F=P("hidden"),B=D.set,G=D.getterFor("Symbol"),V=Object.prototype,H=o.Symbol,z=H&&H.prototype,W=o.TypeError,Y=o.QObject,q=S.f,K=T.f,$=w.f,X=A.f,J=a([].push),Q=I("symbols"),Z=I("op-symbols"),tt=I("wks"),et=!Y||!Y.prototype||!Y.prototype.findChild,rt=c&&f((function(){return 7!=b(K({},"a",{get:function(){return K(this,"a",{value:7}).a}})).a}))?function(t,e,r){var n=q(V,e);n&&delete V[e],K(t,e,r),n&&t!==V&&K(V,e,n)}:K,nt=function(t,e){var r=Q[t]=b(z);return B(r,{type:"Symbol",tag:t,description:e}),c||(r.description=e),r},ot=function(t,e,r){t===V&&ot(Z,e,r),d(t);var n=h(e);return d(r),l(Q,n)?(r.enumerable?(l(t,F)&&t[F][n]&&(t[F][n]=!1),r=b(r,{enumerable:g(0,!1)})):(l(t,F)||K(t,F,g(1,{})),t[F][n]=!0),rt(t,n,r)):K(t,n,r)},it=function(t,e){d(t);var r=v(e),n=m(r).concat(st(r));return U(n,(function(e){c&&!i(at,r,e)||ot(t,e,r[e])})),t},at=function(t){var e=h(t),r=i(X,this,e);return!(this===V&&l(Q,e)&&!l(Z,e))&&(!(r||!l(this,e)||!l(Q,e)||l(this,F)&&this[F][e])||r)},ut=function(t,e){var r=v(t),n=h(e);if(r!==V||!l(Q,n)||l(Z,n)){var o=q(r,n);return!o||!l(Q,n)||l(r,F)&&r[F][n]||(o.enumerable=!0),o}},ct=function(t){var e=$(v(t)),r=[];return U(e,(function(t){l(Q,t)||l(R,t)||J(r,t)})),r},st=function(t){var e=t===V,r=$(e?Z:v(t)),n=[];return U(r,(function(t){!l(Q,t)||e&&!l(V,t)||J(n,Q[t])})),n};s||(_(z=(H=function(){if(p(z,this))throw W("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,e=j(t),r=function(t){this===V&&i(r,Z,t),l(this,F)&&l(this[F],e)&&(this[F][e]=!1),rt(this,e,g(1,t))};return c&&et&&rt(V,e,{configurable:!0,set:r}),nt(e,t)}).prototype,"toString",(function(){return G(this).tag})),_(H,"withoutSetter",(function(t){return nt(j(t),t)})),A.f=at,T.f=ot,O.f=it,S.f=ut,x.f=w.f=ct,E.f=st,N.f=function(t){return nt(C(t),t)},c&&(K(z,"description",{configurable:!0,get:function(){return G(this).description}}),u||_(V,"propertyIsEnumerable",at,{unsafe:!0}))),n({global:!0,constructor:!0,wrap:!0,forced:!s,sham:!s},{Symbol:H}),U(m(tt),(function(t){k(t)})),n({target:"Symbol",stat:!0,forced:!s},{useSetter:function(){et=!0},useSimple:function(){et=!1}}),n({target:"Object",stat:!0,forced:!s,sham:!c},{create:function(t,e){return void 0===e?b(t):it(b(t),e)},defineProperty:ot,defineProperties:it,getOwnPropertyDescriptor:ut}),n({target:"Object",stat:!0,forced:!s},{getOwnPropertyNames:ct}),M(),L(H,"Symbol"),R[F]=!0},function(t,e,r){var n=r(1),o=r(60),i=r(70),a=r(7),u=r(8)("species"),c=n.Array;t.exports=function(t){var e;return o(t)&&(e=t.constructor,(i(e)&&(e===c||o(e.prototype))||a(e)&&null===(e=e[u]))&&(e=void 0)),void 0===e?c:e}},function(t,e,r){var n=r(0),o=r(15),i=r(11),a=r(10),u=r(67),c=r(192),s=u("string-to-symbol-registry"),f=u("symbol-to-string-registry");n({target:"Symbol",stat:!0,forced:!c},{for:function(t){var e=a(t);if(i(s,e))return s[e];var r=o("Symbol")(e);return s[e]=r,f[r]=e,r}})},function(t,e,r){var n=r(0),o=r(11),i=r(59),a=r(66),u=r(67),c=r(192),s=u("symbol-to-string-registry");n({target:"Symbol",stat:!0,forced:!c},{keyFor:function(t){if(!i(t))throw TypeError(a(t)+" is not a symbol");if(o(s,t))return s[t]}})},function(t,e,r){var n=r(0),o=r(65),i=r(2),a=r(110),u=r(14);n({target:"Object",stat:!0,forced:!o||i((function(){a.f(1)}))},{getOwnPropertySymbols:function(t){var e=a.f;return e?e(u(t)):[]}})},function(t,e,r){"use strict";var n=r(0),o=r(4),i=r(1),a=r(3),u=r(11),c=r(9),s=r(35),f=r(10),l=r(13).f,p=r(109),d=i.Symbol,v=d&&d.prototype;if(o&&c(d)&&(!("description"in v)||void 0!==d().description)){var h={},y=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:f(arguments[0]),e=s(v,this)?new d(t):void 0===t?d():d(t);return""===t&&(h[e]=!0),e};p(y,d),y.prototype=v,v.constructor=y;var g="Symbol(test)"==String(d("test")),b=a(v.toString),m=a(v.valueOf),x=/^Symbol\((.*)\)[^)]+$/,w=a("".replace),E=a("".slice);l(v,"description",{configurable:!0,get:function(){var t=m(this),e=b(t);if(u(h,t))return"";var r=g?E(e,7,-1):w(e,x,"$1");return""===r?void 0:r}}),n({global:!0,constructor:!0,forced:!0},{Symbol:y})}},function(t,e,r){r(27)("asyncIterator")},function(t,e,r){r(27)("hasInstance")},function(t,e,r){r(27)("isConcatSpreadable")},function(t,e,r){r(27)("iterator")},function(t,e,r){r(27)("match")},function(t,e,r){r(27)("matchAll")},function(t,e,r){r(27)("replace")},function(t,e,r){r(27)("search")},function(t,e,r){r(27)("species")},function(t,e,r){r(27)("split")},function(t,e,r){var n=r(27),o=r(191);n("toPrimitive"),o()},function(t,e,r){var n=r(15),o=r(27),i=r(31);o("toStringTag"),i(n("Symbol"),"Symbol")},function(t,e,r){r(27)("unscopables")},function(t,e,r){var n=r(0),o=r(1),i=r(36),a=r(194),u=o.WebAssembly,c=7!==Error("e",{cause:7}).cause,s=function(t,e){var r={};r[t]=a(t,e,c),n({global:!0,constructor:!0,arity:1,forced:c},r)},f=function(t,e){if(u&&u[t]){var r={};r[t]=a("WebAssembly."+t,e,c),n({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},r)}};s("Error",(function(t){return function(e){return i(t,this,arguments)}})),s("EvalError",(function(t){return function(e){return i(t,this,arguments)}})),s("RangeError",(function(t){return function(e){return i(t,this,arguments)}})),s("ReferenceError",(function(t){return function(e){return i(t,this,arguments)}})),s("SyntaxError",(function(t){return function(e){return i(t,this,arguments)}})),s("TypeError",(function(t){return function(e){return i(t,this,arguments)}})),s("URIError",(function(t){return function(e){return i(t,this,arguments)}})),f("CompileError",(function(t){return function(e){return i(t,this,arguments)}})),f("LinkError",(function(t){return function(e){return i(t,this,arguments)}})),f("RuntimeError",(function(t){return function(e){return i(t,this,arguments)}}))},function(t,e,r){var n=r(16),o=r(198),i=Error.prototype;i.toString!==o&&n(i,"toString",o)},function(t,e,r){r(294)},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(35),a=r(37),u=r(39),c=r(109),s=r(30),f=r(25),l=r(34),p=r(111),d=r(197),v=r(40),h=r(89),y=r(8),g=r(149),b=y("toStringTag"),m=o.Error,x=[].push,w=function(t,e){var r,n=arguments.length>2?arguments[2]:void 0,o=i(E,this);u?r=u(new m,o?a(this):E):(r=o?this:s(E),f(r,b,"Error")),void 0!==e&&f(r,"message",h(e)),g&&f(r,"stack",p(r.stack,1)),d(r,n);var c=[];return v(t,x,{that:c}),f(r,"errors",c),r};u?u(w,m):c(w,m,{name:!0});var E=w.prototype=s(m.prototype,{constructor:l(1,w),message:l(1,""),name:l(1,"AggregateError")});n({global:!0,constructor:!0,arity:2},{AggregateError:w})},function(t,e,r){var n=r(0),o=r(15),i=r(36),a=r(2),u=r(194),c=o("AggregateError"),s=!a((function(){return 1!==c([1]).errors[0]}))&&a((function(){return 7!==c([1],"AggregateError",{cause:7}).cause}));n({global:!0,constructor:!0,arity:2,forced:s},{AggregateError:u("AggregateError",(function(t){return function(e,r){return i(t,this,arguments)}}),s,!0)})},function(t,e,r){"use strict";var n=r(0),o=r(14),i=r(17),a=r(22),u=r(46);n({target:"Array",proto:!0},{at:function(t){var e=o(this),r=i(e),n=a(t),u=n>=0?n:r+n;return u<0||u>=r?void 0:e[u]}}),u("at")},function(t,e,r){var n=r(0),o=r(200),i=r(46);n({target:"Array",proto:!0},{copyWithin:o}),i("copyWithin")},function(t,e,r){"use strict";var n=r(0),o=r(23).every;n({target:"Array",proto:!0,forced:!r(47)("every")},{every:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){var n=r(0),o=r(152),i=r(46);n({target:"Array",proto:!0},{fill:o}),i("fill")},function(t,e,r){"use strict";var n=r(0),o=r(23).find,i=r(46),a=!0;"find"in[]&&Array(1).find((function(){a=!1})),n({target:"Array",proto:!0,forced:a},{find:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),i("find")},function(t,e,r){"use strict";var n=r(0),o=r(23).findIndex,i=r(46),a=!0;"findIndex"in[]&&Array(1).findIndex((function(){a=!1})),n({target:"Array",proto:!0,forced:a},{findIndex:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}}),i("findIndex")},function(t,e,r){"use strict";var n=r(0),o=r(202),i=r(14),a=r(17),u=r(22),c=r(88);n({target:"Array",proto:!0},{flat:function(){var t=arguments.length?arguments[0]:void 0,e=i(this),r=a(e),n=c(e,0);return n.length=o(n,e,e,r,0,void 0===t?1:u(t)),n}})},function(t,e,r){"use strict";var n=r(0),o=r(202),i=r(20),a=r(14),u=r(17),c=r(88);n({target:"Array",proto:!0},{flatMap:function(t){var e,r=a(this),n=u(r);return i(t),(e=c(r,0)).length=o(e,r,r,n,0,1,t,arguments.length>1?arguments[1]:void 0),e}})},function(t,e,r){"use strict";var n=r(0),o=r(203);n({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(t,e,r){var n=r(0),o=r(204);n({target:"Array",stat:!0,forced:!r(114)((function(t){Array.from(t)}))},{from:o})},function(t,e,r){var n=r(5),o=r(199);t.exports=function(t,e,r,i){try{return i?e(n(r)[0],r[1]):e(r)}catch(e){o(t,"throw",e)}}},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(84).indexOf,a=r(47),u=o([].indexOf),c=!!u&&1/u([1],1,-0)<0,s=a("indexOf");n({target:"Array",proto:!0,forced:c||!s},{indexOf:function(t){var e=arguments.length>1?arguments[1]:void 0;return c?u(this,t,e)||0:i(this,t,e)}})},function(t,e,r){r(0)({target:"Array",stat:!0},{isArray:r(60)})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(82),a=r(26),u=r(47),c=o([].join),s=i!=Object,f=u("join",",");n({target:"Array",proto:!0,forced:s||!f},{join:function(t){return c(a(this),void 0===t?",":t)}})},function(t,e,r){var n=r(0),o=r(206);n({target:"Array",proto:!0,forced:o!==[].lastIndexOf},{lastIndexOf:o})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(2),a=r(70),u=r(45),c=o.Array;n({target:"Array",stat:!0,forced:i((function(){function t(){}return!(c.of.call(t)instanceof t)}))},{of:function(){for(var t=0,e=arguments.length,r=new(a(this)?this:c)(e);e>t;)u(r,t,arguments[t++]);return r.length=e,r}})},function(t,e,r){"use strict";var n=r(0),o=r(115).left,i=r(47),a=r(53),u=r(62);n({target:"Array",proto:!0,forced:!i("reduce")||!u&&a>79&&a<83},{reduce:function(t){var e=arguments.length;return o(this,t,e,e>1?arguments[1]:void 0)}})},function(t,e,r){"use strict";var n=r(0),o=r(115).right,i=r(47),a=r(53),u=r(62);n({target:"Array",proto:!0,forced:!i("reduceRight")||!u&&a>79&&a<83},{reduceRight:function(t){return o(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(60),a=o([].reverse),u=[1,2];n({target:"Array",proto:!0,forced:String(u)===String(u.reverse())},{reverse:function(){return i(this)&&(this.length=this.length),a(this)}})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(60),a=r(70),u=r(7),c=r(44),s=r(17),f=r(26),l=r(45),p=r(8),d=r(92),v=r(61),h=d("slice"),y=p("species"),g=o.Array,b=Math.max;n({target:"Array",proto:!0,forced:!h},{slice:function(t,e){var r,n,o,p=f(this),d=s(p),h=c(t,d),m=c(void 0===e?d:e,d);if(i(p)&&(r=p.constructor,(a(r)&&(r===g||i(r.prototype))||u(r)&&null===(r=r[y]))&&(r=void 0),r===g||void 0===r))return v(p,h,m);for(n=new(void 0===r?g:r)(b(m-h,0)),o=0;h<m;h++,o++)h in p&&l(n,o,p[h]);return n.length=o,n}})},function(t,e,r){"use strict";var n=r(0),o=r(23).some;n({target:"Array",proto:!0,forced:!r(47)("some")},{some:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(20),a=r(14),u=r(17),c=r(10),s=r(2),f=r(155),l=r(47),p=r(208),d=r(209),v=r(53),h=r(156),y=[],g=o(y.sort),b=o(y.push),m=s((function(){y.sort(void 0)})),x=s((function(){y.sort(null)})),w=l("sort"),E=!s((function(){if(v)return v<70;if(!(p&&p>3)){if(d)return!0;if(h)return h<603;var t,e,r,n,o="";for(t=65;t<76;t++){switch(e=String.fromCharCode(t),t){case 66:case 69:case 70:case 72:r=3;break;case 68:case 71:r=4;break;default:r=2}for(n=0;n<47;n++)y.push({k:e+n,v:r})}for(y.sort((function(t,e){return e.v-t.v})),n=0;n<y.length;n++)e=y[n].k.charAt(0),o.charAt(o.length-1)!==e&&(o+=e);return"DGBEFHACIJK"!==o}}));n({target:"Array",proto:!0,forced:m||!x||!w||!E},{sort:function(t){void 0!==t&&i(t);var e=a(this);if(E)return void 0===t?g(e):g(e,t);var r,n,o=[],s=u(e);for(n=0;n<s;n++)n in e&&b(o,e[n]);for(f(o,function(t){return function(e,r){return void 0===r?-1:void 0===e?1:void 0!==t?+t(e,r)||0:c(e)>c(r)?1:-1}}(t)),r=o.length,n=0;n<r;)e[n]=o[n++];for(;n<s;)delete e[n++];return e}})},function(t,e,r){r(74)("Array")},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(44),a=r(22),u=r(17),c=r(14),s=r(88),f=r(45),l=r(92)("splice"),p=o.TypeError,d=Math.max,v=Math.min;n({target:"Array",proto:!0,forced:!l},{splice:function(t,e){var r,n,o,l,h,y,g=c(this),b=u(g),m=i(t,b),x=arguments.length;if(0===x?r=n=0:1===x?(r=0,n=b-m):(r=x-2,n=v(d(a(e),0),b-m)),b+r-n>9007199254740991)throw p("Maximum allowed length exceeded");for(o=s(g,n),l=0;l<n;l++)(h=m+l)in g&&f(o,l,g[h]);if(o.length=n,r<n){for(l=m;l<b-n;l++)y=l+r,(h=l+n)in g?g[y]=g[h]:delete g[y];for(l=b;l>b-n+r;l--)delete g[l-1]}else if(r>n)for(l=b-n;l>m;l--)y=l+r-1,(h=l+n-1)in g?g[y]=g[h]:delete g[y];for(l=0;l<r;l++)g[l+m]=arguments[l+2];return g.length=b-n+r,o}})},function(t,e,r){r(46)("flat")},function(t,e,r){r(46)("flatMap")},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(116),a=r(74),u=i.ArrayBuffer;n({global:!0,constructor:!0,forced:o.ArrayBuffer!==u},{ArrayBuffer:u}),a("ArrayBuffer")},function(t,e,r){var n=r(1).Array,o=Math.abs,i=Math.pow,a=Math.floor,u=Math.log,c=Math.LN2;t.exports={pack:function(t,e,r){var s,f,l,p=n(r),d=8*r-e-1,v=(1<<d)-1,h=v>>1,y=23===e?i(2,-24)-i(2,-77):0,g=t<0||0===t&&1/t<0?1:0,b=0;for((t=o(t))!=t||t===1/0?(f=t!=t?1:0,s=v):(s=a(u(t)/c),t*(l=i(2,-s))<1&&(s--,l*=2),(t+=s+h>=1?y/l:y*i(2,1-h))*l>=2&&(s++,l/=2),s+h>=v?(f=0,s=v):s+h>=1?(f=(t*l-1)*i(2,e),s+=h):(f=t*i(2,h-1)*i(2,e),s=0));e>=8;)p[b++]=255&f,f/=256,e-=8;for(s=s<<e|f,d+=e;d>0;)p[b++]=255&s,s/=256,d-=8;return p[--b]|=128*g,p},unpack:function(t,e){var r,n=t.length,o=8*n-e-1,a=(1<<o)-1,u=a>>1,c=o-7,s=n-1,f=t[s--],l=127&f;for(f>>=7;c>0;)l=256*l+t[s--],c-=8;for(r=l&(1<<-c)-1,l>>=-c,c+=e;c>0;)r=256*r+t[s--],c-=8;if(0===l)l=1-u;else{if(l===a)return r?NaN:f?-1/0:1/0;r+=i(2,e),l-=u}return(f?-1:1)*r*i(2,l-e)}}},function(t,e,r){var n=r(0),o=r(12);n({target:"ArrayBuffer",stat:!0,forced:!o.NATIVE_ARRAY_BUFFER_VIEWS},{isView:o.isView})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(2),a=r(116),u=r(5),c=r(44),s=r(29),f=r(75),l=a.ArrayBuffer,p=a.DataView,d=p.prototype,v=o(l.prototype.slice),h=o(d.getUint8),y=o(d.setUint8);n({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:i((function(){return!new l(2).slice(1,void 0).byteLength}))},{slice:function(t,e){if(v&&void 0===e)return v(u(this),t);for(var r=u(this).byteLength,n=c(t,r),o=c(void 0===e?r:e,r),i=new(f(this,l))(s(o-n)),a=new p(this),d=new p(i),g=0;n<o;)y(d,g++,h(a,n++));return i}})},function(t,e,r){r(327)},function(t,e,r){var n=r(0),o=r(116);n({global:!0,constructor:!0,forced:!r(157)},{DataView:o.DataView})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(2)((function(){return 120!==new Date(16e11).getYear()})),a=o(Date.prototype.getFullYear);n({target:"Date",proto:!0,forced:i},{getYear:function(){return a(this)-1900}})},function(t,e,r){var n=r(0),o=r(1),i=r(3),a=o.Date,u=i(a.prototype.getTime);n({target:"Date",stat:!0},{now:function(){return u(new a)}})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(22),a=Date.prototype,u=o(a.getTime),c=o(a.setFullYear);n({target:"Date",proto:!0},{setYear:function(t){u(this);var e=i(t);return c(this,0<=e&&e<=99?e+1900:e)}})},function(t,e,r){r(0)({target:"Date",proto:!0},{toGMTString:Date.prototype.toUTCString})},function(t,e,r){var n=r(0),o=r(333);n({target:"Date",proto:!0,forced:Date.prototype.toISOString!==o},{toISOString:o})},function(t,e,r){"use strict";var n=r(1),o=r(3),i=r(2),a=r(159).start,u=n.RangeError,c=Math.abs,s=Date.prototype,f=s.toISOString,l=o(s.getTime),p=o(s.getUTCDate),d=o(s.getUTCFullYear),v=o(s.getUTCHours),h=o(s.getUTCMilliseconds),y=o(s.getUTCMinutes),g=o(s.getUTCMonth),b=o(s.getUTCSeconds);t.exports=i((function(){return"0385-07-25T07:06:39.999Z"!=f.call(new Date(-50000000000001))}))||!i((function(){f.call(new Date(NaN))}))?function(){if(!isFinite(l(this)))throw u("Invalid time value");var t=d(this),e=h(this),r=t<0?"-":t>9999?"+":"";return r+a(c(t),r?6:4,0)+"-"+a(g(this)+1,2,0)+"-"+a(p(this),2,0)+"T"+a(v(this),2,0)+":"+a(y(this),2,0)+":"+a(b(this),2,0)+"."+a(e,3,0)+"Z"}:f},function(t,e,r){"use strict";var n=r(0),o=r(2),i=r(14),a=r(140);n({target:"Date",proto:!0,arity:1,forced:o((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}))},{toJSON:function(t){var e=i(this),r=a(e,"number");return"number"!=typeof r||isFinite(r)?e.toISOString():null}})},function(t,e,r){var n=r(11),o=r(16),i=r(336),a=r(8)("toPrimitive"),u=Date.prototype;n(u,a)||o(u,a,i)},function(t,e,r){"use strict";var n=r(1),o=r(5),i=r(183),a=n.TypeError;t.exports=function(t){if(o(this),"string"===t||"default"===t)t="string";else if("number"!==t)throw a("Incorrect hint");return i(this,t)}},function(t,e,r){var n=r(3),o=r(16),i=Date.prototype,a=n(i.toString),u=n(i.getTime);"Invalid Date"!=String(new Date(NaN))&&o(i,"toString",(function(){var t=u(this);return t==t?a(this):"Invalid Date"}))},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(10),a=o("".charAt),u=o("".charCodeAt),c=o(/./.exec),s=o(1..toString),f=o("".toUpperCase),l=/[\w*+\-./@]/,p=function(t,e){for(var r=s(t,16);r.length<e;)r="0"+r;return r};n({global:!0},{escape:function(t){for(var e,r,n=i(t),o="",s=n.length,d=0;d<s;)e=a(n,d++),c(l,e)?o+=e:o+=(r=u(e,0))<256?"%"+p(r,2):"%u"+f(p(r,4));return o}})},function(t,e,r){var n=r(0),o=r(211);n({target:"Function",proto:!0,forced:Function.bind!==o},{bind:o})},function(t,e,r){"use strict";var n=r(9),o=r(7),i=r(13),a=r(37),u=r(8),c=r(143),s=u("hasInstance"),f=Function.prototype;s in f||i.f(f,s,{value:c((function(t){if(!n(this)||!o(t))return!1;var e=this.prototype;if(!o(e))return t instanceof this;for(;t=a(t);)if(e===t)return!0;return!1}),s)})},function(t,e,r){r(0)({global:!0},{globalThis:r(1)})},function(t,e,r){var n=r(1);r(31)(n.JSON,"JSON",!0)},function(t,e,r){r(344)},function(t,e,r){"use strict";r(118)("Map",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),r(212))},function(t,e,r){var n=r(0),o=r(213),i=Math.acosh,a=Math.log,u=Math.sqrt,c=Math.LN2;n({target:"Math",stat:!0,forced:!i||710!=Math.floor(i(Number.MAX_VALUE))||i(1/0)!=1/0},{acosh:function(t){return(t=+t)<1?NaN:t>94906265.62425156?a(t)+c:o(t-1+u(t-1)*u(t+1))}})},function(t,e,r){var n=r(0),o=Math.asinh,i=Math.log,a=Math.sqrt;n({target:"Math",stat:!0,forced:!(o&&1/o(0)>0)},{asinh:function t(e){return isFinite(e=+e)&&0!=e?e<0?-t(-e):i(e+a(e*e+1)):e}})},function(t,e,r){var n=r(0),o=Math.atanh,i=Math.log;n({target:"Math",stat:!0,forced:!(o&&1/o(-0)<0)},{atanh:function(t){return 0==(t=+t)?t:i((1+t)/(1-t))/2}})},function(t,e,r){var n=r(0),o=r(162),i=Math.abs,a=Math.pow;n({target:"Math",stat:!0},{cbrt:function(t){return o(t=+t)*a(i(t),1/3)}})},function(t,e,r){var n=r(0),o=Math.floor,i=Math.log,a=Math.LOG2E;n({target:"Math",stat:!0},{clz32:function(t){return(t>>>=0)?31-o(i(t+.5)*a):32}})},function(t,e,r){var n=r(0),o=r(120),i=Math.cosh,a=Math.abs,u=Math.E;n({target:"Math",stat:!0,forced:!i||i(710)===1/0},{cosh:function(t){var e=o(a(t)-1)+1;return(e+1/(e*u*u))*(u/2)}})},function(t,e,r){var n=r(0),o=r(120);n({target:"Math",stat:!0,forced:o!=Math.expm1},{expm1:o})},function(t,e,r){r(0)({target:"Math",stat:!0},{fround:r(353)})},function(t,e,r){var n=r(162),o=Math.abs,i=Math.pow,a=i(2,-52),u=i(2,-23),c=i(2,127)*(2-u),s=i(2,-126);t.exports=Math.fround||function(t){var e,r,i=o(t),f=n(t);return i<s?f*(i/s/u+1/a-1/a)*s*u:(r=(e=(1+u/a)*i)-(e-i))>c||r!=r?f*(1/0):f*r}},function(t,e,r){var n=r(0),o=Math.hypot,i=Math.abs,a=Math.sqrt;n({target:"Math",stat:!0,arity:2,forced:!!o&&o(1/0,NaN)!==1/0},{hypot:function(t,e){for(var r,n,o=0,u=0,c=arguments.length,s=0;u<c;)s<(r=i(arguments[u++]))?(o=o*(n=s/r)*n+1,s=r):o+=r>0?(n=r/s)*n:r;return s===1/0?1/0:s*a(o)}})},function(t,e,r){var n=r(0),o=r(2),i=Math.imul;n({target:"Math",stat:!0,forced:o((function(){return-5!=i(4294967295,5)||2!=i.length}))},{imul:function(t,e){var r=+t,n=+e,o=65535&r,i=65535&n;return 0|o*i+((65535&r>>>16)*i+o*(65535&n>>>16)<<16>>>0)}})},function(t,e,r){r(0)({target:"Math",stat:!0},{log10:r(214)})},function(t,e,r){r(0)({target:"Math",stat:!0},{log1p:r(213)})},function(t,e,r){var n=r(0),o=Math.log,i=Math.LN2;n({target:"Math",stat:!0},{log2:function(t){return o(t)/i}})},function(t,e,r){r(0)({target:"Math",stat:!0},{sign:r(162)})},function(t,e,r){var n=r(0),o=r(2),i=r(120),a=Math.abs,u=Math.exp,c=Math.E;n({target:"Math",stat:!0,forced:o((function(){return-2e-17!=Math.sinh(-2e-17)}))},{sinh:function(t){return a(t=+t)<1?(i(t)-i(-t))/2:(u(t-1)-u(-t-1))*(c/2)}})},function(t,e,r){var n=r(0),o=r(120),i=Math.exp;n({target:"Math",stat:!0},{tanh:function(t){var e=o(t=+t),r=o(-t);return e==1/0?1:r==1/0?-1:(e-r)/(i(t)+i(-t))}})},function(t,e,r){r(31)(Math,"Math",!0)},function(t,e,r){var n=r(0),o=Math.ceil,i=Math.floor;n({target:"Math",stat:!0},{trunc:function(t){return(t>0?i:o)(t)}})},function(t,e,r){r(0)({target:"Number",stat:!0},{EPSILON:Math.pow(2,-52)})},function(t,e,r){r(0)({target:"Number",stat:!0},{isFinite:r(366)})},function(t,e,r){var n=r(1).isFinite;t.exports=Number.isFinite||function(t){return"number"==typeof t&&n(t)}},function(t,e,r){var n=r(0),o=r(164),i=Math.abs;n({target:"Number",stat:!0},{isSafeInteger:function(t){return o(t)&&i(t)<=9007199254740991}})},function(t,e,r){r(0)({target:"Number",stat:!0},{MAX_SAFE_INTEGER:9007199254740991})},function(t,e,r){r(0)({target:"Number",stat:!0},{MIN_SAFE_INTEGER:-9007199254740991})},function(t,e,r){var n=r(0),o=r(217);n({target:"Number",stat:!0,forced:Number.parseFloat!=o},{parseFloat:o})},function(t,e,r){var n=r(0),o=r(218);n({target:"Number",stat:!0,forced:Number.parseInt!=o},{parseInt:o})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(3),a=r(22),u=r(121),c=r(117),s=r(214),f=r(2),l=o.RangeError,p=o.String,d=o.isFinite,v=Math.abs,h=Math.floor,y=Math.pow,g=Math.round,b=i(1..toExponential),m=i(c),x=i("".slice),w="-6.9000e-11"===b(-69e-12,4)&&"1.25e+0"===b(1.255,2)&&"1.235e+4"===b(12345,3)&&"3e+1"===b(25,0),E=f((function(){b(1,1/0)}))&&f((function(){b(1,-1/0)})),S=!f((function(){b(1/0,1/0)}))&&!f((function(){b(NaN,1/0)}));n({target:"Number",proto:!0,forced:!w||!E||!S},{toExponential:function(t){var e=u(this);if(void 0===t)return b(e);var r=a(t);if(!d(e))return p(e);if(r<0||r>20)throw l("Incorrect fraction digits");if(w)return b(e,r);var n="",o="",i=0,c="",f="";if(e<0&&(n="-",e=-e),0===e)i=0,o=m("0",r+1);else{var E=s(e);i=h(E);var S=0,T=y(10,i-r);2*e>=(2*(S=g(e/T))+1)*T&&(S+=1),S>=y(10,r+1)&&(S/=10,i+=1),o=p(S)}return 0!==r&&(o=x(o,0,1)+"."+x(o,1)),0===i?(c="+",f="0"):(c=i>0?"+":"-",f=p(v(i))),n+(o+="e"+c+f)}})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(3),a=r(22),u=r(121),c=r(117),s=r(2),f=o.RangeError,l=o.String,p=Math.floor,d=i(c),v=i("".slice),h=i(1..toFixed),y=function(t,e,r){return 0===e?r:e%2==1?y(t,e-1,r*t):y(t*t,e/2,r)},g=function(t,e,r){for(var n=-1,o=r;++n<6;)o+=e*t[n],t[n]=o%1e7,o=p(o/1e7)},b=function(t,e){for(var r=6,n=0;--r>=0;)n+=t[r],t[r]=p(n/e),n=n%e*1e7},m=function(t){for(var e=6,r="";--e>=0;)if(""!==r||0===e||0!==t[e]){var n=l(t[e]);r=""===r?n:r+d("0",7-n.length)+n}return r};n({target:"Number",proto:!0,forced:s((function(){return"0.000"!==h(8e-5,3)||"1"!==h(.9,0)||"1.25"!==h(1.255,2)||"1000000000000000128"!==h(0xde0b6b3a7640080,0)}))||!s((function(){h({})}))},{toFixed:function(t){var e,r,n,o,i=u(this),c=a(t),s=[0,0,0,0,0,0],p="",h="0";if(c<0||c>20)throw f("Incorrect fraction digits");if(i!=i)return"NaN";if(i<=-1e21||i>=1e21)return l(i);if(i<0&&(p="-",i=-i),i>1e-21)if(r=(e=function(t){for(var e=0,r=t;r>=4096;)e+=12,r/=4096;for(;r>=2;)e+=1,r/=2;return e}(i*y(2,69,1))-69)<0?i*y(2,-e,1):i/y(2,e,1),r*=4503599627370496,(e=52-e)>0){for(g(s,0,r),n=c;n>=7;)g(s,1e7,0),n-=7;for(g(s,y(10,n,1),0),n=e-1;n>=23;)b(s,1<<23),n-=23;b(s,1<<n),g(s,1,1),b(s,2),h=m(s)}else g(s,0,r),g(s,1<<-e,0),h=m(s)+d("0",c);return h=c>0?p+((o=h.length)<=c?"0."+d("0",c-o)+h:v(h,0,o-c)+"."+v(h,o-c)):p+h}})},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(2),a=r(121),u=o(1..toPrecision);n({target:"Number",proto:!0,forced:i((function(){return"1"!==u(1,void 0)}))||!i((function(){u({})}))},{toPrecision:function(t){return void 0===t?u(a(this)):u(a(this),t)}})},function(t,e,r){var n=r(0),o=r(219);n({target:"Object",stat:!0,arity:2,forced:Object.assign!==o},{assign:o})},function(t,e,r){r(0)({target:"Object",stat:!0,sham:!r(4)},{create:r(30)})},function(t,e,r){"use strict";var n=r(0),o=r(4),i=r(123),a=r(20),u=r(14),c=r(13);o&&n({target:"Object",proto:!0,forced:i},{__defineGetter__:function(t,e){c.f(u(this),t,{get:a(e),enumerable:!0,configurable:!0})}})},function(t,e,r){var n=r(0),o=r(4),i=r(147).f;n({target:"Object",stat:!0,forced:Object.defineProperties!==i,sham:!o},{defineProperties:i})},function(t,e,r){var n=r(0),o=r(4),i=r(13).f;n({target:"Object",stat:!0,forced:Object.defineProperty!==i,sham:!o},{defineProperty:i})},function(t,e,r){"use strict";var n=r(0),o=r(4),i=r(123),a=r(20),u=r(14),c=r(13);o&&n({target:"Object",proto:!0,forced:i},{__defineSetter__:function(t,e){c.f(u(this),t,{set:a(e),enumerable:!0,configurable:!0})}})},function(t,e,r){var n=r(0),o=r(220).entries;n({target:"Object",stat:!0},{entries:function(t){return o(t)}})},function(t,e,r){var n=r(0),o=r(40),i=r(45);n({target:"Object",stat:!0},{fromEntries:function(t){var e={};return o(t,(function(t,r){i(e,t,r)}),{AS_ENTRIES:!0}),e}})},function(t,e,r){var n=r(0),o=r(2),i=r(26),a=r(24).f,u=r(4),c=o((function(){a(1)}));n({target:"Object",stat:!0,forced:!u||c,sham:!u},{getOwnPropertyDescriptor:function(t,e){return a(i(t),e)}})},function(t,e,r){var n=r(0),o=r(4),i=r(144),a=r(26),u=r(24),c=r(45);n({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(t){for(var e,r,n=a(t),o=u.f,s=i(n),f={},l=0;s.length>l;)void 0!==(r=o(n,e=s[l++]))&&c(f,e,r);return f}})},function(t,e,r){var n=r(0),o=r(2),i=r(148).f;n({target:"Object",stat:!0,forced:o((function(){return!Object.getOwnPropertyNames(1)}))},{getOwnPropertyNames:i})},function(t,e,r){var n=r(0),o=r(2),i=r(14),a=r(37),u=r(150);n({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!u},{getPrototypeOf:function(t){return a(i(t))}})},function(t,e,r){r(0)({target:"Object",stat:!0},{hasOwn:r(11)})},function(t,e,r){r(0)({target:"Object",stat:!0},{is:r(222)})},function(t,e,r){var n=r(0),o=r(119);n({target:"Object",stat:!0,forced:Object.isExtensible!==o},{isExtensible:o})},function(t,e,r){var n=r(0),o=r(2),i=r(7),a=r(28),u=r(161),c=Object.isFrozen;n({target:"Object",stat:!0,forced:o((function(){c(1)}))||u},{isFrozen:function(t){return!i(t)||(!(!u||"ArrayBuffer"!=a(t))||!!c&&c(t))}})},function(t,e,r){var n=r(0),o=r(2),i=r(7),a=r(28),u=r(161),c=Object.isSealed;n({target:"Object",stat:!0,forced:o((function(){c(1)}))||u},{isSealed:function(t){return!i(t)||(!(!u||"ArrayBuffer"!=a(t))||!!c&&c(t))}})},function(t,e,r){"use strict";var n=r(0),o=r(4),i=r(123),a=r(14),u=r(52),c=r(37),s=r(24).f;o&&n({target:"Object",proto:!0,forced:i},{__lookupGetter__:function(t){var e,r=a(this),n=u(t);do{if(e=s(r,n))return e.get}while(r=c(r))}})},function(t,e,r){"use strict";var n=r(0),o=r(4),i=r(123),a=r(14),u=r(52),c=r(37),s=r(24).f;o&&n({target:"Object",proto:!0,forced:i},{__lookupSetter__:function(t){var e,r=a(this),n=u(t);do{if(e=s(r,n))return e.set}while(r=c(r))}})},function(t,e,r){var n=r(0),o=r(7),i=r(63).onFreeze,a=r(94),u=r(2),c=Object.preventExtensions;n({target:"Object",stat:!0,forced:u((function(){c(1)})),sham:!a},{preventExtensions:function(t){return c&&o(t)?c(i(t)):t}})},function(t,e,r){var n=r(0),o=r(7),i=r(63).onFreeze,a=r(94),u=r(2),c=Object.seal;n({target:"Object",stat:!0,forced:u((function(){c(1)})),sham:!a},{seal:function(t){return c&&o(t)?c(i(t)):t}})},function(t,e,r){r(0)({target:"Object",stat:!0},{setPrototypeOf:r(39)})},function(t,e,r){"use strict";var n=r(146),o=r(55);t.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},function(t,e,r){var n=r(0),o=r(217);n({global:!0,forced:parseFloat!=o},{parseFloat:o})},function(t,e,r){var n=r(0),o=r(218);n({global:!0,forced:parseInt!=o},{parseInt:o})},function(t,e,r){"use strict";var n,o,i,a=r(0),u=r(18),c=r(62),s=r(1),f=r(6),l=r(16),p=r(39),d=r(31),v=r(74),h=r(20),y=r(9),g=r(7),b=r(41),m=r(75),x=r(125).set,w=r(225),E=r(403),S=r(95),T=r(404),O=r(21),A=r(78),_=r(96),I=r(64),P=_.CONSTRUCTOR,R=_.REJECTION_EVENT,j=_.SUBCLASSING,C=O.getterFor("Promise"),N=O.set,k=A&&A.prototype,M=A,L=k,D=s.TypeError,U=s.document,F=s.process,B=I.f,G=B,V=!!(U&&U.createEvent&&s.dispatchEvent),H=function(t){var e;return!(!g(t)||!y(e=t.then))&&e},z=function(t,e){var r,n,o,i=e.value,a=1==e.state,u=a?t.ok:t.fail,c=t.resolve,s=t.reject,l=t.domain;try{u?(a||(2===e.rejection&&$(e),e.rejection=1),!0===u?r=i:(l&&l.enter(),r=u(i),l&&(l.exit(),o=!0)),r===t.promise?s(D("Promise-chain cycle")):(n=H(r))?f(n,r,c,s):c(r)):s(i)}catch(t){l&&!o&&l.exit(),s(t)}},W=function(t,e){t.notified||(t.notified=!0,w((function(){for(var r,n=t.reactions;r=n.get();)z(r,t);t.notified=!1,e&&!t.rejection&&q(t)})))},Y=function(t,e,r){var n,o;V?((n=U.createEvent("Event")).promise=e,n.reason=r,n.initEvent(t,!1,!0),s.dispatchEvent(n)):n={promise:e,reason:r},!R&&(o=s["on"+t])?o(n):"unhandledrejection"===t&&E("Unhandled promise rejection",r)},q=function(t){f(x,s,(function(){var e,r=t.facade,n=t.value;if(K(t)&&(e=S((function(){c?F.emit("unhandledRejection",n,r):Y("unhandledrejection",r,n)})),t.rejection=c||K(t)?2:1,e.error))throw e.value}))},K=function(t){return 1!==t.rejection&&!t.parent},$=function(t){f(x,s,(function(){var e=t.facade;c?F.emit("rejectionHandled",e):Y("rejectionhandled",e,t.value)}))},X=function(t,e,r){return function(n){t(e,n,r)}},J=function(t,e,r){t.done||(t.done=!0,r&&(t=r),t.value=e,t.state=2,W(t,!0))},Q=function(t,e,r){if(!t.done){t.done=!0,r&&(t=r);try{if(t.facade===e)throw D("Promise can't be resolved itself");var n=H(e);n?w((function(){var r={done:!1};try{f(n,e,X(Q,r,t),X(J,r,t))}catch(e){J(r,e,t)}})):(t.value=e,t.state=1,W(t,!1))}catch(e){J({done:!1},e,t)}}};if(P&&(L=(M=function(t){b(this,L),h(t),f(n,this);var e=C(this);try{t(X(Q,e),X(J,e))}catch(t){J(e,t)}}).prototype,(n=function(t){N(this,{type:"Promise",done:!1,notified:!1,parent:!1,reactions:new T,rejection:!1,state:0,value:void 0})}).prototype=l(L,"then",(function(t,e){var r=C(this),n=B(m(this,M));return r.parent=!0,n.ok=!y(t)||t,n.fail=y(e)&&e,n.domain=c?F.domain:void 0,0==r.state?r.reactions.add(n):w((function(){z(n,r)})),n.promise})),o=function(){var t=new n,e=C(t);this.promise=t,this.resolve=X(Q,e),this.reject=X(J,e)},I.f=B=function(t){return t===M||void 0===t?new o(t):G(t)},!u&&y(A)&&k!==Object.prototype)){i=k.then,j||l(k,"then",(function(t,e){var r=this;return new M((function(t,e){f(i,r,t,e)})).then(t,e)}),{unsafe:!0});try{delete k.constructor}catch(t){}p&&p(k,L)}a({global:!0,constructor:!0,wrap:!0,forced:P},{Promise:M}),d(M,"Promise",!1,!0),v("Promise")},function(t,e,r){var n=r(42),o=r(1);t.exports=/ipad|iphone|ipod/i.test(n)&&void 0!==o.Pebble},function(t,e,r){var n=r(42);t.exports=/web0s(?!.*chrome)/i.test(n)},function(t,e,r){var n=r(1);t.exports=function(t,e){var r=n.console;r&&r.error&&(1==arguments.length?r.error(t):r.error(t,e))}},function(t,e){var r=function(){this.head=null,this.tail=null};r.prototype={add:function(t){var e={item:t,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var t=this.head;if(t)return this.head=t.next,this.tail===t&&(this.tail=null),t.item}},t.exports=r},function(t,e){t.exports="object"==typeof window&&"object"!=typeof Deno},function(t,e,r){"use strict";var n=r(0),o=r(6),i=r(20),a=r(64),u=r(95),c=r(40);n({target:"Promise",stat:!0,forced:r(226)},{all:function(t){var e=this,r=a.f(e),n=r.resolve,s=r.reject,f=u((function(){var r=i(e.resolve),a=[],u=0,f=1;c(t,(function(t){var i=u++,c=!1;f++,o(r,e,t).then((function(t){c||(c=!0,a[i]=t,--f||n(a))}),s)})),--f||n(a)}));return f.error&&s(f.value),r.promise}})},function(t,e,r){"use strict";var n=r(0),o=r(18),i=r(96).CONSTRUCTOR,a=r(78),u=r(15),c=r(9),s=r(16),f=a&&a.prototype;if(n({target:"Promise",proto:!0,forced:i,real:!0},{catch:function(t){return this.then(void 0,t)}}),!o&&c(a)){var l=u("Promise").prototype.catch;f.catch!==l&&s(f,"catch",l,{unsafe:!0})}},function(t,e,r){"use strict";var n=r(0),o=r(6),i=r(20),a=r(64),u=r(95),c=r(40);n({target:"Promise",stat:!0,forced:r(226)},{race:function(t){var e=this,r=a.f(e),n=r.reject,s=u((function(){var a=i(e.resolve);c(t,(function(t){o(a,e,t).then(r.resolve,n)}))}));return s.error&&n(s.value),r.promise}})},function(t,e,r){"use strict";var n=r(0),o=r(6),i=r(64);n({target:"Promise",stat:!0,forced:r(96).CONSTRUCTOR},{reject:function(t){var e=i.f(this);return o(e.reject,void 0,t),e.promise}})},function(t,e,r){"use strict";var n=r(0),o=r(15),i=r(18),a=r(78),u=r(96).CONSTRUCTOR,c=r(227),s=o("Promise"),f=i&&!u;n({target:"Promise",stat:!0,forced:i||u},{resolve:function(t){return c(f&&this===s?a:this,t)}})},function(t,e,r){"use strict";var n=r(0),o=r(6),i=r(20),a=r(64),u=r(95),c=r(40);n({target:"Promise",stat:!0},{allSettled:function(t){var e=this,r=a.f(e),n=r.resolve,s=r.reject,f=u((function(){var r=i(e.resolve),a=[],u=0,s=1;c(t,(function(t){var i=u++,c=!1;s++,o(r,e,t).then((function(t){c||(c=!0,a[i]={status:"fulfilled",value:t},--s||n(a))}),(function(t){c||(c=!0,a[i]={status:"rejected",reason:t},--s||n(a))}))})),--s||n(a)}));return f.error&&s(f.value),r.promise}})},function(t,e,r){"use strict";var n=r(0),o=r(6),i=r(20),a=r(15),u=r(64),c=r(95),s=r(40);n({target:"Promise",stat:!0},{any:function(t){var e=this,r=a("AggregateError"),n=u.f(e),f=n.resolve,l=n.reject,p=c((function(){var n=i(e.resolve),a=[],u=0,c=1,p=!1;s(t,(function(t){var i=u++,s=!1;c++,o(n,e,t).then((function(t){s||p||(p=!0,f(t))}),(function(t){s||p||(s=!0,a[i]=t,--c||l(new r(a,"No one promise resolved")))}))})),--c||l(new r(a,"No one promise resolved"))}));return p.error&&l(p.value),n.promise}})},function(t,e,r){var n=r(0),o=r(36),i=r(20),a=r(5);n({target:"Reflect",stat:!0,forced:!r(2)((function(){Reflect.apply((function(){}))}))},{apply:function(t,e,r){return o(i(t),e,a(r))}})},function(t,e,r){var n=r(0),o=r(15),i=r(36),a=r(211),u=r(158),c=r(5),s=r(7),f=r(30),l=r(2),p=o("Reflect","construct"),d=Object.prototype,v=[].push,h=l((function(){function t(){}return!(p((function(){}),[],t)instanceof t)})),y=!l((function(){p((function(){}))})),g=h||y;n({target:"Reflect",stat:!0,forced:g,sham:g},{construct:function(t,e){u(t),c(e);var r=arguments.length<3?t:u(arguments[2]);if(y&&!h)return p(t,e,r);if(t==r){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var n=[null];return i(v,n,e),new(i(a,t,n))}var o=r.prototype,l=f(s(o)?o:d),g=i(t,l,e);return s(g)?g:l}})},function(t,e,r){var n=r(0),o=r(4),i=r(5),a=r(52),u=r(13);n({target:"Reflect",stat:!0,forced:r(2)((function(){Reflect.defineProperty(u.f({},1,{value:1}),1,{value:2})})),sham:!o},{defineProperty:function(t,e,r){i(t);var n=a(e);i(r);try{return u.f(t,n,r),!0}catch(t){return!1}}})},function(t,e,r){var n=r(0),o=r(5),i=r(24).f;n({target:"Reflect",stat:!0},{deleteProperty:function(t,e){var r=i(o(t),e);return!(r&&!r.configurable)&&delete t[e]}})},function(t,e,r){var n=r(0),o=r(6),i=r(7),a=r(5),u=r(229),c=r(24),s=r(37);n({target:"Reflect",stat:!0},{get:function t(e,r){var n,f,l=arguments.length<3?e:arguments[2];return a(e)===l?e[r]:(n=c.f(e,r))?u(n)?n.value:void 0===n.get?void 0:o(n.get,l):i(f=s(e))?t(f,r,l):void 0}})},function(t,e,r){var n=r(0),o=r(4),i=r(5),a=r(24);n({target:"Reflect",stat:!0,sham:!o},{getOwnPropertyDescriptor:function(t,e){return a.f(i(t),e)}})},function(t,e,r){var n=r(0),o=r(5),i=r(37);n({target:"Reflect",stat:!0,sham:!r(150)},{getPrototypeOf:function(t){return i(o(t))}})},function(t,e,r){r(0)({target:"Reflect",stat:!0},{has:function(t,e){return e in t}})},function(t,e,r){var n=r(0),o=r(5),i=r(119);n({target:"Reflect",stat:!0},{isExtensible:function(t){return o(t),i(t)}})},function(t,e,r){r(0)({target:"Reflect",stat:!0},{ownKeys:r(144)})},function(t,e,r){var n=r(0),o=r(15),i=r(5);n({target:"Reflect",stat:!0,sham:!r(94)},{preventExtensions:function(t){i(t);try{var e=o("Object","preventExtensions");return e&&e(t),!0}catch(t){return!1}}})},function(t,e,r){var n=r(0),o=r(6),i=r(5),a=r(7),u=r(229),c=r(2),s=r(13),f=r(24),l=r(37),p=r(34);n({target:"Reflect",stat:!0,forced:c((function(){var t=function(){},e=s.f(new t,"a",{configurable:!0});return!1!==Reflect.set(t.prototype,"a",1,e)}))},{set:function t(e,r,n){var c,d,v,h=arguments.length<4?e:arguments[3],y=f.f(i(e),r);if(!y){if(a(d=l(e)))return t(d,r,n,h);y=p(0)}if(u(y)){if(!1===y.writable||!a(h))return!1;if(c=f.f(h,r)){if(c.get||c.set||!1===c.writable)return!1;c.value=n,s.f(h,r,c)}else s.f(h,r,p(0,n))}else{if(void 0===(v=y.set))return!1;o(v,h,n)}return!0}})},function(t,e,r){var n=r(0),o=r(5),i=r(195),a=r(39);a&&n({target:"Reflect",stat:!0},{setPrototypeOf:function(t,e){o(t),i(e);try{return a(t,e),!0}catch(t){return!1}}})},function(t,e,r){var n=r(0),o=r(1),i=r(31);n({global:!0},{Reflect:{}}),i(o.Reflect,"Reflect",!0)},function(t,e,r){var n=r(4),o=r(1),i=r(3),a=r(85),u=r(71),c=r(25),s=r(54).f,f=r(35),l=r(97),p=r(10),d=r(98),v=r(126),h=r(196),y=r(16),g=r(2),b=r(11),m=r(21).enforce,x=r(74),w=r(8),E=r(167),S=r(230),T=w("match"),O=o.RegExp,A=O.prototype,_=o.SyntaxError,I=i(A.exec),P=i("".charAt),R=i("".replace),j=i("".indexOf),C=i("".slice),N=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,k=/a/g,M=/a/g,L=new O(k)!==k,D=v.MISSED_STICKY,U=v.UNSUPPORTED_Y,F=n&&(!L||D||E||S||g((function(){return M[T]=!1,O(k)!=k||O(M)==M||"/a/i"!=O(k,"i")})));if(a("RegExp",F)){for(var B=function(t,e){var r,n,o,i,a,s,v=f(A,this),h=l(t),y=void 0===e,g=[],x=t;if(!v&&h&&y&&t.constructor===B)return t;if((h||f(A,t))&&(t=t.source,y&&(e=d(x))),t=void 0===t?"":p(t),e=void 0===e?"":p(e),x=t,E&&"dotAll"in k&&(n=!!e&&j(e,"s")>-1)&&(e=R(e,/s/g,"")),r=e,D&&"sticky"in k&&(o=!!e&&j(e,"y")>-1)&&U&&(e=R(e,/y/g,"")),S&&(t=(i=function(t){for(var e,r=t.length,n=0,o="",i=[],a={},u=!1,c=!1,s=0,f="";n<=r;n++){if("\\"===(e=P(t,n)))e+=P(t,++n);else if("]"===e)u=!1;else if(!u)switch(!0){case"["===e:u=!0;break;case"("===e:I(N,C(t,n+1))&&(n+=2,c=!0),o+=e,s++;continue;case">"===e&&c:if(""===f||b(a,f))throw new _("Invalid capture group name");a[f]=!0,i[i.length]=[f,s],c=!1,f="";continue}c?f+=e:o+=e}return[o,i]}(t))[0],g=i[1]),a=u(O(t,e),v?this:A,B),(n||o||g.length)&&(s=m(a),n&&(s.dotAll=!0,s.raw=B(function(t){for(var e,r=t.length,n=0,o="",i=!1;n<=r;n++)"\\"!==(e=P(t,n))?i||"."!==e?("["===e?i=!0:"]"===e&&(i=!1),o+=e):o+="[\\s\\S]":o+=e+P(t,++n);return o}(t),r)),o&&(s.sticky=!0),g.length&&(s.groups=g)),t!==x)try{c(a,"source",""===x?"(?:)":x)}catch(t){}return a},G=s(O),V=0;G.length>V;)h(B,O,G[V++]);A.constructor=B,B.prototype=A,y(o,"RegExp",B,{constructor:!0})}x("RegExp")},function(t,e,r){var n=r(1),o=r(4),i=r(167),a=r(28),u=r(99),c=r(21).get,s=RegExp.prototype,f=n.TypeError;o&&i&&u(s,"dotAll",{configurable:!0,get:function(){if(this!==s){if("RegExp"===a(this))return!!c(this).dotAll;throw f("Incompatible receiver, RegExp required")}}})},function(t,e,r){var n=r(4),o=r(99),i=r(166),a=r(2),u=RegExp.prototype;n&&a((function(){return"sy"!==Object.getOwnPropertyDescriptor(u,"flags").get.call({dotAll:!0,sticky:!0})}))&&o(u,"flags",{configurable:!0,get:i})},function(t,e,r){var n=r(1),o=r(4),i=r(126).MISSED_STICKY,a=r(28),u=r(99),c=r(21).get,s=RegExp.prototype,f=n.TypeError;o&&i&&u(s,"sticky",{configurable:!0,get:function(){if(this!==s){if("RegExp"===a(this))return!!c(this).sticky;throw f("Incompatible receiver, RegExp required")}}})},function(t,e,r){"use strict";r(48);var n,o,i=r(0),a=r(1),u=r(6),c=r(3),s=r(9),f=r(7),l=(n=!1,(o=/[ac]/).exec=function(){return n=!0,/./.exec.apply(this,arguments)},!0===o.test("abc")&&n),p=a.Error,d=c(/./.test);i({target:"RegExp",proto:!0,forced:!l},{test:function(t){var e=this.exec;if(!s(e))return d(this,t);var r=u(e,this,t);if(null!==r&&!f(r))throw new p("RegExp exec method returned something other than an Object or null");return!!r}})},function(t,e,r){r(433)},function(t,e,r){"use strict";r(118)("Set",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),r(212))},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(19),a=r(22),u=r(10),c=r(2),s=o("".charAt);n({target:"String",proto:!0,forced:c((function(){return"\ud842"!=="]]>𠮷<![CDATA[".at(-2)}))},{at:function(t){var e=u(i(this)),r=e.length,n=a(t),o=n>=0?n:r+n;return o<0||o>=r?void 0:s(e,o)}})},function(t,e,r){"use strict";var n=r(0),o=r(128).codeAt;n({target:"String",proto:!0},{codePointAt:function(t){return o(this,t)}})},function(t,e,r){"use strict";var n,o=r(0),i=r(3),a=r(24).f,u=r(29),c=r(10),s=r(168),f=r(19),l=r(169),p=r(18),d=i("".endsWith),v=i("".slice),h=Math.min,y=l("endsWith");o({target:"String",proto:!0,forced:!!(p||y||(n=a(String.prototype,"endsWith"),!n||n.writable))&&!y},{endsWith:function(t){var e=c(f(this));s(t);var r=arguments.length>1?arguments[1]:void 0,n=e.length,o=void 0===r?n:h(u(r),n),i=c(t);return d?d(e,i,o):v(e,o-i.length,o)===i}})},function(t,e,r){var n=r(0),o=r(1),i=r(3),a=r(44),u=o.RangeError,c=String.fromCharCode,s=String.fromCodePoint,f=i([].join);n({target:"String",stat:!0,arity:1,forced:!!s&&1!=s.length},{fromCodePoint:function(t){for(var e,r=[],n=arguments.length,o=0;n>o;){if(e=+arguments[o++],a(e,1114111)!==e)throw u(e+" is not a valid code point");r[o]=e<65536?c(e):c(55296+((e-=65536)>>10),e%1024+56320)}return f(r,"")}})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(6),a=r(3),u=r(154),c=r(19),s=r(29),f=r(10),l=r(5),p=r(28),d=r(97),v=r(98),h=r(43),y=r(16),g=r(2),b=r(8),m=r(75),x=r(131),w=r(100),E=r(21),S=r(18),T=b("matchAll"),O=E.set,A=E.getterFor("RegExp String Iterator"),_=RegExp.prototype,I=o.TypeError,P=a("".indexOf),R=a("".matchAll),j=!!R&&!g((function(){R("a",/./)})),C=u((function(t,e,r,n){O(this,{type:"RegExp String Iterator",regexp:t,string:e,global:r,unicode:n,done:!1})}),"RegExp String",(function(){var t=A(this);if(t.done)return{value:void 0,done:!0};var e=t.regexp,r=t.string,n=w(e,r);return null===n?{value:void 0,done:t.done=!0}:t.global?(""===f(n[0])&&(e.lastIndex=x(r,s(e.lastIndex),t.unicode)),{value:n,done:!1}):(t.done=!0,{value:n,done:!1})})),N=function(t){var e,r,n,o=l(this),i=f(t),a=m(o,RegExp),u=f(v(o));return e=new a(a===RegExp?o.source:o,u),r=!!~P(u,"g"),n=!!~P(u,"u"),e.lastIndex=s(o.lastIndex),new C(e,i,r,n)};n({target:"String",proto:!0,forced:j},{matchAll:function(t){var e,r,n,o,a=c(this);if(null!=t){if(d(t)&&(e=f(c(v(t))),!~P(e,"g")))throw I("`.matchAll` does not allow non-global regexes");if(j)return R(a,t);if(void 0===(n=h(t,T))&&S&&"RegExp"==p(t)&&(n=N),n)return i(n,t,a)}else if(j)return R(a,t);return r=f(a),o=new RegExp(t,"g"),S?i(N,o,r):o[T](r)}}),S||T in _||y(_,T,N)},function(t,e,r){"use strict";var n=r(0),o=r(159).end;n({target:"String",proto:!0,forced:r(233)},{padEnd:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){"use strict";var n=r(0),o=r(159).start;n({target:"String",proto:!0,forced:r(233)},{padStart:function(t){return o(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,r){var n=r(0),o=r(3),i=r(26),a=r(14),u=r(10),c=r(17),s=o([].push),f=o([].join);n({target:"String",stat:!0},{raw:function(t){for(var e=i(a(t).raw),r=c(e),n=arguments.length,o=[],l=0;r>l;){if(s(o,u(e[l++])),l===r)return f(o,"");l<n&&s(o,u(arguments[l]))}}})},function(t,e,r){r(0)({target:"String",proto:!0},{repeat:r(117)})},function(t,e,r){"use strict";var n=r(0),o=r(1),i=r(6),a=r(3),u=r(19),c=r(9),s=r(97),f=r(10),l=r(43),p=r(98),d=r(234),v=r(8),h=r(18),y=v("replace"),g=o.TypeError,b=a("".indexOf),m=a("".replace),x=a("".slice),w=Math.max,E=function(t,e,r){return r>t.length?-1:""===e?r:b(t,e,r)};n({target:"String",proto:!0},{replaceAll:function(t,e){var r,n,o,a,v,S,T,O,A,_=u(this),I=0,P=0,R="";if(null!=t){if((r=s(t))&&(n=f(u(p(t))),!~b(n,"g")))throw g("`.replaceAll` does not allow non-global regexes");if(o=l(t,y))return i(o,t,_,e);if(h&&r)return m(f(_),t,e)}for(a=f(_),v=f(t),(S=c(e))||(e=f(e)),T=v.length,O=w(1,T),I=E(a,v,0);-1!==I;)A=S?f(e(v,I,a)):d(v,a,I,[],void 0,e),R+=x(a,P,I)+A,P=I+T,I=E(a,v,I+O);return P<a.length&&(R+=x(a,P)),R}})},function(t,e,r){"use strict";var n=r(6),o=r(130),i=r(5),a=r(19),u=r(222),c=r(10),s=r(43),f=r(100);o("search",(function(t,e,r){return[function(e){var r=a(this),o=null==e?void 0:s(e,t);return o?n(o,e,r):new RegExp(e)[t](c(r))},function(t){var n=i(this),o=c(t),a=r(e,n,o);if(a.done)return a.value;var s=n.lastIndex;u(s,0)||(n.lastIndex=0);var l=f(n,o);return u(n.lastIndex,s)||(n.lastIndex=s),null===l?-1:l.index}]}))},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(19),a=r(22),u=r(10),c=o("".slice),s=Math.max,f=Math.min;n({target:"String",proto:!0,forced:!"".substr||"b"!=="ab".substr(-1)},{substr:function(t,e){var r,n,o=u(i(this)),l=o.length,p=a(t);return p===1/0&&(p=0),p<0&&(p=s(l+p,0)),(r=void 0===e?l:a(e))<=0||r===1/0||p>=(n=f(p+r,l))?"":c(o,p,n)}})},function(t,e,r){r(447);var n=r(0),o=r(237);n({target:"String",proto:!0,name:"trimEnd",forced:"".trimEnd!==o},{trimEnd:o})},function(t,e,r){var n=r(0),o=r(237);n({target:"String",proto:!0,name:"trimEnd",forced:"".trimRight!==o},{trimRight:o})},function(t,e,r){r(449);var n=r(0),o=r(238);n({target:"String",proto:!0,name:"trimStart",forced:"".trimStart!==o},{trimStart:o})},function(t,e,r){var n=r(0),o=r(238);n({target:"String",proto:!0,name:"trimStart",forced:"".trimLeft!==o},{trimLeft:o})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("anchor")},{anchor:function(t){return o(this,"a","name",t)}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("big")},{big:function(){return o(this,"big","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("blink")},{blink:function(){return o(this,"blink","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("bold")},{bold:function(){return o(this,"b","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("fixed")},{fixed:function(){return o(this,"tt","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("fontcolor")},{fontcolor:function(t){return o(this,"font","color",t)}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("fontsize")},{fontsize:function(t){return o(this,"font","size",t)}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("italics")},{italics:function(){return o(this,"i","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("link")},{link:function(t){return o(this,"a","href",t)}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("small")},{small:function(){return o(this,"small","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("strike")},{strike:function(){return o(this,"strike","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("sub")},{sub:function(){return o(this,"sub","","")}})},function(t,e,r){"use strict";var n=r(0),o=r(32);n({target:"String",proto:!0,forced:r(33)("sup")},{sup:function(){return o(this,"sup","","")}})},function(t,e,r){r(49)("Float32",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){var n=r(1),o=r(22),i=n.RangeError;t.exports=function(t){var e=o(t);if(e<0)throw i("The argument can't be less than 0");return e}},function(t,e,r){r(49)("Float64",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(49)("Int8",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(49)("Int16",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(49)("Int32",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(49)("Uint8",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(49)("Uint8",(function(t){return function(e,r,n){return t(this,e,r,n)}}),!0)},function(t,e,r){r(49)("Uint16",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){r(49)("Uint32",(function(t){return function(e,r,n){return t(this,e,r,n)}}))},function(t,e,r){"use strict";var n=r(12),o=r(17),i=r(22),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("at",(function(t){var e=a(this),r=o(e),n=i(t),u=n>=0?n:r+n;return u<0||u>=r?void 0:e[u]}))},function(t,e,r){"use strict";var n=r(3),o=r(12),i=n(r(200)),a=o.aTypedArray;(0,o.exportTypedArrayMethod)("copyWithin",(function(t,e){return i(a(this),t,e,arguments.length>2?arguments[2]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(23).every,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("every",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(6),i=r(152),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("fill",(function(t){var e=arguments.length;return o(i,a(this),t,e>1?arguments[1]:void 0,e>2?arguments[2]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(23).filter,i=r(478),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("filter",(function(t){var e=o(a(this),t,arguments.length>1?arguments[1]:void 0);return i(this,e)}))},function(t,e,r){var n=r(479),o=r(132);t.exports=function(t,e){return n(o(t),e)}},function(t,e,r){var n=r(17);t.exports=function(t,e){for(var r=0,o=n(e),i=new t(o);o>r;)i[r]=e[r++];return i}},function(t,e,r){"use strict";var n=r(12),o=r(23).find,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("find",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(23).findIndex,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("findIndex",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(23).forEach,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("forEach",(function(t){o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(172);(0,r(12).exportTypedArrayStaticMethod)("from",r(240),n)},function(t,e,r){"use strict";var n=r(12),o=r(84).includes,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("includes",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(84).indexOf,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("indexOf",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(1),o=r(2),i=r(3),a=r(12),u=r(73),c=r(8)("iterator"),s=n.Uint8Array,f=i(u.values),l=i(u.keys),p=i(u.entries),d=a.aTypedArray,v=a.exportTypedArrayMethod,h=s&&s.prototype,y=!o((function(){h[c].call([1])})),g=!!h&&h.values&&h[c]===h.values&&"values"===h.values.name,b=function(){return f(d(this))};v("entries",(function(){return p(d(this))}),y),v("keys",(function(){return l(d(this))}),y),v("values",b,y||!g,{name:"values"}),v(c,b,y||!g,{name:"values"})},function(t,e,r){"use strict";var n=r(12),o=r(3),i=n.aTypedArray,a=n.exportTypedArrayMethod,u=o([].join);a("join",(function(t){return u(i(this),t)}))},function(t,e,r){"use strict";var n=r(12),o=r(36),i=r(206),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("lastIndexOf",(function(t){var e=arguments.length;return o(i,a(this),e>1?[t,arguments[1]]:[t])}))},function(t,e,r){"use strict";var n=r(12),o=r(23).map,i=r(132),a=n.aTypedArray;(0,n.exportTypedArrayMethod)("map",(function(t){return o(a(this),t,arguments.length>1?arguments[1]:void 0,(function(t,e){return new(i(t))(e)}))}))},function(t,e,r){"use strict";var n=r(12),o=r(172),i=n.aTypedArrayConstructor;(0,n.exportTypedArrayStaticMethod)("of",(function(){for(var t=0,e=arguments.length,r=new(i(this))(e);e>t;)r[t]=arguments[t++];return r}),o)},function(t,e,r){"use strict";var n=r(12),o=r(115).left,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduce",(function(t){var e=arguments.length;return o(i(this),t,e,e>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=r(115).right,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("reduceRight",(function(t){var e=arguments.length;return o(i(this),t,e,e>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(12),o=n.aTypedArray,i=n.exportTypedArrayMethod,a=Math.floor;i("reverse",(function(){for(var t,e=o(this).length,r=a(e/2),n=0;n<r;)t=this[n],this[n++]=this[--e],this[e]=t;return this}))},function(t,e,r){"use strict";var n=r(1),o=r(6),i=r(12),a=r(17),u=r(239),c=r(14),s=r(2),f=n.RangeError,l=n.Int8Array,p=l&&l.prototype,d=p&&p.set,v=i.aTypedArray,h=i.exportTypedArrayMethod,y=!s((function(){var t=new Uint8ClampedArray(2);return o(d,t,{length:1,0:3},1),3!==t[1]})),g=y&&i.NATIVE_ARRAY_BUFFER_VIEWS&&s((function(){var t=new l(2);return t.set(1),t.set("2",1),0!==t[0]||2!==t[1]}));h("set",(function(t){v(this);var e=u(arguments.length>1?arguments[1]:void 0,1),r=c(t);if(y)return o(d,this,r,e);var n=this.length,i=a(r),s=0;if(i+e>n)throw f("Wrong length");for(;s<i;)this[e+s]=r[s++]}),!y||g)},function(t,e,r){"use strict";var n=r(12),o=r(132),i=r(2),a=r(61),u=n.aTypedArray;(0,n.exportTypedArrayMethod)("slice",(function(t,e){for(var r=a(u(this),t,e),n=o(this),i=0,c=r.length,s=new n(c);c>i;)s[i]=r[i++];return s}),i((function(){new Int8Array(1).slice()})))},function(t,e,r){"use strict";var n=r(12),o=r(23).some,i=n.aTypedArray;(0,n.exportTypedArrayMethod)("some",(function(t){return o(i(this),t,arguments.length>1?arguments[1]:void 0)}))},function(t,e,r){"use strict";var n=r(1),o=r(3),i=r(2),a=r(20),u=r(155),c=r(12),s=r(208),f=r(209),l=r(53),p=r(156),d=c.aTypedArray,v=c.exportTypedArrayMethod,h=n.Uint16Array,y=h&&o(h.prototype.sort),g=!(!y||i((function(){y(new h(2),null)}))&&i((function(){y(new h(2),{})}))),b=!!y&&!i((function(){if(l)return l<74;if(s)return s<67;if(f)return!0;if(p)return p<602;var t,e,r=new h(516),n=Array(516);for(t=0;t<516;t++)e=t%4,r[t]=515-t,n[t]=t-2*e+3;for(y(r,(function(t,e){return(t/4|0)-(e/4|0)})),t=0;t<516;t++)if(r[t]!==n[t])return!0}));v("sort",(function(t){return void 0!==t&&a(t),b?y(this,t):u(d(this),function(t){return function(e,r){return void 0!==t?+t(e,r)||0:r!=r?-1:e!=e?1:0===e&&0===r?1/e>0&&1/r<0?1:-1:e>r}}(t))}),!b||g)},function(t,e,r){"use strict";var n=r(12),o=r(29),i=r(44),a=r(132),u=n.aTypedArray;(0,n.exportTypedArrayMethod)("subarray",(function(t,e){var r=u(this),n=r.length,c=i(t,n);return new(a(r))(r.buffer,r.byteOffset+c*r.BYTES_PER_ELEMENT,o((void 0===e?n:i(e,n))-c))}))},function(t,e,r){"use strict";var n=r(1),o=r(36),i=r(12),a=r(2),u=r(61),c=n.Int8Array,s=i.aTypedArray,f=i.exportTypedArrayMethod,l=[].toLocaleString,p=!!c&&a((function(){l.call(new c(1))}));f("toLocaleString",(function(){return o(l,p?u(s(this)):s(this),u(arguments))}),a((function(){return[1,2].toLocaleString()!=new c([1,2]).toLocaleString()}))||!a((function(){c.prototype.toLocaleString.call([1,2])})))},function(t,e,r){"use strict";var n=r(12).exportTypedArrayMethod,o=r(2),i=r(1),a=r(3),u=i.Uint8Array,c=u&&u.prototype||{},s=[].toString,f=a([].join);o((function(){s.call({})}))&&(s=function(){return f(this)});var l=c.toString!=s;n("toString",s,l)},function(t,e,r){"use strict";var n=r(0),o=r(3),i=r(10),a=String.fromCharCode,u=o("".charAt),c=o(/./.exec),s=o("".slice),f=/^[\da-f]{2}$/i,l=/^[\da-f]{4}$/i;n({global:!0},{unescape:function(t){for(var e,r,n=i(t),o="",p=n.length,d=0;d<p;){if("%"===(e=u(n,d++)))if("u"===u(n,d)){if(r=s(n,d+1,d+5),c(l,r)){o+=a(parseInt(r,16)),d+=5;continue}}else if(r=s(n,d,d+2),c(f,r)){o+=a(parseInt(r,16)),d+=2;continue}o+=e}return o}})},function(t,e,r){r(503)},function(t,e,r){"use strict";var n,o=r(1),i=r(3),a=r(93),u=r(63),c=r(118),s=r(241),f=r(7),l=r(119),p=r(21).enforce,d=r(186),v=!o.ActiveXObject&&"ActiveXObject"in o,h=function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},y=c("WeakMap",h,s);if(d&&v){n=s.getConstructor(h,"WeakMap",!0),u.enable();var g=y.prototype,b=i(g.delete),m=i(g.has),x=i(g.get),w=i(g.set);a(g,{delete:function(t){if(f(t)&&!l(t)){var e=p(this);return e.frozen||(e.frozen=new n),b(this,t)||e.frozen.delete(t)}return b(this,t)},has:function(t){if(f(t)&&!l(t)){var e=p(this);return e.frozen||(e.frozen=new n),m(this,t)||e.frozen.has(t)}return m(this,t)},get:function(t){if(f(t)&&!l(t)){var e=p(this);return e.frozen||(e.frozen=new n),m(this,t)?x(this,t):e.frozen.get(t)}return x(this,t)},set:function(t,e){if(f(t)&&!l(t)){var r=p(this);r.frozen||(r.frozen=new n),m(this,t)?w(this,t,e):r.frozen.set(t,e)}else w(this,t,e);return this}})}},function(t,e,r){r(505)},function(t,e,r){"use strict";r(118)("WeakSet",(function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}}),r(241))},function(t,e,r){var n=r(0),o=r(15),i=r(3),a=r(2),u=r(10),c=r(11),s=r(56),f=r(242).ctoi,l=/[^\d+/a-z]/i,p=/[\t\n\f\r ]+/g,d=/[=]+$/,v=o("atob"),h=String.fromCharCode,y=i("".charAt),g=i("".replace),b=i(l.exec),m=a((function(){return""!==v(" ")})),x=!a((function(){v("a")})),w=!m&&!x&&!a((function(){v()})),E=!m&&!x&&1!==v.length;n({global:!0,enumerable:!0,forced:m||x||w||E},{atob:function(t){if(s(arguments.length,1),w||E)return v(t);var e,r,n=g(u(t),p,""),i="",a=0,m=0;if(n.length%4==0&&(n=g(n,d,"")),n.length%4==1||b(l,n))throw new(o("DOMException"))("The string is not correctly encoded","InvalidCharacterError");for(;e=y(n,a++);)c(f,e)&&(r=m%4?64*r+f[e]:f[e],m++%4&&(i+=h(255&r>>(-2*m&6))));return i}})},function(t,e,r){var n=r(0),o=r(15),i=r(3),a=r(2),u=r(10),c=r(56),s=r(242).itoc,f=o("btoa"),l=i("".charAt),p=i("".charCodeAt),d=!!f&&!a((function(){f()})),v=!!f&&a((function(){return"bnVsbA=="!==f(null)})),h=!!f&&1!==f.length;n({global:!0,enumerable:!0,forced:d||v||h},{btoa:function(t){if(c(arguments.length,1),d||v||h)return f(u(t));for(var e,r,n=u(t),i="",a=0,y=s;l(n,a)||(y="=",a%1);){if((r=p(n,a+=3/4))>255)throw new(o("DOMException"))("The string contains characters outside of the Latin1 range","InvalidCharacterError");i+=l(y,63&(e=e<<8|r)>>8-a%1*8)}return i}})},function(t,e,r){"use strict";var n=r(0),o=r(509),i=r(15),a=r(2),u=r(30),c=r(34),s=r(13).f,f=r(16),l=r(99),p=r(11),d=r(41),v=r(5),h=r(198),y=r(89),g=r(245),b=r(111),m=r(21),x=r(4),w=r(18),E=i("Error"),S=i("DOMException")||function(){try{(new(i("MessageChannel")||o("worker_threads").MessageChannel)).port1.postMessage(new WeakMap)}catch(t){if("DATA_CLONE_ERR"==t.name&&25==t.code)return t.constructor}}(),T=S&&S.prototype,O=E.prototype,A=m.set,_=m.getterFor("DOMException"),I="stack"in E("DOMException"),P=function(t){return p(g,t)&&g[t].m?g[t].c:0},R=function(){d(this,j);var t=arguments.length,e=y(t<1?void 0:arguments[0]),r=y(t<2?void 0:arguments[1],"Error"),n=P(r);if(A(this,{type:"DOMException",name:r,message:e,code:n}),x||(this.name=r,this.message=e,this.code=n),I){var o=E(e);o.name="DOMException",s(this,"stack",c(1,b(o.stack,1)))}},j=R.prototype=u(O),C=function(t){return{enumerable:!0,configurable:!0,get:t}},N=function(t){return C((function(){return _(this)[t]}))};x&&(l(j,"code",N("code")),l(j,"message",N("message")),l(j,"name",N("name"))),s(j,"constructor",c(1,R));var k=a((function(){return!(new S instanceof E)})),M=k||a((function(){return O.toString!==h||"2: 1"!==String(new S(1,2))})),L=k||a((function(){return 25!==new S(1,"DataCloneError").code})),D=k||25!==S.DATA_CLONE_ERR||25!==T.DATA_CLONE_ERR,U=w?M||L||D:k;n({global:!0,constructor:!0,forced:U},{DOMException:U?R:S});var F=i("DOMException"),B=F.prototype;for(var G in M&&(w||S===F)&&f(B,"toString",h),L&&x&&S===F&&l(B,"code",C((function(){return P(v(this).name)}))),g)if(p(g,G)){var V=g[G],H=V.s,z=c(6,V.c);p(F,H)||s(F,H,z),p(B,H)||s(B,H,z)}},function(t,e,r){var n=r(62);t.exports=function(t){try{if(n)return Function('return require("'+t+'")')()}catch(t){}}},function(t,e,r){"use strict";var n=r(0),o=r(15),i=r(34),a=r(13).f,u=r(11),c=r(41),s=r(71),f=r(89),l=r(245),p=r(111),d=r(18),v=o("Error"),h=o("DOMException"),y=function(){c(this,g);var t=arguments.length,e=f(t<1?void 0:arguments[0]),r=f(t<2?void 0:arguments[1],"Error"),n=new h(e,r),o=v(e);return o.name="DOMException",a(n,"stack",i(1,p(o.stack,1))),s(n,this,y),n},g=y.prototype=h.prototype,b="stack"in v("DOMException"),m="stack"in new h(1,2),x=b&&!m;n({global:!0,constructor:!0,forced:d||x},{DOMException:x?y:h});var w=o("DOMException"),E=w.prototype;if(E.constructor!==w)for(var S in d||a(E,"constructor",i(1,w)),l)if(u(l,S)){var T=l[S],O=T.s;u(w,O)||a(w,O,i(6,T.c))}},function(t,e,r){var n=r(15);r(31)(n("DOMException"),"DOMException")},function(t,e,r){r(513),r(514)},function(t,e,r){var n=r(0),o=r(1),i=r(125).clear;n({global:!0,bind:!0,enumerable:!0,forced:o.clearImmediate!==i},{clearImmediate:i})},function(t,e,r){var n=r(0),o=r(1),i=r(125).set;n({global:!0,bind:!0,enumerable:!0,forced:o.setImmediate!==i},{setImmediate:i})},function(t,e,r){var n=r(0),o=r(1),i=r(225),a=r(20),u=r(56),c=r(62),s=o.process;n({global:!0,enumerable:!0,noTargetGet:!0},{queueMicrotask:function(t){u(arguments.length,1),a(t);var e=c&&s.domain;i(e?e.bind(t):t)}})},function(t,e,r){var n,o=r(18),i=r(0),a=r(1),u=r(15),c=r(3),s=r(2),f=r(68),l=r(9),p=r(70),d=r(7),v=r(59),h=r(40),y=r(5),g=r(55),b=r(11),m=r(45),x=r(25),w=r(17),E=r(56),S=r(98),T=r(149),O=a.Object,A=a.Date,_=a.Error,I=a.EvalError,P=a.RangeError,R=a.ReferenceError,j=a.SyntaxError,C=a.TypeError,N=a.URIError,k=a.PerformanceMark,M=a.WebAssembly,L=M&&M.CompileError||_,D=M&&M.LinkError||_,U=M&&M.RuntimeError||_,F=u("DOMException"),B=u("Set"),G=u("Map"),V=G.prototype,H=c(V.has),z=c(V.get),W=c(V.set),Y=c(B.prototype.add),q=u("Object","keys"),K=c([].push),$=c((!0).valueOf),X=c(1..valueOf),J=c("".valueOf),Q=c(A.prototype.getTime),Z=f("structuredClone"),tt=function(t){return!s((function(){var e=new a.Set([7]),r=t(e),n=t(O(7));return r==e||!r.has(7)||"object"!=typeof n||7!=n}))&&t},et=a.structuredClone,rt=o||(n=et,!!s((function(){var t=new _,e=n({a:t,b:t});return!(e&&e.a===e.b&&e.a instanceof _)})))||!function(t){return!s((function(){var e=t(new a.AggregateError([1],Z,{cause:3}));return"AggregateError"!=e.name||1!=e.errors[0]||e.message!=Z||3!=e.cause}))}(et),nt=!et&&tt((function(t){return new k(Z,{detail:t}).detail})),ot=tt(et)||nt,it=function(t){throw new F("Uncloneable type: "+t,"DataCloneError")},at=function(t,e){throw new F((e||"Cloning")+" of "+t+" cannot be properly polyfilled in this engine","DataCloneError")},ut=function(t,e){if(v(t)&&it("Symbol"),!d(t))return t;if(e){if(H(e,t))return z(e,t)}else e=new G;var r,n,o,i,c,s,f,h,y,E,k=g(t),M=!1;switch(k){case"Array":o=[],M=!0;break;case"Object":o={},M=!0;break;case"Map":o=new G,M=!0;break;case"Set":o=new B,M=!0;break;case"RegExp":o=new RegExp(t.source,S(t));break;case"Error":switch(n=t.name){case"AggregateError":o=u("AggregateError")([]);break;case"EvalError":o=I();break;case"RangeError":o=P();break;case"ReferenceError":o=R();break;case"SyntaxError":o=j();break;case"TypeError":o=C();break;case"URIError":o=N();break;case"CompileError":o=L();break;case"LinkError":o=D();break;case"RuntimeError":o=U();break;default:o=_()}M=!0;break;case"DOMException":o=new F(t.message,t.name),M=!0;break;case"DataView":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"BigInt64Array":case"BigUint64Array":r=a[k],d(r)||at(k),o=new r(ut(t.buffer,e),t.byteOffset,"DataView"===k?t.byteLength:t.length);break;case"DOMQuad":try{o=new DOMQuad(ut(t.p1,e),ut(t.p2,e),ut(t.p3,e),ut(t.p4,e))}catch(e){ot?o=ot(t):at(k)}break;case"FileList":if(r=a.DataTransfer,p(r)){for(i=new r,c=0,s=w(t);c<s;c++)i.items.add(ut(t[c],e));o=i.files}else ot?o=ot(t):at(k);break;case"ImageData":try{o=new ImageData(ut(t.data,e),t.width,t.height,{colorSpace:t.colorSpace})}catch(e){ot?o=ot(t):at(k)}break;default:if(ot)o=ot(t);else switch(k){case"BigInt":o=O(t.valueOf());break;case"Boolean":o=O($(t));break;case"Number":o=O(X(t));break;case"String":o=O(J(t));break;case"Date":o=new A(Q(t));break;case"ArrayBuffer":(r=a.DataView)||"function"==typeof t.slice||at(k);try{if("function"==typeof t.slice)o=t.slice(0);else for(s=t.byteLength,o=new ArrayBuffer(s),y=new r(t),E=new r(o),c=0;c<s;c++)E.setUint8(c,y.getUint8(c))}catch(t){throw new F("ArrayBuffer is detached","DataCloneError")}break;case"SharedArrayBuffer":o=t;break;case"Blob":try{o=t.slice(0,t.size,t.type)}catch(t){at(k)}break;case"DOMPoint":case"DOMPointReadOnly":r=a[k];try{o=r.fromPoint?r.fromPoint(t):new r(t.x,t.y,t.z,t.w)}catch(t){at(k)}break;case"DOMRect":case"DOMRectReadOnly":r=a[k];try{o=r.fromRect?r.fromRect(t):new r(t.x,t.y,t.width,t.height)}catch(t){at(k)}break;case"DOMMatrix":case"DOMMatrixReadOnly":r=a[k];try{o=r.fromMatrix?r.fromMatrix(t):new r(t)}catch(t){at(k)}break;case"AudioData":case"VideoFrame":l(t.clone)||at(k);try{o=t.clone()}catch(t){it(k)}break;case"File":try{o=new File([t],t.name,t)}catch(t){at(k)}break;case"CryptoKey":case"GPUCompilationMessage":case"GPUCompilationInfo":case"ImageBitmap":case"RTCCertificate":case"WebAssembly.Module":at(k);default:it(k)}}if(W(e,t,o),M)switch(k){case"Array":case"Object":for(f=q(t),c=0,s=w(f);c<s;c++)h=f[c],m(o,h,ut(t[h],e));break;case"Map":t.forEach((function(t,r){W(o,ut(r,e),ut(t,e))}));break;case"Set":t.forEach((function(t){Y(o,ut(t,e))}));break;case"Error":x(o,"message",ut(t.message,e)),b(t,"cause")&&x(o,"cause",ut(t.cause,e)),"AggregateError"==n&&(o.errors=ut(t.errors,e));case"DOMException":T&&x(o,"stack",ut(t.stack,e))}return o},ct=et&&!s((function(){var t=new ArrayBuffer(8),e=et(t,{transfer:[t]});return 0!=t.byteLength||8!=e.byteLength})),st=function(t,e){if(!d(t))throw C("Transfer option cannot be converted to a sequence");var r=[];h(t,(function(t){K(r,y(t))}));var n,o,i,u,c,s,f=0,v=w(r);if(ct)for(u=et(r,{transfer:r});f<v;)W(e,r[f],u[f++]);else for(;f<v;){if(n=r[f++],H(e,n))throw new F("Duplicate transferable","DataCloneError");switch(o=g(n)){case"ImageBitmap":i=a.OffscreenCanvas,p(i)||at(o,"Transferring");try{(s=new i(n.width,n.height)).getContext("bitmaprenderer").transferFromImageBitmap(n),c=s.transferToImageBitmap()}catch(t){}break;case"AudioData":case"VideoFrame":l(n.clone)&&l(n.close)||at(o,"Transferring");try{c=n.clone(),n.close()}catch(t){}break;case"ArrayBuffer":case"MessagePort":case"OffscreenCanvas":case"ReadableStream":case"TransformStream":case"WritableStream":at(o,"Transferring")}if(void 0===c)throw new F("This object cannot be transferred: "+o,"DataCloneError");W(e,n,c)}};i({global:!0,enumerable:!0,sham:!ct,forced:rt},{structuredClone:function(t){var e,r=E(arguments.length,1)>1&&null!=arguments[1]?y(arguments[1]):void 0,n=r?r.transfer:void 0;return void 0!==n&&(e=new G,st(n,e)),ut(t,e)}})},function(t,e,r){r(518),r(519)},function(t,e,r){var n=r(0),o=r(1),i=r(246).setInterval;n({global:!0,bind:!0,forced:o.setInterval!==i},{setInterval:i})},function(t,e,r){var n=r(0),o=r(1),i=r(246).setTimeout;n({global:!0,bind:!0,forced:o.setTimeout!==i},{setTimeout:i})},function(t,e,r){"use strict";r(129);var n,o=r(0),i=r(4),a=r(248),u=r(1),c=r(38),s=r(3),f=r(16),l=r(99),p=r(41),d=r(11),v=r(219),h=r(204),y=r(87),g=r(128).codeAt,b=r(521),m=r(10),x=r(31),w=r(56),E=r(249),S=r(21),T=S.set,O=S.getterFor("URL"),A=E.URLSearchParams,_=E.getState,I=u.URL,P=u.TypeError,R=u.parseInt,j=Math.floor,C=Math.pow,N=s("".charAt),k=s(/./.exec),M=s([].join),L=s(1..toString),D=s([].pop),U=s([].push),F=s("".replace),B=s([].shift),G=s("".split),V=s("".slice),H=s("".toLowerCase),z=s([].unshift),W=/[a-z]/i,Y=/[\d+-.a-z]/i,q=/\d/,K=/^0x/i,$=/^[0-7]+$/,X=/^\d+$/,J=/^[\da-f]+$/i,Q=/[\0\t\n\r #%/:<>?@[\\\]^|]/,Z=/[\0\t\n\r #/:<>?@[\\\]^|]/,tt=/^[\u0000-\u0020]+|[\u0000-\u0020]+$/g,et=/[\t\n\r]/g,rt=function(t){var e,r,n,o;if("number"==typeof t){for(e=[],r=0;r<4;r++)z(e,t%256),t=j(t/256);return M(e,".")}if("object"==typeof t){for(e="",n=function(t){for(var e=null,r=1,n=null,o=0,i=0;i<8;i++)0!==t[i]?(o>r&&(e=n,r=o),n=null,o=0):(null===n&&(n=i),++o);return o>r&&(e=n,r=o),e}(t),r=0;r<8;r++)o&&0===t[r]||(o&&(o=!1),n===r?(e+=r?":":"::",o=!0):(e+=L(t[r],16),r<7&&(e+=":")));return"["+e+"]"}return t},nt={},ot=v({},nt,{" ":1,'"':1,"<":1,">":1,"`":1}),it=v({},ot,{"#":1,"?":1,"{":1,"}":1}),at=v({},it,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),ut=function(t,e){var r=g(t,0);return r>32&&r<127&&!d(e,t)?t:encodeURIComponent(t)},ct={ftp:21,file:null,http:80,https:443,ws:80,wss:443},st=function(t,e){var r;return 2==t.length&&k(W,N(t,0))&&(":"==(r=N(t,1))||!e&&"|"==r)},ft=function(t){var e;return t.length>1&&st(V(t,0,2))&&(2==t.length||"/"===(e=N(t,2))||"\\"===e||"?"===e||"#"===e)},lt=function(t){return"."===t||"%2e"===H(t)},pt={},dt={},vt={},ht={},yt={},gt={},bt={},mt={},xt={},wt={},Et={},St={},Tt={},Ot={},At={},_t={},It={},Pt={},Rt={},jt={},Ct={},Nt=function(t,e,r){var n,o,i,a=m(t);if(e){if(o=this.parse(a))throw P(o);this.searchParams=null}else{if(void 0!==r&&(n=new Nt(r,!0)),o=this.parse(a,null,n))throw P(o);(i=_(new A)).bindURL(this),this.searchParams=i}};Nt.prototype={type:"URL",parse:function(t,e,r){var o,i,a,u,c,s=this,f=e||pt,l=0,p="",v=!1,g=!1,b=!1;for(t=m(t),e||(s.scheme="",s.username="",s.password="",s.host=null,s.port=null,s.path=[],s.query=null,s.fragment=null,s.cannotBeABaseURL=!1,t=F(t,tt,"")),t=F(t,et,""),o=h(t);l<=o.length;){switch(i=o[l],f){case pt:if(!i||!k(W,i)){if(e)return"Invalid scheme";f=vt;continue}p+=H(i),f=dt;break;case dt:if(i&&(k(Y,i)||"+"==i||"-"==i||"."==i))p+=H(i);else{if(":"!=i){if(e)return"Invalid scheme";p="",f=vt,l=0;continue}if(e&&(s.isSpecial()!=d(ct,p)||"file"==p&&(s.includesCredentials()||null!==s.port)||"file"==s.scheme&&!s.host))return;if(s.scheme=p,e)return void(s.isSpecial()&&ct[s.scheme]==s.port&&(s.port=null));p="","file"==s.scheme?f=Ot:s.isSpecial()&&r&&r.scheme==s.scheme?f=ht:s.isSpecial()?f=mt:"/"==o[l+1]?(f=yt,l++):(s.cannotBeABaseURL=!0,U(s.path,""),f=Rt)}break;case vt:if(!r||r.cannotBeABaseURL&&"#"!=i)return"Invalid scheme";if(r.cannotBeABaseURL&&"#"==i){s.scheme=r.scheme,s.path=y(r.path),s.query=r.query,s.fragment="",s.cannotBeABaseURL=!0,f=Ct;break}f="file"==r.scheme?Ot:gt;continue;case ht:if("/"!=i||"/"!=o[l+1]){f=gt;continue}f=xt,l++;break;case yt:if("/"==i){f=wt;break}f=Pt;continue;case gt:if(s.scheme=r.scheme,i==n)s.username=r.username,s.password=r.password,s.host=r.host,s.port=r.port,s.path=y(r.path),s.query=r.query;else if("/"==i||"\\"==i&&s.isSpecial())f=bt;else if("?"==i)s.username=r.username,s.password=r.password,s.host=r.host,s.port=r.port,s.path=y(r.path),s.query="",f=jt;else{if("#"!=i){s.username=r.username,s.password=r.password,s.host=r.host,s.port=r.port,s.path=y(r.path),s.path.length--,f=Pt;continue}s.username=r.username,s.password=r.password,s.host=r.host,s.port=r.port,s.path=y(r.path),s.query=r.query,s.fragment="",f=Ct}break;case bt:if(!s.isSpecial()||"/"!=i&&"\\"!=i){if("/"!=i){s.username=r.username,s.password=r.password,s.host=r.host,s.port=r.port,f=Pt;continue}f=wt}else f=xt;break;case mt:if(f=xt,"/"!=i||"/"!=N(p,l+1))continue;l++;break;case xt:if("/"!=i&&"\\"!=i){f=wt;continue}break;case wt:if("@"==i){v&&(p="%40"+p),v=!0,a=h(p);for(var x=0;x<a.length;x++){var w=a[x];if(":"!=w||b){var E=ut(w,at);b?s.password+=E:s.username+=E}else b=!0}p=""}else if(i==n||"/"==i||"?"==i||"#"==i||"\\"==i&&s.isSpecial()){if(v&&""==p)return"Invalid authority";l-=h(p).length+1,p="",f=Et}else p+=i;break;case Et:case St:if(e&&"file"==s.scheme){f=_t;continue}if(":"!=i||g){if(i==n||"/"==i||"?"==i||"#"==i||"\\"==i&&s.isSpecial()){if(s.isSpecial()&&""==p)return"Invalid host";if(e&&""==p&&(s.includesCredentials()||null!==s.port))return;if(u=s.parseHost(p))return u;if(p="",f=It,e)return;continue}"["==i?g=!0:"]"==i&&(g=!1),p+=i}else{if(""==p)return"Invalid host";if(u=s.parseHost(p))return u;if(p="",f=Tt,e==St)return}break;case Tt:if(!k(q,i)){if(i==n||"/"==i||"?"==i||"#"==i||"\\"==i&&s.isSpecial()||e){if(""!=p){var S=R(p,10);if(S>65535)return"Invalid port";s.port=s.isSpecial()&&S===ct[s.scheme]?null:S,p=""}if(e)return;f=It;continue}return"Invalid port"}p+=i;break;case Ot:if(s.scheme="file","/"==i||"\\"==i)f=At;else{if(!r||"file"!=r.scheme){f=Pt;continue}if(i==n)s.host=r.host,s.path=y(r.path),s.query=r.query;else if("?"==i)s.host=r.host,s.path=y(r.path),s.query="",f=jt;else{if("#"!=i){ft(M(y(o,l),""))||(s.host=r.host,s.path=y(r.path),s.shortenPath()),f=Pt;continue}s.host=r.host,s.path=y(r.path),s.query=r.query,s.fragment="",f=Ct}}break;case At:if("/"==i||"\\"==i){f=_t;break}r&&"file"==r.scheme&&!ft(M(y(o,l),""))&&(st(r.path[0],!0)?U(s.path,r.path[0]):s.host=r.host),f=Pt;continue;case _t:if(i==n||"/"==i||"\\"==i||"?"==i||"#"==i){if(!e&&st(p))f=Pt;else if(""==p){if(s.host="",e)return;f=It}else{if(u=s.parseHost(p))return u;if("localhost"==s.host&&(s.host=""),e)return;p="",f=It}continue}p+=i;break;case It:if(s.isSpecial()){if(f=Pt,"/"!=i&&"\\"!=i)continue}else if(e||"?"!=i)if(e||"#"!=i){if(i!=n&&(f=Pt,"/"!=i))continue}else s.fragment="",f=Ct;else s.query="",f=jt;break;case Pt:if(i==n||"/"==i||"\\"==i&&s.isSpecial()||!e&&("?"==i||"#"==i)){if(".."===(c=H(c=p))||"%2e."===c||".%2e"===c||"%2e%2e"===c?(s.shortenPath(),"/"==i||"\\"==i&&s.isSpecial()||U(s.path,"")):lt(p)?"/"==i||"\\"==i&&s.isSpecial()||U(s.path,""):("file"==s.scheme&&!s.path.length&&st(p)&&(s.host&&(s.host=""),p=N(p,0)+":"),U(s.path,p)),p="","file"==s.scheme&&(i==n||"?"==i||"#"==i))for(;s.path.length>1&&""===s.path[0];)B(s.path);"?"==i?(s.query="",f=jt):"#"==i&&(s.fragment="",f=Ct)}else p+=ut(i,it);break;case Rt:"?"==i?(s.query="",f=jt):"#"==i?(s.fragment="",f=Ct):i!=n&&(s.path[0]+=ut(i,nt));break;case jt:e||"#"!=i?i!=n&&("'"==i&&s.isSpecial()?s.query+="%27":s.query+="#"==i?"%23":ut(i,nt)):(s.fragment="",f=Ct);break;case Ct:i!=n&&(s.fragment+=ut(i,ot))}l++}},parseHost:function(t){var e,r,n;if("["==N(t,0)){if("]"!=N(t,t.length-1))return"Invalid host";if(!(e=function(t){var e,r,n,o,i,a,u,c=[0,0,0,0,0,0,0,0],s=0,f=null,l=0,p=function(){return N(t,l)};if(":"==p()){if(":"!=N(t,1))return;l+=2,f=++s}for(;p();){if(8==s)return;if(":"!=p()){for(e=r=0;r<4&&k(J,p());)e=16*e+R(p(),16),l++,r++;if("."==p()){if(0==r)return;if(l-=r,s>6)return;for(n=0;p();){if(o=null,n>0){if(!("."==p()&&n<4))return;l++}if(!k(q,p()))return;for(;k(q,p());){if(i=R(p(),10),null===o)o=i;else{if(0==o)return;o=10*o+i}if(o>255)return;l++}c[s]=256*c[s]+o,2!=++n&&4!=n||s++}if(4!=n)return;break}if(":"==p()){if(l++,!p())return}else if(p())return;c[s++]=e}else{if(null!==f)return;l++,f=++s}}if(null!==f)for(a=s-f,s=7;0!=s&&a>0;)u=c[s],c[s--]=c[f+a-1],c[f+--a]=u;else if(8!=s)return;return c}(V(t,1,-1))))return"Invalid host";this.host=e}else if(this.isSpecial()){if(t=b(t),k(Q,t))return"Invalid host";if(null===(e=function(t){var e,r,n,o,i,a,u,c=G(t,".");if(c.length&&""==c[c.length-1]&&c.length--,(e=c.length)>4)return t;for(r=[],n=0;n<e;n++){if(""==(o=c[n]))return t;if(i=10,o.length>1&&"0"==N(o,0)&&(i=k(K,o)?16:8,o=V(o,8==i?1:2)),""===o)a=0;else{if(!k(10==i?X:8==i?$:J,o))return t;a=R(o,i)}U(r,a)}for(n=0;n<e;n++)if(a=r[n],n==e-1){if(a>=C(256,5-e))return null}else if(a>255)return null;for(u=D(r),n=0;n<r.length;n++)u+=r[n]*C(256,3-n);return u}(t)))return"Invalid host";this.host=e}else{if(k(Z,t))return"Invalid host";for(e="",r=h(t),n=0;n<r.length;n++)e+=ut(r[n],nt);this.host=e}},cannotHaveUsernamePasswordPort:function(){return!this.host||this.cannotBeABaseURL||"file"==this.scheme},includesCredentials:function(){return""!=this.username||""!=this.password},isSpecial:function(){return d(ct,this.scheme)},shortenPath:function(){var t=this.path,e=t.length;!e||"file"==this.scheme&&1==e&&st(t[0],!0)||t.length--},serialize:function(){var t=this,e=t.scheme,r=t.username,n=t.password,o=t.host,i=t.port,a=t.path,u=t.query,c=t.fragment,s=e+":";return null!==o?(s+="//",t.includesCredentials()&&(s+=r+(n?":"+n:"")+"@"),s+=rt(o),null!==i&&(s+=":"+i)):"file"==e&&(s+="//"),s+=t.cannotBeABaseURL?a[0]:a.length?"/"+M(a,"/"):"",null!==u&&(s+="?"+u),null!==c&&(s+="#"+c),s},setHref:function(t){var e=this.parse(t);if(e)throw P(e);this.searchParams.update()},getOrigin:function(){var t=this.scheme,e=this.port;if("blob"==t)try{return new kt(t.path[0]).origin}catch(t){return"null"}return"file"!=t&&this.isSpecial()?t+"://"+rt(this.host)+(null!==e?":"+e:""):"null"},getProtocol:function(){return this.scheme+":"},setProtocol:function(t){this.parse(m(t)+":",pt)},getUsername:function(){return this.username},setUsername:function(t){var e=h(m(t));if(!this.cannotHaveUsernamePasswordPort()){this.username="";for(var r=0;r<e.length;r++)this.username+=ut(e[r],at)}},getPassword:function(){return this.password},setPassword:function(t){var e=h(m(t));if(!this.cannotHaveUsernamePasswordPort()){this.password="";for(var r=0;r<e.length;r++)this.password+=ut(e[r],at)}},getHost:function(){var t=this.host,e=this.port;return null===t?"":null===e?rt(t):rt(t)+":"+e},setHost:function(t){this.cannotBeABaseURL||this.parse(t,Et)},getHostname:function(){var t=this.host;return null===t?"":rt(t)},setHostname:function(t){this.cannotBeABaseURL||this.parse(t,St)},getPort:function(){var t=this.port;return null===t?"":m(t)},setPort:function(t){this.cannotHaveUsernamePasswordPort()||(""==(t=m(t))?this.port=null:this.parse(t,Tt))},getPathname:function(){var t=this.path;return this.cannotBeABaseURL?t[0]:t.length?"/"+M(t,"/"):""},setPathname:function(t){this.cannotBeABaseURL||(this.path=[],this.parse(t,It))},getSearch:function(){var t=this.query;return t?"?"+t:""},setSearch:function(t){""==(t=m(t))?this.query=null:("?"==N(t,0)&&(t=V(t,1)),this.query="",this.parse(t,jt)),this.searchParams.update()},getSearchParams:function(){return this.searchParams.facade},getHash:function(){var t=this.fragment;return t?"#"+t:""},setHash:function(t){""!=(t=m(t))?("#"==N(t,0)&&(t=V(t,1)),this.fragment="",this.parse(t,Ct)):this.fragment=null},update:function(){this.query=this.searchParams.serialize()||null}};var kt=function(t){var e=p(this,Mt),r=w(arguments.length,1)>1?arguments[1]:void 0,n=T(e,new Nt(t,!1,r));i||(e.href=n.serialize(),e.origin=n.getOrigin(),e.protocol=n.getProtocol(),e.username=n.getUsername(),e.password=n.getPassword(),e.host=n.getHost(),e.hostname=n.getHostname(),e.port=n.getPort(),e.pathname=n.getPathname(),e.search=n.getSearch(),e.searchParams=n.getSearchParams(),e.hash=n.getHash())},Mt=kt.prototype,Lt=function(t,e){return{get:function(){return O(this)[t]()},set:e&&function(t){return O(this)[e](t)},configurable:!0,enumerable:!0}};if(i&&(l(Mt,"href",Lt("serialize","setHref")),l(Mt,"origin",Lt("getOrigin")),l(Mt,"protocol",Lt("getProtocol","setProtocol")),l(Mt,"username",Lt("getUsername","setUsername")),l(Mt,"password",Lt("getPassword","setPassword")),l(Mt,"host",Lt("getHost","setHost")),l(Mt,"hostname",Lt("getHostname","setHostname")),l(Mt,"port",Lt("getPort","setPort")),l(Mt,"pathname",Lt("getPathname","setPathname")),l(Mt,"search",Lt("getSearch","setSearch")),l(Mt,"searchParams",Lt("getSearchParams")),l(Mt,"hash",Lt("getHash","setHash"))),f(Mt,"toJSON",(function(){return O(this).serialize()}),{enumerable:!0}),f(Mt,"toString",(function(){return O(this).serialize()}),{enumerable:!0}),I){var Dt=I.createObjectURL,Ut=I.revokeObjectURL;Dt&&f(kt,"createObjectURL",c(Dt,I)),Ut&&f(kt,"revokeObjectURL",c(Ut,I))}x(kt,"URL"),o({global:!0,constructor:!0,forced:!a,sham:!i},{URL:kt})},function(t,e,r){"use strict";var n=r(1),o=r(3),i=/[^\0-\u007E]/,a=/[.\u3002\uFF0E\uFF61]/g,u="Overflow: input needs wider integers to process",c=n.RangeError,s=o(a.exec),f=Math.floor,l=String.fromCharCode,p=o("".charCodeAt),d=o([].join),v=o([].push),h=o("".replace),y=o("".split),g=o("".toLowerCase),b=function(t){return t+22+75*(t<26)},m=function(t,e,r){var n=0;for(t=r?f(t/700):t>>1,t+=f(t/e);t>455;)t=f(t/35),n+=36;return f(n+36*t/(t+38))},x=function(t){var e,r,n=[],o=(t=function(t){for(var e=[],r=0,n=t.length;r<n;){var o=p(t,r++);if(o>=55296&&o<=56319&&r<n){var i=p(t,r++);56320==(64512&i)?v(e,((1023&o)<<10)+(1023&i)+65536):(v(e,o),r--)}else v(e,o)}return e}(t)).length,i=128,a=0,s=72;for(e=0;e<t.length;e++)(r=t[e])<128&&v(n,l(r));var h=n.length,y=h;for(h&&v(n,"-");y<o;){var g=2147483647;for(e=0;e<t.length;e++)(r=t[e])>=i&&r<g&&(g=r);var x=y+1;if(g-i>f((2147483647-a)/x))throw c(u);for(a+=(g-i)*x,i=g,e=0;e<t.length;e++){if((r=t[e])<i&&++a>2147483647)throw c(u);if(r==i){for(var w=a,E=36;;){var S=E<=s?1:E>=s+26?26:E-s;if(w<S)break;var T=w-S,O=36-S;v(n,l(b(S+T%O))),w=f(T/O),E+=36}v(n,l(b(w))),s=m(a,x,y==h),a=0,y++}}a++,i++}return d(n,"")};t.exports=function(t){var e,r,n=[],o=y(h(g(t),a,"."),".");for(e=0;e<o.length;e++)r=o[e],v(n,s(i,r)?"xn--"+x(r):r);return d(n,".")}},function(t,e,r){"use strict";var n=r(0),o=r(6);n({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return o(URL.prototype.toString,this)}})},function(t,e,r){r(249)},function(t,e){var r,n,o=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(t){if(r===setTimeout)return setTimeout(t,0);if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(t,0);try{return r(t,0)}catch(e){try{return r.call(null,t,0)}catch(e){return r.call(this,t,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:i}catch(t){r=i}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(t){n=a}}();var c,s=[],f=!1,l=-1;function p(){f&&c&&(f=!1,c.length?s=c.concat(s):l=-1,s.length&&d())}function d(){if(!f){var t=u(p);f=!0;for(var e=s.length;e;){for(c=s,s=[];++l<e;)c&&c[l].run();l=-1,e=s.length}c=null,f=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function v(t,e){this.fun=t,this.array=e}function h(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];s.push(new v(t,e)),1!==s.length||f||u(d)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=h,o.addListener=h,o.once=h,o.off=h,o.removeListener=h,o.removeAllListeners=h,o.emit=h,o.prependListener=h,o.prependOnceListener=h,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(t,e,r){var n=r(133),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,u=n?n.toStringTag:void 0;t.exports=function(t){var e=i.call(t,u),r=t[u];try{t[u]=void 0;var n=!0}catch(t){}var o=a.call(t);return n&&(e?t[u]=r:delete t[u]),o}},function(t,e){var r=Object.prototype.toString;t.exports=function(t){return r.call(t)}},function(t,e,r){var n=r(528),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=n((function(t){var e=[];return 46===t.charCodeAt(0)&&e.push(""),t.replace(o,(function(t,r,n,o){e.push(n?o.replace(i,"$1"):r||t)})),e}));t.exports=a},function(t,e,r){var n=r(529);t.exports=function(t){var e=n(t,(function(t){return 500===r.size&&r.clear(),t})),r=e.cache;return e}},function(t,e,r){var n=r(176);function o(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var r=function(){var n=arguments,o=e?e.apply(this,n):n[0],i=r.cache;if(i.has(o))return i.get(o);var a=t.apply(this,n);return r.cache=i.set(o,a)||i,a};return r.cache=new(o.Cache||n),r}o.Cache=n,t.exports=o},function(t,e,r){var n=r(531),o=r(135),i=r(178);t.exports=function(){this.size=0,this.__data__={hash:new n,map:new(i||o),string:new n}}},function(t,e,r){var n=r(532),o=r(537),i=r(538),a=r(539),u=r(540);function c(t){var e=-1,r=null==t?0:t.length;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=u,t.exports=c},function(t,e,r){var n=r(134);t.exports=function(){this.__data__=n?n(null):{},this.size=0}},function(t,e,r){var n=r(254),o=r(534),i=r(177),a=r(255),u=/^\[object .+?Constructor\]$/,c=Function.prototype,s=Object.prototype,f=c.toString,l=s.hasOwnProperty,p=RegExp("^"+f.call(l).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=function(t){return!(!i(t)||o(t))&&(n(t)?p:u).test(a(t))}},function(t,e,r){var n,o=r(535),i=(n=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"";t.exports=function(t){return!!i&&i in t}},function(t,e,r){var n=r(51)["__core-js_shared__"];t.exports=n},function(t,e){t.exports=function(t,e){return null==t?void 0:t[e]}},function(t,e){t.exports=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}},function(t,e,r){var n=r(134),o=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;if(n){var r=e[t];return"__lodash_hash_undefined__"===r?void 0:r}return o.call(e,t)?e[t]:void 0}},function(t,e,r){var n=r(134),o=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;return n?void 0!==e[t]:o.call(e,t)}},function(t,e,r){var n=r(134);t.exports=function(t,e){var r=this.__data__;return this.size+=this.has(t)?0:1,r[t]=n&&void 0===e?"__lodash_hash_undefined__":e,this}},function(t,e){t.exports=function(){this.__data__=[],this.size=0}},function(t,e,r){var n=r(136),o=Array.prototype.splice;t.exports=function(t){var e=this.__data__,r=n(e,t);return!(r<0)&&(r==e.length-1?e.pop():o.call(e,r,1),--this.size,!0)}},function(t,e,r){var n=r(136);t.exports=function(t){var e=this.__data__,r=n(e,t);return r<0?void 0:e[r][1]}},function(t,e,r){var n=r(136);t.exports=function(t){return n(this.__data__,t)>-1}},function(t,e,r){var n=r(136);t.exports=function(t,e){var r=this.__data__,o=n(r,t);return o<0?(++this.size,r.push([t,e])):r[o][1]=e,this}},function(t,e,r){var n=r(137);t.exports=function(t){var e=n(this,t).delete(t);return this.size-=e?1:0,e}},function(t,e){t.exports=function(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}},function(t,e,r){var n=r(137);t.exports=function(t){return n(this,t).get(t)}},function(t,e,r){var n=r(137);t.exports=function(t){return n(this,t).has(t)}},function(t,e,r){var n=r(137);t.exports=function(t,e){var r=n(this,t),o=r.size;return r.set(t,e),this.size+=r.size==o?0:1,this}},function(t,e,r){var n=r(552);t.exports=function(t){return null==t?"":n(t)}},function(t,e,r){var n=r(133),o=r(553),i=r(50),a=r(175),u=n?n.prototype:void 0,c=u?u.toString:void 0;t.exports=function t(e){if("string"==typeof e)return e;if(i(e))return o(e,t)+"";if(a(e))return c?c.call(e):"";var r=e+"";return"0"==r&&1/e==-1/0?"-0":r}},function(t,e){t.exports=function(t,e){for(var r=-1,n=null==t?0:t.length,o=Array(n);++r<n;)o[r]=e(t[r],r,t);return o}},function(t,e){t.exports=function(t,e,r,n){var o=-1,i=null==t?0:t.length;for(n&&i&&(r=t[++o]);++o<i;)r=e(r,t[o],o,t);return r}},function(t,e,r){var n=r(556),o=r(570)(n);t.exports=o},function(t,e,r){var n=r(557),o=r(179);t.exports=function(t,e){return t&&n(t,e,o)}},function(t,e,r){var n=r(558)();t.exports=n},function(t,e){t.exports=function(t){return function(e,r,n){for(var o=-1,i=Object(e),a=n(e),u=a.length;u--;){var c=a[t?u:++o];if(!1===r(i[c],c,i))break}return e}}},function(t,e,r){var n=r(560),o=r(257),i=r(50),a=r(258),u=r(260),c=r(261),s=Object.prototype.hasOwnProperty;t.exports=function(t,e){var r=i(t),f=!r&&o(t),l=!r&&!f&&a(t),p=!r&&!f&&!l&&c(t),d=r||f||l||p,v=d?n(t.length,String):[],h=v.length;for(var y in t)!e&&!s.call(t,y)||d&&("length"==y||l&&("offset"==y||"parent"==y)||p&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||u(y,h))||v.push(y);return v}},function(t,e){t.exports=function(t,e){for(var r=-1,n=Array(t);++r<t;)n[r]=e(r);return n}},function(t,e,r){var n=r(103),o=r(104);t.exports=function(t){return o(t)&&"[object Arguments]"==n(t)}},function(t,e){t.exports=function(){return!1}},function(t,e,r){var n=r(103),o=r(180),i=r(104),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,t.exports=function(t){return i(t)&&o(t.length)&&!!a[n(t)]}},function(t,e){t.exports=function(t){return function(e){return t(e)}}},function(t,e,r){(function(t){var n=r(253),o=e&&!e.nodeType&&e,i=o&&"object"==typeof t&&t&&!t.nodeType&&t,a=i&&i.exports===o&&n.process,u=function(){try{var t=i&&i.require&&i.require("util").types;return t||a&&a.binding&&a.binding("util")}catch(t){}}();t.exports=u}).call(this,r(259)(t))},function(t,e,r){var n=r(567),o=r(568),i=Object.prototype.hasOwnProperty;t.exports=function(t){if(!n(t))return o(t);var e=[];for(var r in Object(t))i.call(t,r)&&"constructor"!=r&&e.push(r);return e}},function(t,e){var r=Object.prototype;t.exports=function(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||r)}},function(t,e,r){var n=r(569)(Object.keys,Object);t.exports=n},function(t,e){t.exports=function(t,e){return function(r){return t(e(r))}}},function(t,e,r){var n=r(262);t.exports=function(t,e){return function(r,o){if(null==r)return r;if(!n(r))return t(r,o);for(var i=r.length,a=e?i:-1,u=Object(r);(e?a--:++a<i)&&!1!==o(u[a],a,u););return r}}},function(t,e,r){var n=r(572),o=r(602),i=r(606),a=r(50),u=r(607);t.exports=function(t){return"function"==typeof t?t:null==t?i:"object"==typeof t?a(t)?o(t[0],t[1]):n(t):u(t)}},function(t,e,r){var n=r(573),o=r(601),i=r(267);t.exports=function(t){var e=o(t);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(r){return r===t||n(r,t,e)}}},function(t,e,r){var n=r(263),o=r(264);t.exports=function(t,e,r,i){var a=r.length,u=a,c=!i;if(null==t)return!u;for(t=Object(t);a--;){var s=r[a];if(c&&s[2]?s[1]!==t[s[0]]:!(s[0]in t))return!1}for(;++a<u;){var f=(s=r[a])[0],l=t[f],p=s[1];if(c&&s[2]){if(void 0===l&&!(f in t))return!1}else{var d=new n;if(i)var v=i(l,p,f,t,e,d);if(!(void 0===v?o(p,l,3,i,d):v))return!1}}return!0}},function(t,e,r){var n=r(135);t.exports=function(){this.__data__=new n,this.size=0}},function(t,e){t.exports=function(t){var e=this.__data__,r=e.delete(t);return this.size=e.size,r}},function(t,e){t.exports=function(t){return this.__data__.get(t)}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e,r){var n=r(135),o=r(178),i=r(176);t.exports=function(t,e){var r=this.__data__;if(r instanceof n){var a=r.__data__;if(!o||a.length<199)return a.push([t,e]),this.size=++r.size,this;r=this.__data__=new i(a)}return r.set(t,e),this.size=r.size,this}},function(t,e,r){var n=r(263),o=r(265),i=r(585),a=r(589),u=r(596),c=r(50),s=r(258),f=r(261),l="[object Object]",p=Object.prototype.hasOwnProperty;t.exports=function(t,e,r,d,v,h){var y=c(t),g=c(e),b=y?"[object Array]":u(t),m=g?"[object Array]":u(e),x=(b="[object Arguments]"==b?l:b)==l,w=(m="[object Arguments]"==m?l:m)==l,E=b==m;if(E&&s(t)){if(!s(e))return!1;y=!0,x=!1}if(E&&!x)return h||(h=new n),y||f(t)?o(t,e,r,d,v,h):i(t,e,b,r,d,v,h);if(!(1&r)){var S=x&&p.call(t,"__wrapped__"),T=w&&p.call(e,"__wrapped__");if(S||T){var O=S?t.value():t,A=T?e.value():e;return h||(h=new n),v(O,A,r,d,h)}}return!!E&&(h||(h=new n),a(t,e,r,d,v,h))}},function(t,e,r){var n=r(176),o=r(581),i=r(582);function a(t){var e=-1,r=null==t?0:t.length;for(this.__data__=new n;++e<r;)this.add(t[e])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,t.exports=a},function(t,e){t.exports=function(t){return this.__data__.set(t,"__lodash_hash_undefined__"),this}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e){t.exports=function(t,e){for(var r=-1,n=null==t?0:t.length;++r<n;)if(e(t[r],r,t))return!0;return!1}},function(t,e){t.exports=function(t,e){return t.has(e)}},function(t,e,r){var n=r(133),o=r(586),i=r(256),a=r(265),u=r(587),c=r(588),s=n?n.prototype:void 0,f=s?s.valueOf:void 0;t.exports=function(t,e,r,n,s,l,p){switch(r){case"[object DataView]":if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(t.byteLength!=e.byteLength||!l(new o(t),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+t,+e);case"[object Error]":return t.name==e.name&&t.message==e.message;case"[object RegExp]":case"[object String]":return t==e+"";case"[object Map]":var d=u;case"[object Set]":var v=1&n;if(d||(d=c),t.size!=e.size&&!v)return!1;var h=p.get(t);if(h)return h==e;n|=2,p.set(t,e);var y=a(d(t),d(e),n,s,l,p);return p.delete(t),y;case"[object Symbol]":if(f)return f.call(t)==f.call(e)}return!1}},function(t,e,r){var n=r(51).Uint8Array;t.exports=n},function(t,e){t.exports=function(t){var e=-1,r=Array(t.size);return t.forEach((function(t,n){r[++e]=[n,t]})),r}},function(t,e){t.exports=function(t){var e=-1,r=Array(t.size);return t.forEach((function(t){r[++e]=t})),r}},function(t,e,r){var n=r(590),o=Object.prototype.hasOwnProperty;t.exports=function(t,e,r,i,a,u){var c=1&r,s=n(t),f=s.length;if(f!=n(e).length&&!c)return!1;for(var l=f;l--;){var p=s[l];if(!(c?p in e:o.call(e,p)))return!1}var d=u.get(t);if(d&&u.get(e))return d==e;var v=!0;u.set(t,e),u.set(e,t);for(var h=c;++l<f;){var y=t[p=s[l]],g=e[p];if(i)var b=c?i(g,y,p,e,t,u):i(y,g,p,t,e,u);if(!(void 0===b?y===g||a(y,g,r,i,u):b)){v=!1;break}h||(h="constructor"==p)}if(v&&!h){var m=t.constructor,x=e.constructor;m==x||!("constructor"in t)||!("constructor"in e)||"function"==typeof m&&m instanceof m&&"function"==typeof x&&x instanceof x||(v=!1)}return u.delete(t),u.delete(e),v}},function(t,e,r){var n=r(591),o=r(593),i=r(179);t.exports=function(t){return n(t,i,o)}},function(t,e,r){var n=r(592),o=r(50);t.exports=function(t,e,r){var i=e(t);return o(t)?i:n(i,r(t))}},function(t,e){t.exports=function(t,e){for(var r=-1,n=e.length,o=t.length;++r<n;)t[o+r]=e[r];return t}},function(t,e,r){var n=r(594),o=r(595),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,u=a?function(t){return null==t?[]:(t=Object(t),n(a(t),(function(e){return i.call(t,e)})))}:o;t.exports=u},function(t,e){t.exports=function(t,e){for(var r=-1,n=null==t?0:t.length,o=0,i=[];++r<n;){var a=t[r];e(a,r,t)&&(i[o++]=a)}return i}},function(t,e){t.exports=function(){return[]}},function(t,e,r){var n=r(597),o=r(178),i=r(598),a=r(599),u=r(600),c=r(103),s=r(255),f=s(n),l=s(o),p=s(i),d=s(a),v=s(u),h=c;(n&&"[object DataView]"!=h(new n(new ArrayBuffer(1)))||o&&"[object Map]"!=h(new o)||i&&"[object Promise]"!=h(i.resolve())||a&&"[object Set]"!=h(new a)||u&&"[object WeakMap]"!=h(new u))&&(h=function(t){var e=c(t),r="[object Object]"==e?t.constructor:void 0,n=r?s(r):"";if(n)switch(n){case f:return"[object DataView]";case l:return"[object Map]";case p:return"[object Promise]";case d:return"[object Set]";case v:return"[object WeakMap]"}return e}),t.exports=h},function(t,e,r){var n=r(80)(r(51),"DataView");t.exports=n},function(t,e,r){var n=r(80)(r(51),"Promise");t.exports=n},function(t,e,r){var n=r(80)(r(51),"Set");t.exports=n},function(t,e,r){var n=r(80)(r(51),"WeakMap");t.exports=n},function(t,e,r){var n=r(266),o=r(179);t.exports=function(t){for(var e=o(t),r=e.length;r--;){var i=e[r],a=t[i];e[r]=[i,a,n(a)]}return e}},function(t,e,r){var n=r(264),o=r(139),i=r(603),a=r(174),u=r(266),c=r(267),s=r(138);t.exports=function(t,e){return a(t)&&u(e)?c(s(t),e):function(r){var a=o(r,t);return void 0===a&&a===e?i(r,t):n(e,a,3)}}},function(t,e,r){var n=r(604),o=r(605);t.exports=function(t,e){return null!=t&&o(t,e,n)}},function(t,e){t.exports=function(t,e){return null!=t&&e in Object(t)}},function(t,e,r){var n=r(252),o=r(257),i=r(50),a=r(260),u=r(180),c=r(138);t.exports=function(t,e,r){for(var s=-1,f=(e=n(e,t)).length,l=!1;++s<f;){var p=c(e[s]);if(!(l=null!=t&&r(t,p)))break;t=t[p]}return l||++s!=f?l:!!(f=null==t?0:t.length)&&u(f)&&a(p,f)&&(i(t)||o(t))}},function(t,e){t.exports=function(t){return t}},function(t,e,r){var n=r(608),o=r(609),i=r(174),a=r(138);t.exports=function(t){return i(t)?n(a(t)):o(t)}},function(t,e){t.exports=function(t){return function(e){return null==e?void 0:e[t]}}},function(t,e,r){var n=r(251);t.exports=function(t){return function(e){return n(e,t)}}},function(t,e){t.exports=function(t,e,r,n,o){return o(t,(function(t,o,i){r=n?(n=!1,t):e(r,t,o,i)})),r}},function(t,e,r){"use strict";r.r(e),r.d(e,"init",(function(){return Ue}));var n={};r.r(n),r.d(n,"DEFAULT",(function(){return _})),r.d(n,"TEST",(function(){return I})),r.d(n,"DEV",(function(){return P})),r.d(n,"PROD",(function(){return R})),r.d(n,"NOW_UI_FRAMEWORK",(function(){return j})),r.d(n,"NOW_UI_CONFIG",(function(){return C})),r.d(n,"NOW_UI_EVENT",(function(){return N})),r.d(n,"AMB_GC",(function(){return k})),r.d(n,"GQL_CACHE_CAPACITY",(function(){return M})),r.d(n,"GQL_CACHING_ENABLED",(function(){return L})),r.d(n,"GQL_CACHING_REFRESH_DELAY",(function(){return D})),r.d(n,"GQL_CACHE_MAX_PERSIST",(function(){return U})),r.d(n,"HTTP_CACHE_CAPACITY",(function(){return F})),r.d(n,"HTTP_CACHING_ENABLED",(function(){return B})),r.d(n,"TELEMETRY_MARKING_ENABLED",(function(){return G})),r.d(n,"CHECK_FOR_POSSIBLE_PRESENTATIONAL_COMPONENTS",(function(){return V})),r.d(n,"DISABLE_GQL_BATCHING",(function(){return H})),r.d(n,"DISABLE_REST_BATCHING",(function(){return z})),r.d(n,"ENABLE_ACTION_DISPATCHED_HANDLING",(function(){return W})),r.d(n,"GARBAGE_COLLECTOR_INTERVAL",(function(){return Y})),r.d(n,"INTERSECT_ROOT_MARGIN",(function(){return q})),r.d(n,"LOGGING_ENABLED",(function(){return K})),r.d(n,"LOGGING_LEVELS",(function(){return $})),r.d(n,"LOGS_OBSERVER_INTERVAL",(function(){return X})),r.d(n,"MEMOIZE",(function(){return J})),r.d(n,"METRICS_LEVEL",(function(){return Q})),r.d(n,"METRICS_OBSERVER_INTERVAL",(function(){return Z})),r.d(n,"METRICS_TYPES",(function(){return tt})),r.d(n,"POSSIBLE_PRESENTATIONAL_COMPONENTS",(function(){return et})),r.d(n,"QUEUE_FLUSH_ENABLED",(function(){return rt})),r.d(n,"TIME_TO_WAIT_AFTER_DISCONNECT",(function(){return nt})),r.d(n,"VALIDATE_SCHEMAS",(function(){return ot})),r.d(n,"ENABLE_SCHEDULER_STATS",(function(){return it})),r.d(n,"METRICS_USE_WINDOW_PERFORMANCE",(function(){return at})),r.d(n,"ENABLE_PROPERTY_DEEP_COMPARE",(function(){return ut})),r.d(n,"ENABLE_DECLARATIVE_STATE_UPDATE_DEEP_COMPARE",(function(){return ct})),r.d(n,"PAGE_OPT_OUT_PROPERTY_DEEP_COMPARE",(function(){return st})),r.d(n,"PAGE_OPT_OUT_STATE_DEEP_COMPARE",(function(){return ft})),r.d(n,"MEMOIZE_SNABBDOM_PROP_PARTS",(function(){return lt})),r.d(n,"ENABLE_SCHEDULER_QUEUE_COUNTS",(function(){return pt})),r.d(n,"METRICS_ELEMENT_CONFIG_ENABLED",(function(){return dt})),r.d(n,"METRICS_COMPONENT_INTERACTIVE_ENABLED",(function(){return vt})),r.d(n,"NOW_UI_FRAMEWORK_CONFIG_KEYS",(function(){return ht})),r.d(n,"NXUI_SYS_PROPS",(function(){return yt}));r(77),r(124),r(228);let o=!1,i={};function a(t,e){let r=i[t];r||(r={calls:0,hits:0,size:0},i[t]=r),r.calls+=1,e?r.hits+=1:r.size+=1}function u(t,e,r){let n,i=e,s=!1;void 0===r&&"object"==typeof e?(i=e.createCacheKey,n=e.profileName,s=e.snabbdom):"object"==typeof r&&(i=e||r.createCacheKey,n=r.profileName,s=r.snabbdom);const f=function e(...r){const u=i?i.apply(this,r):r[0],{cache:f}=e;if(f.has(u)){o&&a(n,!0);const t=f.get(u);return s?c(t):t}o&&a(n,!1);const l=t.apply(this,r),p=s?c(l):l;return e.cache=f.set(u,p)||f,p};return f.cache=new(u.Cache||Map),f}function c(t){return t?{children:void 0!==t.children?t.children.map(t=>c(t)):void 0,data:t.data,elm:void 0,key:t.key,sel:t.sel,text:t.text}:t}u.Cache=Map,u.collectStats=function(t=!0){o=t},u.clearStats=function(){i={}},u.getStats=function(){return Object.keys(i).reduce((t,e)=>{const{hits:r,calls:n}=i[e];return{...t,[e]:{...i[e],usage:n?(r/n*100).toFixed(4)+"%":"0.0000%"}}},{})};const s=u((function(t){if("string"!=typeof t&&!Array.isArray(t))return[];if(Array.isArray(t))return t;const e=t.split(".");for(let t=0;t<e.length;t++){const r=e[t],{length:n}=r;if("]"===r.charAt(n-1)){const o=[];let i="[",a=r.indexOf(i);const u=r.substring(0,a);for(u&&o.push(u);a<n;){if("["!==i&&"]"!==i){const t=r.indexOf("]",a);let e=r.substring(a,t);e.charAt(0)===e.charAt(e.length-1)&&["'",'"'].includes(e.charAt(0))&&(e=e.slice(1,-1)),o.push(e),a=t}else a+=1;i=r.charAt(a)}const{length:c}=o;c&&(e.splice(t,1,...o),t+=c-1)}}return e}),null,{profileName:"splitPath"});function f(t,e,r){if(!t||!e)return r;const n=s(e);let o=t;const{length:i}=n;for(let t=0;t<i;t++){if(!o||!Object.prototype.hasOwnProperty.call(o,n[t]))return r;o=o[n[t]]}return void 0!==o?o:r}const l=t=>!0===t||"true"===t;var p=()=>{var t,e,r,n,o;return document.hidden&&!l(null===(t=window)||void 0===t||null===(e=t.ux_globals)||void 0===e?void 0:e.sysprops["sn_nxui_framework.scheduler.unchained.defer.off"])&&!l(null===(r=window)||void 0===r||null===(n=r.ux_globals)||void 0===n||null===(o=n.nxui)||void 0===o?void 0:o.sysprops["sn_nxui_framework.scheduler.unchained.defer.off"])};var d,v,h,y,g,b,m,x=t=>{const e=new MessageChannel;e.port1.onmessage=()=>t(),e.port2.postMessage(null)};function w(t,e=0){return p()?x(t):setTimeout(t,e)}function E(t){w((function(){const e=Date.now();t({didTimeout:!1,timeRemaining:()=>Math.max(0,100-(Date.now()-e))})}))}const S=window.requestIdleCallback||E,T=null===(d=window)||void 0===d||null===(v=d.navigator)||void 0===v||null===(h=v.userAgentData)||void 0===h||null===(y=h.brands)||void 0===y?void 0:y.some(t=>"Chromium"===t.brand),O=(null===(g=window)||void 0===g?void 0:g.location)!==(null===(b=window)||void 0===b||null===(m=b.parent)||void 0===m?void 0:m.location);var A=T&&O?E:S;const _="DEFAULT",I="test",P="development",R="production",j="nowUiFramework",C="NOW_UI_CONFIG",N="NOW_UI_EVENT",k="ambGC",M="graphQLCacheCapacity",L="graphQLCachingEnabled",D="graphQLCacheDelay",U="gqlCacheMaxPersist",F="httpCacheCapacity",B="httpCachingEnabled",G="telemetryMarkingEnabled",V="checkForPossiblePresentationalComponents",H="disableGraphQLBatching",z="disableRestBatching",W="enableActionDispatchedHandling",Y="GARBAGE_COLLECTOR_INTERVAL",q="intersectRootMargin",K="loggingEnabled",$="loggingLevels",X="logsObserverInterval",J="memoize",Q="metricsLevel",Z="metricsObserverInterval",tt="metricTypes",et="possiblePresentationalComponents",rt="queueFlushEnabled",nt="TIME_TO_WAIT_AFTER_DISCONNECT",ot="validateSchemas",it="enableSchedulerStats",at="metricsUseWindowPerformance",ut="enablePropertyDeepCompare",ct="enableDeclarativeStateUpdateDeepCompare",st="pageOptOutOfPropertyDeepCompare",ft="pageOptOutOfStateDeepCompare",lt="memoizeSnabbdomPropParts",pt="enableSchedulerQueueCounts",dt="metricsElementConfigEnabled",vt="metricsComponentInteractiveEnabled",ht=[k,M,L,U,D,F,B,G,V,H,z,W,q,K,$,X,Q,Z,tt,et,rt,ot,it,at,st,ft,lt,pt,ut,ct,dt,vt],yt={"sn_nxui_framework.performance.cache.graphql.capacity":M,"sn_nxui_framework.performance.cache.graphql.enabled":L,"sn_nxui_framework.performance.cache.graphql.max_persist":L,"sn_nxui_framework.performance.cache.graphql.delay":D,"sn_nxui_framework.performance.cache.http.capacity":F,"sn_nxui_framework.performance.cache.http.enabled":B,"sn_nxui_framework.performance.telemetry.marking.enabled":G,"sn_nxui_framework.performance.telemetry.window.top.enabled":at,"sn_nxui_framework.performance.property.deep.compare.enabled":ut,"sn_nxui_framework.performance.declarative.state.update.deep.compare.enabled":ct,"sn_nxui_framework.performance.page.opt.out.property.deep.compare":st,"sn_nxui_framework.performance.page.opt.out.state.deep.compare":ft,"sn_nxui_framework.performance.memoize.snabbdom.prop.parts":lt,"sn_nxui_framework.performance.scheduler.queue.counts.enabled":pt,"sn_nxui_framework.performance.scheduler.stats.enabled":it,"sn_nxui_framework.performance.metrics.element.config.enabled":dt,"sn_nxui_framework.interactive_mark":vt};var gt=(t,e)=>{if(!window.__ENABLE_NOW_UI_EVENT__)return;const r=new CustomEvent(N,{composed:!0,bubbles:!0,detail:{type:t,...e}});document.dispatchEvent(r)};const bt={};bt[k]={},bt[k][Y]=2e4,bt[k][nt]=5e3,bt[L]=!0,bt[D]=500,bt[M]=3,bt[B]=!0,bt[F]=3,bt[K]=!0,bt[$]=!0,bt[X]=1e3,bt[ot]=!0,bt[V]=!0,bt[it]=!0,bt[vt]=!0;const mt={};mt[k]={},mt[k][Y]=5e3,mt[k][nt]=1e3,mt[L]=!0,mt[M]=200,mt[B]=!1,mt[F]=200,mt[H]=!1,mt[z]=!1,mt[J]=u,mt[ot]=!1,mt[V]=!1,mt[et]=[],mt[tt]=null,mt[Q]=null,mt[Z]=100,mt[it]=!1,mt[G]=!0,mt[W]=!1,mt[q]="500px",mt[rt]=!1,mt[K]=!1,mt[$]=null,mt[X]=1e3,mt[vt]=!0;const xt={};xt[D]=500,xt[tt]=["TEST"],xt[it]=!1,xt[q]="400px",xt[K]=!0,xt[ot]=!0,xt[vt]=!0;const wt=()=>"production"===R?mt:"production"===P?{...mt,...bt}:"production"===I?{...mt,...xt}:{},Et={},St=()=>{const t={};return globalThis[j]?(ht.forEach(e=>{void 0!==globalThis[j][e]&&(t[e]=globalThis[j][e])}),t):t},Tt=()=>{var t,e;const r={};if(!(null===(t=globalThis.ux_globals)||void 0===t||null===(e=t.nxui)||void 0===e?void 0:e.sysprops))return r;const n=Object.keys(yt);for(const t in globalThis.ux_globals.nxui.sysprops)if(n.indexOf(t)>-1){const e=yt[t],n=globalThis.ux_globals.nxui.sysprops[t];r[e]="true"===n||"false"!==n&&n}return r},Ot={},At=(t,e)=>{const r=Ot[t]||(Ot[t]=new Set);return r.add(e),()=>r.delete(e)},_t=t=>{const e=f(Et,t);if(void 0!==e)return e;const r=f(St(),t);if(void 0!==r)return r;const n=f(Tt(),t);return void 0!==n?n:f(wt(),t,void 0)},It=(t,e)=>{if(_t(t)===e)return;gt(C,{path:t,value:e,previousValue:_t(t)});const r=function(t,e,r){if(!t||!e)return;const n=s(e);let o,i=t;const{length:a}=n;for(let t=0;t<a;t++){const e=t+1===a,u=n[t];if(o=i[u],!o){const e=n[t+1],r=Number.parseInt(e);o=i[u]=r!=e||Number.isNaN(r)?{}:[]}e&&(i[u]=r),i=o}}(Et,t,e),n=Ot[t];return n&&n.forEach(r=>r(t,e)),r};globalThis.nowUiFramework=globalThis.nowUiFramework||{},globalThis.nowUiFramework.getConfig=()=>{const t=St(),e=Tt();return{...wt(),...t,...e,...Et}},globalThis.nowUiFramework.getConfigItem=_t,globalThis.nowUiFramework.setConfigItem=It,globalThis.nowUiFramework.observeConfigItem=At;r(72),r(163),r(215),r(223),r(79);var Pt=r(57);function Rt(t){return"function"==typeof t}function jt(t){var e,r=t.globalMetricsLevel;e=r,Number.isInteger(e)&&e>=0&&It("metricsLevel",r)}r(73),r(207),r(160),r(129),r(173),r(201),r(165),r(102),r(250);const Ct={DISPATCH:"DISPATCH",ERROR:"ERROR",GQL:"GQL",HTTP:"HTTP",CONNECTION:"CONNECTION",UPDATE_PROPERTIES:"UPDATE_PROPERTIES",UPDATE_STATE:"UPDATE_STATE",RENDER_START:"RENDER_START",RENDER_END:"RENDER_END",RENDER_TREE:"RENDER_TREE",INTERSECTION:"INTERSECTION",SCHEDULE:"SCHEDULE",EXECUTE:"EXECUTE",DEFER:"DEFER",PROPERTY_REFLECTION:"PROPERTY_REFLECTION",EFFECT_START:"EFFECT_START",EFFECT_END:"EFFECT_END",PATCH_START:"PATCH_START",PATCH_END:"PATCH_END",HOOK_START:"HOOK_START",HOOK_END:"HOOK_END",INTERACTIVE:"INTERACTIVE",HERO_INTERACTIVE:"HERO_INTERACTIVE"},Nt={HERO_INTERACTIVE:5,INTERACTIVE:5,ERROR:5,GQL:4,HTTP:4,DISPATCH:3,RENDER_START:2,RENDER_END:2,RENDER_TREE:2,INTERSECTION:1,CONNECTION:1,UPDATE_PROPERTIES:1,UPDATE_STATE:1,SCHEDULE:1,EXECUTE:1,DEFER:1,PROPERTY_REFLECTION:1,EFFECT_START:0,EFFECT_END:0,PATCH_START:0,PATCH_END:0,HOOK_START:0,HOOK_END:0},kt=Symbol("__INTERACTION_ID__"),Mt=2147483648,Lt=Math.floor(Math.random()*Mt).toString(36)+Math.abs(Math.floor(Math.random()*Mt)^Date.now()).toString(36);let Dt=0;function Ut(){return Dt+=1,`-`}function Ft(t,e){0}var Bt={...Nt};function Gt(t,e=0){if(Bt[t])throw new Error(`@servicenow/ui-metrics  is already a defined metric.`);if(!Number.isInteger(e)||e>5||e<0)throw new Error(`@servicenow/ui-metrics  is not valid metric level.`);Bt[t]=e}var Vt=new Set;var Ht=[];const{METRICS_LEVEL:zt,METRICS_TYPES:Wt,TELEMETRY_MARKING_ENABLED:Yt,METRICS_ELEMENT_CONFIG_ENABLED:qt}=n;let Kt=_t(zt),$t=Number.isInteger(Kt),Xt=_t(Wt),Jt=_t(Yt),Qt=_t(qt),Zt={};const te=(t,e)=>{switch(Zt={},t){case zt:Kt=e,$t=Number.isInteger(Kt);break;case Wt:Xt=e;break;case Yt:Jt=e;break;case qt:Qt=e}};function ee(t,e){if(!1===Jt)return!1;if(!t.ready)return!1;if(Qt&&Array.isArray(t.nowMetricTypes))return t.nowMetricTypes.includes(e);if(Array.isArray(Xt))return Xt.includes(e);const r=Bt[e];return!!(t=>{if(Zt[t])return!0;const e=Number.isInteger(t)&&t>=0&&t<=5;return e&&(Zt[t]=!0),e})(r)&&(Qt&&Number.isInteger(t.nowMetricsLevel)?r>=t.nowMetricsLevel:$t&&r>=Kt)}At(zt,te),At(Wt,te),At(Yt,te),At(qt,te);var re=new Set;const{METRICS_OBSERVER_INTERVAL:ne,METRICS_USE_WINDOW_PERFORMANCE:oe}=n;let ie;const ae=[];let{performance:ue}=window;if(!_t(oe))try{ue=window.top.performance}catch(t){}const ce=()=>{re.size&&(clearTimeout(ie),ie=w(()=>{var t;t=()=>{let t=ae.length;for(let e=0;e<ae.length;e++)if(ae[e].options.resource&&ae[e].options.resource.unresolved){t=e||(ae.length>1?1:0);break}if(t){const e=ae.splice(0,t);re.forEach(t=>t(e))}},p()?E(t):A(t)},_t(ne)||100))},se=[];if(window.PerformanceObserver){new PerformanceObserver(t=>{const e=t.getEntries();for(let t=0;t<se.length;t++){const r=se[t];for(let n=0;n<e.length;n++){const o=e[n],{path:i}=r.options;if(o.startTime>se[t].markTime&&(se[t+1]&&o.startTime<se[t+1].markTime||!se[t+1]||o.name.includes("/api/now/v1/batch")&&se[t+1].options.batch)&&(o.name.includes(i)||"/api/now/graphql"!==i&&o.name.includes("/api/now/v1/batch"))&&r.options.resource&&!0===r.options.resource.unresolved){r.options.resource=o.toJSON(),se.splice(t,1),t-=1,ce();break}}}}).observe({entryTypes:["resource"]})}function fe(t={},e,r,n={},o="performance"){const i=function(t){if(!t.nowId)return t;const e="SEISMIC-HOIST"===t.tagName?t.sourceElement:t;return{componentName:e.tagName,componentId:e.nowId,parentComponentId:e.__DO_NOT_USE_OR_YOU_WILL_BE_FIRED_BY_YOUR_PARENT__,metricTypes:e.metricTypes,metricsLevel:e.metricsLevel,ready:e.__DO_NOT_USE_BOOTSTRAPPED__}}(t);if(!ee(i,r))return;const{componentName:a,componentId:u,parentComponentId:c}=i,s={componentName:a,componentId:u,parentComponentId:c,markTime:ue.now(),interactionId:e,event:r,options:n,type:o},f=(l=s,Vt.size?[...Vt].reduceRight((t,e)=>e(t),l):l);var l;r!==Ct.HTTP&&r!==Ct.GQL||(se.push(f),f.options.resource={unresolved:!0}),Ht.push(f),re.size&&(ae.push(f),ce())}function le(){return[...Ht]}function pe(){Ht.length=0}function de(t){return re.add(t),()=>re.delete(t)}var ve=()=>({...Bt});globalThis.nowUiFrameworkMetrics={applyInteractionId:function(t){return t[kt]||(t[kt]=Ut()),t},getInteractionId:function(t){return Ft(),t[kt]},setInteractionId:function(t,e){return Ft(),t[kt]=e,t},createInteractionId:Ut,defineMetric:Gt,mark:fe,clearMarks:pe,getMarks:le,observe:de,types:Ct,getMetricTypes:ve,addMarkAugmenter:function(t){return"function"!=typeof t?()=>{}:(Vt.add(t),()=>Vt.delete(t))}};var he,ye,ge,be,me=window.requestIdleCallback||function(t){setTimeout((function(){var e=Date.now();t({didTimeout:!1,timeRemaining:function(){return Math.max(0,100-(Date.now()-e))}})}))};function xe(t,e,r,n,o,i,a){try{var u=t[i](a),c=u.value}catch(t){return void r(t)}u.done?e(c):Promise.resolve(c).then(n,o)}function we(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var Ee,Se={},Te=(null===(he=window)||void 0===he||null===(ye=he.ux_globals)||void 0===ye||null===(ge=ye.libuxf)||void 0===ge||null===(be=ge.sysprops)||void 0===be?void 0:be["glide.uxf.lib.ux.metrics.clear_interval"])||15e3,Oe=0;function Ae(t,e,r){Rt(r)&&function(t){return Object.values(Pt.markTypes).includes(t)}(e)?Se[e]?Se[e].push(r):Se[e]=[r]:console.error("".concat(t," subscriber handleMarks should be of type function, type should be one of markType(all, usage, performance)"))}function _e(){var t,e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1?arguments[1]:void 0,o=Pt.markTypes.all,i=Pt.markTypes.usage,a=Pt.markTypes.performance,u=(we(t={},i,[]),we(t,a,[]),t);r.forEach((function(t){var e=t.type;e===o?(u[i].push(t),u[a].push(t)):u[e]&&u[e].push(t)})),Object.keys(Se).forEach((function(t){Se[t].forEach((function(e){return e({marks:u[t],immediate:n})}))})),Oe=(null===(e=r[r.length-1])||void 0===e?void 0:e.markTime)||Oe}function Ie(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(t.length>0||e)&&_e(t,e)}function Pe(){var t;Ee&&clearInterval(Ee),Ie((null!==(t=le())&&void 0!==t?t:[]).filter((function(t){return"usage"==t.type&&t.markTime>Oe})),!0)}function Re(){return de(function(){var t,e=(t=regeneratorRuntime.mark((function t(e){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",Ie(e,!1));case 1:case"end":return t.stop()}}),t)})),function(){var e=this,r=arguments;return new Promise((function(n,o){var i=t.apply(e,r);function a(t){xe(i,n,o,a,u,"next",t)}function u(t){xe(i,n,o,a,u,"throw",t)}a(void 0)}))});return function(t){return e.apply(this,arguments)}}())}var je=!1;function Ce(t){return Promise.allSettled(t.map(Ne)).then((function(){je||(window.addEventListener("beforeunload",Pe),je=!0)}))}function Ne(t){var e=t.path,n=t.config;return new Promise((function(t,o){(function(t){return t.includes("@devsnc/ux-metrics-appsee-subscriber")?Promise.resolve().then(r.bind(null,613)):Promise.resolve().then(r.t.bind(null,612,7))})(e).then((function(r){if(function(t){var e=t.handleMarks,r=t.init;return Rt(e)&&"function"==typeof r}(r)){var i=r.init,a=r.name,u=r.type,c=void 0===u?Pt.markTypes.usage:u,s=r.handleMarks;Promise.resolve(i(n||{})).then((function(){Ae(a,c,s),t()})).catch((function(t){o(),console.error("UX Metrics Subscriber is not initialized from path ".concat(e),t.message)}))}else o(),console.error("UX Metrics Subscriber is not valid from path ".concat(e,". Ignoring the subscriber."))})).catch((function(t){o(),console.error("Failed to load UX Metrics Subscriber from path ".concat(e),t.message)}))}))}var ke=function(t){return function(t){return Array.isArray(t)&&t.length>0}(t)?Ce(t):Promise.reject("No valid subscriber")};function Me(t,e,r,n,o,i,a){try{var u=t[i](a),c=u.value}catch(t){return void r(t)}u.done?e(c):Promise.resolve(c).then(n,o)}var Le={subscribers:{},updateUserConsent:function(t){var e,r=this;return(e=regeneratorRuntime.mark((function e(){var n,o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,t){e.next=3;break}return e.abrupt("return");case 3:if(n={YES:"Y",AGREE:"Y",NO:"N"}[t]){e.next=8;break}return console.log("Unsupported user consent - ".concat(t)),e.abrupt("return");case 8:return o={user_consent:n},e.next=11,fetch("/api/now/consent/update",{keepalive:!0,credentials:"same-origin",method:"POST",headers:{"Content-Type":"application/json","X-Transaction-Source":window.transaction_source,"X-UserToken":window.g_ck},body:JSON.stringify(o)});case 11:return i=e.sent,r.notifyChange(n),e.abrupt("return",i);case 16:throw e.prev=16,e.t0=e.catch(0),console.error("Error updating the user consent - ".concat(e.t0)),e.t0;case 20:case"end":return e.stop()}}),e,null,[[0,16]])})),function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(t){Me(i,n,o,a,u,"next",t)}function u(t){Me(i,n,o,a,u,"throw",t)}a(void 0)}))})()},notifyChange:function(t){for(var e in this.subscribers)this.subscribers[e].call(null,t)},subscribe:function(t,e){this.subscribers[t]=e},unsubscribe:function(t){delete this.subscribers[t]}};function De(t){var e=t.detail;(e=void 0===e?{}:e).payload.result||document.removeEventListener("UXR_UCM_DIALOG_CLOSED",De)}function Ue(t){var e=t.globalMetricsLevel,r=t.subscribers;return t.userConsentRequired&&(window.userConsent=Le,document.addEventListener("UXR_UCM_DIALOG_CLOSED",De)),jt({globalMetricsLevel:e}),window.addEventListener("GLIDE_UX_METRICS",(function(t){var e=t.detail,r=e.config||{},n=r.level,o=void 0===n?Pt.DEFAULT_LEVEL:n,i=r.type,a=void 0===i?Pt.markTypes.usage:i;ve()[e.eventName]||Gt(e.eventName,o),fe({ready:!0,__DO_NOT_USE_BOOTSTRAPPED__:!0},"",e.eventName,e.data,a)})),ke(r).then((function(){Ie(le(),!1),Re()})).finally((function(){return function(){if(pe&&Te>0)return Ee=setInterval((function(){return me((function(){return pe()}))}),Te)}()}))}},function(e,r){e.exports=t},function(t,e,r){"use strict";r.r(e),r.d(e,"init",(function(){return rt})),r.d(e,"handleMarks",(function(){return J})),r.d(e,"name",(function(){return d})),r.d(e,"type",(function(){return nt}));r(48),r(101);var n,o=r(58),i=r.n(o);r(236),r(221);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var u=(a(n={},"EXPERIENCE_START","Page Navigate"),a(n,"USER_NAVIGATE","Page Navigate"),n),c=r(139),s=r.n(c),f=s()(window,["ux_globals","libuxf","sysprops"],{}),l=s()(f,"glide.uxf.lib.performance.trend.reporting.enabled","true"),p=["sysparm_query","sysparm_view","sysparm_userpref_module","sys_id","sysparm_record_target","sysparm_dashboard"],d="appsee",v=Object.freeze({full:"Full",basic:"Basic",disabled:"Disabled",missing:"Needed"}),h=["$PERF-DATA","UXF_DIRECT_LOAD_COMPLETE","UXF_USER_NAV_LOAD_COMPLETE"],y={};function g(t,e){y[t]=e}function b(t){var e=y.restrictedApps;return t&&(void 0===e?"":e).indexOf(t)>-1}function m(){var t=(y.channelType||"").trim();return"NowExperience"!==t&&"CoreUI"!==t&&"NextExperience"!==t}r(113),r(72),r(160),r(79),r(170),r(102);var x=r(57),w=(r(163),r(216),r(165),r(268)),E=r.n(w);r(73),r(77),r(129),r(235),r(173),r(247),r(231);function S(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function T(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?S(Object(r),!0).forEach((function(e){O(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):S(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function O(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function A(t,e){return t.replace(e,"***")}function _(t,e,r){var n={},o="";if(e){var i=t.split("/params/"),a=function(t,e,r){var n=/^[a-z0-9]+$/i,o={},i=t;for(var a in e)o[r+a]=e[a],32===e[a].length&&n.test(e[a])&&(i=A(i,e[a]));return{url:i,fields:o}}(i[0],e.fields,r);if(o=a.url,n=T({},a.fields),e.params&&i.length>1){var u=function(t,e,r){var n=r?"".concat(r,"param_"):"param_",o={},i=t;for(var a in e){var u;o[n+a]=e[a];var c=null===(u=e[a])||void 0===u?void 0:u.toString(),s=c&&(t.includes(c)?c:encodeURIComponent(c));s&&(i=A(i,s))}return{url:i,params:o}}(i[1],e.params,r);o="".concat(o).concat("/params/").concat(u.url),n=T(T({},n),u.params)}e._timestamp&&(o=A(o,e._timestamp))}else o=t;return{maskedUrl:o,allUrlParams:n}}r(232);function I(t){return"classic"===t.route||!1===t.isSeismicApp}function P(t,e){var r,n=e.route,o=e.fields,i=(o=void 0===o?{}:o).table,a=void 0===i?null:i,u=e.parent,c=(u=void 0===u?{}:u).route;return(n||c)&&(r="record"===n?t?t.includes("/sub/record/")?"".concat("sub","-").concat("record","-").concat(a):"".concat("record","-").concat(a):null:"".concat(c?"".concat("sub","-"):"").concat(n).concat(a?"-".concat(a):"")),r}function R(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function j(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function C(t){if(t){var e=decodeURIComponent(t),r={},n=e.split("?"),o=t.startsWith("/nav_to.do")?t.split("%3F"):n;if(r.url=o[0],n.length>1){var i=new URLSearchParams(n[1]);p.forEach((function(t){var e=i.get(t);e&&(r[t]=e)}))}return r}}function N(t,e){var r=function(t,e){var r="",n="",o=t.split("/sub/");if(o.length>1){var i=_(o[0],e.parent,"parent_"),a=_(o[1],e,"");r="".concat(i.maskedUrl).concat("/sub/").concat(a.maskedUrl);for(var u=2;u<=o.length-1;u++)r="".concat(r).concat("/sub/").concat(o[u]);n=T(T({},i.allUrlParams),a.allUrlParams)}else{var c=_(o[0],e,"");r=c.maskedUrl,n=T({},c.allUrlParams)}return{url:r,workspaceParams:n}}(t,e);return function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?R(Object(r),!0).forEach((function(e){j(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):R(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}({url:r.url},r.workspaceParams)}var k=function(t){var e=t.url,r=void 0===e?"":e,n=t.selectedContent,o=void 0===n?{}:n,i=t.pageTitle;return(I(o)?function(t){var e=t?decodeURIComponent(t):null,r=e&&e.match(/[$\w\-]+(?=.do[?]*)/g);return r&&("nav_to"===r[0]?r[1]:r[0])}(r):P(r,o))||i},M=P,L=["meta"],D=["event","options","markTime","interactionId","componentId","parentComponentId","type","componentName"];function U(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function F(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?U(Object(r),!0).forEach((function(e){B(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):U(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function B(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function G(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}function V(t){return function(t){return"string"==typeof t||"boolean"==typeof t||"number"==typeof t&&!Number.isNaN(t)}(t)||t instanceof Date}function H(t){var e=t.event,r=t.options,n=(r=void 0===r?{}:r).meta,o=G(r,L),i=(t.markTime,t.interactionId,t.componentId,t.parentComponentId,t.type,t.componentName,G(t,D)),a=F(F({},o),i);return"EXPERIENCE_START"!==e&&"USER_NAVIGATE"!==e||((a=F(F({},a),function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.url,r=t.selectedContent,n=void 0===r?{}:r,o=I(n)?C(e):N(e,n);return o||[]}(n)))["Entry Page"]=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e.switched;return"EXPERIENCE_START"===t&&!1===r}(e,n),a["Page Title"]=n.pageTitle,a=function(t,e){return E()(e,(function(e,r){return e[r]=t[r],e}),{})}(a,y.allowedPropsInPageNavigate)),function(t){Object.keys(t).forEach((function(e){t[e]&&!V(t[e])&&(t[e]=JSON.stringify(t[e]))}))}(a),{eventName:u[e]||e,eventProps:a}}function z(t){return function(t){if(Array.isArray(t))return W(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return W(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return W(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function W(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var Y,q=!1,K=[];function $(t,e){var r=function(t,e){var r=e.meta;return"USER_NAVIGATE"===t||"EXPERIENCE_START"===t?k(void 0===r?{}:r)||e.pageTitle:null}(t,e);r&&i.a.startPage(r)}function X(t){var e=t.options,r=void 0===e?{}:e,n=t.event;if("EXPERIENCE_START"===n||"USER_NAVIGATE"===n){var o,a;if((null===(o=r.meta)||void 0===o?void 0:o.url)&&(r.meta.url=r.meta.url.replace(window.location.origin,""),r.meta.url===Y))return;Y=null===(a=r.meta)||void 0===a?void 0:a.url}var u=H(t),c=u.eventName,s=u.eventProps;$(n,r),i.a.addEvent(c,s)}function J(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.marks,r=void 0===e?[]:e,n=Q(r);n.forEach((function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{options:{}};if("EXPERIENCE_START"===t.event){var e=t.options.meta,r=(e=void 0===e?{}:e).applicationContextId,n=e.applicationContextName,o=e.switched;if(!(q=b(r))&&et(r,n),o)return}if(!q)if(h.includes(t.event)){if("true"!==l)return;var a=t.options,u=a.metrics,c=a.key,s=a.totalUiTime,f=a.screenRoute,p=a.screenFields,d=a.url,v=void 0===d?"":d,y=a.screenParent;if(s){var g="UXF_USER_NAV_LOAD_COMPLETE"===t.event?"navigation":"direct load";return void i.a.addPerformanceTrace(M(v,{route:f,fields:p,parent:y}),"Page Load Time",Math.round(s),{navigationType:g})}if(Array.isArray(u))return void t.options.metrics.forEach((function(t){var e;"Page Load Time"!==t.name||(null===(e=t.properties)||void 0===e?void 0:e.navigationType)||(t.properties||(t.properties={}),t.properties.navigationType="direct load"),i.a.addPerformanceTrace(c,t.name,Math.round(t.value),t.properties)}))}else X(t)}))}function Q(t){var e=y["trackingConsent"];if(e===v.basic||e===v.full){var r=t;return K.length&&(r=[].concat(z(K),z(t)),K.length=0),r}return e===v.missing&&t&&t.length&&(K=K.length?[].concat(z(K),z(t)):t),[]}var Z=!1;function tt(){var t;null===(t=window.userConsent)||void 0===t||t.subscribe(d,(function(t){"Y"===t?(g("trackingConsent",v.full),m()&&et(),J()):(g("trackingConsent",v.disabled),K.length=0)}))}function et(t,e){var r=y,n=r.apiAuth,o=r.apiKey,a=r.endpointURL,u=r.trackingConsent,c=r.user,s=c.hashId,f=c.domainId,l=c.domainName,p=c.roles,d={serverEndpoint:a,trackingConsent:u,userId:s,appContextId:t,appContextName:e,domainId:f,domainName:l};i.a.start(o,n,d),function(t){if(!Z){var e=(null==t?void 0:t.split(","))||[];Z=!0,i.a.setUserProperty("roles",e)}}(p)}function rt(t){Z=!1,function(t){var e=(y=t).allowedPropsInPageNavigate,r=void 0===e?"":e;y.allowedPropsInPageNavigate=r.split(",")}(t),t.trackingConsent===v.missing?tt():m()&&et()}var nt=x.markTypes.usage}])}));
;
;
/*! RESOURCE: /scripts/js_includes_ux_metrics.js */
/*! RESOURCE: /scripts/now_ux_metrics_initializer.js */
(function() {
	var isInitialized = false;
	if (window.self === window.top) {
		if (isInitialized)
			return;
		function init() {
			if (window.nowUiClassic && window.NOW.UXMetrics && window.NOW.UXMetrics.config) {
				window.nowUiClassic.ux_metrics_runtime.init(window.NOW.UXMetrics.config);
				var consentDialog = document.getElementById('user_consent_dialog');
				if (consentDialog)
					consentDialog.classList.remove("hidden");
				isInitialized = true;
			}
		}
		if (window.addLateLoadEvent) {
			addLateLoadEvent(init);
		} else if (window.g_load_functions) {
			window.g_load_functions.push(init);
		} else {
			window.addEventListener("load", init)
		}
	}
})();
;
;
/*! RESOURCE: /scripts/js_includes_now_ux_metrics.js */
/*! RESOURCE: /scripts/nowuxmetrics/form_ux_metrics.js */
(function() {
	function onloadActions() {
		function startUXMetricsSession() {
			if (window.self === window.top) {
				if (!window.GlideUXMetrics)
					return;
                                var isPolaris = (NOW.isPolarisEnabled == 'true' || NOW.isPolarisWrapper == 'true' ||  NOW.isPolarisEnabled == true 
                                                || NOW.isPolarisWrapper == true);
				window.GlideUXMetrics.track('EXPERIENCE_START', {
					meta: {
						applicationContextId: isPolaris ? 'a84adaf4c700201072b211d4d8c260b7' : '4a3bbe6da35b9110c1c3de5e26fcdad0',
						applicationContextName: isPolaris ? 'Unified Navigation App' : 'CoreUI App',
						url: location.pathname + location.search,
pageTitle: (document.title || '').split(/\s\|\s/)[0]
					}
				});
			}
		}
		startUXMetricsSession();
		function getFileType(fileName) {
			return (fileName || '').split('.').pop();
		}
            CustomEvent.observe("body_clicked", debounceBodyClicked(captureClickMetrics, 50));
            function debounceBodyClicked(fn, ms) {
                var timeout;
                return function (evt) {
                    if (timeout)
                        clearTimeout(timeout);
                    timeout = setTimeout(function () {
                        fn(evt);
                        timeout = null;
                    }, ms);
                }
            }
            function captureClickMetrics(evt) {
                if (!evt || !evt.target || !window.GlideUXMetrics)
                    return;
                var target = evt.target;
                var parent = target.parentElement;
                var dataset = evt.target.dataset;
                var parentDataset = parent ? parent.dataset : {};
                var eventName = dataset['nowUxMetricsEvent'] || parentDataset['nowUxMetricsEvent'];
                try {
                    switch (eventName) {
                        case 'Click Next Record':
                        case 'Click Previous Record':
                            GlideUXMetrics.track(eventName, {'table': g_form.getTableName()});
                            break;
                        case 'Click Form Action':
                            GlideUXMetrics.track(eventName, {
                                'table': g_form.getTableName(),
                                'label': target.innerText,
                                'sysid': g_form.getUniqueValue(),
                                'name': dataset['actionName']
                            });
                            break;
                        case 'Personalize Form Field':
                            GlideUXMetrics.track(eventName, {
                                'name': target.attributes['name'].value,
                                'action': target.checked ? 'Check' : 'Uncheck',
                                'table': g_form.getTableName(),
                                'viewName': window.NOW.UXMetrics && window.NOW.UXMetrics.viewInfo && window.NOW.UXMetrics.viewInfo.viewName,
                                'viewId': window.NOW.UXMetrics && window.NOW.UXMetrics.viewInfo && window.NOW.UXMetrics.viewInfo.viewId,
                            });
                            break;
                        case 'Follow Record':
                        case 'Unfollow Record':
                        case 'Open Connect Mini':
                        case 'Open Connect Full':
                            GlideUXMetrics.track(eventName, {
                                'table': g_form.getTableName(),
                                'sysid': g_form.getUniqueValue()
                            });
                            break;
                        case 'Manage Attachments':
							var count = gel('attachmentNumber_' + g_form.getUniqueValue());
                            GlideUXMetrics.track(eventName, {
                                count:  count && count.textContent || 0
                            });
                            break;
                        case 'Click More Options':
                        case 'Click Suggestion':
                        case 'Personalize Form':
                            GlideUXMetrics.track(eventName);
                            break;
                        case 'Apply Attachment Action':
var attachmentAction = (dataset.nowUxMetricsAction || '').replace(/[\[\]']+/g, '')
                            if (attachmentAction == 'Remove') {
                                var deletedSysIds = gel("deleted_sys_ids").value;
                                var deleteIds = deletedSysIds.split(";") || [];
                                for (var i = 0; i < deleteIds.length; i++) {
                                    var id = deleteIds[i];
                                    var element = gel('sys_id_' + id);
                                    if (element) {
                                        var fileName = element.dataset.nowUxMetricsFilename || '';
                                        GlideUXMetrics.track(eventName, {
                                            'action': 'Remove',
                                            'fileType': getFileType(fileName),
                                            'attachmentId': id
                                        });
                                    }
                                }
                            } else {
                                GlideUXMetrics.track(eventName, {
                                    'fileType': getFileType(dataset.nowUxMetricsFilename || ''),
                                    'action': attachmentAction,
                                    'attachmentId': dataset.nowUxMetricsAttachmentid
                                });
                            }
                            break;
                        case 'Toggle Form Section':
                            GlideUXMetrics.track(eventName, {
                                'sectionName': dataset.sectionTitle,
                                'action': target.attributes['aria-expanded'].value === "true" ? "Expand" : "Collapse"
                            });
                                break;
                            case 'Click Related Link':
                                GlideUXMetrics.track(eventName, {
                                    'name': dataset.nowUxMetricsLinkName
                                });
                                break;
                            case 'Select Date and Time':
                                var ref = dataset.ref || parent.dataset.ref;
                                var requestedBy = ref.split('.');
                                requestedBy.shift();
                                var fieldName = requestedBy.join('.');
                                GlideUXMetrics.track(eventName, {
                                    'name': fieldName
                                });
                                break;
                            case 'Show Related Records':
                                var ref = dataset['requestedBy'];
                                var relatedRecordTableName = g_form.getTableName();
                                if (ref) {
                                    captureRecordMetrics(eventName, ref, relatedRecordTableName)
                                }
                                break;
                            case 'Look Up Record List':
                                var ref = dataset['requestedBy'] || parent.dataset['requestedBy'];
                                var relatedRecordTableName = dataset['form'] || parent.dataset['form'];
                                if (ref) {
                                    captureRecordMetrics(eventName, ref, relatedRecordTableName)
                                }
                                break;
                        default:
                            break;
                    }
                } catch (err) {
                }
            }
            function captureRecordMetrics(eventName, ref, relatedRecordTableName) {
                var requestedBy = ref.split('.');
                var data = {};
                requestedBy.shift();
                var fieldName = requestedBy.join('.');
                data['name'] =  fieldName;
                data['table'] = relatedRecordTableName;
                GlideUXMetrics.track(eventName, data);
            }
		Event.observe(document.body, 'drop', function(event) {
			if (!event.dataTransfer || !event.dataTransfer.files)
				return;
			try {
				var files = event.dataTransfer.files;
				for (var i = 0; i < files.length; i++) {
					var fileName = files[i].name || '';
					GlideUXMetrics.track('Add Attachment', {
						action: 'Drag and Drop',
						fileType: getFileType(fileName),
						fileSize: getDisplaySize(files[i].size)
					});
				}
			} catch (err) {
			}
		});
	}
	if (window.addLateLoadEvent) {
		window.addLateLoadEvent(onloadActions);
	} else {
		window.addEventListener("load", onloadActions)
	}
})();
;
/*! RESOURCE: /scripts/now_ux_metrics.js */
var GlideUXMetrics = (function () {
	function setMetaData(eventName, data) {
		var data = data || {};
		if (eventName == 'USER_NAVIGATE'  || eventName == 'EXPERIENCE_START') {
			var meta = data.meta || {};
			meta.url =  meta.url || (meta.pageTitle ? meta.url : window.location.pathname + window.location.search);
meta.pageTitle = meta.pageTitle || (window.document.title || '').split(/\s\|\s/)[0];
			meta.selectedContent = meta.selectedContent || {};
			if (!meta.selectedContent.isSeismicApp)
				meta.selectedContent.isSeismicApp = false;
		}
		return data;
	}
	function track(eventName, data, config) {
		if (!eventName) return;
		var payload = {
			"eventName": eventName, "data": setMetaData(eventName, data), "config": config
		}
		window.top.dispatchEvent(new CustomEvent('GLIDE_UX_METRICS', {detail: payload}));
	}
	function trackPerformance(key, metrics) {
		if (!isPerformanceMonitoringEnabled()) return;
		if (!key || !metrics) return;
		metrics = metrics instanceof Array? metrics: [metrics];
		var payload = {
			eventName: '$PERF-DATA',
			data: {key, metrics},
			config: {level: 5, type: 'usage'}
		};
		window.top.dispatchEvent(new CustomEvent('GLIDE_UX_METRICS', {detail: payload}));
	}
	function isPerformanceMonitoringEnabled() {
		var isGlobalPerfEnabled = !!('true' === 'true');
		var isUi16PerfEnabled = !!('true' === 'true');
		return isGlobalPerfEnabled && isUi16PerfEnabled;
	}
	return {
		track: track,
		trackPerformance: trackPerformance
	};
})();
;
/*! RESOURCE: /scripts/doctype/telemetry_for_form_controls.js */
function telemetryForRecordUpdate(fieldName) {
	var elem = window.g_form && g_form.getGlideUIElement(fieldName);
	var type = elem && elem.type;
	var options = {
		name: fieldName,
		type: type
	};
	window.GlideUXMetrics && GlideUXMetrics.track('Update Field', options);
}
function telemetryForRecordUpdateElement(ref) {
	if (!ref) return;
	var field = ref.split('.');
	field.shift();
	var fieldName = field.join('.');
	telemetryForRecordUpdate(fieldName);
}
function telemetryForPreviewRecord(ref, dependentTable) {
	if (!ref) return;
	var requestedBy = ref.split('.');
	requestedBy.shift();
	var fieldName = requestedBy.join('.');
	var options = {
		name: fieldName,
		table: dependentTable
	};
	window.GlideUXMetrics && GlideUXMetrics.track('Preview Record', options);
}
function telemetryForWatchlist(evt) {
	var target = evt.target;
	var parent = target.parentElement;
	var eventName = target.dataset['nowUxMetricsEvent'] || parent.dataset['nowUxMetricsEvent'];
	window.GlideUXMetrics && GlideUXMetrics.track(eventName);
}
;
;]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-02-15 15:22:47</sys_created_on>
        <sys_id>ba1e5e7297500610f99bfcdfe153af20</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TestGlideMenuAllClientSide</sys_name>
        <sys_package display_value="ScriptApplication" source="x_875316_scriptapp">6c44c1be9718c210f99bfcdfe153afef</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="ScriptApplication">6c44c1be9718c210f99bfcdfe153afef</sys_scope>
        <sys_update_name>sys_script_include_ba1e5e7297500610f99bfcdfe153af20</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-15 15:22:47</sys_updated_on>
        <u_iscreatedbyme>true</u_iscreatedbyme>
    </sys_script_include>
</record_update>
